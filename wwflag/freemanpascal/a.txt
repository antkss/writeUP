


Gadgets
=======


0x000000000043385a: adc ah, byte ptr [rcx]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000418ae8: adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042f0d8: adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430348: adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430f98: adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045bc38: adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045cad8: adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040c3be: adc al, 0; add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x0000000000404a43: adc al, 0x10; and edi, 0xf; movzx eax, byte ptr [rax + rdi]; add eax, edx; and eax, 0xff; ret; 
0x0000000000459a44: adc al, 0x24; add qword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512ec: adc al, 0x24; add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000043b228: adc al, 0x24; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000042f65d: adc al, 0x24; cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x000000000041708d: adc al, 0x24; lea rdi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x0000000000458b01: adc al, 0x24; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432293: adc al, 0x24; mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431688: adc al, 0x46; add al, 0; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000455997: adc al, 0x48; lea ecx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004558be: adc al, 0x48; lea esi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455958: adc al, 0x48; lea esi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004559c6: adc al, 0x48; mov dword ptr [rsp], edi; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000417166: adc al, 0x48; mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x000000000043e6cb: adc al, 0x48; mov esi, eax; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x000000000043e6ca: adc al, 0x48; mov esi, eax; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000441f5b: adc al, 0x48; mov esi, eax; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000441f5a: adc al, 0x48; mov esi, eax; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x00000000004341db: adc al, 0xa; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x000000000043420b: adc al, 0xa; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x00000000004053ff: adc al, 0xc7; movapd xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000456d19: adc al, 0xce; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000456d5c: adc al, 0xce; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000405437: adc al, 0xd7; movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x000000000041b388: adc al, 0xe8; add al, 0; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000436f88: adc al, 0xed; add eax, dword ptr [rax]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x00000000004075c7: adc al, 0xf; shr rsi, 1; cmp eax, 1; jg 0x75b8; ret; 
0x0000000000433b82: adc al, 0xfe; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000456d1f: adc al, 0xfe; xor eax, eax; ret; 
0x0000000000456d62: adc al, 0xfe; xor eax, eax; ret; 
0x00000000004476b8: adc al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000404c0d: adc al, 3; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c60: adc al, 3; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404bb8: adc al, 4; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000434045: adc al, byte ptr [rax + 0x875003f]; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340ce: adc al, byte ptr [rax + 0x875003f]; mov rax, 0xffffffffffffffff; ret; 
0x00000000004160f6: adc al, byte ptr [rax]; add byte ptr [rax], al; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x0000000000425120: adc al, byte ptr [rbx + 0x158801c2]; push rsi; inc dword ptr [rip - 0x3876b800]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ba3: adc al, byte ptr [rsi]; add byte ptr [rax - 0x75], cl; pop rax; mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000431e77: adc al, ch; add ecx, dword ptr [rdx - 3]; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e57: adc al, ch; and ecx, dword ptr [rdx - 3]; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000043487d: adc al, ch; or eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x00000000004566ec: adc al, cl; add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000453da0: adc bh, ah; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000040b915: adc bh, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b94e: adc bh, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000043a31f: adc bh, byte ptr [rbp + 0xa]; movsxd rdx, edx; cmp byte ptr [rax + rdx + 0x56], 0; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x000000000043238b: adc bl, bl; and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043257b: adc bl, bl; and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043276b: adc bl, bl; and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043295b: adc bl, bl; and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043238f: adc bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043257f: adc bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043276f: adc bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043295f: adc bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b46: adc bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416951: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416920: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168c1: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416891: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415991: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415960: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415901: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d1: adc bl, bl; cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004100d1: adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x220]; pop rbx; ret; 
0x00000000004067b0: adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a65: adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d55: adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040ea20: adc bl, ch; or cl, byte ptr [rax - 0x77]; fbstp tbyte ptr [rcx]; imul al; ret; 
0x000000000043824b: adc byte ptr [r15], r9b; mov dh, 0x40; add al, 0x89; ret 0x8948; 
0x0000000000419622: adc byte ptr [r8 - 0x77], r9b; ret 0x8348; 
0x0000000000419db9: adc byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xc0; 
0x00000000004226a1: adc byte ptr [r9], al; pop rbx; ret; 
0x000000000043f7e7: adc byte ptr [r9], r14b; leave; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443267: adc byte ptr [r9], r14b; leave; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x00000000004130b1: adc byte ptr [rax + 0x648d48d8], cl; and al, 0x20; pop rbx; ret; 
0x00000000004131b1: adc byte ptr [rax + 0x648d48d8], cl; and al, 0x20; pop rbx; ret; 
0x000000000042b907: adc byte ptr [rax + rax], al; add al, ch; nop; ret; 
0x000000000045b989: adc byte ptr [rax + rax], dl; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045cd7c: adc byte ptr [rax - 0x73], cl; adc eax, 0x26bfc; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccbf: adc byte ptr [rax - 0x73], cl; adc eax, 0x26cb9; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff7: adc byte ptr [rax - 0x73], cl; adc eax, 0x27f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000045afa1: adc byte ptr [rax - 0x73], cl; adc eax, 0x282d7; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b04d: adc byte ptr [rax - 0x73], cl; adc eax, 0x2892b; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d6: adc byte ptr [rax - 0x73], cl; adc eax, 0x28b22; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a352: adc byte ptr [rax - 0x73], cl; adc eax, 0x28f26; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e8: adc byte ptr [rax - 0x73], cl; adc eax, 0x2c810; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427266: adc byte ptr [rax - 0x73], cl; adc eax, 0x5bc92; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427237: adc byte ptr [rax - 0x73], cl; adc eax, 0x5bcc1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f6: adc byte ptr [rax - 0x73], cl; adc eax, 0x5bf82; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242a2: adc byte ptr [rax - 0x73], cl; adc eax, 0x5e8d6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424269: adc byte ptr [rax - 0x73], cl; adc eax, 0x5ec8f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424233: adc byte ptr [rax - 0x73], cl; adc eax, 0x5f045; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242db: adc byte ptr [rax - 0x73], cl; adc eax, 0x5f31d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424314: adc byte ptr [rax - 0x73], cl; adc eax, 0x5f664; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d753: adc byte ptr [rax - 0x73], cl; adc eax, 0x65b25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c3: adc byte ptr [rax - 0x73], cl; adc eax, 0x65cb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d453: adc byte ptr [rax - 0x73], cl; adc eax, 0x65e25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2d3: adc byte ptr [rax - 0x73], cl; adc eax, 0x65fa5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b822: adc byte ptr [rax - 0x73], cl; adc eax, 0x68156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7ea: adc byte ptr [rax - 0x73], cl; adc eax, 0x6818e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b783: adc byte ptr [rax - 0x73], cl; adc eax, 0x681f5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b052: adc byte ptr [rax - 0x73], cl; adc eax, 0x68926; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b01a: adc byte ptr [rax - 0x73], cl; adc eax, 0x6895e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afb3: adc byte ptr [rax - 0x73], cl; adc eax, 0x689c5; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f94: adc byte ptr [rax - 0x73], cl; adc eax, 0x6a9e4; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f2d: adc byte ptr [rax - 0x73], cl; adc eax, 0x6aa4b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef5: adc byte ptr [rax - 0x73], cl; adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ec1: adc byte ptr [rax - 0x73], cl; adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418072: adc byte ptr [rax - 0x73], cl; adc eax, 0x6ab06; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e1d: adc byte ptr [rax - 0x73], cl; adc eax, 0x6ab5b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418dee: adc byte ptr [rax - 0x73], cl; adc eax, 0x6ab8a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d51: adc byte ptr [rax - 0x73], cl; adc eax, 0x6ac27; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180d1: adc byte ptr [rax - 0x73], cl; adc eax, 0x6b527; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181e0: adc byte ptr [rax - 0x73], cl; adc eax, 0x6b798; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418130: adc byte ptr [rax - 0x73], cl; adc eax, 0x6b848; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc3: adc byte ptr [rax - 0x73], cl; adc eax, 0x6bf35; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411511: adc byte ptr [rax - 0x73], cl; adc eax, 0x72467; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d9: adc byte ptr [rax - 0x73], cl; adc eax, 0x7249f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411472: adc byte ptr [rax - 0x73], cl; adc eax, 0x72506; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032ee: adc byte ptr [rax - 0x73], cl; adc eax, 0x80a0a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032a4: adc byte ptr [rax - 0x73], cl; adc eax, 0x80a54; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd43: adc byte ptr [rax - 0x73], cl; add eax, 0x26c35; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf8: adc byte ptr [rax - 0x73], cl; add eax, 0x26c80; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ac00: adc byte ptr [rax - 0x73], cl; add eax, 0x282f8; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abaa: adc byte ptr [rax - 0x73], cl; add eax, 0x286ce; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417632: adc byte ptr [rax - 0x73], cl; add eax, 0x51446; call qword ptr [rax]; 
0x000000000042c156: adc byte ptr [rax - 0x73], cl; add eax, 0x57ba2; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c6: adc byte ptr [rax - 0x73], cl; add eax, 0x57c32; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c036: adc byte ptr [rax - 0x73], cl; add eax, 0x57cc2; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d56: adc byte ptr [rax - 0x73], cl; add eax, 0x59fa2; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc6: adc byte ptr [rax - 0x73], cl; add eax, 0x5a032; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c36: adc byte ptr [rax - 0x73], cl; add eax, 0x5a0c2; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c7: adc byte ptr [rax - 0x73], cl; add eax, 0x5bfb1; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7bb: adc byte ptr [rax - 0x73], cl; add eax, 0x681bd; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afeb: adc byte ptr [rax - 0x73], cl; add eax, 0x6898d; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f5c: adc byte ptr [rax - 0x73], cl; add eax, 0x6aa1c; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e89: adc byte ptr [rax - 0x73], cl; add eax, 0x6aaef; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e55: adc byte ptr [rax - 0x73], cl; add eax, 0x6ab23; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418dba: adc byte ptr [rax - 0x73], cl; add eax, 0x6abbe; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d89: adc byte ptr [rax - 0x73], cl; add eax, 0x6abef; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418013: adc byte ptr [rax - 0x73], cl; add eax, 0x6aee5; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c0f: adc byte ptr [rax - 0x73], cl; add eax, 0x6c0f9; mov edi, dword ptr [rax]; call rdx; 
0x00000000004114aa: adc byte ptr [rax - 0x73], cl; add eax, 0x724ce; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a8: adc byte ptr [rax - 0x73], cl; add eax, 0x7ec90; mov edi, dword ptr [rax]; call rdx; 
0x0000000000456f3c: adc byte ptr [rax - 0x73], cl; and al, 0x20; pop rbx; ret; 
0x00000000004067b4: adc byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x0000000000406a69: adc byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x0000000000406d59: adc byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x000000000040b919: adc byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x000000000040b952: adc byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x000000000043cfe0: adc byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000440510: adc byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000412f4d: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414984: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004149c5: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004151f0: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415220: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415250: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415288: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484be: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004533aa: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045694a: adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004338ef: adc byte ptr [rax - 0x73], cl; jb 0x338f5; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000040e62a: adc byte ptr [rax - 0x73], cl; je 0xe653; or byte ptr [rcx + 1], bh; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e93b: adc byte ptr [rax - 0x73], cl; jne 0xe938; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x00000000004130a6: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a6: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041492a: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd24: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce76: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440254: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a6: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e87d: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045161f: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451932: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452592: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c4c: adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041426e: adc byte ptr [rax - 0x75], cl; cmp byte ptr [rax - 0x75], cl; and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041417e: adc byte ptr [rax - 0x75], cl; cmp byte ptr [rax - 0x75], cl; and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x00000000004130a1: adc byte ptr [rax - 0x75], cl; jl 0x130ca; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a1: adc byte ptr [rax - 0x75], cl; jl 0x131ca; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041368c: adc byte ptr [rax - 0x75], cl; jl 0x136b5; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c712: adc byte ptr [rax - 0x75], cl; jl 0x3c73b; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc42: adc byte ptr [rax - 0x75], cl; jl 0x3fc6b; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e720: adc byte ptr [rax - 0x75], cl; jl 0x4e749; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee36: adc byte ptr [rax - 0x75], cl; jl 0x4ee5f; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efc6: adc byte ptr [rax - 0x75], cl; jl 0x4efef; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2dd: adc byte ptr [rax - 0x75], cl; jl 0x4f306; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f97a: adc byte ptr [rax - 0x75], cl; jl 0x4f9a3; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe0: adc byte ptr [rax - 0x75], cl; jl 0x4fc09; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045572a: adc byte ptr [rax - 0x75], cl; or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000414842: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc41: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd92: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440171: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c2: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e791: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451532: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451842: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d1: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000419271: adc byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000045c646: adc byte ptr [rax - 0x75], cl; xor ecx, dword ptr [rbp - 0x77]; clc; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4f6: adc byte ptr [rax - 0x75], cl; xor ecx, dword ptr [rbp - 0x77]; clc; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x000000000044cbc5: adc byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cbc4: adc byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000449d36: adc byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; out 0x48, eax; lea eax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x0000000000419331: adc byte ptr [rax - 0x77], cl; jp 0x19356; mov qword ptr [rax], rdi; ret; 
0x0000000000413163: adc byte ptr [rax - 0x77], cl; out 0x48, al; mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004132fc: adc byte ptr [rax - 0x77], cl; out 0x48, al; mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134bc: adc byte ptr [rax - 0x77], cl; out 0x48, al; mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413084: adc byte ptr [rax - 0x77], cl; out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413217: adc byte ptr [rax - 0x77], cl; out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b7: adc byte ptr [rax - 0x77], cl; out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000040e0f0: adc byte ptr [rax - 0x77], cl; out 0x4c, al; mov edi, ebp; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x00000000004295f5: adc byte ptr [rax - 0x77], cl; out 0xba, eax; add byte ptr [rax], 0; add al, ch; sub eax, 0x89000002; ret; 
0x000000000045706c: adc byte ptr [rax - 0x77], cl; out 0xe8, eax; mov ebx, 0x89fffabf; ret; 
0x0000000000419623: adc byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000041935f: adc byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000041939f: adc byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000045cd3e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf3: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abfb: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045aba5: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c151: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c1: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c031: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d51: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc1: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c31: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c2: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b6: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe6: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f57: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e84: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e50: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db5: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d84: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041800e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c0a: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004114a5: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a3: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452643: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452617: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004500c8: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b4: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428456: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042841f: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f4: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427352: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427148: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427325: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042451d: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042336a: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422894: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042275d: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422601: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422566: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f5: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce2: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b7e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421abd: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421673: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421528: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421422: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212d8: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fc7: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204d7: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202de: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fde9: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edfb: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edaf: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e95f: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e912: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e81c: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e74c: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e451: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2ad: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e100: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e087: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff4: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df35: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de95: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf5: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd69: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc55: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db6a: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dafd: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d93d: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d67e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d494: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d38e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d23e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfa9: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec2: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd5e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc9d: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc35: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbed: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca4e: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5c9: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c185: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041803d: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fde: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c34: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415316: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000401075: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], cl; sar byte ptr [rax + 0xe7], cl; mov edi, dword ptr [rbp - 4]; syscall; 
0x0000000000447dc7: adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000044bdb7: adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000419dba: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xc0; 
0x0000000000402fa2: adc byte ptr [rax], al; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000434f96: adc byte ptr [rax], al; add byte ptr [rax], al; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb6: adc byte ptr [rax], al; add byte ptr [rax], al; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000424bbe: adc byte ptr [rax], al; add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000453871: adc byte ptr [rax], al; add byte ptr [rax], al; call 0x535c0; xor eax, eax; pop rbx; ret; 
0x00000000004160d6: adc byte ptr [rax], al; add byte ptr [rax], al; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x000000000043043c: adc byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000436b3c: adc byte ptr [rax], al; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bcc: adc byte ptr [rax], al; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431dd0: adc byte ptr [rax], al; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431990: adc byte ptr [rax], al; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431da7: adc byte ptr [rax], al; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431967: adc byte ptr [rax], al; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000041309e: adc byte ptr [rax], al; je 0x130b2; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041319e: adc byte ptr [rax], al; je 0x131b2; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413563: adc byte ptr [rax], al; je 0x1356f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413863: adc byte ptr [rax], al; je 0x1386f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x000000000041735e: adc byte ptr [rax], al; je 0x1738b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x0000000000431d74: adc byte ptr [rax], al; lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431934: adc byte ptr [rax], al; lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ded: adc byte ptr [rax], al; lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319ad: adc byte ptr [rax], al; lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x000000000042d839: adc byte ptr [rax], al; ret; 
0x000000000042d849: adc byte ptr [rax], al; ret; 
0x0000000000417fc5: adc byte ptr [rax], bl; cmp qword ptr [rbx + 8], 0; ja 0x17fa0; pop rbx; ret; 
0x000000000045905e: adc byte ptr [rax], dh; leave; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000457bbf: adc byte ptr [rax], dl; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004390cd: adc byte ptr [rbp + 0x31], al; leave; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x0000000000444bc5: adc byte ptr [rbp - 0x70], al; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445881: adc byte ptr [rbp - 0x70], al; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x00000000004393ee: adc byte ptr [rbp - 8], al; movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x0000000000443848: adc byte ptr [rbx + 0x1024448b], bl; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000041c9b0: adc byte ptr [rbx + 0xb7401f8], al; cmp eax, 2; je 0x1c9c1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000404a44: adc byte ptr [rbx - 0x49f0f019], al; add al, 0x38; add eax, edx; and eax, 0xff; ret; 
0x000000000044795a: adc byte ptr [rbx], al; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x000000000043114c: adc byte ptr [rbx], bl; add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000045c42c: adc byte ptr [rcx + 0x248b4cd8], cl; ret 0x19eb; 
0x000000000044384d: adc byte ptr [rcx + 0x48082444], cl; mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040ae73: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040b369: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040ccb2: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040e076: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040f089: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000411246: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004140ae: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000414b31: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000416fb4: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000417f4a: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000425734: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000427b51: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042e252: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000430f84: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044431b: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000445689: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000445fb1: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000446058: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044c074: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044c66c: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044d5ad: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044d959: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044dcad: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454aa1: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000456ac5: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045a188: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045a21a: adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000408969: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004093c5: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409de9: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a17f: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ad1e: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040be97: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040e2c0: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f8e8: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000410da4: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041219b: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412e6c: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004139fd: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413aa0: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004144e2: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004170a4: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004176d8: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417758: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004177d8: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004178b0: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419863: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419cd1: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419def: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a522: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b994: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041ba4f: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427c43: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042da46: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e482: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e54f: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433a36: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434a00: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043fb3a: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004435c1: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447df0: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a1bb: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bde0: adc byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045395e: adc byte ptr [rcx + 0x6b], al; shl dword ptr [rsp + rax*2 + 1], 0xd0; mov word ptr [rsi], ax; ret; 
0x000000000045bece: adc byte ptr [rcx + 0x6b], al; shl dword ptr [rsp + rax*2 + 1], 0xd0; mov word ptr [rsi], ax; ret; 
0x000000000041304e: adc byte ptr [rcx + rcx*4 + 0x23], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417092: adc byte ptr [rcx + rcx*4 - 0x12], cl; mov rax, r15; call rax; 
0x0000000000453337: adc byte ptr [rcx + rcx*4 - 0x19], cl; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x00000000004391a8: adc byte ptr [rcx - 0x47], al; add al, 0; add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000439208: adc byte ptr [rcx - 0x47], al; add al, byte ptr [rax]; add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406e34: adc byte ptr [rcx - 0x7fffff1e], al; jmp qword ptr [rcx]; 
0x0000000000407a0e: adc byte ptr [rcx], ah; jmp qword ptr [rcx]; 
0x000000000042e37c: adc byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041ea55: adc byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000420445: adc byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004251ca: adc byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000426892: adc byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040cfeb: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040d066: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410432: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004267f2: adc byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000404e67: adc byte ptr [rcx], al; clc; ret; 
0x0000000000404e77: adc byte ptr [rcx], al; clc; ret; 
0x000000000043c77e: adc byte ptr [rcx], al; jne 0x3c797; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cadd: adc byte ptr [rcx], al; jne 0x3caf6; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcae: adc byte ptr [rcx], al; jne 0x3fcc7; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044000d: adc byte ptr [rcx], al; jne 0x40026; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b5e: adc byte ptr [rcx], al; jne 0x51b77; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e9e: adc byte ptr [rcx], al; jne 0x51eb7; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004226a2: adc byte ptr [rcx], al; pop rbx; ret; 
0x000000000043e665: adc byte ptr [rcx], bh; ret 0x3575; 
0x0000000000441ef5: adc byte ptr [rcx], bh; ret 0x3875; 
0x000000000043f7e8: adc byte ptr [rcx], dh; leave; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443268: adc byte ptr [rcx], dh; leave; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000444c99: adc byte ptr [rcx], dh; leave; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d2d: adc byte ptr [rcx], dh; leave; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004470ff: adc byte ptr [rcx], dh; leave; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x000000000043e664: adc byte ptr [rcx], r15b; ret 0x3575; 
0x0000000000441ef4: adc byte ptr [rcx], r15b; ret 0x3875; 
0x0000000000426bac: adc byte ptr [rdi + rdi*8 - 1], bl; lea rax, [rip - 0x67]; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000042257c: adc byte ptr [rdi], 6; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; cmp dword ptr [rax], 0x850f0000; ret; 
0x000000000043824c: adc byte ptr [rdi], cl; mov dh, 0x40; add al, 0x89; ret 0x8948; 
0x0000000000445340: adc byte ptr [rdi], cl; mov dh, 0x40; add ecx, dword ptr [rax - 0x77]; ret 0x20b9; 
0x000000000044533f: adc byte ptr [rdi], cl; mov dh, 0x40; add ecx, dword ptr [rax - 0x77]; ret 0x20b9; 
0x00000000004102f0: adc byte ptr [rdx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000410151: adc byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004101e5: adc byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000424bcb: adc byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433d06: adc byte ptr [rip + 0xff], ah; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b416: adc byte ptr [rip + 0xff], ah; and r11d, 0xff; sub rax, r11; ret; 
0x0000000000408fd2: adc byte ptr [rsi + 0x41], ah; add esp, 0x81660001; ret; 
0x000000000041a6cc: adc byte ptr [rsi + rdi*8 - 1], bh; pop rbx; ret; 
0x000000000042f662: adc byte ptr [rsi - 0x35], bh; lea rsp, [rsp + 8]; ret; 
0x000000000042f661: adc byte ptr [rsi - 0x35], dil; lea rsp, [rsp + 8]; ret; 
0x000000000040a00b: adc byte ptr [rsi - 0x75], ah; push rsp; and al, 0x18; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x000000000041caa3: adc byte ptr [rsi - 0x77], ah; xchg ebx, eax; je 0x1caac; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x000000000043a327: adc byte ptr [rsi], dl; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x00000000004436f6: adc byte ptr [rsp + 0x10], al; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x000000000044404d: adc byte ptr [rsp + 0x10], cl; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000443702: adc byte ptr [rsp + 0x18], al; lea rsp, [rsp + 0x38]; ret; 
0x0000000000444f1a: adc byte ptr [rsp + 0x20], al; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x0000000000446f02: adc byte ptr [rsp + 0x20], cl; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000445f5b: adc byte ptr [rsp + 0x68], al; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000044777a: adc byte ptr [rsp + 0x68], al; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004477b2: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f8: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447838: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478af: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f3: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447933: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443e84: adc byte ptr [rsp], al; call 0x43db0; sub word ptr [rbx + 6], 1; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004435f5: adc byte ptr [rsp], al; cvttsd2si rax, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000040663a: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477bd: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447803: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447843: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ba: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478fe: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000044793e: adc byte ptr [rsp], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d20: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000415d40: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000415da0: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x00000000004164e0: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000416500: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000416560: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed7f: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x000000000042eddf: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431155: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431175: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x000000000043163c: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x000000000043165f: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a7c: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a9f: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000443649: adc byte ptr [rsp], al; lea rsp, [rsp + 8]; ret; 
0x0000000000443f34: adc byte ptr [rsp], cl; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004053cd: adc byte ptr [rsp], cl; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x000000000043ba48: adc ch, bh; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x0000000000404e64: adc cl, al; out dx, eax; adc byte ptr [rcx], al; clc; ret; 
0x0000000000404e74: adc cl, al; out dx, eax; adc byte ptr [rcx], al; clc; ret; 
0x00000000004364cb: adc cl, byte ptr [rax - 0x75]; add al, 0x24; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044947d: adc cl, byte ptr [rax - 0x75]; add al, 0x24; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b21d: adc cl, byte ptr [rax - 0x75]; add al, 0x24; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x00000000004517d9: adc cl, byte ptr [rax - 0x75]; jne 0x517ae; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451afc: adc cl, byte ptr [rax - 0x75]; jne 0x51ad1; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451e37: adc cl, byte ptr [rax - 0x75]; jne 0x51e04; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045217a: adc cl, byte ptr [rax - 0x75]; jne 0x52147; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041cb21: adc cl, byte ptr [rax - 0x77]; fistp qword ptr [rdx + 1]; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x000000000041cbc1: adc cl, byte ptr [rax - 0x77]; fistp qword ptr [rdx + 1]; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000042be6a: adc cl, byte ptr [rax - 0x77]; fistp qword ptr [rdx + 1]; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a4e: adc cl, byte ptr [rax - 0x77]; fistp qword ptr [rdx + 1]; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x00000000004277ea: adc cl, byte ptr [rcx - 0x2f94b728]; xor byte ptr [rax - 0x73], cl; add eax, 0x5e0a8; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x00000000004528b3: adc cl, byte ptr [rcx - 0x3694b72f]; sbb byte ptr [rax - 0x73], cl; xor eax, 0x25cff; lea rax, [rsi + rcx]; ret; 
0x000000000042500b: adc cl, byte ptr [rdi]; scasd eax, dword ptr [rdi]; ret 0xe883; 
0x000000000040514e: adc dh, bh; ret; 
0x000000000044fa1a: adc dh, byte ptr [rbx + 0x1b0fffc]; lea rsp, [rsp + 8]; ret; 
0x000000000041e8ea: adc dl, byte ptr [rsi + rax]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004436f3: adc dl, dh; movups xmm0, xmmword ptr [rsp + 0x10]; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x00000000004436f9: adc dl, dh; movups xmmword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x000000000043f9db: adc dword ptr [rax + 0x63], ecx; ret; 
0x000000000044345b: adc dword ptr [rax + 0x63], ecx; ret; 
0x0000000000409bdf: adc dword ptr [rax + 1], ecx; ror byte ptr [rax + 0x3b], 1; add dword ptr [rdi], ecx; xchg edx, eax; ret 0xe281; 
0x0000000000402072: adc dword ptr [rax - 0x3d00b7fe], ecx; dec r8; jne 0x2070; ret; 
0x000000000043a9be: adc dword ptr [rax - 0x75], ecx; add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000402053: adc dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x7d]; ret 0x4908; 
0x000000000045650d: adc dword ptr [rax - 0x77], ecx; fild word ptr [rax + rcx*4 - 0x1a]; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x000000000041377d: adc dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x0000000000419568: adc dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x000000000041723f: adc dword ptr [rax - 0x7d], ecx; js 0x1724c; add byte ptr [rdx + rcx + 0x48], dh; mov edi, ebx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x000000000040dab2: adc dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004576b5: adc dword ptr [rax], eax; add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000416136: adc dword ptr [rax], eax; add byte ptr [rax], al; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef6b: adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004300cb: adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004301ab: adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043459b: adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044c6fb: adc dword ptr [rax], eax; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040527e: adc dword ptr [rax], eax; ret; 
0x0000000000443a35: adc dword ptr [rax], eax; ret; 
0x0000000000403a39: adc dword ptr [rbp + 0xd], esi; mov rsi, rdi; mov r9, rcx; sub r9, rsi; mov rax, r9; ret; 
0x00000000004393f3: adc dword ptr [rbp - 0x18], eax; mov rsp, rbp; pop rbp; ret; 
0x000000000040652c: adc dword ptr [rbx], eax; mov rax, r12; lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000447963: adc dword ptr [rbx], eax; pop rbx; ret; 
0x00000000004184b9: adc dword ptr [rcx + rcx*4 - 0x16], ecx; mov rsi, r12; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x000000000045993b: adc dword ptr [rdi + 2], edx; add byte ptr [rax + 0x63], cl; ret; 
0x000000000045313b: adc dword ptr [rdi - 0x76b70004], esp; ret; 
0x000000000045ca59: adc dword ptr [rdx + rdi*8 - 1], 0x48; lea esp, [rsp + 8]; ret; 
0x00000000004029d9: adc dword ptr [rdx], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041d806: adc dword ptr [rsi - 0x77], esp; nop; je 0x1d80f; add byte ptr [rax], al; ret; 
0x0000000000404ef3: adc dword ptr [rsp + 0x18], eax; fld qword ptr [rsp + 0x18]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x00000000004436fc: adc dword ptr [rsp + 0x18], eax; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000405187: adc dword ptr [rsp], eax; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b7: adc dword ptr [rsp], eax; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044798e: adc dword ptr [rsp], eax; mov rax, qword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004477b8: adc dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477fe: adc dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044783e: adc dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b5: adc dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f9: adc dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447939: adc dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000419066: adc eax, 0x1125; cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x000000000044a1dc: adc eax, 0x1714f; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a1fc: adc eax, 0x1714f; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000443a29: adc eax, 0x1deca; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x000000000041483d: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc3c: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd8d: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044016c: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402bd: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e78c: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045152d: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045183d: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522cc: adc eax, 0x24448b48; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8e5: adc eax, 0x24448b48; and byte ptr [rax - 0x75], cl; push rsp; and al, 0x20; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004135c6: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c636: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb66: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e636: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed56: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee6: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f6: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a6: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa6: adc eax, 0x24448b48; or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c781: adc eax, 0x24448b48; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae0: adc eax, 0x24448b48; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb1: adc eax, 0x24448b48; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440010: adc eax, 0x24448b48; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b61: adc eax, 0x24448b48; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea1: adc eax, 0x24448b48; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c907: adc eax, 0x24448b48; sub byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe37: adc eax, 0x24448b48; sub byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000416257: adc eax, 0x250006dd; inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043bdc7: adc eax, 0x257f4; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x000000000045cd7f: adc eax, 0x26bfc; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccc2: adc eax, 0x26cb9; mov edi, dword ptr [rdx]; call rax; 
0x000000000045affa: adc eax, 0x27f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000045afa4: adc eax, 0x282d7; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b050: adc eax, 0x2892b; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d9: adc eax, 0x28b22; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a355: adc eax, 0x28f26; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566eb: adc eax, 0x2c810; mov edi, dword ptr [rdx]; call rax; 
0x0000000000433abc: adc eax, 0x2d88f; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433a5c: adc eax, 0x2d8cf; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000447527: adc eax, 0x2e774; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x00000000004557a3: adc eax, 0x30438; mov qword ptr [rdx + rax*8 - 0x20], 0; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x0000000000452afc: adc eax, 0x311ff; mov edi, dword ptr [rdx]; call rax; 
0x000000000042993c: adc eax, 0x3781f; call 0xe180; pop rbx; ret; 
0x0000000000422767: adc eax, 0x388b0006; call rdx; 
0x00000000004385ef: adc eax, 0x3959c; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042279b: adc eax, 0x3a8b0006; call rax; 
0x000000000043b1c2: adc eax, 0x3aad9; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x0000000000448245: adc eax, 0x3bb16; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000439a97: adc eax, 0x3c204; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042bea5: adc eax, 0x3cc46; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x0000000000438ee1: adc eax, 0x3cdba; mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000438db1: adc eax, 0x3ceea; mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000437367: adc eax, 0x3e934; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437327: adc eax, 0x3e974; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e7: adc eax, 0x3e9b4; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f87: adc eax, 0x3ed14; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x000000000042e932: adc eax, 0x43209; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000431b27: adc eax, 0x44174; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e7: adc eax, 0x445b4; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000423b46: adc eax, 0x461f5; lea rsp, [rsp + 8]; ret; 
0x00000000004183cc: adc eax, 0x46207; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000423b26: adc eax, 0x4620d; lea rsp, [rsp + 8]; ret; 
0x0000000000423b06: adc eax, 0x46225; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae6: adc eax, 0x4623d; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac6: adc eax, 0x46255; lea rsp, [rsp + 8]; ret; 
0x0000000000423aac: adc eax, 0x46267; lea rsp, [rsp + 8]; ret; 
0x0000000000423a86: adc eax, 0x46285; lea rsp, [rsp + 8]; ret; 
0x0000000000423a66: adc eax, 0x4629d; lea rsp, [rsp + 8]; ret; 
0x0000000000423a46: adc eax, 0x462b5; lea rsp, [rsp + 8]; ret; 
0x0000000000423a26: adc eax, 0x462cd; lea rsp, [rsp + 8]; ret; 
0x0000000000423a06: adc eax, 0x462e5; lea rsp, [rsp + 8]; ret; 
0x0000000000418cb7: adc eax, 0x480004fd; cmp dword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x000000000041d767: adc eax, 0x4800065b; add edi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000041d467: adc eax, 0x4800065e; add edi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041bee7: adc eax, 0x4800067e; add eax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041ae77: adc eax, 0x4800069f; lea esp, [rsp + 8]; ret; 
0x0000000000416827: adc eax, 0x480006d8; lea esp, [rsp + 8]; ret; 
0x0000000000416497: adc eax, 0x480006db; lea esp, [rsp + 8]; ret; 
0x000000000045ca87: adc eax, 0x48fffa54; lea esp, [rsp + 8]; ret; 
0x0000000000425dd4: adc eax, 0x4ba97; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000040d732: adc eax, 0x4cde8948; mov ecx, esp; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000041a73b: adc eax, 0x4f448; lea rsp, [rsp + 8]; ret; 
0x0000000000419226: adc eax, 0x50925; lea rsp, [rsp + 8]; ret; 
0x0000000000419206: adc eax, 0x5093d; lea rsp, [rsp + 8]; ret; 
0x00000000004191c6: adc eax, 0x5099d; lea rsp, [rsp + 8]; ret; 
0x00000000004191a6: adc eax, 0x509b5; lea rsp, [rsp + 8]; ret; 
0x0000000000419176: adc eax, 0x509cd; lea rsp, [rsp + 8]; ret; 
0x0000000000419146: adc eax, 0x50a05; lea rsp, [rsp + 8]; ret; 
0x0000000000419126: adc eax, 0x50a45; lea rsp, [rsp + 8]; ret; 
0x0000000000419106: adc eax, 0x50a8d; lea rsp, [rsp + 8]; ret; 
0x00000000004190b6: adc eax, 0x50a9d; lea rsp, [rsp + 8]; ret; 
0x00000000004190e6: adc eax, 0x50aa5; lea rsp, [rsp + 8]; ret; 
0x0000000000419088: adc eax, 0x50abb; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000415272: adc eax, 0x53809; cmp qword ptr [rdx], 0; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041523a: adc eax, 0x53841; cmp qword ptr [rdx], 0; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x000000000041520a: adc eax, 0x53861; cmp qword ptr [rdx], 0; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x00000000004151da: adc eax, 0x53881; cmp qword ptr [rdx], 0; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x000000000042c1a1: adc eax, 0x57b5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c111: adc eax, 0x57bea; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c081: adc eax, 0x57c7a; mov edi, dword ptr [rdx]; call rax; 
0x000000000040526f: adc eax, 0x59174; comisd xmm1, xmmword ptr [rdx]; jp 0x527c; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x000000000042a632: adc eax, 0x596c9; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5e7: adc eax, 0x59714; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429da1: adc eax, 0x59f5a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d11: adc eax, 0x59fea; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c81: adc eax, 0x5a07a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273d6: adc eax, 0x5bb25; mov edi, dword ptr [rdx]; call rax; 
0x000000000042729d: adc eax, 0x5bc5e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427269: adc eax, 0x5bc92; mov edi, dword ptr [rdx]; call rax; 
0x000000000042723a: adc eax, 0x5bcc1; mov edi, dword ptr [rdx]; call rax; 
0x000000000042740a: adc eax, 0x5be71; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427392: adc eax, 0x5bee9; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f9: adc eax, 0x5bf82; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cbf: adc eax, 0x5c23c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c73: adc eax, 0x5c288; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242a5: adc eax, 0x5e8d6; mov edi, dword ptr [rdx]; call rax; 
0x000000000042426c: adc eax, 0x5ec8f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423c6e: adc eax, 0x5ee9d; mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000424236: adc eax, 0x5f045; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242de: adc eax, 0x5f31d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424317: adc eax, 0x5f664; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a9: adc eax, 0x5f752; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424561: adc eax, 0x5f7aa; mov edi, dword ptr [rdx]; call rax; 
0x0000000000425849: adc eax, 0x5f7e2; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000425869: adc eax, 0x5f7e2; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x00000000004244fb: adc eax, 0x5f820; mov edi, dword ptr [rdx]; call rax; 
0x0000000000425afd: adc eax, 0x5fb1e; ret; 
0x0000000000425125: adc eax, 0x5ff56; mov rdi, rax; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000423bdf: adc eax, 0x6030c; lea rsp, [rsp + 8]; ret; 
0x000000000042376e: adc eax, 0x6058d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004238dc: adc eax, 0x6059f; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x00000000004236be: adc eax, 0x6063d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042360e: adc eax, 0x606ed; mov edi, dword ptr [rdx]; call rax; 
0x000000000042328e: adc eax, 0x60a6d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231de: adc eax, 0x60b1d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042312e: adc eax, 0x60bcd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fce: adc eax, 0x60d2d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f1e: adc eax, 0x60ddd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e6e: adc eax, 0x60e8d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423ba1: adc eax, 0x6127a; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000422997: adc eax, 0x61364; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422969: adc eax, 0x61392; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422799: adc eax, 0x61562; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422637: adc eax, 0x616c4; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225db: adc eax, 0x61720; mov edi, dword ptr [rdx]; call rax; 
0x000000000042252b: adc eax, 0x617d0; mov edi, dword ptr [rdx]; call rax; 
0x000000000042249e: adc eax, 0x6185d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042243f: adc eax, 0x618bc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223bf: adc eax, 0x6193c; mov edi, dword ptr [rdx]; call rax; 
0x000000000042235f: adc eax, 0x6199c; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222df: adc eax, 0x61a1c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421dbe: adc eax, 0x61f3d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d25: adc eax, 0x61fd6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c1a: adc eax, 0x620e1; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bc1: adc eax, 0x6213a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421afc: adc eax, 0x621ff; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a8e: adc eax, 0x6226d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a35: adc eax, 0x622c6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a00: adc eax, 0x622fb; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219a5: adc eax, 0x62356; mov edi, dword ptr [rdx]; call rax; 
0x000000000042196c: adc eax, 0x6238f; mov edi, dword ptr [rdx]; call rax; 
0x000000000042190f: adc eax, 0x623ec; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218c5: adc eax, 0x62436; mov edi, dword ptr [rdx]; call rax; 
0x000000000042185c: adc eax, 0x6249f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421815: adc eax, 0x624e6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217af: adc eax, 0x6254c; mov edi, dword ptr [rdx]; call rax; 
0x000000000042175a: adc eax, 0x625a1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216ff: adc eax, 0x625fc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216b4: adc eax, 0x62647; mov edi, dword ptr [rdx]; call rax; 
0x000000000042155e: adc eax, 0x6279d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214c0: adc eax, 0x6283b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421465: adc eax, 0x62896; mov edi, dword ptr [rdx]; call rax; 
0x000000000042130e: adc eax, 0x629ed; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421270: adc eax, 0x62a8b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421205: adc eax, 0x62af6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211b5: adc eax, 0x62b46; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421150: adc eax, 0x62bab; mov edi, dword ptr [rdx]; call rax; 
0x000000000042111d: adc eax, 0x62bde; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210bf: adc eax, 0x62c3c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421060: adc eax, 0x62c9b; mov edi, dword ptr [rdx]; call rax; 
0x000000000042102d: adc eax, 0x62cce; mov edi, dword ptr [rdx]; call rax; 
0x000000000042057e: adc eax, 0x6377d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420426: adc eax, 0x638d5; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420375: adc eax, 0x63986; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420235: adc eax, 0x63ac6; mov edi, dword ptr [rdx]; call rax; 
0x000000000042019a: adc eax, 0x63b61; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200ca: adc eax, 0x63c31; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420030: adc eax, 0x63ccb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f146: adc eax, 0x64bb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f105: adc eax, 0x64bf6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0d4: adc eax, 0x64c27; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f07f: adc eax, 0x64c7c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee34: adc eax, 0x64ec7; mov edi, dword ptr [rdx]; call rax; 
0x000000000040324f: adc eax, 0x64f44; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000041eceb: adc eax, 0x65010; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecba: adc eax, 0x65041; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec6e: adc eax, 0x6508d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe8: adc eax, 0x65113; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebba: adc eax, 0x65141; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb6e: adc eax, 0x6518d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eaee: adc eax, 0x6520d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea7e: adc eax, 0x6527d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea0a: adc eax, 0x652f1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e991: adc eax, 0x6536a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e9: adc eax, 0x65412; mov edi, dword ptr [rdx]; call rax; 
0x0000000000403397: adc eax, 0x655e4; mov dword ptr [rdx], eax; call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x000000000041e696: adc eax, 0x65665; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d866: adc eax, 0x65695; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5f6: adc eax, 0x65705; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e576: adc eax, 0x65785; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4f6: adc eax, 0x65805; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e487: adc eax, 0x65874; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e393: adc eax, 0x65968; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2e3: adc eax, 0x65a18; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d826: adc eax, 0x65a55; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d756: adc eax, 0x65b25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1ba: adc eax, 0x65b41; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e136: adc eax, 0x65bc5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c6: adc eax, 0x65cb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e02a: adc eax, 0x65cd1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d456: adc eax, 0x65e25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041decb: adc eax, 0x65e30; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd9f: adc eax, 0x65f5c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2d6: adc eax, 0x65fa5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcce: adc eax, 0x6602d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc8b: adc eax, 0x66070; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbde: adc eax, 0x6611d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dba0: adc eax, 0x6615b; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d979: adc eax, 0x66382; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d658: adc eax, 0x666a3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d60c: adc eax, 0x666ef; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d516: adc eax, 0x667e5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e8: adc eax, 0x66813; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d368: adc eax, 0x66993; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d31c: adc eax, 0x669df; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d218: adc eax, 0x66ae3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1cc: adc eax, 0x66b2f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cf05: adc eax, 0x66df6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdfa: adc eax, 0x66f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cda1: adc eax, 0x66f5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccdc: adc eax, 0x6701f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc6b: adc eax, 0x67090; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cba5: adc eax, 0x67156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb55: adc eax, 0x671a6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb05: adc eax, 0x671f6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cac2: adc eax, 0x67239; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9eb: adc eax, 0x67310; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c965: adc eax, 0x67396; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c647: adc eax, 0x676b4; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c553: adc eax, 0x677a8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3b6: adc eax, 0x677b5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c016: adc eax, 0x67ce5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf8a: adc eax, 0x67d71; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf2d: adc eax, 0x67dce; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed9: adc eax, 0x67e22; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be8d: adc eax, 0x67e6e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be32: adc eax, 0x67ec9; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bda2: adc eax, 0x67f59; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd16: adc eax, 0x67fe5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc6: adc eax, 0x68035; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc74: adc eax, 0x68087; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc33: adc eax, 0x680c8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa1e: adc eax, 0x6814d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b825: adc eax, 0x68156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7ed: adc eax, 0x6818e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9ad: adc eax, 0x681be; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b786: adc eax, 0x681f5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b055: adc eax, 0x68926; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b01d: adc eax, 0x6895e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afb6: adc eax, 0x689c5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a97a: adc eax, 0x69391; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a950: adc eax, 0x693cb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a91e: adc eax, 0x693fd; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8e7: adc eax, 0x69414; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b6c6: adc eax, 0x6974d; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a6: adc eax, 0x69765; lea rsp, [rsp + 8]; ret; 
0x000000000041b690: adc eax, 0x69773; jmp 0x1b699; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b666: adc eax, 0x69795; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b6: adc eax, 0x69835; lea rsp, [rsp + 8]; ret; 
0x000000000041b596: adc eax, 0x6985d; lea rsp, [rsp + 8]; ret; 
0x000000000041b4e9: adc eax, 0x698f2; mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x000000000041af76: adc eax, 0x69e55; lea rsp, [rsp + 8]; ret; 
0x000000000041af56: adc eax, 0x69e6d; lea rsp, [rsp + 8]; ret; 
0x000000000041af36: adc eax, 0x69e85; lea rsp, [rsp + 8]; ret; 
0x000000000041af16: adc eax, 0x69e9d; lea rsp, [rsp + 8]; ret; 
0x000000000041aef6: adc eax, 0x69eb5; lea rsp, [rsp + 8]; ret; 
0x000000000041aed6: adc eax, 0x69ecd; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb6: adc eax, 0x69ee5; lea rsp, [rsp + 8]; ret; 
0x000000000041ae96: adc eax, 0x69efd; lea rsp, [rsp + 8]; ret; 
0x000000000041ae76: adc eax, 0x69f15; lea rsp, [rsp + 8]; ret; 
0x000000000041ae56: adc eax, 0x69f2d; lea rsp, [rsp + 8]; ret; 
0x000000000041ae36: adc eax, 0x69f45; lea rsp, [rsp + 8]; ret; 
0x000000000041ad76: adc eax, 0x69fdd; lea rsp, [rsp + 8]; ret; 
0x000000000041ad56: adc eax, 0x69ff5; lea rsp, [rsp + 8]; ret; 
0x000000000041ad36: adc eax, 0x6a00d; lea rsp, [rsp + 8]; ret; 
0x000000000041ad16: adc eax, 0x6a025; lea rsp, [rsp + 8]; ret; 
0x000000000041acf6: adc eax, 0x6a03d; lea rsp, [rsp + 8]; ret; 
0x000000000041acd6: adc eax, 0x6a055; lea rsp, [rsp + 8]; ret; 
0x000000000041acb6: adc eax, 0x6a06d; lea rsp, [rsp + 8]; ret; 
0x000000000041ac96: adc eax, 0x6a085; lea rsp, [rsp + 8]; ret; 
0x000000000041ac76: adc eax, 0x6a09d; lea rsp, [rsp + 8]; ret; 
0x000000000041ac56: adc eax, 0x6a0b5; lea rsp, [rsp + 8]; ret; 
0x000000000041ac36: adc eax, 0x6a0cd; lea rsp, [rsp + 8]; ret; 
0x000000000041ac16: adc eax, 0x6a0d5; lea rsp, [rsp + 8]; ret; 
0x000000000041abf6: adc eax, 0x6a105; lea rsp, [rsp + 8]; ret; 
0x000000000041abd6: adc eax, 0x6a11d; lea rsp, [rsp + 8]; ret; 
0x000000000041abb6: adc eax, 0x6a12d; lea rsp, [rsp + 8]; ret; 
0x000000000041ab96: adc eax, 0x6a145; lea rsp, [rsp + 8]; ret; 
0x000000000041ab76: adc eax, 0x6a15d; lea rsp, [rsp + 8]; ret; 
0x000000000041ab46: adc eax, 0x6a185; lea rsp, [rsp + 8]; ret; 
0x000000000041aa46: adc eax, 0x6a32d; lea rsp, [rsp + 8]; ret; 
0x000000000041838f: adc eax, 0x6a76c; mov dword ptr [rdx], eax; call 0x18340; lea rsp, [rsp + 8]; ret; 
0x0000000000418f97: adc eax, 0x6a9e4; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f30: adc eax, 0x6aa4b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef8: adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ec4: adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418075: adc eax, 0x6ab06; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e20: adc eax, 0x6ab5b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418df1: adc eax, 0x6ab8a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d54: adc eax, 0x6ac27; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e16: adc eax, 0x6ad55; mov edi, dword ptr [rdx]; call rax; 
0x000000000041820f: adc eax, 0x6b3ec; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180d4: adc eax, 0x6b527; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180a4: adc eax, 0x6b557; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181e3: adc eax, 0x6b798; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418133: adc eax, 0x6b848; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418103: adc eax, 0x6b878; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418181: adc eax, 0x6bb7a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417ebd: adc eax, 0x6be4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc6: adc eax, 0x6bf35; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d6e: adc eax, 0x6bf8d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000416996: adc eax, 0x6d665; lea rsp, [rsp + 8]; ret; 
0x0000000000416984: adc eax, 0x6d67f; lea rsp, [rsp + 8]; ret; 
0x00000000004169c4: adc eax, 0x6d68f; lea rsp, [rsp + 8]; ret; 
0x0000000000416959: adc eax, 0x6d69a; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416928: adc eax, 0x6d6cb; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416901: adc eax, 0x6d6f2; mov rsp, rbp; pop rbp; ret; 
0x00000000004168c9: adc eax, 0x6d72a; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416899: adc eax, 0x6d75a; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416866: adc eax, 0x6d7b5; lea rsp, [rsp + 8]; ret; 
0x0000000000416846: adc eax, 0x6d7fd; lea rsp, [rsp + 8]; ret; 
0x0000000000416826: adc eax, 0x6d815; lea rsp, [rsp + 8]; ret; 
0x0000000000416742: adc eax, 0x6d891; lea rsp, [rsp + 8]; ret; 
0x0000000000416723: adc eax, 0x6d8b0; lea rsp, [rsp + 8]; ret; 
0x0000000000416774: adc eax, 0x6d8c7; lea rsp, [rsp + 0x108]; ret; 
0x00000000004166f6: adc eax, 0x6d8dd; lea rsp, [rsp + 8]; ret; 
0x00000000004166db: adc eax, 0x6d978; lea rsp, [rsp + 8]; ret; 
0x00000000004166bb: adc eax, 0x6d998; lea rsp, [rsp + 8]; ret; 
0x00000000004166a4: adc eax, 0x6d9af; lea rsp, [rsp + 8]; ret; 
0x00000000004165b6: adc eax, 0x6d9b5; lea rsp, [rsp + 8]; ret; 
0x0000000000416683: adc eax, 0x6d9d0; lea rsp, [rsp + 8]; ret; 
0x0000000000416665: adc eax, 0x6d9ee; lea rsp, [rsp + 8]; ret; 
0x0000000000416596: adc eax, 0x6d9fd; lea rsp, [rsp + 8]; ret; 
0x0000000000416637: adc eax, 0x6da1c; lea rsp, [rsp + 8]; ret; 
0x0000000000416576: adc eax, 0x6da25; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416556: adc eax, 0x6da35; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416615: adc eax, 0x6da3e; lea rsp, [rsp + 8]; ret; 
0x00000000004165e7: adc eax, 0x6da6c; lea rsp, [rsp + 8]; ret; 
0x0000000000416516: adc eax, 0x6da75; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004164d6: adc eax, 0x6dab5; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b6: adc eax, 0x6dafd; lea rsp, [rsp + 8]; ret; 
0x0000000000416496: adc eax, 0x6db15; lea rsp, [rsp + 8]; ret; 
0x0000000000416476: adc eax, 0x6db2d; lea rsp, [rsp + 8]; ret; 
0x0000000000416356: adc eax, 0x6dc2d; lea rsp, [rsp + 8]; ret; 
0x0000000000416336: adc eax, 0x6dc45; lea rsp, [rsp + 8]; ret; 
0x0000000000416316: adc eax, 0x6dc5d; lea rsp, [rsp + 8]; ret; 
0x00000000004162f6: adc eax, 0x6dc75; lea rsp, [rsp + 8]; ret; 
0x00000000004162d6: adc eax, 0x6dc95; lea rsp, [rsp + 8]; ret; 
0x00000000004162b6: adc eax, 0x6dcb5; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416296: adc eax, 0x6dcd5; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416276: adc eax, 0x6dcf5; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416256: adc eax, 0x6dd15; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416236: adc eax, 0x6de65; lea rsp, [rsp + 8]; ret; 
0x0000000000416213: adc eax, 0x6dea8; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004161b3: adc eax, 0x6df10; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041613b: adc eax, 0x6df28; lea rsp, [rsp + 8]; ret; 
0x000000000041611b: adc eax, 0x6df48; lea rsp, [rsp + 8]; ret; 
0x0000000000416156: adc eax, 0x6df5d; lea rsp, [rsp + 8]; ret; 
0x00000000004160fb: adc eax, 0x6df68; lea rsp, [rsp + 8]; ret; 
0x00000000004160db: adc eax, 0x6df88; lea rsp, [rsp + 8]; ret; 
0x00000000004160bb: adc eax, 0x6dfa8; lea rsp, [rsp + 8]; ret; 
0x000000000041609d: adc eax, 0x6dfce; pop rbx; ret; 
0x0000000000416082: adc eax, 0x6dfd9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416052: adc eax, 0x6e009; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416022: adc eax, 0x6e039; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415ff2: adc eax, 0x6e069; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fc2: adc eax, 0x6e099; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f92: adc eax, 0x6e0c9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f5f: adc eax, 0x6e0fc; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f32: adc eax, 0x6e129; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e16: adc eax, 0x6e155; lea rsp, [rsp + 8]; ret; 
0x0000000000415ecd: adc eax, 0x6e1a6; pop rbx; ret; 
0x0000000000415eb2: adc eax, 0x6e1a9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415dd6: adc eax, 0x6e1bd; lea rsp, [rsp + 8]; ret; 
0x0000000000415e82: adc eax, 0x6e1d9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415db6: adc eax, 0x6e1e5; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e52: adc eax, 0x6e209; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415d76: adc eax, 0x6e215; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d56: adc eax, 0x6e235; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d36: adc eax, 0x6e255; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df6: adc eax, 0x6e255; lea rsp, [rsp + 8]; ret; 
0x0000000000415d16: adc eax, 0x6e275; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c76: adc eax, 0x6e33d; lea rsp, [rsp + 8]; ret; 
0x0000000000415c56: adc eax, 0x6e355; lea rsp, [rsp + 8]; ret; 
0x0000000000415c36: adc eax, 0x6e36d; lea rsp, [rsp + 8]; ret; 
0x0000000000415b16: adc eax, 0x6e46d; lea rsp, [rsp + 8]; ret; 
0x0000000000415af6: adc eax, 0x6e47d; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad6: adc eax, 0x6e4a5; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab6: adc eax, 0x6e4b5; lea rsp, [rsp + 8]; ret; 
0x0000000000415a96: adc eax, 0x6e4d5; lea rsp, [rsp + 8]; ret; 
0x0000000000415a76: adc eax, 0x6e4f5; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a56: adc eax, 0x6e515; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a36: adc eax, 0x6e535; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a16: adc eax, 0x6e555; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159fb: adc eax, 0x6e5e0; lea rsp, [rsp + 8]; ret; 
0x00000000004159d6: adc eax, 0x6e625; lea rsp, [rsp + 8]; ret; 
0x00000000004159c4: adc eax, 0x6e63f; lea rsp, [rsp + 8]; ret; 
0x0000000000415999: adc eax, 0x6e65a; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415968: adc eax, 0x6e68b; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415941: adc eax, 0x6e6b2; mov rsp, rbp; pop rbp; ret; 
0x0000000000415909: adc eax, 0x6e6ea; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d9: adc eax, 0x6e71a; lea rsp, [rsp + 0x18]; ret; 
0x00000000004157a6: adc eax, 0x6e875; lea rsp, [rsp + 8]; ret; 
0x0000000000415786: adc eax, 0x6e88d; lea rsp, [rsp + 8]; ret; 
0x0000000000415766: adc eax, 0x6e8a5; lea rsp, [rsp + 8]; ret; 
0x0000000000415692: adc eax, 0x6e941; lea rsp, [rsp + 8]; ret; 
0x00000000004156c4: adc eax, 0x6e947; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415673: adc eax, 0x6e960; lea rsp, [rsp + 8]; ret; 
0x0000000000415646: adc eax, 0x6e98d; lea rsp, [rsp + 8]; ret; 
0x000000000041534c: adc eax, 0x6e9af; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415626: adc eax, 0x6e9bd; lea rsp, [rsp + 8]; ret; 
0x0000000000415606: adc eax, 0x6e9e5; lea rsp, [rsp + 8]; ret; 
0x00000000004155eb: adc eax, 0x6e9f0; lea rsp, [rsp + 8]; ret; 
0x00000000004155cb: adc eax, 0x6ea10; lea rsp, [rsp + 8]; ret; 
0x00000000004155b4: adc eax, 0x6ea27; lea rsp, [rsp + 8]; ret; 
0x00000000004152ae: adc eax, 0x6ea4d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415587: adc eax, 0x6ea54; lea rsp, [rsp + 8]; ret; 
0x0000000000415565: adc eax, 0x6ea76; lea rsp, [rsp + 8]; ret; 
0x0000000000415537: adc eax, 0x6eaa4; lea rsp, [rsp + 8]; ret; 
0x00000000004154c6: adc eax, 0x6eafd; lea rsp, [rsp + 8]; ret; 
0x0000000000415486: adc eax, 0x6eb35; lea rsp, [rsp + 8]; ret; 
0x00000000004154e6: adc eax, 0x6eb45; lea rsp, [rsp + 8]; ret; 
0x0000000000415453: adc eax, 0x6eb78; pop r13; pop r12; pop rbx; ret; 
0x00000000004154a6: adc eax, 0x6eb7d; lea rsp, [rsp + 8]; ret; 
0x0000000000415506: adc eax, 0x6eba5; lea rsp, [rsp + 8]; ret; 
0x0000000000415466: adc eax, 0x6ebcd; lea rsp, [rsp + 8]; ret; 
0x0000000000415425: adc eax, 0x6ec9e; lea rsp, [rsp + 8]; ret; 
0x000000000041158d: adc eax, 0x7159e; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411514: adc eax, 0x72467; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114dc: adc eax, 0x7249f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411475: adc eax, 0x72506; mov edi, dword ptr [rdx]; call rax; 
0x00000000004116ef: adc eax, 0x7266c; mov qword ptr [rdx + 0xc0], rax; ret; 
0x00000000004116dd: adc eax, 0x7267e; mov qword ptr [rdx + 0x30], rax; lea rax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000040db03: adc eax, 0x75038; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d9d5: adc eax, 0x75146; mov word ptr [rdx], ax; ret; 
0x000000000040d9e5: adc eax, 0x75156; mov word ptr [rdx], ax; ret; 
0x000000000040d9f5: adc eax, 0x75156; mov word ptr [rdx], ax; ret; 
0x000000000040d85d: adc eax, 0x752be; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040b96c: adc eax, 0x771af; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x00000000004050dd: adc eax, 0x7ec4e; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032f1: adc eax, 0x80a0a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032a7: adc eax, 0x80a54; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402a12: adc eax, 0x8b0008; lea rsp, [rsp + 8]; ret; 
0x000000000041158f: adc eax, 0x8b660007; add ah, byte ptr [rip + 0xffff]; ret; 
0x00000000004335b0: adc eax, 0x8d480000; and al, 8; ret; 
0x000000000045c200: adc eax, 0x8d48fffc; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c240: adc eax, 0x8d48fffc; and al, 8; pop r12; pop rbx; ret; 
0x000000000042a57c: adc eax, 0x8d48fffe; and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x000000000042a597: adc eax, 0x8d48fffe; and al, 8; ret; 
0x000000000044823b: adc eax, 0xad058d48; mov edi, 0x8d48fffe; adc eax, 0x3bb16; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000415d77: adc eax, 0xdf0006e2; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000045c915: adc eax, 0xe8000001; ret 0xfa55; 
0x000000000045693c: adc eax, 0xfffffd6f; lea rax, [rip + 0x1f5b8]; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004189f3: adc eax, 0xffffff98; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000426b88: adc eax, 0xffffffa3; mov qword ptr [rax + 0x40], rdx; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000426b93: adc eax, 0xffffffa8; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000457712: adc eax, dword ptr [rax]; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043932a: adc eax, dword ptr [rax]; add byte ptr [rax], al; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000416116: adc eax, dword ptr [rax]; add byte ptr [rax], al; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042e599: adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043b429: adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000449c19: adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f9: adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000453f69: adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040c57d: adc eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041b33b: adc ebp, 0xc60004; add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x0000000000455926: adc ecx, dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x0000000000438248: adc ecx, dword ptr [rax - 0x75]; adc byte ptr [r15], r9b; mov dh, 0x40; add al, 0x89; ret 0x8948; 
0x0000000000429a01: adc ecx, dword ptr [rax - 0x77]; fisttp word ptr [rax - 0x73]; xor eax, 0x37754; call 0xe180; pop rbx; ret; 
0x0000000000450bd8: adc ecx, dword ptr [rax - 0x77]; out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000403802: adc ecx, dword ptr [rbp - 0x7b]; sar byte ptr [rbp + 8], 0x48; mov eax, 0xffffffff; ret; 
0x00000000004038a1: adc ecx, dword ptr [rbp - 0x7b]; sar byte ptr [rbp + 8], 0x48; mov eax, 0xffffffff; ret; 
0x0000000000401f09: adc ecx, dword ptr [rbx]; add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000041517a: adc ecx, dword ptr [rcx + rcx*4 - 0x16]; mov rsi, r12; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x00000000004557c9: adc edx, -6; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439799: adc esi, dword ptr [rax - 0x72b70001]; and al, 8; ret; 
0x0000000000454b09: adc esi, edi; cli; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000430a55: adc esi, edi; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x000000000041b2ab: adc esi, edx; add al, 0; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000423e39: adc esp, dword ptr [rcx - 1]; dec dword ptr [rax - 0x77]; ret; 
0x000000000040daaf: adc esp, dword ptr [rsi - 0x77]; adc dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000453e3b: adc esp, edi; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004013cc: add ah, 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041f049: add ah, byte ptr [rax]; ja 0x1f020; pop r13; pop r12; pop rbx; ret; 
0x0000000000443ccb: add ah, byte ptr [rcx]; ror byte ptr [rax - 0x7d], cl; ret 0x4807; 
0x00000000004032c5: add ah, byte ptr [rip + 0xffff]; pop rbx; ret; 
0x000000000040330f: add ah, byte ptr [rip + 0xffff]; pop rbx; ret; 
0x000000000040b973: add ah, byte ptr [rip + 0xffff]; ret; 
0x000000000040d864: add ah, byte ptr [rip + 0xffff]; ret; 
0x000000000040db0a: add ah, byte ptr [rip + 0xffff]; ret; 
0x0000000000411594: add ah, byte ptr [rip + 0xffff]; ret; 
0x0000000000408f8f: add ah, byte ptr [rsi + 0x41]; add esp, 0x81660001; ret; 
0x0000000000417de1: add ah, byte ptr [rsi - 0x39]; add al, byte ptr [rax]; add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000040201c: add ah, byte ptr [rsi - 0x77]; add cl, byte ptr [rax - 0x7d]; ret 0xf602; 
0x0000000000402192: add ah, byte ptr [rsi - 0x77]; add dh, dh; ret 0x7404; 
0x000000000040cbc5: add ah, byte ptr [rsi - 0x77]; ret; 
0x00000000004208fa: add ah, byte ptr [rsi - 0x77]; xor dword ptr [rbx + rax], 0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042b908: add al, 0; add al, ch; nop; ret; 
0x0000000000402b8c: add al, 0; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000424203: add al, 0; add byte ptr [rax], al; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x0000000000424398: add al, 0; add byte ptr [rax], al; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x0000000000434f0f: add al, 0; add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f32: add al, 0; add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000437349: add al, 0; add byte ptr [rax], al; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004391ab: add al, 0; add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000410144: add al, 0; add byte ptr [rax], al; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x000000000041667e: add al, 0; add byte ptr [rax], al; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155c6: add al, 0; add byte ptr [rax], al; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000431671: add al, 0; add byte ptr [rax], al; ret; 
0x0000000000432ab1: add al, 0; add byte ptr [rax], al; ret; 
0x0000000000432ca1: add al, 0; add byte ptr [rax], al; ret; 
0x00000000004337f1: add al, 0; add byte ptr [rax], al; ret; 
0x0000000000423eba: add al, 0; add byte ptr [rbp + 5], dh; call 0x23c80; mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423eb9: add al, 0; add byte ptr [rbp + 5], dh; call 0x23c80; mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041a883: add al, 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041a735: add al, 0; add byte ptr [rsi + rax - 1], dh; adc eax, 0x4f448; lea rsp, [rsp + 8]; ret; 
0x000000000042778c: add al, 0; add dword ptr [rax - 0x73], ecx; and al, 8; pop r12; pop rbx; ret; 
0x000000000043395b: add al, 0; bt dword ptr [rax], edi; setb al; ret; 
0x000000000043397b: add al, 0; bt dword ptr [rax], edi; setb al; ret; 
0x000000000041b38a: add al, 0; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x000000000041b8da: add al, 0; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x00000000004316ea: add al, 0; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004316e9: add al, 0; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b2a: add al, 0; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431b29: add al, 0; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431fda: add al, 0; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x00000000004322d0: add al, 0; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f15: add al, 0; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431aca: add al, 0; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac9: add al, 0; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431df4: add al, 0; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431df3: add al, 0; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043168a: add al, 0; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431689: add al, 0; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004319b4: add al, 0; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004319b3: add al, 0; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000432237: add al, 0; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f85: add al, 0; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431afa: add al, 0; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af9: add al, 0; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431d7b: add al, 0; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316ba: add al, 0; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316b9: add al, 0; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043193b: add al, 0; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043193a: add al, 0; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043b8ea: add al, 0; call qword ptr [rax + 0x28]; 
0x000000000043b8ea: add al, 0; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x00000000004342aa: add al, 0; call qword ptr [rax + 0x38]; 
0x000000000043b53c: add al, 0; call qword ptr [rax + 0x38]; 
0x000000000043b54c: add al, 0; call qword ptr [rax + 0x38]; 
0x00000000004342aa: add al, 0; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x00000000004342ca: add al, 0; call qword ptr [rax + 0x40]; 
0x00000000004342ca: add al, 0; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342ea: add al, 0; call qword ptr [rax + 0x48]; 
0x000000000043432a: add al, 0; call qword ptr [rax + 0x50]; 
0x000000000043436a: add al, 0; call qword ptr [rax + 0x58]; 
0x00000000004343aa: add al, 0; call qword ptr [rax + 0x60]; 
0x00000000004343ea: add al, 0; call qword ptr [rax + 0x68]; 
0x000000000043442a: add al, 0; call qword ptr [rax + 0x70]; 
0x000000000043446a: add al, 0; call qword ptr [rax + 0x78]; 
0x000000000043446a: add al, 0; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x000000000043448a: add al, 0; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000418cc6: add al, 0; call qword ptr [rax]; 
0x0000000000418d0c: add al, 0; call qword ptr [rax]; 
0x00000000004245d3: add al, 0; cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x00000000004245d2: add al, 0; cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x00000000004245d1: add al, 0; cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x0000000000418cb9: add al, 0; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000418cfc: add al, 0; cmp qword ptr [rdi], 0; je 0x18d12; mov rdi, rax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x0000000000424fdb: add al, 0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041a73e: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423a09: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423a29: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423a49: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423a69: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423a89: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423aaf: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac9: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae9: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b09: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b29: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b49: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ec9: add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ec8: add al, 0; lea rsp, [rsp + 8]; ret; 
0x000000000041b1dd: add al, 0; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b2ad: add al, 0; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b33d: add al, 0; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b36d: add al, 0; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b20d: add al, 0; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2dd: add al, 0; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b16d: add al, 0; mov byte ptr [rax], 1; mov eax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b27d: add al, 0; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b30d: add al, 0; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000424fd3: add al, 0; mov byte ptr [rdx], al; mov byte ptr [rip + 0x4c9a3], bl; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004239d5: add al, 0; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004183cf: add al, 0; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004189fd: add al, 0; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000423b65: add al, 0; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x000000000041a654: add al, 0; mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x00000000004189a7: add al, 0; mov rdx, qword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004239e8: add al, 0; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004250fe: add al, 0; movsxd rax, dword ptr [rax]; cmp rdx, rax; jne 0x2510b; mov al, 1; ret; 
0x0000000000425dd7: add al, 0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042e935: add al, 0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042543e: add al, 0; movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000423b6c: add al, 0; ret; 
0x0000000000423baf: add al, 0; ret; 
0x0000000000423bae: add al, 0; ret; 
0x00000000004021e4: add al, 0x11; dec r8; mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x0000000000402071: add al, 0x11; mov byte ptr [rdx], al; inc rdx; dec r8; jne 0x2070; ret; 
0x000000000043a9bd: add al, 0x11; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000416e71: add al, 0x11; ret; 
0x00000000004479cc: add al, 0x17; ret; 
0x00000000004330c6: add al, 0x1f; cvtsi2sd xmm0, qword ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334b6: add al, 0x1f; cvtsi2sd xmm0, qword ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000433196: add al, 0x1f; cvtsi2ss xmm0, qword ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433586: add al, 0x1f; cvtsi2ss xmm0, qword ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000412eeb: add al, 0x1f; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043cf27: add al, 0x20; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431734: add al, 0x23; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b74: add al, 0x23; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432024: add al, 0x23; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447fcd: add al, 0x24; add al, 0x48; mov eax, dword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446da2: add al, 0x24; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e03: add al, 0x24; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043a92b: add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a9c1: add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000451271: add al, 0x24; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041fc73: add al, 0x24; add qword ptr [rbx + 0x18], 1; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bed8: add al, 0x24; add rax, 4; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041ff57: add al, 0x24; and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000436a42: add al, 0x24; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000443e85: add al, 0x24; call 0x43db0; sub word ptr [rbx + 6], 1; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000449ab2: add al, 0x24; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000044b852: add al, 0x24; call 0x4b700; mov rsp, rbp; pop rbp; ret; 
0x0000000000413038: add al, 0x24; call qword ptr [rax + 8]; 
0x00000000004267e2: add al, 0x24; cmp dword ptr [rax + 0xc], 0; jg 0x26748; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x00000000004435f6: add al, 0x24; cvttsd2si rax, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000443879: add al, 0x24; faddp st(1); fistp qword ptr [rsp + 8]; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041328c: add al, 0x24; jmp 0x13292; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413378: add al, 0x24; jmp 0x1337e; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000413446: add al, 0x24; jmp 0x1344c; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041354a: add al, 0x24; jmp 0x13550; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000456abf: add al, 0x24; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc88: add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a4f: add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a7f: add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447fd2: add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044bee0: add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040663b: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000446e8f: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477be: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447804: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447844: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478bb: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ff: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000044793f: add al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000044c5fb: add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c86d: add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c918: add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cbc8: add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc68: add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd08: add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cb1a: add al, 0x24; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000415079: add al, 0x24; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045867f: add al, 0x24; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004051bb: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000040ba69: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000415d21: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000415d41: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000415da1: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x00000000004164e1: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000416501: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000416561: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000042ed80: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000042ede0: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000431156: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000431176: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000043163d: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000431660: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000431a7d: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000431aa0: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000044364a: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000044379d: add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000045126a: add al, 0x24; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040ba62: add al, 0x24; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043a5b7: add al, 0x24; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x000000000043650b: add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494bb: add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b25b: add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000042135b: add al, 0x24; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213ba: add al, 0x24; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215ab: add al, 0x24; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042160a: add al, 0x24; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004364ce: add al, 0x24; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000449480: add al, 0x24; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b220: add al, 0x24; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000405188: add al, 0x24; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b8: add al, 0x24; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000459a79: add al, 0x24; mov edi, dword ptr [rax + 0x808]; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000447993: add al, 0x24; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000402942: add al, 0x24; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000439724: add al, 0x24; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439767: add al, 0x24; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042de79: add al, 0x24; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dea6: add al, 0x24; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df7c: add al, 0x24; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004365f6: add al, 0x24; mov rax, qword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000436556: add al, 0x24; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000449508: add al, 0x24; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2a8: add al, 0x24; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044798f: add al, 0x24; mov rax, qword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042de82: add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deaf: add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df85: add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e18f: add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dccc: add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042138f: add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213ef: add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215df: add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042163f: add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004477b9: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477ff: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044783f: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b6: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478fa: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044793a: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443645: add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000401fc2: add al, 0x24; ret; 
0x0000000000458b42: add al, 0x24; shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b82: add al, 0x24; shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434fed: add al, 0x24; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043513e: add al, 0x24; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435295: add al, 0x24; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352e6: add al, 0x24; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432344: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043253c: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043272d: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432915: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432af4: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432cdc: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ebd: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433095: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332ad: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433485: add al, 0x24; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000455501: add al, 0x25; inc dword ptr [rax]; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000404e06: add al, 0x25; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000447c50: add al, 0x2b; pop r13; pop r12; pop rbx; ret; 
0x000000000044ba66: add al, 0x2b; pop r13; pop r12; pop rbx; ret; 
0x00000000004040ca: add al, 0x2c; mov byte ptr [rbx], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004146da: add al, 0x31; shr bl, 5; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a0a: add al, 0x31; shr bl, 5; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x000000000045835d: add al, 0x31; shr bl, 5; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000447a78: add al, 0x32; and byte ptr [rax - 0x7d], cl; mov byte ptr [rcx], 0x80; cmp al, 0x30; add byte ptr [rbp - 0x1d], dh; ret; 
0x0000000000417bcb: add al, 0x37; ret; 
0x0000000000404a4a: add al, 0x38; add eax, edx; and eax, 0xff; ret; 
0x0000000000403d8f: add al, 0x41; mov byte ptr [rsp], bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000458afe: add al, 0x41; mov dword ptr [rsp], edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000449be3: add al, 0x48; add byte ptr [rax], al; ret; 
0x00000000004039bd: add al, 0x48; add edi, 4; cmp rcx, rdi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000403695: add al, 0x48; cmp eax, edi; ja 0x3690; ret; 
0x00000000004039c1: add al, 0x48; cmp ecx, edi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000404a8b: add al, 0x48; cmp edx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404ac8: add al, 0x48; cmp edx, 7; jl 0x4ab0; ret; 
0x0000000000455a09: add al, 0x48; lea esi, [rax + 2]; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404bb9: add al, 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040518d: add al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000044bedd: add al, 0x48; mov dword ptr [rsp], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043b867: add al, 0x48; mov eax, dword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b897: add al, 0x48; mov eax, dword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000042e357: add al, 0x48; mov eax, dword ptr [rax - 8]; ret; 
0x000000000044c0e7: add al, 0x48; mov eax, dword ptr [rax - 8]; shl rax, 1; ret; 
0x0000000000403357: add al, 0x48; mov eax, dword ptr [rdi + 8]; ret; 
0x0000000000406774: add al, 0x48; mov eax, dword ptr [rdi]; ret; 
0x0000000000447fcf: add al, 0x48; mov eax, dword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044379a: add al, 0x48; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000407300: add al, 0x48; mov eax, edx; ret; 
0x000000000040cf78: add al, 0x48; mov eax, edx; ret; 
0x000000000040f938: add al, 0x48; mov eax, edx; ret; 
0x0000000000434a17: add al, 0x48; mov ecx, dword ptr [rcx - 8]; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x000000000042e7b4: add al, 0x48; mov edi, dword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x0000000000404eb5: add al, 0x48; mov edi, esp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x000000000044b9ac: add al, 0x48; mov edx, dword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac0: add al, 0x48; mov edx, dword ptr [rdx - 8]; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x000000000041859c: add al, 0x48; mov esi, dword ptr [rcx + 8]; mov edi, eax; call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x0000000000456afc: add al, 0x48; mov esi, dword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x00000000004594bb: add al, 0x48; mov esi, esp; mov edi, eax; call 0x59320; lea rsp, [rsp + 8]; ret; 
0x0000000000404254: add al, 0x48; neg eax; ret; 
0x0000000000403726: add al, 0x49; cmp eax, ecx; ja 0x3700; mov rax, 0xffffffffffffffff; ret; 
0x0000000000415076: add al, 0x49; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000449bae: add al, 0x50; add byte ptr [rax], al; ret; 
0x0000000000440457: add al, 0x60; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431764: add al, 0x63; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431ba4: add al, 0x63; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432054: add al, 0x63; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000408748: add al, 0x66; add eax, 0xbf0f0001; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000404eb0: add al, 0x66; mov dword ptr [rsp + 4], eax; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x0000000000404eaf: add al, 0x66; mov dword ptr [rsp + 4], eax; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x000000000045603e: add al, 0x74; iretd; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000453fb7: add al, 0x74; out 0x48, al; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004195bb: add al, 0x75; or eax, 0x10508b48; and rdx, 0xffffffffffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x000000000044eeb2: add al, 0x76; add eax, 2; ret; 
0x000000000044f042: add al, 0x76; ret; 
0x0000000000403256: add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000425ddb: add al, 0x82; add rax, rdx; jmp rax; 
0x000000000042e939: add al, 0x82; add rax, rdx; jmp rax; 
0x00000000004385f6: add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000407493: add al, 0x83; clc; add dword ptr [rdi - 0x21], edi; ret; 
0x0000000000407556: add al, 0x83; clc; add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000407666: add al, 0x83; clc; add dword ptr [rdi - 0x24], edi; ret; 
0x000000000040202f: add al, 0x89; add cl, byte ptr [rax - 0x7d]; ret 0x4d04; 
0x0000000000438250: add al, 0x89; ret 0x8948; 
0x000000000043824f: add al, 0x89; ret 0x8948; 
0x0000000000417958: add al, 0x89; ret 0x8d48; 
0x00000000004179c0: add al, 0x89; ret 0x8d48; 
0x0000000000415b89: add al, 0x8a; and al, 1; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000456f38: add al, 0x8b; and al, 0x10; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004550fa: add al, 0x8b; and al, 0x58; lea rsp, [rsp + 0x98]; ret; 
0x0000000000404cf1: add al, 0xa; cmp rax, rcx; jg 0x4ce0; ret; 
0x0000000000404d21: add al, 0xa; cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404d51: add al, 0xa; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000404d81: add al, 0xa; cmp rax, rcx; jg 0x4d70; ret; 
0x000000000043c163: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450be7: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450e65: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000413f94: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x000000000045133d: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x0000000000412f80: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004131d6: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000425c2b: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429aa4: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429f29: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042c325: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043a36e: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450ca2: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e26: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e93: add al, 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000420d78: add al, 0xb0; xlatb; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000420d77: add al, 0xb0; xlatb; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000426b45: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000426b44: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fc3: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fc2: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fd1: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fd0: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fd9: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fd8: add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x000000000041c99e: add al, 0xb2; xlatb; add byte ptr [rax], al; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000439a98: add al, 0xc2; add eax, dword ptr [rax]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042269f: add al, 0xc6; adc byte ptr [r9], al; pop rbx; ret; 
0x000000000045931a: add al, 0xd0; ret; 
0x000000000040ab77: add al, 0xe8; ret; 
0x0000000000404d1a: add al, 0xe; and r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404db2: add al, 0xe; jne 0x4dbd; cmp rdx, rcx; jg 0x4da8; mov al, 1; ret; 
0x0000000000404cea: add al, 0xe; or r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4ce0; ret; 
0x00000000004528c3: add al, 0xe; ret; 
0x0000000000404d7a: add al, 0xe; xor r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d70; ret; 
0x00000000004053ca: add al, 0xf2; movups xmm1, xmmword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404de5: add al, 0xf; jne 0x4df0; cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x0000000000404d4d: add al, 0xf; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000407ef1: add al, 0xf; mov edi, 0xfffef885; jmp ptr [rcx]; ret 0x8966; 
0x000000000045c257: add al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427a37: add al, 2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000425bad: add al, 2; jmp 0x25bb3; xor al, al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004025a7: add al, 2; jne 0x25b3; inc r8; jne 0x25a0; xor eax, eax; ret; 
0x0000000000409366: add al, 7; add byte ptr [rsi + 0x41], ah; mov ebp, 0xbf0f0001; ret; 
0x00000000004031d8: add al, al; add byte ptr [rax], al; sete al; ret; 
0x00000000004577e8: add al, al; add byte ptr [rax], al; sete al; ret; 
0x00000000004330f7: add al, bl; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334e7: add al, bl; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000448263: add al, bl; jb 0x48271; cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x0000000000401cb7: add al, bpl; ret 0xfff6; 
0x000000000044ea7f: add al, byte ptr [eax]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea7e: add al, byte ptr [eax]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea78: add al, byte ptr [eax]; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea77: add al, byte ptr [eax]; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x00000000004383bb: add al, byte ptr [rax - 0x6bf0d2c8]; ret; 
0x00000000004554ff: add al, byte ptr [rax]; add al, 0x25; inc dword ptr [rax]; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000405aa9: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x3c83; 
0x0000000000405dec: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x0000000000405deb: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x00000000004253ac: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000405e0c: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x0000000000405e0b: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x00000000004452f2: add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x0000000000405df7: add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x917d; 
0x00000000004253a4: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; test byte ptr [rax + rax], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000405de4: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x0000000000405e04: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x00000000004453aa: add al, byte ptr [rax]; add byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x77]; ret 0x8944; 
0x000000000042e8f7: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000042383f: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423875: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430503: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004305a0: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000414138: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042e8c0: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000459db2: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402a88: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000434ec0: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434ee2: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000437309: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000043920b: add al, byte ptr [rax]; add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000416632: add al, byte ptr [rax]; add byte ptr [rax], al; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x0000000000415582: add al, byte ptr [rax]; add byte ptr [rax], al; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000424331: add al, byte ptr [rax]; add byte ptr [rax], al; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x00000000004326e1: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004328d1: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000433761: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000041050e: add al, byte ptr [rax]; add byte ptr [rbp + 0x31], cl; fisttp dword ptr [rcx - 0x39]; ret 0; 
0x0000000000405c06: add al, byte ptr [rax]; add byte ptr [rbx + 0x7400943c], al; loope 0x5bf9; ret 0; 
0x0000000000410268: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041464c: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c766: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c7b6: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041ce5c: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420dc6: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420e16: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000421c7c: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045bb39: add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040771a: add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004077aa: add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040a246: add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004102f1: add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041d013: add al, byte ptr [rax]; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000421e20: add al, byte ptr [rax]; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000422200: add al, byte ptr [rax]; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000445eb1: add al, byte ptr [rax]; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000405691: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x0000000000405690: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x0000000000405bb8: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x0000000000405bb7: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x00000000004055d2: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x00000000004055d1: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000405962: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000405961: add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x000000000040555f: add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x0000000000445399: add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x0000000000417921: add al, byte ptr [rax]; add byte ptr [rdx + rdx*8 - 0x39], bh; add eax, 0x521f0; jo 0x17930; add byte ptr [rax], al; ret; 
0x0000000000417de4: add al, byte ptr [rax]; add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000040d567: add al, byte ptr [rax]; add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040d588: add al, byte ptr [rax]; add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x00000000004566fe: add al, byte ptr [rax]; add rdi, 8; call 0x1cbe0; call 0x17d50; pop rbx; ret; 
0x00000000004330d4: add al, byte ptr [rax]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334c4: add al, byte ptr [rax]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004331a4: add al, byte ptr [rax]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433594: add al, byte ptr [rax]; addss xmm0, dword ptr [rax]; ret; 
0x000000000041155d: add al, byte ptr [rax]; and eax, 0xffff; ret; 
0x0000000000433a5f: add al, byte ptr [rax]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433abf: add al, byte ptr [rax]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000043babd: add al, byte ptr [rax]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043badc: add al, byte ptr [rax]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bdca: add al, byte ptr [rax]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x000000000044752a: add al, byte ptr [rax]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000449949: add al, byte ptr [rax]; call 0x48570; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b79: add al, byte ptr [rax]; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e9: add al, byte ptr [rax]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x000000000044b919: add al, byte ptr [rax]; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x0000000000439958: add al, byte ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ee96: add al, byte ptr [rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f026: add al, byte ptr [rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f346: add al, byte ptr [rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f646: add al, byte ptr [rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea80: add al, byte ptr [rax]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x0000000000453340: add al, byte ptr [rax]; call qword ptr [rax]; 
0x00000000004533a7: add al, byte ptr [rax]; call qword ptr [rax]; 
0x0000000000456519: add al, byte ptr [rax]; call qword ptr [rax]; 
0x0000000000456518: add al, byte ptr [rax]; call qword ptr [rax]; 
0x00000000004533a7: add al, byte ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000453330: add al, byte ptr [rax]; cmp qword ptr [rax], 0; je 0x53348; mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000045339a: add al, byte ptr [rax]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x00000000004330f6: add al, byte ptr [rax]; fadd dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334e6: add al, byte ptr [rax]; fadd dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044f63f: add al, byte ptr [rax]; lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f33f: add al, byte ptr [rax]; lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f01f: add al, byte ptr [rax]; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee8f: add al, byte ptr [rax]; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea79: add al, byte ptr [rax]; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x00000000004528bf: add al, byte ptr [rax]; lea rax, [rsi + rcx]; ret; 
0x000000000043bdc3: add al, byte ptr [rax]; lea rdx, [rip + 0x257f4]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x00000000004029da: add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000427a38: add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000427a4e: add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000427a6e: add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000042d7bf: add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000042d7df: add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045022a: add al, byte ptr [rax]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x000000000045abb0: add al, byte ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ac06: add al, byte ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccfe: add al, byte ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd49: add al, byte ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004566ee: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a358: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3dc: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045afa7: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045affd: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b053: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccc5: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd82: add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000455b0c: add al, byte ptr [rax]; mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000453216: add al, byte ptr [rax]; mov qword ptr [rdx + 8], rcx; mov qword ptr [rdx], rbx; mov qword ptr [rip + 0x2568a], rax; pop rbx; ret; 
0x0000000000449aae: add al, byte ptr [rax]; mov qword ptr [rsp], rax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000044b84e: add al, byte ptr [rax]; mov qword ptr [rsp], rax; call 0x4b700; mov rsp, rbp; pop rbp; ret; 
0x000000000043e379: add al, byte ptr [rax]; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000042e18b: add al, byte ptr [rax]; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000455b9a: add al, byte ptr [rax]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000445ecd: add al, byte ptr [rax]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x00000000004470dd: add al, byte ptr [rax]; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x000000000044711d: add al, byte ptr [rax]; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x000000000045907a: add al, byte ptr [rax]; mov rdx, qword ptr [rax]; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000045905a: add al, byte ptr [rax]; mov rdx, qword ptr [rax]; xor cl, cl; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x00000000004512e8: add al, byte ptr [rax]; mov rdx, qword ptr [rsp]; add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000455bc2: add al, byte ptr [rax]; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x000000000045bc32: add al, byte ptr [rax]; movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x0000000000459313: add al, byte ptr [rax]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x00000000004146e0: add al, byte ptr [rax]; or byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000414a10: add al, byte ptr [rax]; or byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000453224: add al, byte ptr [rax]; pop rbx; ret; 
0x0000000000401046: add al, byte ptr [rax]; ret; 
0x0000000000450275: add al, byte ptr [rax]; ret; 
0x00000000004554f6: add al, byte ptr [rax]; sbb dh, byte ptr [rsi + 7]; mov byte ptr [rip + 0x233ee], 4; and eax, 0xff; pop rbx; ret; 
0x000000000045c02e: add al, byte ptr [rax]; sub eax, dword ptr [rdx]; pop r13; pop r12; pop rbx; ret; 
0x000000000045c031: add al, byte ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004125aa: add al, byte ptr [rcx + 0xf]; mov dh, 0x46; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x0000000000411c7d: add al, byte ptr [rcx + 0xf]; mov dh, 0x55; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x0000000000408555: add al, byte ptr [rcx + 1]; vpaddsw xmm12, xmm5, xmmword ptr [r14 - 0x7f]; ret; 
0x0000000000458766: add al, byte ptr [rcx + rcx*4 - 0x3a]; mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x000000000040928a: add al, byte ptr [rcx]; add byte ptr [rsi - 0x48], ah; add dword ptr [rax], eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000418630: add al, byte ptr [rip + 0x38b70f00]; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000423bf4: add al, byte ptr [rsi]; add byte ptr [rbx + 0x1e88300], cl; ret; 
0x000000000042383e: add al, byte ptr ds:[rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f01d: add al, byte ptr fs:[eax]; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee95: add al, byte ptr fs:[rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f025: add al, byte ptr fs:[rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f01e: add al, byte ptr fs:[rax]; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee8e: add al, byte ptr fs:[rax]; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x0000000000430346: add al, ch; adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043043a: add al, ch; adc byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000436b3a: add al, ch; adc byte ptr [rax], al; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bca: add al, ch; adc byte ptr [rax], al; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000426baa: add al, ch; adc byte ptr [rdi + rdi*8 - 1], bl; lea rax, [rip - 0x67]; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000041a6ca: add al, ch; adc byte ptr [rsi + rdi*8 - 1], bh; pop rbx; ret; 
0x000000000042ef69: add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004300c9: add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004301a9: add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434599: add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045ca57: add al, ch; adc dword ptr [rdx + rdi*8 - 1], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000045ca85: add al, ch; adc eax, 0x48fffa54; lea esp, [rsp + 8]; ret; 
0x00000000004013ca: add al, ch; add ah, 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042383c: add al, ch; add al, byte ptr ds:[rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000427a4a: add al, ch; add byte ptr [rcx], al; add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000431b2b: add al, ch; addps xmm0, xmmword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431f86: add al, ch; and al, 0x71; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000427a6a: add al, ch; and byte ptr [rax], al; add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045c0fa: add al, ch; and byte ptr [rsi - 4], cl; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576b8: add al, ch; and ch, byte ptr [rax - 0x72b70006]; and al, 8; ret; 
0x0000000000434f35: add al, ch; and eax, 0x48fffffd; lea esp, [rsp + 8]; ret; 
0x000000000043b252: add al, ch; call 0x4903af73; lea esp, [rsp + 8]; ret; 
0x000000000045c972: add al, ch; call 0x4905c3ce; lea esp, [rsp + 8]; ret; 
0x0000000000431991: add al, ch; cdq; je 0x31996; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004574a2: add al, ch; clc; test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000423ef3: add al, ch; cmc; std; inc dword ptr [rbx + 0x634801eb]; ret; 
0x000000000040a1a2: add al, ch; cmp ah, ah; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004034fa: add al, ch; cmp bh, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042240d: add al, ch; cmp eax, 0x41fffff2; pop rbp; pop r12; pop rbx; ret; 
0x00000000004112dd: add al, ch; cmp eax, 0x48fffffe; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004014b2: add al, ch; cwde; ret; 
0x000000000045c84c: add al, ch; ficom word ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9ac: add al, ch; fidiv word ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb7f: add al, ch; fist dword ptr [rdx - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b61: add al, ch; fld dword ptr [rbp - 0x72b70004]; and al, 8; ret; 
0x0000000000450b41: add al, ch; fldcw word ptr [rbx]; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042ee1f: add al, ch; imul eax, dword ptr [rdi - 0x72b70001], 0x64; and al, 8; ret; 
0x00000000004012df: add al, ch; imul eax, ebp, 1; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004016df: add al, ch; imul eax, ecx, 1; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000419fff: add al, ch; imul ecx, dword ptr [rip - 0x72b80000], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c8ef: add al, ch; imul edx, dword ptr [rbp - 6], -1; lea rsp, [rsp + 8]; ret; 
0x0000000000417711: add al, ch; imul esi, edi, 0x8948ffff; ret; 
0x0000000000426e96: add al, ch; in al, 0x49; add eax, dword ptr [rax]; lea rsp, [rsp + 0x88]; ret; 
0x00000000004238b6: add al, ch; in al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045c9f5: add al, ch; in eax, 0x54; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438bad: add al, ch; insd dword ptr [rdi], dx; ret 0xfffd; 
0x0000000000417cc3: add al, ch; ja 0x17ccf; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431968: add al, ch; jb 0x319e4; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432238: add al, ch; jb 0x322aa; add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000045cb24: add al, ch; jbe 0x5cb7b; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431afb: add al, ch; jg 0x31b75; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045cbdd: add al, ch; jge 0x5cc33; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba0c: add al, ch; jle 0x5ba85; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045776f: add al, ch; jmp 0x57719; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458a6f: add al, ch; jmp 0x58a06; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000401c4b: add al, ch; jmp qword ptr [rax + 1]; 
0x00000000004319b5: add al, ch; jne 0x31a2d; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000457289: add al, ch; jno 0x57238; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c28a: add al, ch; jo 0x5c2eb; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457420: add al, ch; jp 0x573ce; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000409c0b: add al, ch; lahf; fdiv st(7), st(0); jmp qword ptr [rsi - 0x7f]; 
0x000000000043168b: add al, ch; lahf; ja 0x31690; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431fdb: add al, ch; lahf; push rbx; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000408b91: add al, ch; leave; test al, 0xff; jmp qword ptr [rsi + 0x41]; 
0x0000000000426cdd: add al, ch; lodsd eax, dword ptr [rsi]; ret 0xfffd; 
0x00000000004570fc: add al, ch; lodsd eax, dword ptr cs:[rsi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444229: add al, ch; loope 0x4424a; add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041a880: add al, ch; mov al, byte ptr [rax + rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000434583: add al, ch; mov bh, 0x87; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca27: add al, ch; mov bl, 0x54; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004583b9: add al, ch; mov cl, 0xa6; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457349: add al, ch; mov cl, 0xaa; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457249: add al, ch; mov cl, 0xab; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9a4: add al, ch; mov dh, 0x55; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9d1: add al, ch; mov dword ptr [rbp - 6], edx; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004147f2: add al, ch; mov eax, 0x4800003d; lea esp, [rsp + 8]; ret; 
0x00000000004574e2: add al, ch; mov eax, 0x48fffaa9; lea esp, [rsp + 8]; ret; 
0x0000000000455b12: add al, ch; mov eax, 0x48fffac4; lea esp, [rsp + 8]; ret; 
0x000000000045cb9f: add al, ch; mov ebx, 0x48fffa52; lea esp, [rsp + 8]; ret; 
0x000000000045759f: add al, ch; mov ebx, 0x48fffaa8; lea esp, [rsp + 8]; ret; 
0x000000000040309f: add al, ch; mov ebx, 0x48ffffed; lea esp, [rsp + 8]; ret; 
0x000000000045755b: add al, ch; mov edi, 0x48fffaa9; lea esp, [rsp + 8]; ret; 
0x000000000040301b: add al, ch; mov edi, 0x48ffffee; lea esp, [rsp + 8]; ret; 
0x0000000000402e20: add al, ch; mov edx, 0x48fffff0; lea esp, [rsp + 8]; ret; 
0x00000000004390a0: add al, ch; mov edx, 0x48fffffe; mov esp, ebp; pop rbp; ret; 
0x000000000045c8cf: add al, ch; mov edx, dword ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045736c: add al, ch; mov esi, 0x48fffaaa; lea esp, [rsp + 8]; ret; 
0x000000000040511f: add al, ch; mov esi, dword ptr [rcx + rax]; add bl, ch; cmp dh, bh; ret; 
0x000000000045b9ce: add al, ch; mov esp, 0x48fffa75; lea esp, [rsp + 8]; ret; 
0x000000000042b90a: add al, ch; nop; ret; 
0x00000000004306de: add al, ch; or al, 0; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430aee: add al, ch; or al, 0; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000456e92: add al, ch; or byte ptr [rax - 0x72b70006], dh; and al, 8; ret; 
0x000000000040163d: add al, ch; or eax, 0x48000167; mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000452ecd: add al, ch; or r12b, r15b; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e6b: add al, ch; outsd dx, dword ptr [rsi]; mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402a8b: add al, ch; pmuludq mm7, mm7; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004451c4: add al, ch; pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x0000000000430ed2: add al, ch; pop rax; or eax, 0x8d48fffe; and al, 0x18; ret; 
0x0000000000456dff: add al, ch; pop rbx; mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453208: add al, ch; pop rdi; cld; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x00000000004014ad: add al, ch; popfq; push -0x6717ffff; ret; 
0x0000000000431acb: add al, ch; push qword ptr [rdx]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045cafc: add al, ch; push rbx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000401967: add al, ch; push rbx; ret 1; 
0x0000000000413bb3: add al, ch; push rdi; add edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000454fa4: add al, ch; push rsi; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000045c875: add al, ch; push rsi; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c829: add al, ch; rcl dword ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576e8: add al, ch; repne cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439698: add al, ch; ret 0x17f; 
0x000000000045c918: add al, ch; ret 0xfa55; 
0x000000000043ad48: add al, ch; ret 0xfc8f; 
0x00000000004317b8: add al, ch; ret 0xfe6e; 
0x0000000000420af8: add al, ch; ret 0xffbc; 
0x000000000040d0a8: add al, ch; ret 0xfff3; 
0x0000000000401cb8: add al, ch; ret 0xfff6; 
0x0000000000426098: add al, ch; ret 0xfffa; 
0x0000000000427cb8: add al, ch; ret 0xfffd; 
0x00000000004145f7: add al, ch; ret; 
0x0000000000416cb7: add al, ch; ret; 
0x000000000041aa07: add al, ch; ret; 
0x000000000042d257: add al, ch; ret; 
0x00000000004386e7: add al, ch; ret; 
0x000000000043ac87: add al, ch; ret; 
0x0000000000450627: add al, ch; ret; 
0x0000000000456157: add al, ch; ret; 
0x000000000045b0a7: add al, ch; ret; 
0x0000000000403c70: add al, ch; retf 0x148; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000433ac0: add al, ch; retf 0xfffe; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000416d47: add al, ch; ror dword ptr [rdx - 0x76b70001], cl; ret; 
0x000000000045b9ec: add al, ch; sahf; jne 0x5b9eb; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043193c: add al, ch; sahf; js 0x31941; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431da8: add al, ch; sal byte ptr [rbx], cl; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000407689: add al, ch; sar dword ptr [rbp - 0x72b70001], 1; and al, 8; ret; 
0x000000000040cb67: add al, ch; sar dword ptr [rcx - 0x76b80000], cl; in al, dx; pop rbp; ret; 
0x0000000000434fb9: add al, ch; sar ebp, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457482: add al, ch; sbb byte ptr [rdx - 0x72b70006], ch; and al, 8; ret; 
0x0000000000456e41: add al, ch; sbb dword ptr [rax - 0x72b70006], esi; and al, 8; ret; 
0x0000000000457581: add al, ch; sbb dword ptr [rcx - 0x72b70006], ebp; and al, 8; ret; 
0x00000000004322d1: add al, ch; sbb dword ptr [rdx], ebp; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000045743f: add al, ch; sbb ebp, dword ptr [rdx - 0x72b70006]; and al, 8; ret; 
0x000000000045cb3f: add al, ch; sbb edx, dword ptr [rbx - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457208: add al, ch; shr byte ptr [rdx + rdi*8 + 0x648d48ff], cl; and al, 8; ret; 
0x0000000000457229: add al, ch; shr dword ptr [rbx - 0x72b70006], 1; and al, 8; ret; 
0x00000000004573d9: add al, ch; shr dword ptr [rdx - 0x72b70006], 0x64; and al, 8; ret; 
0x0000000000457329: add al, ch; shr dword ptr [rdx - 0x72b70006], 1; and al, 8; ret; 
0x0000000000436fab: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004372eb: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043732b: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043736b: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438f0b: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000439a9b: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044752b: add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431dd1: add al, ch; stc; outsd dx, dword ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000401551: add al, ch; stc; ret 1; 
0x0000000000414add: add al, ch; std; cmp al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004017bd: add al, ch; std; ret; 
0x000000000045730f: add al, ch; stosq qword ptr [rdi], rax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000423872: add al, ch; sub byte ptr [rdx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000441c52: add al, ch; sub byte ptr [rsi], dl; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004136bd: add al, ch; sub eax, 0x4800001a; mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043badd: add al, ch; sub eax, 0x48fffffe; lea esp, [rsp + 8]; ret; 
0x00000000004295fd: add al, ch; sub eax, 0x89000002; ret; 
0x0000000000402e79: add al, ch; sub edi, 0x8d48ffff; and al, 8; ret; 
0x00000000004316eb: add al, ch; subps xmm0, xmmword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042b86b: add al, ch; syscall; 
0x0000000000435322: add al, ch; test al, 0x7d; std; jmp qword ptr [rsi - 0x75]; 
0x0000000000457715: add al, ch; test dword ptr [rdi - 0x72b70006], esp; and al, 8; ret; 
0x0000000000417d43: add al, ch; test dword ptr [rdi], 0x89480000; in al, dx; pop rbp; ret; 
0x00000000004302b3: add al, ch; test dword ptr [rdx], 0x648d4800; and al, 8; ret; 
0x00000000004183d5: add al, ch; vpaddd xmm7, xmm8, xmm7; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000044ce4f: add al, ch; wait; fdivp st(4); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004015af: add al, ch; wait; ret 1; 
0x000000000040181f: add al, ch; wait; ret; 
0x00000000004574bf: add al, ch; wait; test eax, 0x8d48fffa; and al, 8; ret; 
0x000000000044ce77: add al, ch; xchg ebx, eax; fdivp st(4); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b847: add al, ch; xchg ebx, eax; int 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439959: add al, ch; xchg ecx, eax; and ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457509: add al, ch; xchg ecx, eax; test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000458563: add al, ch; xchg edi, eax; cmpsb byte ptr [rsi], byte ptr [rdi]; cli; dec dword ptr [rax - 0x77]; ret; 
0x0000000000423906: add al, ch; xchg esp, eax; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004018e3: add al, ch; xlatb; ret 1; 
0x000000000045c18a: add al, ch; xor byte ptr [rdi], al; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041a338: add al, ch; xor cl, byte ptr [rdx]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045c8a8: add al, ch; xor dl, byte ptr [rsi - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004031b2: add al, dh; add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x00000000004577c2: add al, dh; add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x0000000000403182: add al, dh; add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000457792: add al, dh; add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000403172: add al, dh; add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000457782: add al, dh; add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000403192: add al, dh; add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004577a2: add al, dh; add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004031a2: add al, dh; add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004577b2: add al, dh; add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004031c2: add al, dh; add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004577d2: add al, dh; add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004031d2: add al, dh; add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x00000000004577e2: add al, dh; add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x0000000000406aea: add al, dh; jg 0x6b36; and eax, edx; shr rax, 0x34; ret; 
0x0000000000408749: add ax, 1; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000404a85: add ax, cx; shr di, 4; cmp rdx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000459dad: add bh, al; add eax, 0x2bf38; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000417a47: add bh, al; add eax, 0x520ce; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000040ea1e: add bh, bh; adc bl, ch; or cl, byte ptr [rax - 0x77]; fbstp tbyte ptr [rcx]; imul al; ret; 
0x0000000000412f4b: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414982: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004151ee: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041521e: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041524e: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415286: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004533a8: add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040e074: add bh, bh; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000417f48: add bh, bh; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000423aaa: add bh, bh; adc eax, 0x46267; lea rsp, [rsp + 8]; ret; 
0x00000000004166b9: add bh, bh; adc eax, 0x6d998; lea rsp, [rsp + 8]; ret; 
0x0000000000416681: add bh, bh; adc eax, 0x6d9d0; lea rsp, [rsp + 8]; ret; 
0x0000000000416635: add bh, bh; adc eax, 0x6da1c; lea rsp, [rsp + 8]; ret; 
0x00000000004165e5: add bh, bh; adc eax, 0x6da6c; lea rsp, [rsp + 8]; ret; 
0x0000000000416139: add bh, bh; adc eax, 0x6df28; lea rsp, [rsp + 8]; ret; 
0x0000000000416119: add bh, bh; adc eax, 0x6df48; lea rsp, [rsp + 8]; ret; 
0x00000000004160f9: add bh, bh; adc eax, 0x6df68; lea rsp, [rsp + 8]; ret; 
0x00000000004160d9: add bh, bh; adc eax, 0x6df88; lea rsp, [rsp + 8]; ret; 
0x00000000004160b9: add bh, bh; adc eax, 0x6dfa8; lea rsp, [rsp + 8]; ret; 
0x0000000000416080: add bh, bh; adc eax, 0x6dfd9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416050: add bh, bh; adc eax, 0x6e009; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416020: add bh, bh; adc eax, 0x6e039; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415ff0: add bh, bh; adc eax, 0x6e069; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fc0: add bh, bh; adc eax, 0x6e099; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f90: add bh, bh; adc eax, 0x6e0c9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f30: add bh, bh; adc eax, 0x6e129; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415eb0: add bh, bh; adc eax, 0x6e1a9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e80: add bh, bh; adc eax, 0x6e1d9; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e50: add bh, bh; adc eax, 0x6e209; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004155c9: add bh, bh; adc eax, 0x6ea10; lea rsp, [rsp + 8]; ret; 
0x0000000000415585: add bh, bh; adc eax, 0x6ea54; lea rsp, [rsp + 8]; ret; 
0x0000000000415535: add bh, bh; adc eax, 0x6eaa4; lea rsp, [rsp + 8]; ret; 
0x00000000004031f3: add bh, bh; add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000403203: add bh, bh; add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000457803: add bh, bh; add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000457813: add bh, bh; add byte ptr [rax], al; shr eax, 8; ret; 
0x000000000043b404: add bh, bh; bt dword ptr [rsp], ecx; jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x000000000040243b: add bh, bh; call rbx; 
0x00000000004024bd: add bh, bh; call rbx; 
0x000000000040251e: add bh, bh; call rbx; 
0x00000000004250a8: add bh, bh; cmp edx, ecx; jg 0x25020; pop rbx; ret; 
0x000000000044f4ef: add bh, bh; mov rax, qword ptr [rbx]; mov byte ptr [rax + 1], 0xfe; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043448b: add bh, bh; nop; add byte ptr [rax], 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c69a: add bh, bh; nop; call 0x4804c6a2; lea esp, [rsp + 8]; ret; 
0x000000000044ea81: add bh, bh; nop; cmp byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040ff9b: add bh, bh; nop; mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a23b: add bh, bh; nop; mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a25d: add bh, bh; nop; mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000044a2a0: add bh, bh; nop; mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000040df02: add bh, bh; nop; movabs al, byte ptr [0x5b5c415d41000000]; ret; 
0x000000000040de1a: add bh, bh; nop; movabs al, byte ptr [0x824648d48000000]; pop r12; pop rbx; ret; 
0x000000000040e760: add bh, bh; nop; movabs al, byte ptr [0x824648d48000000]; pop r12; pop rbx; ret; 
0x000000000040e517: add bh, bh; nop; movabs al, byte ptr [0x824648d48000000]; ret; 
0x000000000044ee97: add bh, bh; nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f027: add bh, bh; nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f347: add bh, bh; nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f647: add bh, bh; nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040feab: add bh, bh; nop; test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a21b: add bh, bh; nop; test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004130ae: add bh, bh; push rax; adc byte ptr [rax + 0x648d48d8], cl; and al, 0x20; pop rbx; ret; 
0x00000000004131ae: add bh, bh; push rax; adc byte ptr [rax + 0x648d48d8], cl; and al, 0x20; pop rbx; ret; 
0x00000000004149c2: add bh, bh; push rax; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484bb: add bh, bh; push rax; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484fd: add bh, bh; push rax; and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000448540: add bh, bh; push rax; and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004342ab: add bh, bh; push rax; cmp byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043446b: add bh, bh; push rax; js 0x344b8; lea esp, [rsp + 8]; ret; 
0x00000000004342cb: add bh, bh; push rax; lea rsp, [rsp + 8]; ret; 
0x0000000000413012: add bh, bh; push rax; or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004149a2: add bh, bh; push rax; or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484db: add bh, bh; push rax; sbb byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043b8eb: add bh, bh; push rax; sub byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e34a: add bh, bh; ret; 
0x0000000000414e35: add bh, bh; ror byte ptr [rax - 0x77], 1; ret; 
0x000000000041a631: add bh, bh; ror byte ptr [rax - 0x77], 1; ret; 
0x000000000041a68e: add bh, bh; ror byte ptr [rax - 0x77], 1; ret; 
0x000000000041a787: add bh, bh; ror byte ptr [rax - 0x77], 1; ret; 
0x000000000040107a: add bh, bh; sar byte ptr [rax + 0xe7], cl; mov edi, dword ptr [rbp - 4]; syscall; 
0x00000000004376ce: add bh, bh; sub eax, 0x63480875; ret; 
0x0000000000415d7a: add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dba: add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041653a: add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041657a: add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000425603: add bh, byte ptr [rsi + 1]; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000415b64: add bh, dh; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004163a4: add bh, dh; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000415d5a: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041651a: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed99: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043118f: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ea6: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec9: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d19: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004330f9: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334e9: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c76: add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436d3b: add bl, bl; jge 0x36d1f; fld xword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044a25a: add bl, byte ptr [rbx - 0x6f00fffd]; mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000040514c: add bl, ch; adc dh, bh; ret; 
0x0000000000433d2f: add bl, ch; add dh, byte ptr [rcx]; leave; mov eax, ecx; ret; 
0x00000000004104eb: add bl, ch; add dh, byte ptr [rcx]; rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000041079b: add bl, ch; add dh, byte ptr [rcx]; rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000045ba3a: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x48; ret; 
0x000000000041b694: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434307: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434347: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434387: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004343c7: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434407: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434447: add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000040cfbf: add bl, ch; and cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000405124: add bl, ch; cmp dh, bh; ret; 
0x000000000044cb15: add bl, ch; iretd; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000040dafe: add bl, ch; or cl, byte ptr [rax - 0x73]; adc eax, 0x75038; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x00000000004331a5: add bl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x0000000000433595: add bl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x000000000041ad9b: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000419284: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000040db31: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db63: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db81: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dba1: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbd3: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbf1: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a1b: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a31: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041902b: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419041: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b70b: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b721: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b753: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239db: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239f1: add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000455500: add byte ptr [0xff], al; pop rbx; ret; 
0x00000000004218de: add byte ptr [eax + ecx*4 - 0x20], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000421985: add byte ptr [eax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415365: add byte ptr [ecx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041dca4: add byte ptr [ecx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041ddb8: add byte ptr [ecx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422544: add byte ptr [ecx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422650: add byte ptr [ecx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000421773: add byte ptr [ecx + ecx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042182e: add byte ptr [ecx + ecx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040c7f9: add byte ptr [r8], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000426cdb: add byte ptr [r8], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000410e22: add byte ptr [r8], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000426c8d: add byte ptr [r8], al; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x0000000000431ea4: add byte ptr [r8], r8b; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec7: add byte ptr [r8], r8b; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404557: add byte ptr [r8], r8b; jne 0x4550; ret; 
0x000000000042ece7: add byte ptr [r8], r8b; lea rsp, [rsp + 8]; ret; 
0x0000000000453d07: add byte ptr [r8], r8b; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000444121: add byte ptr [r9 + 0x5d], r8b; pop r12; pop rbx; ret; 
0x0000000000414b2c: add byte ptr [r9 - 0x77], r8b; pop rbp; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000406dc4: add byte ptr [rax + 0x17e8c17f], al; and eax, eax; ret; 
0x0000000000409e42: add byte ptr [rax + 0x1f], bh; sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000405aab: add byte ptr [rax + 0x29], cl; ret 0x3c83; 
0x0000000000405dee: add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x000000000043b6a2: add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000449ea5: add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000044c38d: add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x00000000004253ae: add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000426f51: add byte ptr [rax + 0x29], cl; ret 0x8944; 
0x0000000000409ace: add byte ptr [rax + 0x29], cl; ret 0xf48; 
0x0000000000405e0e: add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x00000000004087d8: add byte ptr [rax + 0x29], cl; ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409e18: add byte ptr [rax + 0x29], cl; ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x00000000004250ea: add byte ptr [rax + 0x39], cl; ret 0x1b75; 
0x0000000000425793: add byte ptr [rax + 0x39], cl; ret 0x1b75; 
0x0000000000444661: add byte ptr [rax + 0x39], cl; ret 0x1c75; 
0x0000000000425102: add byte ptr [rax + 0x39], cl; ret 0x375; 
0x00000000004452f4: add byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x0000000000405df9: add byte ptr [rax + 0x39], cl; ret 0x917d; 
0x00000000004087d3: add byte ptr [rax + 0x3f], bh; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e13: add byte ptr [rax + 0x3f], bh; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000406e38: add byte ptr [rax + 0x48d221ff], al; and esi, 0x7fffff; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x00000000004078d8: add byte ptr [rax + 0x48f90948], al; mov dword ptr [rsi], ecx; shr dword ptr [rax], 1; ret; 
0x000000000044f13f: add byte ptr [rax + 0x4b0], bh; ret; 
0x000000000044f58f: add byte ptr [rax + 0x4b1], bh; ret; 
0x00000000004245d4: add byte ptr [rax + 0x5740038], al; call 0x24350; pop rbx; ret; 
0x000000000040424a: add byte ptr [rax + 0x57601f9], al; cmp cl, 6; jb 0x4259; neg rax; ret; 
0x0000000000403253: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000425dd8: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000042e936: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x00000000004385f3: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x00000000004250e7: add byte ptr [rax + 0x63], cl; add byte ptr [rax + 0x39], cl; ret 0x1b75; 
0x0000000000425790: add byte ptr [rax + 0x63], cl; add byte ptr [rax + 0x39], cl; ret 0x1b75; 
0x00000000004250ff: add byte ptr [rax + 0x63], cl; add byte ptr [rax + 0x39], cl; ret 0x375; 
0x000000000045c0ce: add byte ptr [rax + 0x63], cl; dec dword ptr [rax + 1]; clc; movsxd r8, r8d; xchg r10, rsp; ret; 
0x0000000000459411: add byte ptr [rax + 0x63], cl; ret 0x1c3b; 
0x00000000004592de: add byte ptr [rax + 0x63], cl; ret 0x3c3b; 
0x0000000000459420: add byte ptr [rax + 0x63], cl; ret 0x448b; 
0x000000000040a0d7: add byte ptr [rax + 0x63], cl; ret 0x634c; 
0x00000000004592b9: add byte ptr [rax + 0x63], cl; ret 0x7c80; 
0x000000000044f0ef: add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x000000000044f53f: add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x0000000000459303: add byte ptr [rax + 0x63], cl; ret 0xb60f; 
0x0000000000403d87: add byte ptr [rax + 0x63], cl; ret; 
0x000000000041dc1f: add byte ptr [rax + 0x63], cl; ret; 
0x000000000041dd1f: add byte ptr [rax + 0x63], cl; ret; 
0x000000000042b958: add byte ptr [rax + 0x63], cl; ret; 
0x000000000043b74b: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000459771: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004597a9: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004597c4: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004597e0: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004597fc: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000459812: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000459821: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000459869: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000459884: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004598a0: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004598b6: add byte ptr [rax + 0x63], cl; ret; 
0x00000000004598fe: add byte ptr [rax + 0x63], cl; ret; 
0x000000000045993e: add byte ptr [rax + 0x63], cl; ret; 
0x0000000000432e69: add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433049: add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433259: add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433439: add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000459314: add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], cl; add al, 0xd0; ret; 
0x00000000004253a6: add byte ptr [rax + 0x63], cl; test byte ptr [rax + rax], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000405de6: add byte ptr [rax + 0x63], cl; test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x0000000000405e06: add byte ptr [rax + 0x63], cl; test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x0000000000415b83: add byte ptr [rax + 0x7600243c], al; add al, 0x8a; and al, 1; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000431edf: add byte ptr [rax + 0xa], bh; ret; 
0x0000000000404dff: add byte ptr [rax + 0xf], al; mov dh, 0xc7; shr eax, 4; and eax, 0xff; ret; 
0x000000000041a88f: add byte ptr [rax + 1], bh; ret; 
0x00000000004322ff: add byte ptr [rax + 1], bh; ret; 
0x00000000004324ef: add byte ptr [rax + 1], bh; ret; 
0x000000000040701b: add byte ptr [rax + 1], cl; iretd; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004466f9: add byte ptr [rax + 1], cl; ret 0x6b48; 
0x0000000000446a21: add byte ptr [rax + 1], cl; ret 0x6b48; 
0x0000000000446ab3: add byte ptr [rax + 1], cl; ret 0x6b48; 
0x0000000000446ac1: add byte ptr [rax + 1], cl; ret 0x6b48; 
0x00000000004326df: add byte ptr [rax + 2], bh; ret; 
0x00000000004328cf: add byte ptr [rax + 2], bh; ret; 
0x000000000041792b: add byte ptr [rax + 2], dh; add byte ptr [rax], al; ret; 
0x00000000004453ac: add byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x77]; ret 0x8944; 
0x000000000043166f: add byte ptr [rax + 4], bh; ret; 
0x00000000004192b3: add byte ptr [rax + 5], cl; rol byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000431aaf: add byte ptr [rax + 8], bh; ret; 
0x0000000000432e7f: add byte ptr [rax + 8], bh; ret; 
0x000000000043305f: add byte ptr [rax + 8], bh; ret; 
0x000000000043326f: add byte ptr [rax + 8], bh; ret; 
0x000000000043344f: add byte ptr [rax + 8], bh; ret; 
0x0000000000406e43: add byte ptr [rax + 9], cl; mov dword ptr [rax], edx; ret; 
0x0000000000406843: add byte ptr [rax + 9], cl; mov word ptr [rax + 8], dx; ret; 
0x00000000004216cc: add byte ptr [rax + rax + 0x48], ah; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413564: add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413864: add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413594: add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x000000000045229b: add byte ptr [rax + rcx + 0x48], dh; mov edi, eax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x000000000041b68c: add byte ptr [rax + rcx - 1], dh; adc eax, 0x69773; jmp 0x1b699; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041f6d2: add byte ptr [rax + rcx*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f6d1: add byte ptr [rax + rcx*2 + 0x48], sil; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x00000000004218df: add byte ptr [rax + rcx*4 - 0x20], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041309f: add byte ptr [rax + rdx + 0x48], dh; mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041319f: add byte ptr [rax + rdx + 0x48], dh; mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041935d: add byte ptr [rax + rdx + 0x48], dh; mov edx, eax; mov rcx, qword ptr [rdx + 0x10]; mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000041939d: add byte ptr [rax + rdx + 0x48], dh; mov edx, eax; mov rcx, qword ptr [rdx + 0x20]; mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x0000000000453335: add byte ptr [rax + rdx + 0x4c], dh; mov edi, esp; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x0000000000406d2c: add byte ptr [rax - 0x1f76b400], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456dd5: add byte ptr [rax - 0x2d], cl; out 0x48, eax; and edi, dword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x00000000004150db: add byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452e8d: add byte ptr [rax - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040abf6: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000043ac7b: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000043ac9c: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000040b473: add byte ptr [rax - 0x39], cl; ret; 
0x000000000040b543: add byte ptr [rax - 0x39], cl; ret; 
0x0000000000412bbf: add byte ptr [rax - 0x39], cl; ret; 
0x000000000042e8f9: add byte ptr [rax - 0x39], cl; ret; 
0x0000000000406de3: add byte ptr [rax - 0x3f], cl; out 0x17, al; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406b19: add byte ptr [rax - 0x3f], cl; out 0x34, al; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b68: add byte ptr [rax - 0x3f], cl; out 0x3f, al; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000424fd4: add byte ptr [rax - 0x5ce277fe], cl; leave; add al, 0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000402667: add byte ptr [rax - 0x6e], cl; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026d9: add byte ptr [rax - 0x6e], cl; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000044a1f9: add byte ptr [rax - 0x73], cl; adc eax, 0x1714f; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000043bdc4: add byte ptr [rax - 0x73], cl; adc eax, 0x257f4; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab9: add byte ptr [rax - 0x73], cl; adc eax, 0x2d88f; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x00000000004385ec: add byte ptr [rax - 0x73], cl; adc eax, 0x3959c; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042bea2: add byte ptr [rax - 0x73], cl; adc eax, 0x3cc46; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x000000000042e92f: add byte ptr [rax - 0x73], cl; adc eax, 0x43209; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dd1: add byte ptr [rax - 0x73], cl; adc eax, 0x4ba97; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425846: add byte ptr [rax - 0x73], cl; adc eax, 0x5f7e2; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000425866: add byte ptr [rax - 0x73], cl; adc eax, 0x5f7e2; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x00000000004189f0: add byte ptr [rax - 0x73], cl; adc eax, 0xffffff98; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004528c0: add byte ptr [rax - 0x73], cl; add al, 0xe; ret; 
0x000000000042fdaf: add byte ptr [rax - 0x73], cl; add dword ptr [rax - 0x77], ecx; ret 0x2948; 
0x000000000044f640: add byte ptr [rax - 0x73], cl; add eax, 0x260f8; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f340: add byte ptr [rax - 0x73], cl; add eax, 0x262a0; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f020: add byte ptr [rax - 0x73], cl; add eax, 0x26460; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee90: add byte ptr [rax - 0x73], cl; add eax, 0x26490; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea7a: add byte ptr [rax - 0x73], cl; add eax, 0x26746; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x0000000000444cdb: add byte ptr [rax - 0x73], cl; add eax, 0x30fbd; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c67: add byte ptr [rax - 0x73], cl; add eax, 0x31031; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000042d83f: add byte ptr [rax - 0x73], cl; add eax, 0x339c9; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d82f: add byte ptr [rax - 0x73], cl; add eax, 0x339d9; movsd xmm0, qword ptr [rax]; ret; 
0x000000000044a299: add byte ptr [rax - 0x73], cl; add eax, 0x39abf; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448559: add byte ptr [rax - 0x73], cl; add eax, 0x3b7ff; call qword ptr [rax + 0x20]; 
0x0000000000448539: add byte ptr [rax - 0x73], cl; add eax, 0x3b81f; call qword ptr [rax + 0x20]; 
0x0000000000448539: add byte ptr [rax - 0x73], cl; add eax, 0x3b81f; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000044549e: add byte ptr [rax - 0x73], cl; add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x000000000044541b: add byte ptr [rax - 0x73], cl; add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x0000000000433975: add byte ptr [rax - 0x73], cl; add eax, 0x42533; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433955: add byte ptr [rax - 0x73], cl; add eax, 0x42553; bt dword ptr [rax], edi; setb al; ret; 
0x000000000041887f: add byte ptr [rax - 0x73], cl; add eax, 0x50129; call qword ptr [rax]; 
0x0000000000423bef: add byte ptr [rax - 0x73], cl; add eax, 0x60259; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x000000000041ee8c: add byte ptr [rax - 0x73], cl; add eax, 0x64ecc; call qword ptr [rax]; 
0x000000000040e931: add byte ptr [rax - 0x73], cl; add eax, 0x741e7; movzx edx, word ptr [rax]; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e634: add byte ptr [rax - 0x73], cl; add eax, 0x75724; call qword ptr [rax]; 
0x000000000040e510: add byte ptr [rax - 0x73], cl; add eax, 0x75848; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040104f: add byte ptr [rax - 0x73], cl; add eax, 0x819a9; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x0000000000411241: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000444316: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000445fac: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000446053: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044c667: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044d5a8: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044d954: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044dca8: add byte ptr [rax - 0x73], cl; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000042147f: add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004216ce: add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000423ea0: add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000443e91: add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004441ae: add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x000000000044422e: add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004158dd: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041590d: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041596c: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041599d: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041689d: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004168cd: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041692c: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041695d: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000043223d: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000432279: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004322a2: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004322d6: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004546d2: add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000443d58: add byte ptr [rax - 0x73], cl; and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000446d2b: add byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x0000000000446e6f: add byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x000000000040f110: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f1b0: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f46e: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f65c: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f6ee: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000410e24: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000410f20: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411012: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411094: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411116: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411842: add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040d935: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040ddc6: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040e12a: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f344: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f3d6: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f534: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f5c6: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x00000000004118ef: add byte ptr [rax - 0x73], cl; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040e66d: add byte ptr [rax - 0x73], cl; and al, 0x70; pop rbx; ret; 
0x00000000004146ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000423a9f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004237cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x000000000040343f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040345f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040347f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040349f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004075df: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x00000000004075ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x000000000040761f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x000000000042e60f: add byte ptr [rax - 0x73], cl; and al, 0xf8; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x00000000004117bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x00000000004115bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412eff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x000000000041432f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x00000000004177ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x000000000041765f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041833f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x000000000041835f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x000000000045681f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045689f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041909f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041915f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x000000000041918f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b0cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b12f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b08f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b10f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b23f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b5cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x000000000045335f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b85f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c24f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c20f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x0000000000421fbf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c10f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042201f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c29f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004034bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x000000000040498f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000428e5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x000000000042994f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x000000000045604f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f7f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x000000000045836f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b08f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x000000000042bd5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x00000000004588ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x000000000041900f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x00000000004243ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ecdf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042e5df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x00000000004279ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432caf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043327f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043306f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x000000000043345f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434e9f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004322df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000432a9f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043303f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043324f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043342f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edaf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x000000000043536f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000043737f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x00000000004316ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431fef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431adf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043169f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043363f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043374f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043367f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x00000000004336ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043378f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043381f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dacf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x000000000043425f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043427f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000427a2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000455b1f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x0000000000404f6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x000000000044799f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x000000000045819f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x000000000045a22f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b83f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dbf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x000000000043205f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6820; lea rsp, [rsp + 8]; ret; 
0x000000000043207f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x000000000043210f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000431baf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x000000000043176f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x000000000043190f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x000000000042a58f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba1f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f11f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b1f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423aff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423adf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423abf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a7f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a1f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x00000000004239ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x000000000041921f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x00000000004191ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x000000000041913f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x000000000041911f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x00000000004190ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b69f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b65f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b58f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aecf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeaf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041accf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acaf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abcf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abaf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x000000000041698f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x000000000041685f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041683f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x000000000041681f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041658f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x00000000004164af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041648f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x000000000041646f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041634f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041632f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x000000000041630f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162af: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000041628f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000041626f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x000000000041624f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041622f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x000000000041614f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dcf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415def: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aef: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415acf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aaf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x000000000041579f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x000000000041577f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x000000000041575f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x000000000041563f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x000000000041561f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x00000000004155ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041547f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154df: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x000000000041549f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x00000000004154ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x000000000041545f: add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x000000000043921f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004392ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x000000000044a22f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a20f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004484cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484af: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484af: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8df: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8df: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043447f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x000000000043445f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x000000000043445f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x000000000043441f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343df: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x000000000043439f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x000000000043435f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x000000000043431f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342df: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000043429f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x000000000043429f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f3f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040ff8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fe9f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000436f9f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d2f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000041b37f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x000000000044751f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000439a8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043735f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x000000000043731f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372df: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f7f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000438e6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431abf: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043167f: add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000426cef: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x000000000045908f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000041b0af: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004300bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x000000000043019f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000045c81f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fbf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e6f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045721f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045731f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000459ddf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459dff: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x0000000000434f8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434faf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x000000000041612f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x000000000041610f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x000000000043458f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x00000000004160af: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004166cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004159ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155df: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x000000000044854f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x000000000044852f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x00000000004155bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f4f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004166af: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x000000000043042f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x000000000043b41f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c0f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000041159f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x000000000045687f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b17f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b19f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b21f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004310ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x000000000043111f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004557bf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x0000000000450caf: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x000000000045086f: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321df: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x000000000040517f: add byte ptr [rax - 0x73], cl; and al, 0xf8; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051af: add byte ptr [rax - 0x73], cl; and al, 0xf8; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000453f5f: add byte ptr [rax - 0x73], cl; and al, 0xf8; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x000000000042f0cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004507cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x000000000041865f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x000000000041ab1f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000045cacf: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f1f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472af: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x0000000000447f8f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x000000000044850f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484ef: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004476af: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476cf: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x000000000044784f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x000000000044786f: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x000000000042e3ff: add byte ptr [rax - 0x73], cl; and al, 0xf8; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000405160: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000040de20: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000040e766: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415e56: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415e86: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415eb6: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f06: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f36: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f63: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f96: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415fc6: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415ff6: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000416026: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000416056: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000416086: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000419730: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000041a004: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000041cae5: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000420901: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000420aa0: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000420b3c: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000421986: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000423c56: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042db40: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042f296: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042f2c5: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004311c5: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000433aa0: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000433b00: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000443da1: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004441f4: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000444274: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004442be: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000044bf50: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000044c010: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000044d0c0: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000459f4b: add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004029db: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000402a16: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004033a2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000404ebd: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000405088: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004087b7: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040a1a7: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040e51d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040e6fd: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040f129: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040feb1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040ffa1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041173c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004147f7: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414815: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414a47: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414ae2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414ce2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004150e2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415429: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041546a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041548a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004154aa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004154ca: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004154ea: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041550a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041553b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415569: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041558b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004155b8: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004155cf: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004155ef: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041560a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041562a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041564a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415677: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415696: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041576a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041578a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004157aa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004159c8: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004159da: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004159ff: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415a1f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415a5f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415a9a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415aba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415ada: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415afa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415b1a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415c3a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415c5a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415c7a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415dda: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415dfa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415e1a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004160bf: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004160df: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004160ff: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041611f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041613f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041615a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041623a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041625f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041629f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004162da: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004162fa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041631a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041633a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041635a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041647a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041649a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004164ba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041659a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004165ba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004165eb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416619: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041663b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416669: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416687: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166a8: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166bf: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166df: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166fa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416727: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416746: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041682a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041684a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041686a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416988: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041699a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004169c8: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000417deb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000417e2e: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000418150: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041834e: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000418aeb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004190ba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004190ea: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041910a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041912a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041914a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041917a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004191aa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004191ca: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041920a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041922a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041a73f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aa4a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aa7b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aaac: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aadc: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab0d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab2b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab4a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab7a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab9a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041abba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041abda: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041abfa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ac1a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ac3a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ac5a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ac7a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ac9a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041acba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041acda: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041acfa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ad1a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ad3a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ad5a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ad7a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ae3a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ae5a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ae7a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ae9a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aeba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aeda: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aefa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041af1a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041af3a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041af5a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041af7a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b176: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b59a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b5ba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b66a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b6aa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b6ca: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bce0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bd30: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bef3: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423841: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423877: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423895: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004238bb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004238e5: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042390b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423a0a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423a2a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423a4a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423a6a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423a8a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423ab0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423aca: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423aea: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423b0a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423b2a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423b4a: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423be3: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423eca: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004243e6: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000424d42: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000424ed0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000425bb7: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004261f5: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004279f9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000427a09: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000427a39: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000427a4f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000427a6f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000429969: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042bd79: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d7c0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d7e0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d7fe: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d81e: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e37f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e3ef: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e40c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e59c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e5d4: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e5e9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ece9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ecfb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ed49: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ed59: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ed69: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042edb9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042edc9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042edf9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ef6e: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042f0db: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042fc86: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004300ce: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004301ae: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430292: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004302b8: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043034b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043043f: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430462: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430f9b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004310ec: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043110c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043112c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431262: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431282: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004312a2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004312c2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004312e2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431302: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431322: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431690: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004316a9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004316c0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004316d9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004316f0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431709: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431941: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043196d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431996: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004319ba: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431ad0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431ae9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b00: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b19: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b30: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b49: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431d81: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431dad: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431dd6: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431dfa: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431fe0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431ff9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004322ee: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432325: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004323f2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432412: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432442: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432513: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004325e2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432602: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432632: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432702: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004327d2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004327f2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432822: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004328be: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004328f5: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004329c2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004329e2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432a12: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432aa9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432ad1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432bb1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432bd1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432c01: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432c99: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432cb9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432d81: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432da1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432dd1: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432e99: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432f62: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432f82: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432fb2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433079: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433162: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433182: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004331c2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433289: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433352: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433372: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004333a2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433469: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433552: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433572: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004335b2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433649: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433675: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433689: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004336b8: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004336c9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004336f5: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433709: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043373d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433759: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433785: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433799: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004337cf: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004337e9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433815: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433829: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043385d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000434491: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043459e: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000434882: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043655e: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000436fb0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004372f0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000437330: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000437370: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438f10: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000439aa0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a5c2: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a7b9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a81d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043b42c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043f8f4: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000443374: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000446f2b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000447530: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004476bb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004476db: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044785b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044787b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004479a9: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000448250: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000449510: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000449c1c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a221: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a241: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a263: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a2a6: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044b2b0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c0fc: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c6a0: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c929: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044ea87: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044ee9d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f02d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f34d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f481: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f64d: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004507db: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045087c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004512f7: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452b50: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452e94: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000453f6c: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000459a52: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000459db7: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045bc3b: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045cadb: add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040709a: add byte ptr [rax - 0x73], cl; cmp al, 8; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000455b06: add byte ptr [rax - 0x73], cl; cmp eax, 0x229e2; mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000044f639: add byte ptr [rax - 0x73], cl; cmp eax, 0x260ff; lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f339: add byte ptr [rax - 0x73], cl; cmp eax, 0x262a7; lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f019: add byte ptr [rax - 0x73], cl; cmp eax, 0x26467; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee89: add byte ptr [rax - 0x73], cl; cmp eax, 0x26497; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea73: add byte ptr [rax - 0x73], cl; cmp eax, 0x2674d; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000041a03c: add byte ptr [rax - 0x73], cl; cmp eax, 0x6ab4c; call 0x1ad70; pop rbx; ret; 
0x000000000040af59: add byte ptr [rax - 0x73], cl; je 0xaf82; or byte ptr [rax - 0x77], cl; out 0xe8, eax; imul eax, dword ptr [rax], 0x89480000; ret; 
0x0000000000449d27: add byte ptr [rax - 0x73], cl; jl 0x49d50; or byte ptr [rax - 0x73], cl; add eax, 0x3a02c; call qword ptr [rax + 0x10]; 
0x000000000040e5b2: add byte ptr [rax - 0x73], cl; jl 0xe5db; or al, ch; ret; 
0x0000000000407680: add byte ptr [rax - 0x73], cl; js 0x7686; mov edx, 0x20; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x00000000004451bc: add byte ptr [rax - 0x73], cl; mov ah, 0x24; push -0x17ffffff; pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x000000000042b863: add byte ptr [rax - 0x73], cl; mov esp, 0x89824; add al, ch; syscall; 
0x00000000004226af: add byte ptr [rax - 0x73], cl; xchg dword ptr [rax + 2], esi; add byte ptr [rax], al; ret; 
0x0000000000431dee: add byte ptr [rax - 0x73], cl; xor eax, 0x43eaa; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319ae: add byte ptr [rax - 0x73], cl; xor eax, 0x442ea; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004239cf: add byte ptr [rax - 0x73], cl; xor eax, 0x46319; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad8f: add byte ptr [rax - 0x73], cl; xor eax, 0x69f29; mov ecx, 0x23; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000416a0f: add byte ptr [rax - 0x73], cl; xor eax, 0x6d559; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000459a41: add byte ptr [rax - 0x75], cl; adc al, 0x24; add qword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512e9: add byte ptr [rax - 0x75], cl; adc al, 0x24; add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000043b225: add byte ptr [rax - 0x75], cl; adc al, 0x24; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000041961f: add byte ptr [rax - 0x75], cl; adc byte ptr [r8 - 0x77], r9b; ret 0x8348; 
0x000000000044cbc1: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000045cd3b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf0: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abf8: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045aba2: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c14e: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0be: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c02e: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d4e: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cbe: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c2e: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272bf: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b3: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe3: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f54: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e81: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e4d: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db2: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d81: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041800b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c07: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004114a2: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a0: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452640: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452614: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004500c5: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b1: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428453: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042841c: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f1: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042734f: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427145: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427322: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042451a: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000423367: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422891: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042275a: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004225fe: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422563: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f2: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421cdf: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b7b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421aba: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421670: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421525: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042141f: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212d5: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fc4: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204d4: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202db: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fde6: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edf8: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edac: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e95c: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e90f: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e819: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e749: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e44e: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2aa: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e0fd: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e084: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff1: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df32: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de92: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf2: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd66: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc52: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db67: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dafa: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d93a: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d67b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d491: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d38b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d23b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfa6: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cebf: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd5b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc9a: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc32: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbea: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca4b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5c6: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c182: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041803a: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fdb: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c31: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415313: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045905b: add byte ptr [rax - 0x75], cl; adc byte ptr [rax], dh; leave; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000045c429: add byte ptr [rax - 0x75], cl; adc byte ptr [rcx + 0x248b4cd8], cl; ret 0x19eb; 
0x0000000000446d9f: add byte ptr [rax - 0x75], cl; add al, 0x24; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e00: add byte ptr [rax - 0x75], cl; add al, 0x24; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000045126e: add byte ptr [rax - 0x75], cl; add al, 0x24; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000413547: add byte ptr [rax - 0x75], cl; add al, 0x24; jmp 0x13550; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000040ba66: add byte ptr [rax - 0x75], cl; add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000042e18c: add byte ptr [rax - 0x75], cl; add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000401fbf: add byte ptr [rax - 0x75], cl; add al, 0x24; ret; 
0x0000000000414a44: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c5f5: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044363f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77], cl; add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000045cd74: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x26bfc; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccb7: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x26cb9; mov edi, dword ptr [rdx]; call rax; 
0x000000000045afef: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x27f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af99: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x282d7; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b045: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x2892b; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3ce: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x28b22; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a34a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x28f26; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e0: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x2c810; mov edi, dword ptr [rdx]; call rax; 
0x000000000042725e: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bc92; mov edi, dword ptr [rdx]; call rax; 
0x000000000042722f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bcc1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272ee: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bf82; mov edi, dword ptr [rdx]; call rax; 
0x000000000042429a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5e8d6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424261: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5ec8f; mov edi, dword ptr [rdx]; call rax; 
0x000000000042422b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f045; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f31d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042430c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f664; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d74b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65b25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5bb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65cb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d44b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65e25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2cb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65fa5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b81a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x68156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e2: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6818e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b77b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x681f5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b04a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x68926; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b012: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6895e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afab: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x689c5; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f8c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6a9e4; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f25: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa4b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eed: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eb9: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x000000000041806a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab06; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e15: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab5b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418de6: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab8a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d49: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ac27; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180c9: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b527; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181d8: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b798; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418128: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b848; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dbb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6bf35; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411509: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x72467; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d1: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x7249f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041146a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x72506; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032e6: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x80a0a; mov edi, dword ptr [rdx]; call rax; 
0x000000000040329c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x80a54; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452af1: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x311ff; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c196: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57b5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c106: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57bea; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c076: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57c7a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a627: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x596c9; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5dc: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59714; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d96: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59f5a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d06: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59fea; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c76: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5a07a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273cb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bb25; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427292: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bc5e; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273ff: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5be71; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427387: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bee9; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb4: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5c23c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c68: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5c288; mov edi, dword ptr [rdx]; call rax; 
0x000000000042459e: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f752; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424556: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f7aa; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f0: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f820; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423763: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6058d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004236b3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6063d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423603: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x606ed; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423283: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60a6d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231d3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60b1d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423123: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60bcd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fc3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60d2d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f13: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60ddd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e63: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60e8d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042298c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61364; mov edi, dword ptr [rdx]; call rax; 
0x000000000042295e: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61392; mov edi, dword ptr [rdx]; call rax; 
0x000000000042278e: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61562; mov edi, dword ptr [rdx]; call rax; 
0x000000000042262c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x616c4; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d0: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61720; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422520: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x617d0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422493: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6185d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422434: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x618bc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223b4: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6193c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422354: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6199c; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222d4: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61a1c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61f3d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d1a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61fd6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c0f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x620e1; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bb6: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6213a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af1: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x621ff; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a83: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6226d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a2a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x622c6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219f5: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x622fb; mov edi, dword ptr [rdx]; call rax; 
0x000000000042199a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62356; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421961: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6238f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421904: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x623ec; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218ba: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62436; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421851: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6249f; mov edi, dword ptr [rdx]; call rax; 
0x000000000042180a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x624e6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217a4: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6254c; mov edi, dword ptr [rdx]; call rax; 
0x000000000042174f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x625a1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216f4: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x625fc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216a9: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62647; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421553: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6279d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214b5: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6283b; mov edi, dword ptr [rdx]; call rax; 
0x000000000042145a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62896; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421303: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x629ed; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421265: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62a8b; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211fa: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62af6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211aa: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62b46; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421145: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62bab; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421112: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62bde; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210b4: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c3c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421055: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c9b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421022: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62cce; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420573: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6377d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042041b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x638d5; mov edi, dword ptr [rdx]; call rax; 
0x000000000042036a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63986; mov edi, dword ptr [rdx]; call rax; 
0x000000000042022a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63ac6; mov edi, dword ptr [rdx]; call rax; 
0x000000000042018f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63b61; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200bf: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63c31; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420025: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63ccb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f13b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64bb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0fa: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64bf6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0c9: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64c27; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f074: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64c7c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee29: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64ec7; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece0: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65010; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecaf: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65041; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec63: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6508d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebdd: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65113; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebaf: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65141; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb63: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6518d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6520d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea73: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6527d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e9ff: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x652f1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e986: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6536a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8de: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65412; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e68b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65665; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d85b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65695; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5eb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65705; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e56b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65785; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4eb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65805; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e47c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65874; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e388: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65968; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2d8: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65a18; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d81b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65a55; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1af: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65b41; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e12b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65bc5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e01f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65cd1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec0: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65e30; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd94: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65f5c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6602d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc80: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66070; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6611d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db95: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6615b; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d96e: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66382; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d64d: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x666a3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d601: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x666ef; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d50b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x667e5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4dd: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66813; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d35d: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66993; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d311: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x669df; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d20d: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66ae3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c1: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66b2f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cefa: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66df6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdef: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd96: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66f5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd1: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6701f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc60: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67090; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb9a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb4a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x671a6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cafa: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x671f6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cab7: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67239; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e0: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67310; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c95a: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67396; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c63c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x676b4; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c548: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x677a8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3ab: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x677b5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c00b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67ce5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf7f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67d71; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf22: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67dce; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bece: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67e22; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be82: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67e6e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be27: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67ec9; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd97: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67f59; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd0b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67fe5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcbb: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x68035; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc69: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x68087; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc28: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x680c8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa13: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6814d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a2: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x681be; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a96f: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69391; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a945: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x693cb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a913: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x693fd; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8dc: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69414; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e0b: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6ad55; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418204: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b3ec; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418099: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b557; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180f8: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b878; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418176: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bb7a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb2: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6be4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d63: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bf8d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415341: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6e9af; mov edi, dword ptr [rdx]; call rax; 
0x00000000004152a3: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6ea4d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004050d2: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x7ec4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c3c: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx - 0x75], 0x3d; in eax, 0x12; or byte ptr [rax], al; call rax; 
0x0000000000414e7e: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx - 0x75], 0x3d; ret; 
0x0000000000423b5f: add byte ptr [rax - 0x75], cl; add eax, 0x461e9; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x000000000041495b: add byte ptr [rax - 0x75], cl; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004136c2: add byte ptr [rax - 0x75], cl; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044cc61: add byte ptr [rax - 0x75], cl; and byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x00000000004094d3: add byte ptr [rax - 0x75], cl; call 0xfffffffff0562024; mov rsp, rbp; pop rbp; ret; 
0x0000000000443fdc: add byte ptr [rax - 0x75], cl; cmp al, 0x24; mov rsi, qword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000401cb0: add byte ptr [rax - 0x75], cl; cmp al, 0xc5; cmp byte ptr [rdx], ch; add al, bpl; ret 0xfff6; 
0x0000000000401caf: add byte ptr [rax - 0x75], cl; cmp al, 0xc5; cmp byte ptr [rdx], ch; add al, bpl; ret 0xfff6; 
0x000000000044cd8a: add byte ptr [rax - 0x75], cl; cmp al, ch; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000439be2: add byte ptr [rax - 0x75], cl; cmp al, ch; cmc; jle 0x39be7; dec dword ptr [rax - 0x77]; ret; 
0x0000000000439b7f: add byte ptr [rax - 0x75], cl; cmp al, ch; pop rax; jg 0x39b84; dec dword ptr [rax - 0x77]; ret; 
0x0000000000427579: add byte ptr [rax - 0x75], cl; cmp al, ch; sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000415007: add byte ptr [rax - 0x75], cl; cmp edi, dword ptr [rsi + 1]; call 0x2950; pop rbx; ret; 
0x0000000000418737: add byte ptr [rax - 0x75], cl; jne 0x18724; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x0000000000445496: add byte ptr [rax - 0x75], cl; mov esp, 0x17024; add byte ptr [rax - 0x73], cl; add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x000000000043cecf: add byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x00000000004403ff: add byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x000000000044c866: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000413c1f: add byte ptr [rax - 0x75], cl; pop r8; ret; 
0x0000000000423ba5: add byte ptr [rax - 0x75], cl; pop rax; mov qword ptr [rip + 0x44fff], rax; ret; 
0x00000000004010cd: add byte ptr [rax - 0x75], cl; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000417da6: add byte ptr [rax - 0x75], cl; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043b18d: add byte ptr [rax - 0x75], cl; popfq; push 0x48fffffa; mov esp, ebp; pop rbp; ret; 
0x00000000004144ef: add byte ptr [rax - 0x75], cl; push r8; ret; 
0x00000000004181a2: add byte ptr [rax - 0x75], cl; sbb byte ptr [rax - 0x73], cl; add eax, 0x506c3; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x000000000044c911: add byte ptr [rax - 0x75], cl; sbb byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd01: add byte ptr [rax - 0x75], cl; sub byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000438db5: add byte ptr [rax - 0x75], cl; xor al, 0x24; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000438ee5: add byte ptr [rax - 0x75], cl; xor al, 0x24; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000439165: add byte ptr [rax - 0x75], cl; xor al, 0x24; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439295: add byte ptr [rax - 0x75], cl; xor al, 0x24; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439355: add byte ptr [rax - 0x75], cl; xor al, 0x24; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000452821: add byte ptr [rax - 0x75], cl; xor al, 0xc2; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x0000000000455bc3: add byte ptr [rax - 0x75], cl; xor al, ch; test al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004182a2: add byte ptr [rax - 0x75], cl; xor byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000445410: add byte ptr [rax - 0x75], cl; xor ecx, dword ptr [rax - 0x75]; mov esp, 0x16824; add byte ptr [rax - 0x73], cl; add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x0000000000456947: add byte ptr [rax - 0x77], cl; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000436a3f: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449aaf: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000044b84f: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x4b700; mov rsp, rbp; pop rbp; ret; 
0x000000000044c5f8: add byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000443642: add byte ptr [rax - 0x77], cl; add al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000040457f: add byte ptr [rax - 0x77], cl; clc; and eax, 1; ret; 
0x000000000040458f: add byte ptr [rax - 0x77], cl; clc; and eax, 1; ret; 
0x000000000040277f: add byte ptr [rax - 0x77], cl; clc; bswap rax; ret; 
0x000000000040278f: add byte ptr [rax - 0x77], cl; clc; bswap rax; ret; 
0x0000000000432cff: add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432edf: add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332cf: add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432daf: add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f8f: add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x000000000043337f: add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x00000000004045af: add byte ptr [rax - 0x77], cl; clc; imul rax, rdi; ret; 
0x00000000004045bf: add byte ptr [rax - 0x77], cl; clc; imul rax, rdi; ret; 
0x0000000000426b3f: add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040519f: add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051cf: add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax], esi; ret; 
0x000000000040492f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000040493f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a0f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a1f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f7f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f8f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041395f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413eaf: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413ebf: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413f1f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413f2f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041466f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000426b2f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404e7f: add byte ptr [rax - 0x77], cl; clc; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e8f: add byte ptr [rax - 0x77], cl; clc; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x000000000040334f: add byte ptr [rax - 0x77], cl; clc; test rdi, rdi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x000000000040335f: add byte ptr [rax - 0x77], cl; clc; test rdi, rdi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x0000000000423b66: add byte ptr [rax - 0x77], cl; cmp eax, 0x461e2; ret; 
0x00000000004068a1: add byte ptr [rax - 0x77], cl; fild word ptr [rax + 0x30]; imul al; ret; 
0x000000000040c825: add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040ca57: add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044809f: add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000044b986: add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040cc0e: add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; ret 0xc148; 
0x0000000000429c5d: add byte ptr [rax - 0x77], cl; fucompi st(0); mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x00000000004017f8: add byte ptr [rax - 0x77], cl; fucompi st(0); out dx, eax; ret 1; 
0x0000000000401796: add byte ptr [rax - 0x77], cl; fucompi st(0); push rcx; ret; 
0x0000000000429ced: add byte ptr [rax - 0x77], cl; fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x0000000000429ced: add byte ptr [rax - 0x77], cl; fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000401829: add byte ptr [rax - 0x77], cl; fucompi st(0); sahf; ret 1; 
0x000000000042c05d: add byte ptr [rax - 0x77], cl; fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c05d: add byte ptr [rax - 0x77], cl; fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c0ed: add byte ptr [rax - 0x77], cl; fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0ed: add byte ptr [rax - 0x77], cl; fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x00000000004027b4: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000403c75: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000040cb6c: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000040dc18: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000040ef5c: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000411546: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000411aab: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000412f31: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000415945: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000416905: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417ca8: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417cc8: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417ce8: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417d08: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417d28: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417d48: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042e644: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042e7a8: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042eba5: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042ed34: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042f881: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430505: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004305a2: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000043061b: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004306c2: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004306e3: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430718: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004307d1: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430af3: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430c31: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000431f1b: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000431f54: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000431f8b: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000431fc4: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000436b3f: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000436bcf: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000439cc1: add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000453217: add byte ptr [rax - 0x77], cl; or byte ptr [rax - 0x77], cl; sbb cl, byte ptr [rax - 0x77]; add eax, 0x2568a; pop rbx; ret; 
0x000000000041894b: add byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x5005a]; call qword ptr [rax]; 
0x000000000041ee7f: add byte ptr [rax - 0x77], cl; out 0x48, eax; lea esi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x0000000000439794: add byte ptr [rax - 0x77], cl; out 0xe8, al; adc esi, dword ptr [rax - 0x72b70001]; and al, 8; ret; 
0x00000000004546ca: add byte ptr [rax - 0x77], cl; out 0xe8, eax; or eax, 0x48000000; lea esp, [rsp + 0x18]; ret; 
0x000000000042a83e: add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000042db02: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000042db32: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004192b9: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000424d24: add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x00000000004010a1: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004010f5: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401126: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401157: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401184: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004011b5: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004011fb: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401255: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401286: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004012b7: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004012e4: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401315: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401346: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401395: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004013cf: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401425: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401470: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004014b7: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401525: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401556: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401587: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004015b4: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004015e5: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401616: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040167f: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004016b0: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004016e4: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401715: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401746: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401777: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004017a8: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004017d9: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040180a: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040183b: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004018ce: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401952: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401988: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004019f0: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401a5f: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401aa3: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401ad9: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401b0a: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401b79: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401bbd: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401c24: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401c55: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401cc4: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401d08: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401d7b: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000401dae: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040af66: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040c7fc: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040cbf4: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000413807: add byte ptr [rax - 0x77], cl; ret; 
0x00000000004138de: add byte ptr [rax - 0x77], cl; ret; 
0x000000000041413a: add byte ptr [rax - 0x77], cl; ret; 
0x000000000041422a: add byte ptr [rax - 0x77], cl; ret; 
0x000000000041a909: add byte ptr [rax - 0x77], cl; ret; 
0x000000000041a998: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044602e: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044df4e: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044df6f: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044df8d: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044dfab: add byte ptr [rax - 0x77], cl; ret; 
0x000000000044dfcc: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000452670: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040270f: add byte ptr [rax - 0x77], cl; sal al, 1; cmpxchg qword ptr [rdi], rsi; ret; 
0x00000000004116e1: add byte ptr [rax - 0x77], cl; xor byte ptr [rax - 0x73], cl; add eax, 0xffffc403; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000425af6: add byte ptr [rax - 0x78], al; cmp al, 1; ret; 
0x000000000040268f: add byte ptr [rax - 0x79], cl; div eax; xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x00000000004026ff: add byte ptr [rax - 0x79], cl; div eax; xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x000000000042ee13: add byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 7]; lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000423830: add byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 7]; lea rsi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x000000000040421f: add byte ptr [rax - 0x7b], cl; idiv byte ptr [rdi + 3]; xor eax, eax; ret; 
0x0000000000434066: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 0x11]; test rsi, rsi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x0000000000433ff6: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 0xd]; test rsi, rsi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x00000000004479b6: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 8]; xor eax, eax; ret; 
0x000000000040d88f: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x000000000041156f: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411adf: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 8]; ret; 
0x0000000000411abf: add byte ptr [rax - 0x7b], cl; push qword ptr [rcx + rcx + 0x48]; mov eax, dword ptr [rdi - 8]; add rax, 1; ret; 
0x00000000004480df: add byte ptr [rax - 0x7b], cl; push qword ptr [rdi + rax - 0x75]; cld; sub eax, 4; ret; 
0x000000000044beef: add byte ptr [rax - 0x7b], cl; push qword ptr [rdi + rax - 0x75]; cld; sub eax, 4; ret; 
0x000000000042e7af: add byte ptr [rax - 0x7b], cl; push qword ptr [rsp + rax + 0x48]; mov edi, dword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x000000000044a283: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a2c6: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000045cd77: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x26bfc; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccba: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x26cb9; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x27f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af9c: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x282d7; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b048: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x2892b; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x28b22; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a34d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x28f26; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x2c810; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427261: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bc92; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427232: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bcc1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bf82; mov edi, dword ptr [rdx]; call rax; 
0x000000000042429d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5e8d6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424264: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5ec8f; mov edi, dword ptr [rdx]; call rax; 
0x000000000042422e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f045; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f31d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042430f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f664; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d74e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65b25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5be: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65cb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d44e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65e25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2ce: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65fa5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b81d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x68156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e5: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6818e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b77e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x681f5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b04d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x68926; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b015: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6895e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afae: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x689c5; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f8f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6a9e4; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f28: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa4b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef0: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ebc: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x000000000041806d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab06; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e18: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab5b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418de9: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab8a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d4c: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ac27; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180cc: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b527; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181db: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b798; mov edi, dword ptr [rdx]; call rax; 
0x000000000041812b: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b848; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dbe: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6bf35; mov edi, dword ptr [rdx]; call rax; 
0x000000000041150c: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x72467; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x7249f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041146d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x72506; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032e9: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x80a0a; mov edi, dword ptr [rdx]; call rax; 
0x000000000040329f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x80a54; mov edi, dword ptr [rdx]; call rax; 
0x0000000000447d26: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x000000000044baff: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x0000000000452af4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x311ff; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c199: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57b5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c109: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57bea; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c079: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57c7a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a62a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x596c9; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5df: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59714; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d99: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59f5a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d09: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59fea; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c79: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5a07a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273ce: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bb25; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427295: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bc5e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427402: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5be71; mov edi, dword ptr [rdx]; call rax; 
0x000000000042738a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bee9; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5c23c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c6b: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5c288; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f752; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424559: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f7aa; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f820; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423766: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6058d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004236b6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6063d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423606: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x606ed; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423286: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60a6d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231d6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60b1d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423126: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60bcd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fc6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60d2d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f16: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60ddd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e66: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60e8d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042298f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61364; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422961: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61392; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422791: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61562; mov edi, dword ptr [rdx]; call rax; 
0x000000000042262f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x616c4; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61720; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422523: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x617d0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422496: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6185d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422437: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x618bc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223b7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6193c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422357: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6199c; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222d7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61a1c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61f3d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d1d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61fd6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c12: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x620e1; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bb9: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6213a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x621ff; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a86: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6226d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a2d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x622c6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219f8: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x622fb; mov edi, dword ptr [rdx]; call rax; 
0x000000000042199d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62356; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421964: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6238f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421907: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x623ec; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218bd: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62436; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421854: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6249f; mov edi, dword ptr [rdx]; call rax; 
0x000000000042180d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x624e6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217a7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6254c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421752: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x625a1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216f7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x625fc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216ac: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62647; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421556: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6279d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214b8: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6283b; mov edi, dword ptr [rdx]; call rax; 
0x000000000042145d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62896; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421306: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x629ed; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421268: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62a8b; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211fd: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62af6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211ad: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62b46; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421148: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62bab; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421115: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62bde; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210b7: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c3c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421058: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c9b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421025: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62cce; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420576: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6377d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042041e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x638d5; mov edi, dword ptr [rdx]; call rax; 
0x000000000042036d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63986; mov edi, dword ptr [rdx]; call rax; 
0x000000000042022d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63ac6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420192: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63b61; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63c31; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420028: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63ccb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f13e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64bb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0fd: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64bf6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0cc: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64c27; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f077: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64c7c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee2c: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64ec7; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65010; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65041; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec66: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6508d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe0: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65113; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65141; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb66: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6518d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6520d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea76: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6527d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea02: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x652f1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e989: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6536a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65412; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e68e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65665; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d85e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65695; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5ee: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65705; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e56e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65785; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4ee: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65805; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e47f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65874; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e38b: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65968; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2db: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65a18; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d81e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65a55; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65b41; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e12e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65bc5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e022: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65cd1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65e30; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd97: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65f5c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6602d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc83: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66070; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6611d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db98: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6615b; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d971: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66382; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d650: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x666a3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d604: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x666ef; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d50e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x667e5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e0: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66813; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d360: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66993; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d314: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x669df; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d210: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66ae3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66b2f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cefd: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66df6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd99: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66f5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6701f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc63: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67090; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb9d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb4d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x671a6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cafd: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x671f6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041caba: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67239; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67310; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c95d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67396; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c63f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x676b4; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c54b: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x677a8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3ae: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x677b5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c00e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67ce5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf82: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67d71; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf25: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67dce; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed1: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67e22; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be85: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67e6e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be2a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67ec9; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd9a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67f59; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd0e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67fe5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcbe: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x68035; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc6c: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x68087; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc2b: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x680c8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa16: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6814d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a5: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x681be; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a972: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69391; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a948: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x693cb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a916: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x693fd; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8df: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69414; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e0e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6ad55; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418207: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b3ec; mov edi, dword ptr [rdx]; call rax; 
0x000000000041809c: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b557; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180fb: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b878; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418179: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bb7a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb5: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6be4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d66: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bf8d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415344: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6e9af; mov edi, dword ptr [rdx]; call rax; 
0x00000000004152a6: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6ea4d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004050d5: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x7ec4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c3f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx - 0x75], 0x3d; in eax, 0x12; or byte ptr [rax], al; call rax; 
0x0000000000414e81: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx - 0x75], 0x3d; ret; 
0x0000000000401bf8: add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rcx - 0x75], 0x3c; and eax, 0x482f00; call rax; 
0x000000000040676f: add byte ptr [rax - 0x7c], al; div byte ptr [rsp + rax + 0x48]; mov eax, dword ptr [rdi]; ret; 
0x000000000042fcc2: add byte ptr [rax - 0x7d], cl; call 0x649044cb; and al, 8; ret; 
0x0000000000434269: add byte ptr [rax - 0x7d], cl; call 0x64908a72; and al, 8; ret; 
0x0000000000434289: add byte ptr [rax - 0x7d], cl; call 0x64908a92; and al, 8; ret; 
0x00000000004151de: add byte ptr [rax - 0x7d], cl; cmp al, byte ptr [rax]; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x000000000041520e: add byte ptr [rax - 0x7d], cl; cmp al, byte ptr [rax]; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x000000000041523e: add byte ptr [rax - 0x7d], cl; cmp al, byte ptr [rax]; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415276: add byte ptr [rax - 0x7d], cl; cmp al, byte ptr [rax]; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000417f3b: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000418cba: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x000000000045051a: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x5052f; mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x0000000000450587: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x5059c; mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x0000000000453169: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453331: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x53348; mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000045339b: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x00000000004030db: add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; jne 0x30e5; xor eax, eax; ret; 
0x000000000041aa3a: add byte ptr [rax - 0x7d], cl; cmp eax, 0x6a335; add byte ptr [rsi + rax - 1], dh; adc eax, 0x6a32d; lea rsp, [rsp + 8]; ret; 
0x000000000041355f: add byte ptr [rax - 0x7d], cl; jg 0x13574; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x000000000041385f: add byte ptr [rax - 0x7d], cl; jg 0x13874; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x000000000041135c: add byte ptr [rax - 0x7d], cl; mov byte ptr [rdx], 0x48; cmp eax, edx; jg 0x11310; ret; 
0x00000000004072f7: add byte ptr [rax - 0x7d], cl; ret 0x4001; 
0x000000000042b9b7: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042ba93: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000431217: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000044a067: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000045999a: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004020ef: add byte ptr [rax - 0x7d], cl; ret 0x4c40; 
0x0000000000452acb: add byte ptr [rax - 0x7d], cl; ret 0x4d08; 
0x000000000040f92f: add byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x00000000004032bb: add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x0000000000403305: add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x0000000000417dda: add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x0000000000404a6f: add byte ptr [rax - 0x7d], cl; ret 0x8901; 
0x0000000000404aaf: add byte ptr [rax - 0x7d], cl; ret 0x8901; 
0x00000000004030ef: add byte ptr [rax - 0x7d], cl; ret 0x8a01; 
0x000000000042bacc: add byte ptr [rax - 0x7d], cl; ret 0xc601; 
0x0000000000412e2f: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000041707f: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000041707e: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000041787f: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000417c26: add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004181f7: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000418453: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000418bea: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000418c27: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000418c41: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000418c67: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000041b3f3: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042e8c2: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042e907: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042fbc7: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045bd3a: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045bd77: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045bd91: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045bdb7: add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004365fa: add byte ptr [rax - 0x7d], cl; rol byte ptr [rcx], 1; lea rsp, [rsp + 8]; ret; 
0x00000000004023bf: add byte ptr [rax - 0x7d], cl; rol dword ptr [rax + 0x4c], 0xf; ret; 
0x000000000041d837: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000041d877: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000041b3c7: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; mov dword ptr [rax], 1; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x000000000041a9be: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; mov dword ptr [rax], ebx; pop rbx; ret; 
0x0000000000417e27: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000042257f: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; cmp dword ptr [rax], 0x850f0000; ret; 
0x000000000041535d: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041dc9c: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041ddb0: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000042253c: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x0000000000422648: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041cc7c: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x6eb0067; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041bcd7: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041bd27: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041beea: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x00000000004216c5: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480064; and al, 0x10; pop rbx; ret; 
0x0000000000421476: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480065; and al, 0x10; pop rbx; ret; 
0x0000000000406839: add byte ptr [rax - 0x7eb80000], al; out 0xff, al; jg 0x6843; add byte ptr [rax + 9], cl; mov word ptr [rax + 8], dx; ret; 
0x000000000040683c: add byte ptr [rax - 0x7f], cl; out 0xff, al; jg 0x6843; add byte ptr [rax + 9], cl; mov word ptr [rax + 8], dx; ret; 
0x0000000000419dbe: add byte ptr [rax - 0x7f], cl; ret 0xc0; 
0x0000000000413b7f: add byte ptr [rax - 0x7fff0001], bh; ret; 
0x000000000045510f: add byte ptr [rax - 1], bh; ret; 
0x00000000004551df: add byte ptr [rax - 1], bh; ret; 
0x000000000040a53a: add byte ptr [rax - 9], cl; dec byte ptr [rax - 0x7d]; ret 0xf30; 
0x0000000000444163: add byte ptr [rax - 9], cl; stc; test rdx, rdx; jne 0x4416f; mov al, 1; ret; 
0x00000000004295fa: add byte ptr [rax], 0; add al, ch; sub eax, 0x89000002; ret; 
0x000000000043b748: add byte ptr [rax], 0; add byte ptr [rax + 0x63], cl; ret; 
0x000000000043448e: add byte ptr [rax], 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044824d: add byte ptr [rax], 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000449d24: add byte ptr [rax], 0; add byte ptr [rax - 0x73], cl; jl 0x49d50; or byte ptr [rax - 0x73], cl; add eax, 0x3a02c; call qword ptr [rax + 0x10]; 
0x000000000043a5bb: add byte ptr [rax], 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a5ba: add byte ptr [rax], 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042d0c8: add byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d447: add byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d507: add byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045887f: add byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459e9f: add byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045b831: add byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040683a: add byte ptr [rax], 0; and rsi, 0x7fff; or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x00000000004031a9: add byte ptr [rax], 0; sete al; ret; 
0x00000000004577b9: add byte ptr [rax], 0; sete al; ret; 
0x0000000000406d2d: add byte ptr [rax], 0x4c; mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403188: add byte ptr [rax], ah; add byte ptr [rax], al; sete al; ret; 
0x0000000000457798: add byte ptr [rax], ah; add byte ptr [rax], al; sete al; ret; 
0x0000000000430344: add byte ptr [rax], al; add al, ch; adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430438: add byte ptr [rax], al; add al, ch; adc byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041a6c8: add byte ptr [rax], al; add al, ch; adc byte ptr [rsi + rdi*8 - 1], bh; pop rbx; ret; 
0x000000000042ef67: add byte ptr [rax], al; add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004300c7: add byte ptr [rax], al; add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004301a7: add byte ptr [rax], al; add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434597: add byte ptr [rax], al; add al, ch; adc dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045ca55: add byte ptr [rax], al; add al, ch; adc dword ptr [rdx + rdi*8 - 1], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000045ca83: add byte ptr [rax], al; add al, ch; adc eax, 0x48fffa54; lea esp, [rsp + 8]; ret; 
0x0000000000427a48: add byte ptr [rax], al; add al, ch; add byte ptr [rcx], al; add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000427a68: add byte ptr [rax], al; add al, ch; and byte ptr [rax], al; add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045c0f8: add byte ptr [rax], al; add al, ch; and byte ptr [rsi - 4], cl; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576b6: add byte ptr [rax], al; add al, ch; and ch, byte ptr [rax - 0x72b70006]; and al, 8; ret; 
0x0000000000434f33: add byte ptr [rax], al; add al, ch; and eax, 0x48fffffd; lea esp, [rsp + 8]; ret; 
0x000000000043b250: add byte ptr [rax], al; add al, ch; call 0x4903af73; lea esp, [rsp + 8]; ret; 
0x000000000045c970: add byte ptr [rax], al; add al, ch; call 0x4905c3ce; lea esp, [rsp + 8]; ret; 
0x00000000004574a0: add byte ptr [rax], al; add al, ch; clc; test eax, 0x8d48fffa; and al, 8; ret; 
0x000000000045749f: add byte ptr [rax], al; add al, ch; clc; test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000423ef1: add byte ptr [rax], al; add al, ch; cmc; std; inc dword ptr [rbx + 0x634801eb]; ret; 
0x000000000040a1a0: add byte ptr [rax], al; add al, ch; cmp ah, ah; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004034f8: add byte ptr [rax], al; add al, ch; cmp bh, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c84a: add byte ptr [rax], al; add al, ch; ficom word ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb7d: add byte ptr [rax], al; add al, ch; fist dword ptr [rdx - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b5f: add byte ptr [rax], al; add al, ch; fld dword ptr [rbp - 0x72b70004]; and al, 8; ret; 
0x000000000045c8ed: add byte ptr [rax], al; add al, ch; imul edx, dword ptr [rbp - 6], -1; lea rsp, [rsp + 8]; ret; 
0x000000000041770f: add byte ptr [rax], al; add al, ch; imul esi, edi, 0x8948ffff; ret; 
0x0000000000426e94: add byte ptr [rax], al; add al, ch; in al, 0x49; add eax, dword ptr [rax]; lea rsp, [rsp + 0x88]; ret; 
0x0000000000438bab: add byte ptr [rax], al; add al, ch; insd dword ptr [rdi], dx; ret 0xfffd; 
0x0000000000409c09: add byte ptr [rax], al; add al, ch; lahf; fdiv st(7), st(0); jmp qword ptr [rsi - 0x7f]; 
0x0000000000408b8f: add byte ptr [rax], al; add al, ch; leave; test al, 0xff; jmp qword ptr [rsi + 0x41]; 
0x000000000045c9cf: add byte ptr [rax], al; add al, ch; mov dword ptr [rbp - 6], edx; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004147f0: add byte ptr [rax], al; add al, ch; mov eax, 0x4800003d; lea esp, [rsp + 8]; ret; 
0x00000000004574e0: add byte ptr [rax], al; add al, ch; mov eax, 0x48fffaa9; lea esp, [rsp + 8]; ret; 
0x0000000000455b10: add byte ptr [rax], al; add al, ch; mov eax, 0x48fffac4; lea esp, [rsp + 8]; ret; 
0x0000000000455b0f: add byte ptr [rax], al; add al, ch; mov eax, 0x48fffac4; lea esp, [rsp + 8]; ret; 
0x000000000045cb9d: add byte ptr [rax], al; add al, ch; mov ebx, 0x48fffa52; lea esp, [rsp + 8]; ret; 
0x000000000045759d: add byte ptr [rax], al; add al, ch; mov ebx, 0x48fffaa8; lea esp, [rsp + 8]; ret; 
0x000000000040309d: add byte ptr [rax], al; add al, ch; mov ebx, 0x48ffffed; lea esp, [rsp + 8]; ret; 
0x0000000000457559: add byte ptr [rax], al; add al, ch; mov edi, 0x48fffaa9; lea esp, [rsp + 8]; ret; 
0x0000000000403019: add byte ptr [rax], al; add al, ch; mov edi, 0x48ffffee; lea esp, [rsp + 8]; ret; 
0x0000000000402e1e: add byte ptr [rax], al; add al, ch; mov edx, 0x48fffff0; lea esp, [rsp + 8]; ret; 
0x000000000045c8cd: add byte ptr [rax], al; add al, ch; mov edx, dword ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045736a: add byte ptr [rax], al; add al, ch; mov esi, 0x48fffaaa; lea esp, [rsp + 8]; ret; 
0x000000000040511d: add byte ptr [rax], al; add al, ch; mov esi, dword ptr [rcx + rax]; add bl, ch; cmp dh, bh; ret; 
0x0000000000456e90: add byte ptr [rax], al; add al, ch; or byte ptr [rax - 0x72b70006], dh; and al, 8; ret; 
0x0000000000402a89: add byte ptr [rax], al; add al, ch; pmuludq mm7, mm7; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000430ed0: add byte ptr [rax], al; add al, ch; pop rax; or eax, 0x8d48fffe; and al, 0x18; ret; 
0x0000000000453206: add byte ptr [rax], al; add al, ch; pop rdi; cld; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000401965: add byte ptr [rax], al; add al, ch; push rbx; ret 1; 
0x0000000000454fa2: add byte ptr [rax], al; add al, ch; push rsi; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000045c827: add byte ptr [rax], al; add al, ch; rcl dword ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043ad46: add byte ptr [rax], al; add al, ch; ret 0xfc8f; 
0x00000000004317b6: add byte ptr [rax], al; add al, ch; ret 0xfe6e; 
0x000000000040d0a6: add byte ptr [rax], al; add al, ch; ret 0xfff3; 
0x0000000000426096: add byte ptr [rax], al; add al, ch; ret 0xfffa; 
0x0000000000416cb5: add byte ptr [rax], al; add al, ch; ret; 
0x00000000004386e5: add byte ptr [rax], al; add al, ch; ret; 
0x000000000043ac85: add byte ptr [rax], al; add al, ch; ret; 
0x0000000000450625: add byte ptr [rax], al; add al, ch; ret; 
0x000000000045b0a5: add byte ptr [rax], al; add al, ch; ret; 
0x0000000000416d45: add byte ptr [rax], al; add al, ch; ror dword ptr [rdx - 0x76b70001], cl; ret; 
0x0000000000407687: add byte ptr [rax], al; add al, ch; sar dword ptr [rbp - 0x72b70001], 1; and al, 8; ret; 
0x000000000040cb65: add byte ptr [rax], al; add al, ch; sar dword ptr [rcx - 0x76b80000], cl; in al, dx; pop rbp; ret; 
0x0000000000434fb7: add byte ptr [rax], al; add al, ch; sar ebp, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457480: add byte ptr [rax], al; add al, ch; sbb byte ptr [rdx - 0x72b70006], ch; and al, 8; ret; 
0x000000000045747f: add byte ptr [rax], al; add al, ch; sbb byte ptr [rdx - 0x72b70006], ch; and al, 8; ret; 
0x0000000000456e3f: add byte ptr [rax], al; add al, ch; sbb dword ptr [rax - 0x72b70006], esi; and al, 8; ret; 
0x000000000045757f: add byte ptr [rax], al; add al, ch; sbb dword ptr [rcx - 0x72b70006], ebp; and al, 8; ret; 
0x000000000045743d: add byte ptr [rax], al; add al, ch; sbb ebp, dword ptr [rdx - 0x72b70006]; and al, 8; ret; 
0x000000000045cb3d: add byte ptr [rax], al; add al, ch; sbb edx, dword ptr [rbx - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457206: add byte ptr [rax], al; add al, ch; shr byte ptr [rdx + rdi*8 + 0x648d48ff], cl; and al, 8; ret; 
0x0000000000457227: add byte ptr [rax], al; add al, ch; shr dword ptr [rbx - 0x72b70006], 1; and al, 8; ret; 
0x00000000004573d7: add byte ptr [rax], al; add al, ch; shr dword ptr [rdx - 0x72b70006], 0x64; and al, 8; ret; 
0x0000000000457327: add byte ptr [rax], al; add al, ch; shr dword ptr [rdx - 0x72b70006], 1; and al, 8; ret; 
0x00000000004017bb: add byte ptr [rax], al; add al, ch; std; ret; 
0x0000000000441c50: add byte ptr [rax], al; add al, ch; sub byte ptr [rsi], dl; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000441c4f: add byte ptr [rax], al; add al, ch; sub byte ptr [rsi], dl; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004295fb: add byte ptr [rax], al; add al, ch; sub eax, 0x89000002; ret; 
0x0000000000402e77: add byte ptr [rax], al; add al, ch; sub edi, 0x8d48ffff; and al, 8; ret; 
0x0000000000435320: add byte ptr [rax], al; add al, ch; test al, 0x7d; std; jmp qword ptr [rsi - 0x75]; 
0x0000000000457713: add byte ptr [rax], al; add al, ch; test dword ptr [rdi - 0x72b70006], esp; and al, 8; ret; 
0x0000000000417d41: add byte ptr [rax], al; add al, ch; test dword ptr [rdi], 0x89480000; in al, dx; pop rbp; ret; 
0x00000000004302b1: add byte ptr [rax], al; add al, ch; test dword ptr [rdx], 0x648d4800; and al, 8; ret; 
0x00000000004183d3: add byte ptr [rax], al; add al, ch; vpaddd xmm7, xmm8, xmm7; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000040181d: add byte ptr [rax], al; add al, ch; wait; ret; 
0x00000000004574bd: add byte ptr [rax], al; add al, ch; wait; test eax, 0x8d48fffa; and al, 8; ret; 
0x00000000004574bc: add byte ptr [rax], al; add al, ch; wait; test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000457507: add byte ptr [rax], al; add al, ch; xchg ecx, eax; test eax, 0x8d48fffa; and al, 8; ret; 
0x00000000004018e1: add byte ptr [rax], al; add al, ch; xlatb; ret 1; 
0x000000000045c8a6: add byte ptr [rax], al; add al, ch; xor dl, byte ptr [rsi - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000406ae8: add byte ptr [rax], al; add al, dh; jg 0x6b36; and eax, edx; shr rax, 0x34; ret; 
0x00000000004166b7: add byte ptr [rax], al; add bh, bh; adc eax, 0x6d998; lea rsp, [rsp + 8]; ret; 
0x000000000041667f: add byte ptr [rax], al; add bh, bh; adc eax, 0x6d9d0; lea rsp, [rsp + 8]; ret; 
0x0000000000416633: add byte ptr [rax], al; add bh, bh; adc eax, 0x6da1c; lea rsp, [rsp + 8]; ret; 
0x00000000004165e3: add byte ptr [rax], al; add bh, bh; adc eax, 0x6da6c; lea rsp, [rsp + 8]; ret; 
0x0000000000416137: add byte ptr [rax], al; add bh, bh; adc eax, 0x6df28; lea rsp, [rsp + 8]; ret; 
0x0000000000416117: add byte ptr [rax], al; add bh, bh; adc eax, 0x6df48; lea rsp, [rsp + 8]; ret; 
0x00000000004160f7: add byte ptr [rax], al; add bh, bh; adc eax, 0x6df68; lea rsp, [rsp + 8]; ret; 
0x00000000004160d7: add byte ptr [rax], al; add bh, bh; adc eax, 0x6df88; lea rsp, [rsp + 8]; ret; 
0x00000000004160b7: add byte ptr [rax], al; add bh, bh; adc eax, 0x6dfa8; lea rsp, [rsp + 8]; ret; 
0x00000000004155c7: add byte ptr [rax], al; add bh, bh; adc eax, 0x6ea10; lea rsp, [rsp + 8]; ret; 
0x0000000000415583: add byte ptr [rax], al; add bh, bh; adc eax, 0x6ea54; lea rsp, [rsp + 8]; ret; 
0x0000000000415533: add byte ptr [rax], al; add bh, bh; adc eax, 0x6eaa4; lea rsp, [rsp + 8]; ret; 
0x0000000000415b62: add byte ptr [rax], al; add bh, dh; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004163a2: add byte ptr [rax], al; add bh, dh; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000436c74: add byte ptr [rax], al; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000433d2d: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; leave; mov eax, ecx; ret; 
0x000000000045ba38: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x48; ret; 
0x0000000000434305: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434345: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434385: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004343c5: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434405: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434445: add byte ptr [rax], al; add bl, ch; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041ad99: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000419282: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000040db2f: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db61: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db7f: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db9f: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbd1: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbef: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a19: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a2f: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419029: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041903f: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b709: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b71f: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b751: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239d9: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239ef: add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000409e40: add byte ptr [rax], al; add byte ptr [rax + 0x1f], bh; sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000043b6a0: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000449ea3: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000044c38b: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000409acc: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0xf48; 
0x00000000004087d6: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409e16: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000044465f: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x1c75; 
0x00000000004087d1: add byte ptr [rax], al; add byte ptr [rax + 0x3f], bh; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e11: add byte ptr [rax], al; add byte ptr [rax + 0x3f], bh; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004078d6: add byte ptr [rax], al; add byte ptr [rax + 0x48f90948], al; mov dword ptr [rsi], ecx; shr dword ptr [rax], 1; ret; 
0x000000000044f58d: add byte ptr [rax], al; add byte ptr [rax + 0x4b1], bh; ret; 
0x000000000044f0ed: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x0000000000403d85: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000043b749: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000431edd: add byte ptr [rax], al; add byte ptr [rax + 0xa], bh; ret; 
0x0000000000404dfd: add byte ptr [rax], al; add byte ptr [rax + 0xf], al; mov dh, 0xc7; shr eax, 4; and eax, 0xff; ret; 
0x000000000041a88d: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004322fd: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004324ed: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000407019: add byte ptr [rax], al; add byte ptr [rax + 1], cl; iretd; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004326dd: add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x00000000004328cd: add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000043166d: add byte ptr [rax], al; add byte ptr [rax + 4], bh; ret; 
0x0000000000431aad: add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000432e7d: add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043305d: add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043326d: add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043344d: add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000040abf4: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000043ac79: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000043ac9a: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000040b471: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000040b541: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000406de1: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; out 0x17, al; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406b66: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; out 0x3f, al; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000402665: add byte ptr [rax], al; add byte ptr [rax - 0x6e], cl; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026d7: add byte ptr [rax], al; add byte ptr [rax - 0x6e], cl; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000044a1f7: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc eax, 0x1714f; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab7: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc eax, 0x2d88f; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x00000000004385ea: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc eax, 0x3959c; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dcf: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc eax, 0x4ba97; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042fdad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add dword ptr [rax - 0x77], ecx; ret 0x2948; 
0x000000000042d83d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x339c9; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d82d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x339d9; movsd xmm0, qword ptr [rax]; ret; 
0x000000000044a297: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x39abf; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448557: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x3b7ff; call qword ptr [rax + 0x20]; 
0x0000000000448537: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x3b81f; call qword ptr [rax + 0x20]; 
0x0000000000448537: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x3b81f; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000433973: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x42533; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433953: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x42553; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000423bed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x60259; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x000000000041ee8a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x64ecc; call qword ptr [rax]; 
0x000000000040e632: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x75724; call qword ptr [rax]; 
0x000000000040e50e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x75848; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040104d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x819a9; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x0000000000423e9e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004546d0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000446d29: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x00000000004115bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412efd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x00000000004177ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x000000000041765d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab5d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041835d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x000000000045681d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045689d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041909d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041915d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x000000000041918d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b5cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x000000000045335d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b85d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c24d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c20d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x0000000000421fbd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c10d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042201d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c29d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004034bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x000000000040498d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000428e5d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x000000000042994d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x000000000045604d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f7d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x000000000042b08d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x000000000042bd5d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x00000000004588ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x000000000041900d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x000000000042eded: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042e5dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x00000000004279ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043327d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043306d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x000000000043345d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434e9d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000432a9d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x000000000042edad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x000000000043536d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000043737d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x00000000004316fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431fed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431add: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043169d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043363d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043374d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043367d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x00000000004336fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043378d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043381d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dacd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x0000000000427a2d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000404f6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x000000000045819d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x000000000045a22d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b83d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x000000000043207d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x000000000043210d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000431d4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x000000000043190d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x000000000042a58d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba1d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f11d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b1d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423afd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423add: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423abd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a7d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a5d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a1d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x00000000004239fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x000000000041921d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x00000000004191fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x000000000041913d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x000000000041911d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x00000000004190fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b65d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b58d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af2d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aecd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aead: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae2d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad2d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041aced: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041accd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac2d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abcd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x000000000041685d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041683d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x000000000041681d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041658d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x00000000004164ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041648d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x000000000041646d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041634d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041632d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x000000000041630d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x000000000041622d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x000000000041614d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dcd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ded: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c2d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415acd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041579d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x000000000041577d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x000000000041575d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x000000000041563d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x000000000041561d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x00000000004155fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041547d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x000000000041549d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x00000000004154fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x00000000004484cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x000000000043b8dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043445d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x000000000043441d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x000000000043439d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x000000000043435d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x000000000043431d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x000000000043429d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x0000000000412f3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x000000000044854d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x000000000044852d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x000000000044850d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x000000000040de1e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000040e764: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000041972e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000420a9e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000420b3a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042db3e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042f294: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004311c3: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000044d0be: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000459f49: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004033a0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000405086: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004087b5: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040e51b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040e6fb: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040f127: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040feaf: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040ff9f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041173a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414813: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004150e0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415a1d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041625d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000418ae9: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aa79: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aaaa: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041aada: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab0b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab29: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b174: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bcde: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bd2e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bef1: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000424d40: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000424ece: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000425bb5: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000429967: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042bd77: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e3ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e40a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e59a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042ef6c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042f0d9: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004300cc: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004301ac: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430349: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043043d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430f99: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004322ec: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043448f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043459c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000434880: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000436fae: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004372ee: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043732e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043736e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438f0e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000439a9e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a5c0: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a7b7: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a81b: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043b42a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043f8f2: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000443372: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044752e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000447859: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000447879: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044824e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000449c1a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a21f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a23f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a261: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a2a4: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c0fa: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c69e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c927: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f47f: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004512f5: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452b4e: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452e92: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000453f6a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000459a50: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000459db5: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045bc39: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045cad9: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000407098: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp al, 8; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041a03a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0x6ab4c; call 0x1ad70; pop rbx; ret; 
0x0000000000449d25: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; jl 0x49d50; or byte ptr [rax - 0x73], cl; add eax, 0x3a02c; call qword ptr [rax + 0x10]; 
0x00000000004226ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xchg dword ptr [rax + 2], esi; add byte ptr [rax], al; ret; 
0x00000000004239cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x46319; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a0d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor eax, 0x6d559; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041961d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [r8 - 0x77], r9b; ret 0x8348; 
0x0000000000401fbd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add al, 0x24; ret; 
0x0000000000423b5d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x461e9; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x00000000004094d1: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; call 0xfffffffff0562024; mov rsp, rbp; pop rbp; ret; 
0x0000000000415005: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; cmp edi, dword ptr [rsi + 1]; call 0x2950; pop rbx; ret; 
0x0000000000418735: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; jne 0x18724; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x0000000000413c1d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; pop r8; ret; 
0x00000000004144ed: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push r8; ret; 
0x000000000040457d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; and eax, 1; ret; 
0x000000000040458d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; and eax, 1; ret; 
0x000000000040277d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; bswap rax; ret; 
0x000000000040278d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; bswap rax; ret; 
0x0000000000432cfd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432edd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332cd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432dad: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f8d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x000000000043337d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x00000000004045ad: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; imul rax, rdi; ret; 
0x00000000004045bd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; imul rax, rdi; ret; 
0x0000000000426b3d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040519d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051cd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax], esi; ret; 
0x000000000040492d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000040493d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a0d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a1d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f7d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f8d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041395d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413ead: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413ebd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413f2d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041466d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000426b2d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000040689f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fild word ptr [rax + 0x30]; imul al; ret; 
0x000000000040cc0c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; ret 0xc148; 
0x000000000042e642: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042eba3: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042f87f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430619: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004306e1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430716: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004307cf: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430af1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430c2f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000436b3d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000436bcd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000439792: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out 0xe8, al; adc esi, dword ptr [rax - 0x72b70001]; and al, 8; ret; 
0x00000000004546c8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; out 0xe8, eax; or eax, 0x48000000; lea esp, [rsp + 0x18]; ret; 
0x000000000042a83c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x00000000004192b7: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000040af64: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040c7fa: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044602c: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040270d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; sal al, 1; cmpxchg qword ptr [rdi], rsi; ret; 
0x000000000040268d: add byte ptr [rax], al; add byte ptr [rax - 0x79], cl; div eax; xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x00000000004026fd: add byte ptr [rax], al; add byte ptr [rax - 0x79], cl; div eax; xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x00000000004479b4: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + 8]; xor eax, eax; ret; 
0x000000000040d88d: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x000000000041156d: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411add: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 8]; ret; 
0x0000000000411abd: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rcx + rcx + 0x48]; mov eax, dword ptr [rdi - 8]; add rax, 1; ret; 
0x00000000004480dd: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rdi + rax - 0x75]; cld; sub eax, 4; ret; 
0x000000000044beed: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rdi + rax - 0x75]; cld; sub eax, 4; ret; 
0x000000000044a281: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a2c4: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000447d24: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x000000000044bafd: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x0000000000401bf6: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rcx - 0x75], 0x3c; and eax, 0x482f00; call rax; 
0x000000000040676d: add byte ptr [rax], al; add byte ptr [rax - 0x7c], al; div byte ptr [rsp + rax + 0x48]; mov eax, dword ptr [rdi]; ret; 
0x000000000044a065: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004020ed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4c40; 
0x00000000004020ec: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4c40; 
0x0000000000404aad: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x8901; 
0x0000000000418c65: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042e905: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045bdb5: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000419dbc: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xc0; 
0x0000000000413b7d: add byte ptr [rax], al; add byte ptr [rax - 0x7fff0001], bh; ret; 
0x000000000045510d: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x00000000004551dd: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000040a538: add byte ptr [rax], al; add byte ptr [rax - 9], cl; dec byte ptr [rax - 0x7d]; ret 0xf30; 
0x0000000000450b5d: add byte ptr [rax], al; add byte ptr [rax], al; add al, ch; fld dword ptr [rbp - 0x72b70004]; and al, 8; ret; 
0x00000000004078d4: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x48f90948], al; mov dword ptr [rsi], ecx; shr dword ptr [rax], 1; ret; 
0x000000000044f58b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x4b1], bh; ret; 
0x000000000044f0eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x0000000000431edb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0xa], bh; ret; 
0x00000000004322fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004324eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004326db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x00000000004328cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000043166b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 4], bh; ret; 
0x0000000000431aab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000432e7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043305b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043326b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043344b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000042d82b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x339d9; movsd xmm0, qword ptr [rax]; ret; 
0x0000000000423e9c: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004484cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x000000000043b8db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043445b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x000000000043441b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x000000000043439b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x000000000043435b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x000000000043431b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342bb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x000000000043429b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x0000000000412f3b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x00000000004087b3: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004150de: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000424d3e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a5be: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452e90: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000459db3: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004226ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xchg dword ptr [rax + 2], esi; add byte ptr [rax], al; ret; 
0x000000000041961b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [r8 - 0x77], r9b; ret 0x8348; 
0x0000000000401fbb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add al, 0x24; ret; 
0x0000000000423b5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x461e9; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x0000000000413c1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; pop r8; ret; 
0x000000000040457b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; and eax, 1; ret; 
0x000000000040458b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; and eax, 1; ret; 
0x000000000040277b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; bswap rax; ret; 
0x000000000040278b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; bswap rax; ret; 
0x0000000000432cfb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432edb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432dab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x000000000043337b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x00000000004045ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; imul rax, rdi; ret; 
0x00000000004045bb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; imul rax, rdi; ret; 
0x0000000000426b3b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040519b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; mov dword ptr [rax], esi; ret; 
0x000000000040492b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000040493b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a0b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041395b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413eab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413ebb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413f2b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000041466b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000426b2b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000044602a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040d88b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x000000000041156b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411adb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 8]; ret; 
0x000000000044bafb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x0000000000401bf4: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rcx - 0x75], 0x3c; and eax, 0x482f00; call rax; 
0x0000000000401bf3: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rcx - 0x75], 0x3c; and eax, 0x482f00; call rax; 
0x0000000000401bf2: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rcx - 0x75], 0x3c; and eax, 0x482f00; call rax; 
0x000000000040676b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7c], al; div byte ptr [rsp + rax + 0x48]; mov eax, dword ptr [rdi]; ret; 
0x0000000000413b7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7fff0001], bh; ret; 
0x000000000045510b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x00000000004551db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000044f589: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x4b1], bh; ret; 
0x000000000044f0e9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x0000000000431ed9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0xa], bh; ret; 
0x00000000004322f9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004324e9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004326d9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x00000000004328c9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x0000000000431669: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 4], bh; ret; 
0x0000000000431aa9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000432e79: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000433059: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000433269: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000433449: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x000000000043a5bc: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000419619: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc byte ptr [r8 - 0x77], r9b; ret 0x8348; 
0x0000000000401fb9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add al, 0x24; ret; 
0x0000000000413c19: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; pop r8; ret; 
0x0000000000404929: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404939: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a09: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000404a19: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f79: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000406f89: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413959: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413ea9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413eb9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413f29: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000414669: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000413b79: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7fff0001], bh; ret; 
0x0000000000455109: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000044f587: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x4b1], bh; ret; 
0x000000000044f0e7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x0000000000431ed7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0xa], bh; ret; 
0x00000000004322f7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004324e7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004326d7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x00000000004328c7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x0000000000432e77: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000433057: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000433267: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000433447: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 8], bh; ret; 
0x0000000000402726: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000044f038: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea eax, [esi + esi*2]; ret; 
0x0000000000402738: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mfence; ret; 
0x000000000044f588: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x4b1; ret; 
0x0000000000431ed8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xa; ret; 
0x0000000000455108: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004322f8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004324e8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004326d8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x00000000004328c8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x0000000000431668: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 4; ret; 
0x0000000000431aa8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000432e78: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000433058: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000433268: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000433448: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043ceb8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x00000000004403e8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x000000000042d518: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000042d528: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x0000000000404908: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x0000000000404918: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049e8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049f8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x000000000044ec28: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044eeb8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f048: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x0000000000413b88: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x38]; ret; 
0x0000000000413c18: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x58]; ret; 
0x0000000000413748: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; ret; 
0x0000000000401fb8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp]; ret; 
0x0000000000404928: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404938: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a08: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a18: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f78: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f88: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413958: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413ea8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413eb8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413f28: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000414668: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000043b878: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; ret; 
0x000000000043b8a8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; ret; 
0x00000000004048f8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, di; ret; 
0x00000000004049d8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, di; ret; 
0x0000000000402728: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000418c98: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000423918: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423928: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423938: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423948: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423958: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423968: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423978: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423988: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423998: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239a8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239b8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8b8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8c8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000044ce88: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000432b19: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0xf48f207], cl; sub al, al; ret; 
0x0000000000432bd9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0xf48f307], cl; sub al, al; ret; 
0x0000000000406e19: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0xdaf9], cl; jg 0x6e27; ret; 
0x0000000000404569: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x1e083f8], cl; ret; 
0x0000000000403229: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x0000000000457839: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x0000000000404599: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x3850f008], cl; ret; 
0x000000000044f039: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi - 0x73], ah; add al, 0x76; ret; 
0x00000000004048f9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x00000000004049d9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x000000000043235a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp byte ptr [rdi], 0; setne al; ret; 
0x000000000043254a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp byte ptr [rdi], 0; setne al; ret; 
0x0000000000432b0a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000432cea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp dword ptr [rdi], 0; setne al; ret; 
0x00000000004330aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x000000000043349a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x000000000041465a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp rdi, rsi; sete al; ret; 
0x000000000043292a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; cmp word ptr [rdi], 0; setne al; ret; 
0x000000000044eeaa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea eax, [esi + esi*2]; add eax, 2; ret; 
0x000000000044f03a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea eax, [esi + esi*2]; ret; 
0x00000000004226aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0x270]; ret; 
0x000000000042d82a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x339d9]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000043a5bd: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004484ca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x000000000043b8da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043445a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x000000000043441a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x000000000043439a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x000000000043435a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x000000000043431a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342ba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x000000000043429a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x0000000000412f3a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x000000000040271a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lfence; ret; 
0x000000000040273a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mfence; ret; 
0x000000000044f58a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x4b1; ret; 
0x0000000000413b7a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x8000ffff; ret; 
0x0000000000431eda: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xa; ret; 
0x000000000045510a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004551da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004322fa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004324ea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004326da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x00000000004328ca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x000000000043166a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 4; ret; 
0x0000000000431aaa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000432e7a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043305a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043326a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043344a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043ceba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x00000000004403ea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x0000000000406e1a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; and eax, 0x7fffff; ret; 
0x0000000000432b1a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; cvtsi2sd xmm0, rax; ret; 
0x0000000000432bda: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; cvtsi2ss xmm0, rax; ret; 
0x000000000042d51a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000042d52a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000040322a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0x7f; ret; 
0x000000000045783a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0x7f; ret; 
0x000000000040456a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 1; ret; 
0x000000000040275a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000040276a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000040459a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; imul eax, edi; ret; 
0x000000000040490a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x000000000040491a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049ea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049fa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x000000000040269a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edx; lock cmpxchg dword ptr [rdi], esi; ret; 
0x000000000044f0aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edx; shl eax, 1; ret; 
0x000000000044ec2a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044eeba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f04a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f48a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; shl eax, 1; ret; 
0x0000000000413b8a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x38]; ret; 
0x0000000000413c1a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x58]; ret; 
0x000000000041374a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; ret; 
0x0000000000423b5a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x461e9]; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x0000000000401fba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp]; ret; 
0x000000000040457a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; and eax, 1; ret; 
0x000000000040458a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; and eax, 1; ret; 
0x000000000040277a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; bswap rax; ret; 
0x000000000040278a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; bswap rax; ret; 
0x0000000000432cfa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432eda: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332ca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432daa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f8a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x000000000043337a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x00000000004045aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; imul rax, rdi; ret; 
0x00000000004045ba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; imul rax, rdi; ret; 
0x0000000000426b3a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040519a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051ca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax], esi; ret; 
0x000000000040492a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000040493a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a0a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a1a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f7a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f8a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041395a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413eaa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413eba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413f2a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041466a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000040b7fa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; imul rax, rdi; ret; 
0x000000000043b87a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; ret; 
0x000000000043b8aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; ret; 
0x0000000000401faa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsp; ret; 
0x000000000043255a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x000000000043260a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x000000000043274a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004327fa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x000000000043236a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x000000000043241a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x00000000004048fa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, di; ret; 
0x00000000004049da: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, di; ret; 
0x000000000043293a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004329ea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000406b36: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; setne al; ret; 
0x000000000040297a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; push rsi; jmp 0x184a0; ret; 
0x000000000040272a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004033aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000418c9a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000040274a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; sfence; ret; 
0x00000000004237ea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; shr rdi, 0x10; sete al; ret; 
0x000000000040267a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xchg dword ptr [rdi], esi; mov eax, esi; ret; 
0x00000000004026ea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xchg qword ptr [rdi], rsi; mov rax, rsi; ret; 
0x0000000000417bda: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000417bea: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x000000000042391a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042392a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042393a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042394a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042395a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042396a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042397a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042398a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042399a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239aa: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239ba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8ba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8ca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000044ce8a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000423bbb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x00000000004169eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x48], dl; mov ebx, edi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x0000000000432b1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0xf48f207], cl; sub al, al; ret; 
0x0000000000432bdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0xf48f307], cl; sub al, al; ret; 
0x0000000000406e1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0xdaf9], cl; jg 0x6e27; ret; 
0x000000000040456b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x1e083f8], cl; ret; 
0x0000000000403c26: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040322b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x000000000045783b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x000000000040459b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x3850f008], cl; ret; 
0x00000000004031eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004031fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004577fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x000000000045780b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x000000000044eeab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi - 0x73], ah; add al, 0x76; add eax, 2; ret; 
0x000000000044f03b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi - 0x73], ah; add al, 0x76; ret; 
0x00000000004048fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x00000000004049db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x000000000043293b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 7; cvtsi2sd xmm0, eax; ret; 
0x00000000004329eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 7; cvtsi2ss xmm0, eax; ret; 
0x000000000043236b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 7; cvtsi2sd xmm0, eax; ret; 
0x000000000043241b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 7; cvtsi2ss xmm0, eax; ret; 
0x000000000040274b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; clc; ret; 
0x0000000000424ec7: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000045925c: add byte ptr [rax], al; add byte ptr [rax], al; and di, 0xff; cmp di, 0x7f; sete al; ret; 
0x0000000000424ec8: add byte ptr [rax], al; add byte ptr [rax], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000040316c: add byte ptr [rax], al; add byte ptr [rax], al; and edi, 0xf000; cmp edi, 0x4000; sete al; ret; 
0x000000000045777c: add byte ptr [rax], al; add byte ptr [rax], al; and edi, 0xf000; cmp edi, 0x4000; sete al; ret; 
0x0000000000427b9c: add byte ptr [rax], al; add byte ptr [rax], al; and edi, 0xff; bt dword ptr [rsi], edi; setb al; ret; 
0x0000000000450b5e: add byte ptr [rax], al; add byte ptr [rax], al; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x000000000043235c: add byte ptr [rax], al; add byte ptr [rax], al; cmp byte ptr [rdi], 0; setne al; ret; 
0x000000000043254c: add byte ptr [rax], al; add byte ptr [rax], al; cmp byte ptr [rdi], 0; setne al; ret; 
0x0000000000432b0c: add byte ptr [rax], al; add byte ptr [rax], al; cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000432cec: add byte ptr [rax], al; add byte ptr [rax], al; cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000456d81: add byte ptr [rax], al; add byte ptr [rax], al; cmp eax, 0xf; jl 0x56d78; xor eax, eax; ret; 
0x0000000000456c51: add byte ptr [rax], al; add byte ptr [rax], al; cmp eax, 1; jl 0x56c48; xor eax, eax; ret; 
0x00000000004557ad: add byte ptr [rax], al; add byte ptr [rax], al; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x000000000042463c: add byte ptr [rax], al; add byte ptr [rax], al; cmp esi, edi; cmovg eax, edi; cmovle eax, esi; ret; 
0x000000000042462c: add byte ptr [rax], al; add byte ptr [rax], al; cmp esi, edi; cmovl eax, edi; cmovge eax, esi; ret; 
0x0000000000432ecc: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004330ac: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004332bc: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x000000000043349c: add byte ptr [rax], al; add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x000000000041465c: add byte ptr [rax], al; add byte ptr [rax], al; cmp rdi, rsi; sete al; ret; 
0x000000000043273c: add byte ptr [rax], al; add byte ptr [rax], al; cmp word ptr [rdi], 0; setne al; ret; 
0x000000000043292c: add byte ptr [rax], al; add byte ptr [rax], al; cmp word ptr [rdi], 0; setne al; ret; 
0x0000000000423f94: add byte ptr [rax], al; add byte ptr [rax], al; je 0x23fa5; mov rax, qword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000425b44: add byte ptr [rax], al; add byte ptr [rax], al; jmp 0x25b4c; xor al, al; and eax, 0xff; ret; 
0x000000000044eeac: add byte ptr [rax], al; add byte ptr [rax], al; lea eax, [esi + esi*2]; add eax, 2; ret; 
0x000000000044f03c: add byte ptr [rax], al; add byte ptr [rax], al; lea eax, [esi + esi*2]; ret; 
0x00000000004226ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0x270]; ret; 
0x000000000042d83c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x339c9]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d82c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x339d9]; movsd xmm0, qword ptr [rax]; ret; 
0x0000000000423bec: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x60259]; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x000000000040104c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x819a9]; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x00000000004239cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x46319]; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rip + 0x6d559]; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000423e9d: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000420a9d: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b39: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f48: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004087b4: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004150df: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000424d3f: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a5bf: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000452e91: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000459db4: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004115bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412efc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x00000000004177ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x000000000041765c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041835c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x000000000045681c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045689c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041909c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041915c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x000000000041918c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b5cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x000000000041b6dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b85c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c24c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c20c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x0000000000421fbc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c10c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042201c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c29c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004034bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x000000000040498c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000428e5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x000000000042994c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x000000000045604c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f7c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x000000000042b08c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x000000000042bd5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x00000000004588ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x000000000041900c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x000000000042edec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042e5dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x00000000004279ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043327c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043306c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x000000000043345c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434e9c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000432a9c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x000000000042edac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x000000000043536c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000043737c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x00000000004316fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431fec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431adc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043169c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043363c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043374c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043367c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x00000000004336fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043378c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043381c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dacc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x0000000000427a2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000404f6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x000000000045819c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x000000000045a22c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b83c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x000000000043207c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x000000000043210c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000431d4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x000000000043190c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x000000000042a58c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba1c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f11c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b1c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423afc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423adc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423abc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a7c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a1c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x00000000004239fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x000000000041921c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x00000000004191fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x000000000041913c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x000000000041911c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x00000000004190fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b65c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b58c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aecc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041accc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abcc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x000000000041685c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041683c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x000000000041681c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041658c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x00000000004164ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041648c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x000000000041646c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041634c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041632c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x000000000041630c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x000000000041622c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x000000000041614c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dcc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c2c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b0c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415acc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041579c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x000000000041577c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x000000000041563c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x000000000041561c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x00000000004155fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041547c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x000000000041549c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x00000000004154fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x00000000004484cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x000000000043b8dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043445c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x000000000043441c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x000000000043439c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x000000000043435c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x000000000043431c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x000000000043429c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x0000000000412f3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x000000000044854c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x000000000044850c: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x000000000040271c: add byte ptr [rax], al; add byte ptr [rax], al; lfence; ret; 
0x000000000040273c: add byte ptr [rax], al; add byte ptr [rax], al; mfence; ret; 
0x000000000040684c: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rdi + 8]; and ax, 0x8000; setne al; ret; 
0x000000000040794b: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rax], 0; ret; 
0x00000000004192fc: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbx + 0x20], 0; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x0000000000419303: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x000000000044f58c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x4b1; ret; 
0x0000000000413b7c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x8000ffff; ret; 
0x0000000000431edc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xa; ret; 
0x000000000045510c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004551dc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000041a88c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004322fc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004324ec: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004326dc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x00000000004328cc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x000000000043166c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 4; ret; 
0x0000000000431aac: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000432e7c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043305c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043326c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043344c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043cebc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x00000000004403ec: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x000000000040681c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 8]; and eax, 0x7fff; movsxd rax, eax; ret; 
0x0000000000406e1c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; and eax, 0x7fffff; ret; 
0x0000000000432b1c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; cvtsi2sd xmm0, rax; ret; 
0x0000000000432bdc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; cvtsi2ss xmm0, rax; ret; 
0x000000000042d51c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000042d52c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000040322c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0x7f; ret; 
0x000000000045783c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0x7f; ret; 
0x00000000004031ec: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x00000000004031fc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x00000000004577fc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x000000000045780c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x000000000040456c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; and eax, 1; ret; 
0x000000000040275c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000040276c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000040459c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; imul eax, edi; ret; 
0x000000000040490c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x000000000040491c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049ec: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049fc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edi; ret; 
0x000000000040269c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edx; lock cmpxchg dword ptr [rdi], esi; ret; 
0x000000000044f0ac: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, edx; shl eax, 1; ret; 
0x000000000044ec2c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044eebc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f04c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f48c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, esi; shl eax, 1; ret; 
0x000000000041d78f: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000413b8c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x38]; ret; 
0x0000000000413c1c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x58]; ret; 
0x000000000041374c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi]; ret; 
0x0000000000423b5c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x461e9]; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x0000000000401fbc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rsp]; ret; 
0x00000000004181b0: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rbx; call rax; 
0x000000000040457c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; and eax, 1; ret; 
0x000000000040458c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; and eax, 1; ret; 
0x000000000040277c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; bswap rax; ret; 
0x000000000040278c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; bswap rax; ret; 
0x0000000000432cfc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432edc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332cc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432dac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f8c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x000000000043337c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x00000000004045ac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; imul rax, rdi; ret; 
0x00000000004045bc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; imul rax, rdi; ret; 
0x0000000000426b3c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040519c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051cc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax], esi; ret; 
0x000000000040492c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000040493c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a0c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a1c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f7c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f8c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041395c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413eac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413ebc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413f2c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041466c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000426b2c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000040270c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rdx; lock cmpxchg qword ptr [rdi], rsi; ret; 
0x000000000040b7fc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; imul rax, rdi; ret; 
0x000000000043b87c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; ret; 
0x000000000043b8ac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsi; ret; 
0x0000000000401fac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rsp; ret; 
0x000000000043255c: add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x000000000043260c: add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x000000000043274c: add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004327fc: add byte ptr [rax], al; add byte ptr [rax], al; movsx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x000000000043236c: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x000000000043241c: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x00000000004048fc: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, di; ret; 
0x00000000004049dc: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, di; ret; 
0x0000000000404dfc: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, dil; shr eax, 4; and eax, 0xff; ret; 
0x000000000041d7dc: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, word ptr [rdi + 0x374]; ret; 
0x000000000043293c: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004329ec: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000406b38: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; setne al; ret; 
0x00000000004078d5: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax + 9], 0xf9; mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x0000000000403c27: add byte ptr [rax], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004206d6: add byte ptr [rax], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000412ff9: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041930a: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041c50d: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041c572: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000454b73: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000423bbc: add byte ptr [rax], al; add byte ptr [rax], al; push rbx; mov rbx, rdi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x00000000004169ec: add byte ptr [rax], al; add byte ptr [rax], al; push rbx; mov rbx, rdi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x000000000040297c: add byte ptr [rax], al; add byte ptr [rax], al; push rsi; jmp 0x184a0; ret; 
0x000000000040272c: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004033ac: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000407842: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000407916: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000407951: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000417a4e: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000418c9c: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000041d797: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000040274c: add byte ptr [rax], al; add byte ptr [rax], al; sfence; ret; 
0x00000000004237ec: add byte ptr [rax], al; add byte ptr [rax], al; shr rdi, 0x10; sete al; ret; 
0x0000000000401bf5: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x000000000041156c: add byte ptr [rax], al; add byte ptr [rax], al; test rdi, rdi; je 0x1157a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000411adc: add byte ptr [rax], al; add byte ptr [rax], al; test rdi, rdi; je 0x11aea; mov rax, qword ptr [rdi - 8]; ret; 
0x000000000040d88c: add byte ptr [rax], al; add byte ptr [rax], al; test rdi, rdi; je 0xd89a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x00000000004479b3: add byte ptr [rax], al; add byte ptr [rax], al; test rdi, rdi; jne 0x479c4; xor eax, eax; ret; 
0x0000000000447d23: add byte ptr [rax], al; add byte ptr [rax], al; test rdx, rdx; jne 0x47d2f; xor eax, eax; ret; 
0x000000000044bafc: add byte ptr [rax], al; add byte ptr [rax], al; test rdx, rdx; jne 0x4bb08; xor eax, eax; ret; 
0x000000000040676c: add byte ptr [rax], al; add byte ptr [rax], al; test sil, sil; je 0x6779; mov rax, qword ptr [rdi]; ret; 
0x000000000040267c: add byte ptr [rax], al; add byte ptr [rax], al; xchg dword ptr [rdi], esi; mov eax, esi; ret; 
0x00000000004026ec: add byte ptr [rax], al; add byte ptr [rax], al; xchg qword ptr [rdi], rsi; mov rax, rsi; ret; 
0x000000000040268c: add byte ptr [rax], al; add byte ptr [rax], al; xchg rdi, rsi; lock xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x00000000004026fc: add byte ptr [rax], al; add byte ptr [rax], al; xchg rdi, rsi; lock xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x0000000000417bdc: add byte ptr [rax], al; add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000417bec: add byte ptr [rax], al; add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x000000000042391c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042392c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042393c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042394c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042395c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042396c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042397c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042398c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042399c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239ac: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239bc: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8bc: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8cc: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000044ce8c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000401dfd: add byte ptr [rax], al; add byte ptr [rbp + 0x48], dl; mov ebp, esp; lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x000000000043a5b0: add byte ptr [rax], al; add byte ptr [rbp + 0xe], bh; mov rax, qword ptr [rsp]; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041a253: add byte ptr [rax], al; add byte ptr [rbp - 0x28], dh; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2f3: add byte ptr [rax], al; add byte ptr [rbp - 0x28], dh; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000434227: add byte ptr [rax], al; add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434247: add byte ptr [rax], al; add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x0000000000454ac5: add byte ptr [rax], al; add byte ptr [rbx + 0x30101e8], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044d17e: add byte ptr [rax], al; add byte ptr [rbx + 0x48082444], cl; lea esp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000423bbd: add byte ptr [rax], al; add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x00000000004169ed: add byte ptr [rax], al; add byte ptr [rbx + 0x48], dl; mov ebx, edi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x0000000000432b1d: add byte ptr [rax], al; add byte ptr [rbx + 0xf48f207], cl; sub al, al; ret; 
0x0000000000432bdd: add byte ptr [rax], al; add byte ptr [rbx + 0xf48f307], cl; sub al, al; ret; 
0x0000000000423f95: add byte ptr [rax], al; add byte ptr [rbx + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000456d82: add byte ptr [rax], al; add byte ptr [rbx - 0x1183f008], al; xor eax, eax; ret; 
0x0000000000456c52: add byte ptr [rax], al; add byte ptr [rbx - 0x1183fe08], al; xor eax, eax; ret; 
0x00000000004557ae: add byte ptr [rax], al; add byte ptr [rbx - 0x3d83e505], al; pop rbx; ret; 
0x000000000045298f: add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret 0; 
0x0000000000425cf5: add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x0000000000406e1d: add byte ptr [rax], al; add byte ptr [rbx - 0xdaf9], cl; jg 0x6e27; ret; 
0x0000000000404e5d: add byte ptr [rax], al; add byte ptr [rcx + 0x10e0c1f8], cl; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e6d: add byte ptr [rax], al; add byte ptr [rcx + 0x10e0c1f8], cl; shr edi, 0x10; add eax, edi; ret; 
0x000000000040455d: add byte ptr [rax], al; add byte ptr [rcx + 0x1e083f8], cl; ret; 
0x000000000040456d: add byte ptr [rax], al; add byte ptr [rcx + 0x1e083f8], cl; ret; 
0x000000000043c40f: add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004449ac: add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000402cc6: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000403c28: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040de8b: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040df06: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004206d7: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042415d: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042946c: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042b714: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042ce2e: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d0c9: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d448: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d508: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042f2f5: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042f324: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd01: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd40: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd75: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fda4: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004302e7: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004310b7: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044c6fc: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000450404: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004507bf: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004509c7: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004564b0: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000458880: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045924f: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459ea0: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045b832: add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004261c9: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000427f95: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000428db9: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004290e7: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042a1d4: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042afee: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042b315: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000439c70: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000450b20: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000452ddc: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045b739: add byte ptr [rax], al; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000432898: add byte ptr [rax], al; add byte ptr [rcx + 0x66e0d3f1], cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432a88: add byte ptr [rax], al; add byte ptr [rcx + 0x66e0d3f1], cl; and eax, dword ptr [rdi]; setne al; ret; 
0x000000000040322d: add byte ptr [rax], al; add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x000000000045783d: add byte ptr [rax], al; add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x000000000043245b: add byte ptr [rax], al; add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x1788; 
0x000000000043264b: add byte ptr [rax], al; add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x1788; 
0x000000000043283b: add byte ptr [rax], al; add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x8966; 
0x0000000000432a2b: add byte ptr [rax], al; add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x8966; 
0x0000000000433d10: add byte ptr [rax], al; add byte ptr [rcx + rbp - 0x28], al; ret; 
0x000000000040b420: add byte ptr [rax], al; add byte ptr [rcx + rbp - 0x28], cl; ret; 
0x0000000000447d59: add byte ptr [rax], al; add byte ptr [rcx + rbp - 0x3f], cl; mov rax, rcx; ret; 
0x000000000040698a: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c86: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f06: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a03b: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a081: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f04: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444bf7: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c3b: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004178c4: add byte ptr [rax], al; add byte ptr [rcx - 0x1a], 0x7f; or eax, esi; ret; 
0x00000000004178e0: add byte ptr [rax], al; add byte ptr [rcx - 0x1a], 0x7f; or edi, esi; shr edi, 1; xor eax, edi; ret; 
0x000000000040459d: add byte ptr [rax], al; add byte ptr [rcx - 0x3850f008], cl; ret; 
0x00000000004031ed: add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004031fd: add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004577fd: add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x000000000045780d: add byte ptr [rax], al; add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x000000000041952b: add byte ptr [rax], al; add byte ptr [rcx], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427828: add byte ptr [rax], al; add byte ptr [rcx], bh; ret; 
0x00000000004278bd: add byte ptr [rax], al; add byte ptr [rcx], bh; ret; 
0x00000000004080be: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0x8966; 
0x0000000000409af4: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0x8966; 
0x0000000000409c5e: add byte ptr [rax], al; add byte ptr [rcx], ch; ret 0x8966; 
0x00000000004264f3: add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x00000000004265c2: add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x0000000000409e45: add byte ptr [rax], al; add byte ptr [rcx], ch; ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000043f7c2: add byte ptr [rax], al; add byte ptr [rcx], dh; leave; call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x0000000000456e3a: add byte ptr [rax], al; add byte ptr [rdi + 0x82], bh; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e19: add byte ptr [rax], al; add byte ptr [rdi + 0xd], bh; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000403014: add byte ptr [rax], al; add byte ptr [rdi + 0xe], bh; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425606: add byte ptr [rax], al; add byte ptr [rdi + 1], bh; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x000000000044eead: add byte ptr [rax], al; add byte ptr [rdi - 0x73], ah; add al, 0x76; add eax, 2; ret; 
0x000000000044f03d: add byte ptr [rax], al; add byte ptr [rdi - 0x73], ah; add al, 0x76; ret; 
0x000000000041d7dd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x87; je 0x1d7e8; add byte ptr [rax], al; ret; 
0x00000000004048fd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x00000000004049dd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x000000000043293d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 7; cvtsi2sd xmm0, eax; ret; 
0x00000000004329ed: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 7; cvtsi2ss xmm0, eax; ret; 
0x000000000042552b: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xf8; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x000000000043236d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 7; cvtsi2sd xmm0, eax; ret; 
0x000000000043241d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 7; cvtsi2ss xmm0, eax; ret; 
0x000000000040274d: add byte ptr [rax], al; add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; clc; ret; 
0x000000000041a864: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000425dca: add byte ptr [rax], al; add byte ptr [rip + 0xff], ah; lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000424ec9: add byte ptr [rax], al; add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c7: add byte ptr [rax], al; add byte ptr [rsi + 0x5409], bh; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cb27: add byte ptr [rax], al; add byte ptr [rsi + 0xd7b2], bh; call 0x1ca10; pop rbx; ret; 
0x0000000000424332: add byte ptr [rax], al; add byte ptr [rsi + 0xd7b2], bh; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x000000000041cbc7: add byte ptr [rax], al; add byte ptr [rsi + 0xd7b4], bh; call 0x1ca10; pop rbx; ret; 
0x000000000042be70: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; call 0xd400; pop rbx; ret; 
0x0000000000429a54: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; call 0xfb70; pop rbx; ret; 
0x00000000004546c3: add byte ptr [rax], al; add byte ptr [rsi + 1], bh; mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000406fa7: add byte ptr [rax], al; add byte ptr [rsi + 5], bh; mov edx, 0xff; mov byte ptr [rax], dl; ret; 
0x000000000043b528: add byte ptr [rax], al; add byte ptr [rsi + riz + 0x48], dh; mov esi, dword ptr [rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x0000000000404e0d: add byte ptr [rax], al; add byte ptr [rsi - 0x77], ah; clc; and eax, 0xf; ret; 
0x0000000000458e95: add byte ptr [rax], al; add byte ptr [rsi - 0x7f], ah; ret; 
0x0000000000406e0e: add byte ptr [rax], al; add cl, al; out 0x1f, al; or edx, esi; mov dword ptr [rax], edx; ret; 
0x000000000040686f: add byte ptr [rax], al; add cl, al; out 0xf, al; or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x000000000043abe3: add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000401ff7: add byte ptr [rax], al; add dh, dh; ret 0x7407; 
0x000000000041952c: add byte ptr [rax], al; add dword ptr [rax - 0x73], ecx; and al, 8; pop r12; pop rbx; ret; 
0x0000000000459a4b: add byte ptr [rax], al; add dword ptr [rip + 0xff], esp; lea rsp, [rsp + 8]; ret; 
0x000000000043a812: add byte ptr [rax], al; add ebx, ebp; add dh, byte ptr [rax + 0xff2530]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004077d0: add byte ptr [rax], al; add edx, dword ptr [rdi]; add edx, ecx; mov dword ptr [rdi], edx; mov qword ptr [rsi], rax; ret; 
0x000000000040352f: add byte ptr [rax], al; add rdi, rax; and edx, 0xff; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9fb: add byte ptr [rax], al; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040701a: add byte ptr [rax], al; add rdi, rcx; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004072f6: add byte ptr [rax], al; add rdx, 1; cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000045925e: add byte ptr [rax], al; and di, 0xff; cmp di, 0x7f; sete al; ret; 
0x00000000004385e6: add byte ptr [rax], al; and eax, 0xff; lea rdx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dcb: add byte ptr [rax], al; and eax, 0xff; lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000424eca: add byte ptr [rax], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004322e8: add byte ptr [rax], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000417de5: add byte ptr [rax], al; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b8: add byte ptr [rax], al; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000040316e: add byte ptr [rax], al; and edi, 0xf000; cmp edi, 0x4000; sete al; ret; 
0x000000000045777e: add byte ptr [rax], al; and edi, 0xf000; cmp edi, 0x4000; sete al; ret; 
0x0000000000427b9e: add byte ptr [rax], al; and edi, 0xff; bt dword ptr [rsi], edi; setb al; ret; 
0x000000000044bae6: add byte ptr [rax], al; and edx, 0xffff; sub rax, rdx; ret; 
0x0000000000433d0a: add byte ptr [rax], al; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b41a: add byte ptr [rax], al; and r11d, 0xff; sub rax, r11; ret; 
0x000000000043070b: add byte ptr [rax], al; and r8d, 0xff; call 0x30720; mov rsp, rbp; pop rbp; ret; 
0x00000000004307c4: add byte ptr [rax], al; and r8d, 0xff; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c24: add byte ptr [rax], al; and r8d, 0xff; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000447d53: add byte ptr [rax], al; and r8d, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x000000000044bb38: add byte ptr [rax], al; and r8d, 0xffff; sub rcx, r8; mov rax, rcx; ret; 
0x000000000040683b: add byte ptr [rax], al; and rsi, 0x7fff; or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x0000000000449bfb: add byte ptr [rax], al; bt dword ptr [rsi], edi; jae 0x49c05; mov al, 1; ret; 
0x0000000000427ba4: add byte ptr [rax], al; bt dword ptr [rsi], edi; setb al; ret; 
0x0000000000430a51: add byte ptr [rax], al; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ed1: add byte ptr [rax], al; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450b40: add byte ptr [rax], al; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004188ee: add byte ptr [rax], al; call 0x14a20; mov rsi, qword ptr [rax + 8]; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x0000000000414955: add byte ptr [rax], al; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004136bc: add byte ptr [rax], al; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000418fb8: add byte ptr [rax], al; call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x0000000000403c6f: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040cb66: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040dc12: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040ef56: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417cc2: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d02: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d22: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d42: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cd8: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418d20: add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x00000000004147f1: add byte ptr [rax], al; call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x0000000000417ee5: add byte ptr [rax], al; call 0x185b0; pop rbx; ret; 
0x000000000040a1a1: add byte ptr [rax], al; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000414adc: add byte ptr [rax], al; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000418697: add byte ptr [rax], al; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041b076: add byte ptr [rax], al; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041b846: add byte ptr [rax], al; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000414a85: add byte ptr [rax], al; call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x00000000004194b0: add byte ptr [rax], al; call 0x19010; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450b60: add byte ptr [rax], al; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000419587: add byte ptr [rax], al; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x000000000041b3d1: add byte ptr [rax], al; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x000000000045c189: add byte ptr [rax], al; call 0x1c8c0; lea rsp, [rsp + 8]; ret; 
0x000000000041cb2d: add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x000000000041cb7a: add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x000000000041cbcd: add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x0000000000402e78: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc8: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457228: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457248: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457288: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457328: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457348: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045c828: add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402a5b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aab: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b4b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402bab: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402beb: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dcb: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402eeb: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e1b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004570fb: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004572ea: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045736b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045745b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045752b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c80b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c84b: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045cafb: add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b6e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b8e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402bce: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e3e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e5e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402ece: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f0e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f5e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040303e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040305e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040307e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040309e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004030be: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456dfe: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e40: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045730e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045743e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574be: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045759e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045776e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000458a6e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8ce: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8ee: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb3e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb7e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb9e: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cbdc: add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402a8a: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ad4: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b24: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f81: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402fa4: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ff1: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000456e91: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004573d8: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045741f: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457481: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574a1: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574e1: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457508: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457580: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457714: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca84: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045cb23: add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045766a: add byte ptr [rax], al; call 0x1ea0; pop r13; pop r12; pop rbx; ret; 
0x0000000000402e1f: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ea7: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000040301a: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000456e6a: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000457207: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576b7: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576e7: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c874: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c8a7: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c917: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9f4: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca26: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca56: add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045755a: add byte ptr [rax], al; call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x0000000000402f3b: add byte ptr [rax], al; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c971: add byte ptr [rax], al; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c9a3: add byte ptr [rax], al; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c9d0: add byte ptr [rax], al; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000403538: add byte ptr [rax], al; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000455b11: add byte ptr [rax], al; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000424338: add byte ptr [rax], al; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000422009: add byte ptr [rax], al; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000045c0f9: add byte ptr [rax], al; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x00000000004211d8: add byte ptr [rax], al; call 0x20fb0; pop rbx; ret; 
0x0000000000421228: add byte ptr [rax], al; call 0x210a0; pop rbx; ret; 
0x0000000000422697: add byte ptr [rax], al; call 0x21650; jmp 0x226a4; mov byte ptr [rbx + 0x10], 1; pop rbx; ret; 
0x0000000000422329: add byte ptr [rax], al; call 0x21650; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042240c: add byte ptr [rax], al; call 0x21650; pop r13; pop r12; pop rbx; ret; 
0x000000000045c289: add byte ptr [rax], al; call 0x22000; lea rsp, [rsp + 8]; ret; 
0x0000000000403449: add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403469: add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403489: add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004151ba: add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000420d69: add byte ptr [rax], al; call 0x22e0; mov dword ptr [rbx], 0xffffffff; mov dword ptr [rbx + 4], 0xd7b0; pop rbx; ret; 
0x000000000041a6c9: add byte ptr [rax], al; call 0x22e0; pop rbx; ret; 
0x00000000004237d9: add byte ptr [rax], al; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x0000000000423871: add byte ptr [rax], al; call 0x23aa0; lea rsp, [rsp + 8]; ret; 
0x00000000004238b5: add byte ptr [rax], al; call 0x23aa0; lea rsp, [rsp + 8]; ret; 
0x0000000000423905: add byte ptr [rax], al; call 0x23aa0; lea rsp, [rsp + 8]; ret; 
0x00000000004034a9: add byte ptr [rax], al; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x0000000000424205: add byte ptr [rax], al; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x00000000004254a8: add byte ptr [rax], al; call 0x253d0; xor edi, edi; call 0x25410; lea rsp, [rsp + 8]; ret; 
0x000000000042560c: add byte ptr [rax], al; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000426bed: add byte ptr [rax], al; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c2d: add byte ptr [rax], al; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000414e06: add byte ptr [rax], al; call 0x2950; pop r13; pop r12; pop rbx; ret; 
0x000000000041500e: add byte ptr [rax], al; call 0x2950; pop rbx; ret; 
0x000000000045849c: add byte ptr [rax], al; call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004583b8: add byte ptr [rax], al; call 0x2a70; lea rsp, [rsp + 8]; ret; 
0x000000000042439a: add byte ptr [rax], al; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x000000000042ef68: add byte ptr [rax], al; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x000000000040332e: add byte ptr [rax], al; call 0x2f90; cmp eax, -1; setne al; lea rsp, [rsp + 0x108]; ret; 
0x0000000000426cdc: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b86b: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b96b: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b98b: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9ab: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9cd: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9eb: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba0b: add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x00000000004300c8: add byte ptr [rax], al; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a8: add byte ptr [rax], al; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x0000000000430345: add byte ptr [rax], al; call 0x30360; lea rsp, [rsp + 8]; ret; 
0x0000000000430439: add byte ptr [rax], al; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x00000000004306dd: add byte ptr [rax], al; call 0x306f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430712: add byte ptr [rax], al; call 0x30720; mov rsp, rbp; pop rbp; ret; 
0x00000000004307cb: add byte ptr [rax], al; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430aed: add byte ptr [rax], al; call 0x30b00; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c2b: add byte ptr [rax], al; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x00000000004302b2: add byte ptr [rax], al; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000434598: add byte ptr [rax], al; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000407688: add byte ptr [rax], al; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000409175: add byte ptr [rax], al; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x00000000004034f9: add byte ptr [rax], al; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x0000000000434ec2: add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434ee4: add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f11: add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f34: add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f58: add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f80: add byte ptr [rax], al; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434f98: add byte ptr [rax], al; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb8: add byte ptr [rax], al; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004514f4: add byte ptr [rax], al; call 0x36bc0; lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x00000000004396c8: add byte ptr [rax], al; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x000000000043730b: add byte ptr [rax], al; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000043734b: add byte ptr [rax], al; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004396eb: add byte ptr [rax], al; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000043913d: add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x00000000004391ad: add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000043920d: add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000439265: add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392d5: add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000043932c: add byte ptr [rax], al; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x000000000041d7c9: add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000424bc0: add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000424619: add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000413bb2: add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 8]; ret; 
0x00000000004585c8: add byte ptr [rax], al; call 0x3da0; lea rdi, [rsp + 1]; call 0x2c00; lea rsp, [rsp + 0x108]; ret; 
0x0000000000456b58: add byte ptr [rax], al; call 0x3da0; lea rdi, [rsp + 1]; call 0x30d0; lea rsp, [rsp + 0x108]; ret; 
0x00000000004183d4: add byte ptr [rax], al; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045953a: add byte ptr [rax], al; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043e3c1: add byte ptr [rax], al; call 0x3f800; pop rbx; ret; 
0x0000000000404211: add byte ptr [rax], al; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x0000000000441c51: add byte ptr [rax], al; call 0x43280; pop rbx; ret; 
0x00000000004458b6: add byte ptr [rax], al; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458fa: add byte ptr [rax], al; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000427a69: add byte ptr [rax], al; call 0x47a90; lea rsp, [rsp + 8]; ret; 
0x0000000000427a49: add byte ptr [rax], al; call 0x47b50; lea rsp, [rsp + 8]; ret; 
0x0000000000453873: add byte ptr [rax], al; call 0x535c0; xor eax, eax; pop rbx; ret; 
0x0000000000459a84: add byte ptr [rax], al; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000426e95: add byte ptr [rax], al; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x0000000000416c41: add byte ptr [rax], al; call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416aab: add byte ptr [rax], al; call 0x7250; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000416a5e: add byte ptr [rax], al; call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c01: add byte ptr [rax], al; call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004075e9: add byte ptr [rax], al; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407609: add byte ptr [rax], al; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407629: add byte ptr [rax], al; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x0000000000410146: add byte ptr [rax], al; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x000000000042bdb5: add byte ptr [rax], al; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000434582: add byte ptr [rax], al; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b251: add byte ptr [rax], al; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000042a407: add byte ptr [rax], al; call 0xcd40; pop r13; pop r12; pop rbx; ret; 
0x0000000000427a18: add byte ptr [rax], al; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000042ee81: add byte ptr [rax], al; call 0xce80; test rax, rax; setg al; lea rsp, [rsp + 8]; ret; 
0x000000000042be76: add byte ptr [rax], al; call 0xd400; pop rbx; ret; 
0x000000000042e619: add byte ptr [rax], al; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x000000000040d9c2: add byte ptr [rax], al; call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x00000000004299b5: add byte ptr [rax], al; call 0xf770; pop r13; pop r12; pop rbx; ret; 
0x0000000000429a5a: add byte ptr [rax], al; call 0xfb70; pop rbx; ret; 
0x0000000000423aa9: add byte ptr [rax], al; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004166b8: add byte ptr [rax], al; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x0000000000416680: add byte ptr [rax], al; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x0000000000416634: add byte ptr [rax], al; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x00000000004165e4: add byte ptr [rax], al; call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x0000000000416138: add byte ptr [rax], al; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x0000000000416118: add byte ptr [rax], al; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f8: add byte ptr [rax], al; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x00000000004160d8: add byte ptr [rax], al; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x00000000004160b8: add byte ptr [rax], al; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x000000000041607f: add byte ptr [rax], al; call qword ptr [rip + 0x6dfd9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041604f: add byte ptr [rax], al; call qword ptr [rip + 0x6e009]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041601f: add byte ptr [rax], al; call qword ptr [rip + 0x6e039]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fef: add byte ptr [rax], al; call qword ptr [rip + 0x6e069]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fbf: add byte ptr [rax], al; call qword ptr [rip + 0x6e099]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f8f: add byte ptr [rax], al; call qword ptr [rip + 0x6e0c9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f2f: add byte ptr [rax], al; call qword ptr [rip + 0x6e129]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415eaf: add byte ptr [rax], al; call qword ptr [rip + 0x6e1a9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e7f: add byte ptr [rax], al; call qword ptr [rip + 0x6e1d9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e4f: add byte ptr [rax], al; call qword ptr [rip + 0x6e209]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004155c8: add byte ptr [rax], al; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000415584: add byte ptr [rax], al; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000415534: add byte ptr [rax], al; call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x000000000045c656: add byte ptr [rax], al; call rax; 
0x00000000004189b7: add byte ptr [rax], al; call rbx; 
0x00000000004189b7: add byte ptr [rax], al; call rbx; pop rbx; ret; 
0x000000000043235e: add byte ptr [rax], al; cmp byte ptr [rdi], 0; setne al; ret; 
0x000000000043254e: add byte ptr [rax], al; cmp byte ptr [rdi], 0; setne al; ret; 
0x0000000000432b0e: add byte ptr [rax], al; cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000432cee: add byte ptr [rax], al; cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000456d83: add byte ptr [rax], al; cmp eax, 0xf; jl 0x56d78; xor eax, eax; ret; 
0x0000000000456c53: add byte ptr [rax], al; cmp eax, 1; jl 0x56c48; xor eax, eax; ret; 
0x00000000004557af: add byte ptr [rax], al; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x00000000004031b4: add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x00000000004577c4: add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x0000000000403184: add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000457794: add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000403174: add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000457784: add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000403194: add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004577a4: add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004031a4: add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004577b4: add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004031c4: add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004577d4: add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004031d4: add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x00000000004577e4: add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x000000000042463e: add byte ptr [rax], al; cmp esi, edi; cmovg eax, edi; cmovle eax, esi; ret; 
0x000000000042462e: add byte ptr [rax], al; cmp esi, edi; cmovl eax, edi; cmovge eax, esi; ret; 
0x000000000041355e: add byte ptr [rax], al; cmp qword ptr [rdi + 0x10], 0; je 0x1356f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x000000000041385e: add byte ptr [rax], al; cmp qword ptr [rdi + 0x10], 0; je 0x1386f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x000000000041357e: add byte ptr [rax], al; cmp qword ptr [rdi], 0; je 0x1358d; mov rax, qword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x0000000000432ece: add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004330ae: add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004332be: add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x000000000043349e: add byte ptr [rax], al; cmp qword ptr [rdi], 0; setne al; ret; 
0x000000000041aa39: add byte ptr [rax], al; cmp qword ptr [rip + 0x6a335], 0; je 0x1aa4b; call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x000000000041465e: add byte ptr [rax], al; cmp rdi, rsi; sete al; ret; 
0x0000000000419069: add byte ptr [rax], al; cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x000000000043273e: add byte ptr [rax], al; cmp word ptr [rdi], 0; setne al; ret; 
0x000000000043292e: add byte ptr [rax], al; cmp word ptr [rdi], 0; setne al; ret; 
0x000000000042edd8: add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043114e: add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431635: add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431658: add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed78: add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043116e: add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a75: add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a98: add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000436d3a: add byte ptr [rax], al; fstp xword ptr [rbp - 0x20]; fld xword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed98: add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043118e: add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ea5: add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec8: add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c75: add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000444162: add byte ptr [rax], al; idiv rcx; test rdx, rdx; jne 0x4416f; mov al, 1; ret; 
0x00000000004022c2: add byte ptr [rax], al; jae 0x2234; mfence; jmp 0x21a8; ret; 
0x000000000041a736: add byte ptr [rax], al; je 0x1a740; call qword ptr [rip + 0x4f448]; lea rsp, [rsp + 8]; ret; 
0x000000000041aa41: add byte ptr [rax], al; je 0x1aa4b; call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423f96: add byte ptr [rax], al; je 0x23fa5; mov rax, qword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x000000000043b529: add byte ptr [rax], al; je 0x3b553; mov rsi, qword ptr [rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x0000000000449bd8: add byte ptr [rax], al; je 0x49be1; cmp rdx, rcx; jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x000000000043a5b1: add byte ptr [rax], al; jge 0x3a5c3; mov rax, qword ptr [rsp]; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000417922: add byte ptr [rax], al; jl 0x178f8; mov dword ptr [rip + 0x521f0], 0x270; ret; 
0x0000000000424da3: add byte ptr [rax], al; jl 0x24dac; call 0x24d10; lea rsp, [rsp + 8]; ret; 
0x0000000000456cf8: add byte ptr [rax], al; jl 0x56d02; mov eax, 0xffffffff; ret; 
0x0000000000456d38: add byte ptr [rax], al; jl 0x56d42; mov eax, 0xffffffff; ret; 
0x0000000000456dba: add byte ptr [rax], al; jl 0x56dc4; mov eax, 0xffffffff; ret; 
0x0000000000406fa8: add byte ptr [rax], al; jle 0x6fb1; mov edx, 0xff; mov byte ptr [rax], dl; ret; 
0x0000000000425b46: add byte ptr [rax], al; jmp 0x25b4c; xor al, al; and eax, 0xff; ret; 
0x0000000000433d2e: add byte ptr [rax], al; jmp 0x33d34; xor ecx, ecx; mov eax, ecx; ret; 
0x0000000000434306: add byte ptr [rax], al; jmp 0x3430c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434346: add byte ptr [rax], al; jmp 0x3434c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434386: add byte ptr [rax], al; jmp 0x3438c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343c6: add byte ptr [rax], al; jmp 0x343cc; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434406: add byte ptr [rax], al; jmp 0x3440c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434446: add byte ptr [rax], al; jmp 0x3444c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000044cb14: add byte ptr [rax], al; jmp 0x4cae7; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000045ba39: add byte ptr [rax], al; jmp 0x5ba3f; xor eax, eax; lea rsp, [rsp + 0x48]; ret; 
0x000000000041a254: add byte ptr [rax], al; jne 0x1a230; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2f4: add byte ptr [rax], al; jne 0x1a2d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041c9a1: add byte ptr [rax], al; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000423ebb: add byte ptr [rax], al; jne 0x23ec4; call 0x23c80; mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x0000000000402556: add byte ptr [rax], al; jne 0x2564; cmp rdx, rcx; ja 0x2530; or rax, 0xffffffffffffffff; ret; 
0x0000000000426dab: add byte ptr [rax], al; jne 0x26dbc; and edx, 0x30; je 0x26dbc; mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x0000000000404558: add byte ptr [rax], al; jne 0x4550; ret; 
0x0000000000449ba8: add byte ptr [rax], al; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000044eeae: add byte ptr [rax], al; lea eax, [esi + esi*2]; add eax, 2; ret; 
0x000000000044f03e: add byte ptr [rax], al; lea eax, [esi + esi*2]; ret; 
0x00000000004226ae: add byte ptr [rax], al; lea rax, [rdi + 0x270]; ret; 
0x0000000000444cda: add byte ptr [rax], al; lea rax, [rip + 0x30fbd]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c66: add byte ptr [rax], al; lea rax, [rip + 0x31031]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000042d83e: add byte ptr [rax], al; lea rax, [rip + 0x339c9]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d82e: add byte ptr [rax], al; lea rax, [rip + 0x339d9]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000044a298: add byte ptr [rax], al; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448558: add byte ptr [rax], al; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448538: add byte ptr [rax], al; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448538: add byte ptr [rax], al; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000044549d: add byte ptr [rax], al; lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x000000000044541a: add byte ptr [rax], al; lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000433974: add byte ptr [rax], al; lea rax, [rip + 0x42533]; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433954: add byte ptr [rax], al; lea rax, [rip + 0x42553]; bt dword ptr [rax], edi; setb al; ret; 
0x000000000041887e: add byte ptr [rax], al; lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x0000000000423bee: add byte ptr [rax], al; lea rax, [rip + 0x60259]; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x000000000041ee8b: add byte ptr [rax], al; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e930: add byte ptr [rax], al; lea rax, [rip + 0x741e7]; movzx edx, word ptr [rax]; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e633: add byte ptr [rax], al; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e50f: add byte ptr [rax], al; lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040104e: add byte ptr [rax], al; lea rax, [rip + 0x819a9]; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x000000000040767f: add byte ptr [rax], al; lea rdi, [rax + 1]; mov edx, 0x20; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000407099: add byte ptr [rax], al; lea rdi, [rax + rcx]; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000044f638: add byte ptr [rax], al; lea rdi, [rip + 0x260ff]; lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f338: add byte ptr [rax], al; lea rdi, [rip + 0x262a7]; lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f018: add byte ptr [rax], al; lea rdi, [rip + 0x26467]; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee88: add byte ptr [rax], al; lea rdi, [rip + 0x26497]; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea72: add byte ptr [rax], al; lea rdi, [rip + 0x2674d]; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000041a03b: add byte ptr [rax], al; lea rdi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x0000000000449d26: add byte ptr [rax], al; lea rdi, [rsp + 8]; lea rax, [rip + 0x3a02c]; call qword ptr [rax + 0x10]; 
0x000000000041fda1: add byte ptr [rax], al; lea rdi, [rsp + 8]; mov rdx, rsp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x000000000041701e: add byte ptr [rax], al; lea rdx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax + 0xc]; ret; 
0x000000000044a1f8: add byte ptr [rax], al; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab8: add byte ptr [rax], al; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x00000000004385eb: add byte ptr [rax], al; lea rdx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042e92e: add byte ptr [rax], al; lea rdx, [rip + 0x43209]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dd0: add byte ptr [rax], al; lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004239ce: add byte ptr [rax], al; lea rsi, [rip + 0x46319]; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad8e: add byte ptr [rax], al; lea rsi, [rip + 0x69f29]; mov ecx, 0x23; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000416a0e: add byte ptr [rax], al; lea rsi, [rip + 0x6d559]; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000415b91: add byte ptr [rax], al; lea rsp, [rsp + 0x108]; ret; 
0x00000000004163d5: add byte ptr [rax], al; lea rsp, [rsp + 0x108]; ret; 
0x0000000000411240: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000444315: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000445fab: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000446052: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044c666: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d5a7: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d953: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044dca7: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e9f: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441ad: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044422d: add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043223c: add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432278: add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322a1: add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322d5: add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004546d1: add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000446d2a: add byte ptr [rax], al; lea rsp, [rsp + 0x28]; ret; 
0x000000000040f10f: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f1af: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f46d: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f65b: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f6ed: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410e23: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f1f: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f1e: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411011: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411093: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411115: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411841: add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040d934: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040ddc5: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e129: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f343: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f3d5: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f533: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f5c5: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x00000000004118ee: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e66c: add byte ptr [rax], al; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041bc8d: add byte ptr [rax], al; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000040de1f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e765: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041972f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a003: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041cae4: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420900: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a9f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b3b: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db3f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f295: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f2c4: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004311c4: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433a9f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433aff: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000443da0: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004441f3: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444273: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004442bd: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bf4f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c00f: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044d0bf: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f4a: add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004033a1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000404ebc: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000405087: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004087b6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040a1a6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040e51c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040e6fc: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040f128: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040feb0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040ffa0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041173b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004147f6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000414814: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000414ae1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000414ce1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004150e1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a1e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a5e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041625e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041629e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000417dea: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041814f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041814e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041834d: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000418aea: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041aa7a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041aaab: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041aadb: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041ab0c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041ab2a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b175: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041bcdf: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041bd2f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041bef2: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000423840: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000423876: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000423894: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004238ba: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004238e4: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042390a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000424d41: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000424ecf: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000425bb6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004279f8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000427a08: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000429968: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042bd78: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e37e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e3ee: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e40b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e59b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ece8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ecfa: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed48: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed58: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed68: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042edb8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042edc8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042edf8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ef6d: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042f0da: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042fc85: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004300cd: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004301ad: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430291: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430290: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004302b7: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004302b6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043034a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043043e: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430461: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430f9a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004310eb: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043110b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043112b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431261: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431281: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004312a1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004312c1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004312e1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431301: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431321: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043168f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004316a8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004316bf: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004316d8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004316ef: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431708: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431940: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043196c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431995: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004319b9: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431acf: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431aff: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431b18: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431b2f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431b48: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d80: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431dac: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431dd5: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431df9: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431fdf: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004322ed: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432324: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004323f1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432411: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432441: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432512: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004325e1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432601: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432631: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432701: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004327d1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004327f1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432821: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004328bd: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004328f4: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004329c1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004329e1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432a11: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432ad0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432bb0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432bd0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432c00: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432c98: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432d80: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432da0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432dd0: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432e98: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432f61: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432f81: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432fb1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433078: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433161: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433181: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004331c1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433288: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433351: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433371: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004333a1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433468: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433551: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433571: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004335b1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433648: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433674: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433688: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004336b7: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004336c8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004336f4: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433708: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043373c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433758: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433784: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433798: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004337ce: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004337e8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433814: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433828: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043385c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434490: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043459d: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434881: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000436faf: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004372ef: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043732f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043736f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000438f0f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000439a9f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a5c1: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a7b8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a81c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043b42b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043f8f3: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000443373: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000446f2a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044752f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004476ba: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004476da: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044785a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044787a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004479a8: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044824f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000449c1b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a220: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a240: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a262: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2a5: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044c0fb: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044c69f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044c928: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044ea86: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044ee9c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f02c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f34c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f480: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f64c: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004507da: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045087b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004512f6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000452b4f: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000452e93: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000453f6b: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000459a51: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000459db6: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045bc3a: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045cada: add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004146ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000423a9e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004237ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x000000000040343e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040345e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040347e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040349e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004075de: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x00000000004075fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x000000000040761e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x000000000042e60e: add byte ptr [rax], al; lea rsp, [rsp - 8]; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x00000000004115be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412efe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x00000000004177ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x000000000041765e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041833e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x000000000041835e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x000000000045681e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045689e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041909e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041915e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x000000000041918e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b0ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b12e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b08e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b10e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b23e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b5ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x000000000045335e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b85e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c24e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c20e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x0000000000421fbe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c10e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042201e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c29e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004034be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x000000000040498e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000428e5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x000000000042994e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x000000000045604e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f7e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x000000000045836e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b08e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x000000000042bd5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x00000000004588ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x000000000041900e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x00000000004243ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ecde: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042e5de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x00000000004279ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043327e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043306e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x000000000043345e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434e9e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004322de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000432a9e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043303e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043324e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043342e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x000000000043536e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000043737e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x00000000004316fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431fee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ade: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043169e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043363e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043374e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000043367e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x00000000004336fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043378e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000043381e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dace: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x000000000043425e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043427e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000427a2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000455b1e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x0000000000404f6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x000000000045819e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x000000000045a22e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b83e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dbe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x000000000043207e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x000000000043210e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000431d4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x000000000043190e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x000000000042a58e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba1e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f11e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b1e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423afe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ade: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423abe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a7e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a1e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x00000000004239fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x000000000041921e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x00000000004191fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x000000000041913e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x000000000041911e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x00000000004190fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b65e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b58e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aece: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x000000000041685e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041683e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x000000000041681e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041658e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x00000000004164ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041648e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x000000000041646e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041634e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041632e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x000000000041630e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000041628e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000041626e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x000000000041624e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041622e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x000000000041614e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dce: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aee: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ace: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415aae: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041579e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x000000000041577e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x000000000041575e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x000000000041563e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x000000000041561e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x00000000004155fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154be: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x000000000041547e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154de: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x000000000041549e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x00000000004154fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x000000000041545e: add byte ptr [rax], al; lea rsp, [rsp - 8]; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x000000000043921e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391be: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004392ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x000000000044a22e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a20e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004484ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8de: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8de: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043447e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x000000000043445e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x000000000043445e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x000000000043441e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343de: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x000000000043439e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x000000000043435e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x000000000043431e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342de: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342be: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342be: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000043429e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x000000000043429e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f3e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000436f9e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d2e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000041b37e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x000000000044751e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000439a8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043735e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x000000000043731e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372de: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f7e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000438e6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431abe: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043167e: add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000426cee: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x000000000045908e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000041b0ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004300be: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x000000000043019e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000045c81e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fbe: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e6e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045721e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045731e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000459dde: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459dfe: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x0000000000434f8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fae: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x000000000041612e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x000000000041610e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x00000000004160ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004166ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004159ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155de: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x000000000044854e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x000000000044852e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000434f4e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000043042e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x000000000043b41e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c0e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000041159e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x000000000045687e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b17e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b19e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b21e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004310fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x000000000043111e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004557be: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x000000000045086e: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321de: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x000000000040517e: add byte ptr [rax], al; lea rsp, [rsp - 8]; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000453f5e: add byte ptr [rax], al; lea rsp, [rsp - 8]; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x0000000000430f8e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004507ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x000000000041865e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x000000000041ab1e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000045cace: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f1e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x000000000044850e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484ee: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004476ae: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476ce: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x000000000044784e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x000000000044786e: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x000000000042e3fe: add byte ptr [rax], al; lea rsp, [rsp - 8]; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000040271e: add byte ptr [rax], al; lfence; ret; 
0x000000000040273e: add byte ptr [rax], al; mfence; ret; 
0x0000000000404e0e: add byte ptr [rax], al; mov ax, di; and eax, 0xf; ret; 
0x000000000040d9de: add byte ptr [rax], al; mov ax, di; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9ee: add byte ptr [rax], al; mov ax, di; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x0000000000423f7f: add byte ptr [rax], al; mov ax, word ptr [rax + 2]; jmp 0x23f8a; xor ax, ax; and eax, 0xffff; ret; 
0x000000000040684e: add byte ptr [rax], al; mov ax, word ptr [rdi + 8]; and ax, 0x8000; setne al; ret; 
0x0000000000406faf: add byte ptr [rax], al; mov byte ptr [rax], dl; ret; 
0x000000000040794d: add byte ptr [rax], al; mov dword ptr [rax], 0; ret; 
0x00000000004192f7: add byte ptr [rax], al; mov dword ptr [rbx + 0x1c], 0; mov dword ptr [rbx + 0x20], 0; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x00000000004192fe: add byte ptr [rax], al; mov dword ptr [rbx + 0x20], 0; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x0000000000419305: add byte ptr [rax], al; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x0000000000459dac: add byte ptr [rax], al; mov dword ptr [rip + 0x2bf38], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000409e41: add byte ptr [rax], al; mov eax, 0x1f; sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004087d2: add byte ptr [rax], al; mov eax, 0x3f; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e12: add byte ptr [rax], al; mov eax, 0x3f; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000044f58e: add byte ptr [rax], al; mov eax, 0x4b1; ret; 
0x0000000000413b7e: add byte ptr [rax], al; mov eax, 0x8000ffff; ret; 
0x0000000000431ede: add byte ptr [rax], al; mov eax, 0xa; ret; 
0x000000000045510e: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x00000000004551de: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000041a88e: add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004322fe: add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004324ee: add byte ptr [rax], al; mov eax, 1; ret; 
0x00000000004326de: add byte ptr [rax], al; mov eax, 2; ret; 
0x00000000004328ce: add byte ptr [rax], al; mov eax, 2; ret; 
0x000000000043166e: add byte ptr [rax], al; mov eax, 4; ret; 
0x0000000000431aae: add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000432e7e: add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043305e: add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043326e: add byte ptr [rax], al; mov eax, 8; ret; 
0x000000000043344e: add byte ptr [rax], al; mov eax, 8; ret; 
0x0000000000423f9f: add byte ptr [rax], al; mov eax, dword ptr [rax + 0x18]; ret; 
0x000000000043cebe: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x00000000004403ee: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; ret; 
0x000000000040681e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 8]; and eax, 0x7fff; movsxd rax, eax; ret; 
0x0000000000406e1e: add byte ptr [rax], al; mov eax, dword ptr [rdi]; and eax, 0x7fffff; ret; 
0x0000000000406dee: add byte ptr [rax], al; mov eax, dword ptr [rdi]; and eax, 0x80000000; setne al; ret; 
0x0000000000432b1e: add byte ptr [rax], al; mov eax, dword ptr [rdi]; cvtsi2sd xmm0, rax; ret; 
0x0000000000432bde: add byte ptr [rax], al; mov eax, dword ptr [rdi]; cvtsi2ss xmm0, rax; ret; 
0x000000000042d51e: add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000042d52e: add byte ptr [rax], al; mov eax, dword ptr [rdi]; ret; 
0x000000000044d17f: add byte ptr [rax], al; mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000417e81: add byte ptr [rax], al; mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040322e: add byte ptr [rax], al; mov eax, edi; and eax, 0x7f; ret; 
0x000000000045783e: add byte ptr [rax], al; mov eax, edi; and eax, 0x7f; ret; 
0x00000000004178be: add byte ptr [rax], al; mov eax, edi; and eax, 0x80000000; and esi, 0x7fffffff; or eax, esi; ret; 
0x00000000004031ee: add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x00000000004031fe: add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x00000000004577fe: add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x000000000045780e: add byte ptr [rax], al; mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x000000000040455e: add byte ptr [rax], al; mov eax, edi; and eax, 1; ret; 
0x000000000040456e: add byte ptr [rax], al; mov eax, edi; and eax, 1; ret; 
0x000000000040275e: add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000040276e: add byte ptr [rax], al; mov eax, edi; bswap eax; ret; 
0x000000000040459e: add byte ptr [rax], al; mov eax, edi; imul eax, edi; ret; 
0x000000000040490e: add byte ptr [rax], al; mov eax, edi; ret; 
0x000000000040491e: add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049ee: add byte ptr [rax], al; mov eax, edi; ret; 
0x00000000004049fe: add byte ptr [rax], al; mov eax, edi; ret; 
0x0000000000404e5e: add byte ptr [rax], al; mov eax, edi; shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e6e: add byte ptr [rax], al; mov eax, edi; shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x000000000040269e: add byte ptr [rax], al; mov eax, edx; lock cmpxchg dword ptr [rdi], esi; ret; 
0x000000000044f0ae: add byte ptr [rax], al; mov eax, edx; shl eax, 1; ret; 
0x0000000000450097: add byte ptr [rax], al; mov eax, edx; shr eax, 4; xor eax, edx; and eax, 0xf; ret; 
0x000000000044ec2e: add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044eebe: add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f04e: add byte ptr [rax], al; mov eax, esi; ret; 
0x000000000044f48e: add byte ptr [rax], al; mov eax, esi; shl eax, 1; ret; 
0x000000000040698b: add byte ptr [rax], al; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c87: add byte ptr [rax], al; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f07: add byte ptr [rax], al; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a03c: add byte ptr [rax], al; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a082: add byte ptr [rax], al; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004324b9: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x00000000004326a9: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x0000000000432899: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432a89: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432c79: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432e49: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432c19: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432de9: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432c59: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e29: add byte ptr [rax], al; mov ecx, esi; shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000456e3b: add byte ptr [rax], al; mov edi, 0x82; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e1a: add byte ptr [rax], al; mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000041b071: add byte ptr [rax], al; mov edi, 0xe8; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403015: add byte ptr [rax], al; mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425607: add byte ptr [rax], al; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000401080: add byte ptr [rax], al; mov edi, dword ptr [rbp - 4]; syscall; 
0x000000000045a09a: add byte ptr [rax], al; mov edi, dword ptr [rdi]; call 0x2aa0; lea rsp, [rsp + 8]; ret; 
0x0000000000452b48: add byte ptr [rax], al; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000459a7f: add byte ptr [rax], al; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c8: add byte ptr [rax], al; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cb28: add byte ptr [rax], al; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x0000000000424333: add byte ptr [rax], al; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x000000000041cbc8: add byte ptr [rax], al; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x0000000000459535: add byte ptr [rax], al; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042be71: add byte ptr [rax], al; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a55: add byte ptr [rax], al; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x00000000004546c4: add byte ptr [rax], al; mov esi, 1; mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000401037: add byte ptr [rax], al; mov qword ptr [r10 + 0x60], rax; mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000041d791: add byte ptr [rax], al; mov qword ptr [rax + 0x20], 0; ret; 
0x000000000043033f: add byte ptr [rax], al; mov r8d, 1; call 0x30360; lea rsp, [rsp + 8]; ret; 
0x0000000000401e1f: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e52: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e85: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ec8: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f0b: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f4e: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f92: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000434073: add byte ptr [rax], al; mov rax, 0xffffffffffffffff; ret; 
0x0000000000413733: add byte ptr [rax], al; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413733: add byte ptr [rax], al; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x00000000004094d2: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x18]; mov rdx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000041473f: add byte ptr [rax], al; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x0000000000413b8e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x38]; ret; 
0x00000000004144ee: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x50]; ret; 
0x0000000000413c1e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x58]; ret; 
0x0000000000406b2e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; movabs rdx, 0x8000000000000000; and rax, rdx; setne al; ret; 
0x000000000041374e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; ret; 
0x000000000042e34e: add byte ptr [rax], al; mov rax, qword ptr [rdi]; test rax, rax; je 0x2e35c; mov rax, qword ptr [rax - 8]; ret; 
0x0000000000423b5e: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x461e9]; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x000000000041495a: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004136c1: add byte ptr [rax], al; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000446d9e: add byte ptr [rax], al; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446dff: add byte ptr [rax], al; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000045126d: add byte ptr [rax], al; mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000413546: add byte ptr [rax], al; mov rax, qword ptr [rsp]; jmp 0x13550; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000040ba65: add byte ptr [rax], al; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000401fbe: add byte ptr [rax], al; mov rax, qword ptr [rsp]; ret; 
0x0000000000414f05: add byte ptr [rax], al; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f98: add byte ptr [rax], al; mov rax, r12; pop r13; pop r12; pop rbx; ret; 
0x0000000000414f97: add byte ptr [rax], al; mov rax, r12; pop r13; pop r12; pop rbx; ret; 
0x00000000004181b2: add byte ptr [rax], al; mov rax, rbx; call rax; 
0x000000000040c824: add byte ptr [rax], al; mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ca56: add byte ptr [rax], al; mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041bfa3: add byte ptr [rax], al; mov rax, rbx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000044b985: add byte ptr [rax], al; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414a8a: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000041bea6: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000041bf46: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000043e1db: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000043e382: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000043e8eb: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x00000000004418eb: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x0000000000441ba2: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x00000000004421eb: add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000040457e: add byte ptr [rax], al; mov rax, rdi; and eax, 1; ret; 
0x000000000040458e: add byte ptr [rax], al; mov rax, rdi; and eax, 1; ret; 
0x000000000040277e: add byte ptr [rax], al; mov rax, rdi; bswap rax; ret; 
0x000000000040278e: add byte ptr [rax], al; mov rax, rdi; bswap rax; ret; 
0x0000000000432cfe: add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432ede: add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332ce: add byte ptr [rax], al; mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432dae: add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f8e: add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x000000000043337e: add byte ptr [rax], al; mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x00000000004045ae: add byte ptr [rax], al; mov rax, rdi; imul rax, rdi; ret; 
0x00000000004045be: add byte ptr [rax], al; mov rax, rdi; imul rax, rdi; ret; 
0x0000000000426b3e: add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040519e: add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051ce: add byte ptr [rax], al; mov rax, rdi; mov dword ptr [rax], esi; ret; 
0x000000000040492e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000040493e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a0e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404a1e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f7e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000406f8e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041395e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413eae: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413ebe: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413f1e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000413f2e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041466e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000426b2e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x0000000000404e7e: add byte ptr [rax], al; mov rax, rdi; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x000000000040334e: add byte ptr [rax], al; mov rax, rdi; test rdi, rdi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x000000000040335e: add byte ptr [rax], al; mov rax, rdi; test rdi, rdi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x000000000040270e: add byte ptr [rax], al; mov rax, rdx; lock cmpxchg qword ptr [rdi], rsi; ret; 
0x000000000040b7fe: add byte ptr [rax], al; mov rax, rsi; imul rax, rdi; ret; 
0x000000000043b87e: add byte ptr [rax], al; mov rax, rsi; ret; 
0x000000000043b8ae: add byte ptr [rax], al; mov rax, rsi; ret; 
0x0000000000401fae: add byte ptr [rax], al; mov rax, rsp; ret; 
0x000000000041178d: add byte ptr [rax], al; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040d1b1: add byte ptr [rax], al; mov rbx, qword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b18c: add byte ptr [rax], al; mov rbx, qword ptr [rbp - 0x598]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417da5: add byte ptr [rax], al; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000415006: add byte ptr [rax], al; mov rdi, qword ptr [rbx]; mov esi, 1; call 0x2950; pop rbx; ret; 
0x0000000000445495: add byte ptr [rax], al; mov rdi, qword ptr [rsp + 0x170]; lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x000000000040ec5c: add byte ptr [rax], al; mov rdi, r13; mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000413e2d: add byte ptr [rax], al; mov rdi, r14; mov rax, r15; call rax; 
0x000000000043231c: add byte ptr [rax], al; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328ec: add byte ptr [rax], al; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004165dc: add byte ptr [rax], al; mov rdi, rax; mov edx, 1; call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x000000000041552c: add byte ptr [rax], al; mov rdi, rax; mov edx, 1; call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x0000000000434edc: add byte ptr [rax], al; mov rdi, rax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000041662c: add byte ptr [rax], al; mov rdi, rax; mov edx, 2; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x000000000041557c: add byte ptr [rax], al; mov rdi, rax; mov edx, 2; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f2c: add byte ptr [rax], al; mov rdi, rax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000043e39b: add byte ptr [rax], al; mov rdi, rbx; call 0x3e370; pop rbx; ret; 
0x000000000045b1e3: add byte ptr [rax], al; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000041caa9: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x000000000041f65e: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f75e: add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x00000000004546c9: add byte ptr [rax], al; mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x000000000041ee7e: add byte ptr [rax], al; mov rdi, rsp; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000042e33e: add byte ptr [rax], al; mov rdx, qword ptr [rdi]; lea rax, [rsi + 1]; movzx eax, byte ptr [rdx + rax - 1]; ret; 
0x0000000000444bf8: add byte ptr [rax], al; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c3c: add byte ptr [rax], al; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000426c8e: add byte ptr [rax], al; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x0000000000418736: add byte ptr [rax], al; mov rsi, qword ptr [rbp - 0x18]; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x000000000044540f: add byte ptr [rax], al; mov rsi, qword ptr [rbx]; mov rdi, qword ptr [rsp + 0x168]; lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000452820: add byte ptr [rax], al; mov rsi, qword ptr [rdx + rax*8]; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x0000000000439793: add byte ptr [rax], al; mov rsi, rsp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x00000000004027b3: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000040cb6b: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000040dc17: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000040ef5b: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000411545: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000411aaa: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000412f30: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417ca7: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417cc7: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417ce7: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d07: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d27: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d47: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042e643: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042e7a7: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042eba4: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed33: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042f880: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430504: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004305a1: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000043061a: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004306c1: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004306e2: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430717: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004307d0: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430af2: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c30: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431f1a: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431f53: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431f8a: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431fc3: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b3e: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bce: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000439cc0: add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000040e6a2: add byte ptr [rax], al; mov word ptr [rax], r12w; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000401bed: add byte ptr [rax], al; movabs rax, qword ptr [0x484de0]; test rax, rax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x00000000004324d8: add byte ptr [rax], al; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326c8: add byte ptr [rax], al; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000403413: add byte ptr [rax], al; movsx eax, ax; ret; 
0x0000000000404883: add byte ptr [rax], al; movsx eax, ax; ret; 
0x0000000000404963: add byte ptr [rax], al; movsx eax, ax; ret; 
0x0000000000404e53: add byte ptr [rax], al; movsx eax, ax; ret; 
0x000000000043255e: add byte ptr [rax], al; movsx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x000000000043260e: add byte ptr [rax], al; movsx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x000000000043274e: add byte ptr [rax], al; movsx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004327fe: add byte ptr [rax], al; movsx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000432e68: add byte ptr [rax], al; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433048: add byte ptr [rax], al; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433258: add byte ptr [rax], al; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433438: add byte ptr [rax], al; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000406826: add byte ptr [rax], al; movsxd rax, eax; ret; 
0x000000000043236e: add byte ptr [rax], al; movzx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x000000000043241e: add byte ptr [rax], al; movzx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x00000000004048fe: add byte ptr [rax], al; movzx eax, di; ret; 
0x00000000004049de: add byte ptr [rax], al; movzx eax, di; ret; 
0x0000000000404dfe: add byte ptr [rax], al; movzx eax, dil; shr eax, 4; and eax, 0xff; ret; 
0x000000000041d7de: add byte ptr [rax], al; movzx eax, word ptr [rdi + 0x374]; ret; 
0x000000000043293e: add byte ptr [rax], al; movzx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004329ee: add byte ptr [rax], al; movzx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000446e8b: add byte ptr [rax], al; movzx eax, word ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042552c: add byte ptr [rax], al; movzx edi, al; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x000000000043a7ac: add byte ptr [rax], al; movzx esi, al; mov rdi, qword ptr [rsp]; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x0000000000415b63: add byte ptr [rax], al; neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004163a3: add byte ptr [rax], al; neg eax; lea rsp, [rsp + 8]; ret; 
0x0000000000406b3a: add byte ptr [rax], al; or byte ptr [rax + 0x21], 0xd0; setne al; ret; 
0x00000000004078d7: add byte ptr [rax], al; or byte ptr [rax + 9], 0xf9; mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x000000000045cabf: add byte ptr [rax], al; or eax, ecx; ret; 
0x00000000004253fe: add byte ptr [rax], al; or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000406842: add byte ptr [rax], al; or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x000000000040d0c5: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d21e: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d27d: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d2ce: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d33a: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d38d: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d3ed: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000410269: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041464d: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000418333: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041c767: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041c7b7: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041ce5d: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041f003: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420051: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004200eb: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004201bb: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420256: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420307: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420396: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420500: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000042059f: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420dc7: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420e17: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000421c7d: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000424f7e: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043c410: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043d620: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043d7d1: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043d890: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043d9e4: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043dc54: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043dda0: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043def5: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000043dfb0: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000440b82: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000440d51: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000440e32: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000440fd6: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004412a6: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000441432: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004415c7: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004416a2: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004449ad: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004461ae: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045227b: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004584fc: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045bb3a: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045c32c: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045cc8c: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045cda8: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045d40f: add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000402cc7: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000403c29: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040771b: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004077ab: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040a247: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040c57e: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040d12e: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040d761: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040de8c: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040df07: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004102f2: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041a884: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041d927: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e53d: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e5bd: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e65b: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e6fb: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041ea57: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000420447: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004206d8: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000422740: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000422e12: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042415e: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004251cc: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000426894: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042946d: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042b715: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042ce2f: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042d0ca: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042d449: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042d509: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042f2f6: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042f325: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd02: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd41: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd76: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042fda5: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004302e8: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004310b8: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043a22b: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043e838: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043e9bd: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043ea8c: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043ec8c: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043edf8: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043eebd: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043f0d8: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043f198: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044210a: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004422df: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004423ce: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044261e: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004427ca: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004428bf: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000442b1a: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000442c0a: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044c6fd: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000450405: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004507c0: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004509c8: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000454254: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000454587: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045467f: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004564b1: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000457178: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004571e2: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000458881: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000459250: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045995d: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000459ca2: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000459ea1: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045b833: add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004041f0: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000418978: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041d014: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000421e21: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000422201: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004261ca: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042692a: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427f96: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000428dba: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004290e8: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042a1d5: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042afef: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042b316: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000439c71: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445eb2: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450b21: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452ddd: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004530f5: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b5c4: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b73a: add byte ptr [rax], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004032c9: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000403313: add byte ptr [rax], al; pop rbx; ret; 
0x000000000040baaf: add byte ptr [rax], al; pop rbx; ret; 
0x000000000040cfed: add byte ptr [rax], al; pop rbx; ret; 
0x000000000040d068: add byte ptr [rax], al; pop rbx; ret; 
0x000000000040dccf: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004100dc: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410153: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004101e7: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004103a8: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004103e7: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410434: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410477: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004104b7: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000412ffb: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041394f: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004146ad: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004169e0: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416a6b: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416ab8: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416c0e: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416c4e: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000417eea: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004183e1: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004188c8: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041930c: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041a047: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041a33c: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041a65e: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041adc2: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041bc95: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041bfae: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041c50f: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041c574: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041d7d6: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041d8b5: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041d992: add byte ptr [rax], al; pop rbx; ret; 
0x000000000041f9de: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000420d7b: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004222b0: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004226e5: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004227b2: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000424bcd: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000424fe3: add byte ptr [rax], al; pop rbx; ret; 
0x000000000042582d: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000425c06: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004267f4: add byte ptr [rax], al; pop rbx; ret; 
0x000000000042752c: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004323d2: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004325c2: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004327b2: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004329a2: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000432b91: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000432d61: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000432f42: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433142: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433332: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433532: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434b12: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434b62: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434bb2: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434c02: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434c51: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004368b0: add byte ptr [rax], al; pop rbx; ret; 
0x000000000043c29e: add byte ptr [rax], al; pop rbx; ret; 
0x000000000043c612: add byte ptr [rax], al; pop rbx; ret; 
0x000000000043e3c6: add byte ptr [rax], al; pop rbx; ret; 
0x000000000043e6d5: add byte ptr [rax], al; pop rbx; ret; 
0x000000000043f1e7: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000440c98: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000441116: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000441358: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000441c56: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000441f65: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000442c67: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000444f24: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000447784: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000449931: add byte ptr [rax], al; pop rbx; ret; 
0x000000000044b6d1: add byte ptr [rax], al; pop rbx; ret; 
0x000000000044bb77: add byte ptr [rax], al; pop rbx; ret; 
0x000000000044cb22: add byte ptr [rax], al; pop rbx; ret; 
0x000000000044ce17: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000451501: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000453182: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004540cd: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000454b75: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004551d6: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000455505: add byte ptr [rax], al; pop rbx; ret; 
0x000000000045563c: add byte ptr [rax], al; pop rbx; ret; 
0x000000000045576c: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000455b67: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000457bc1: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004584a9: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000458636: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000459547: add byte ptr [rax], al; pop rbx; ret; 
0x000000000045b1f3: add byte ptr [rax], al; pop rbx; ret; 
0x000000000045b231: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000401dfe: add byte ptr [rax], al; push rbp; mov rbp, rsp; lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x0000000000423bbe: add byte ptr [rax], al; push rbx; mov rbx, rdi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x00000000004169ee: add byte ptr [rax], al; push rbx; mov rbx, rdi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x000000000040297e: add byte ptr [rax], al; push rsi; jmp 0x184a0; ret; 
0x000000000041ad9a: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000419283: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000040db30: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db62: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db80: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dba0: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbd2: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbf0: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a1a: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a30: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041902a: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419040: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b70a: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b720: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b752: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239da: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239f0: add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040272e: add byte ptr [rax], al; ret; 
0x0000000000403341: add byte ptr [rax], al; ret; 
0x00000000004033ae: add byte ptr [rax], al; ret; 
0x0000000000403433: add byte ptr [rax], al; ret; 
0x0000000000403813: add byte ptr [rax], al; ret; 
0x00000000004038b2: add byte ptr [rax], al; ret; 
0x0000000000403913: add byte ptr [rax], al; ret; 
0x00000000004039af: add byte ptr [rax], al; ret; 
0x0000000000403a8b: add byte ptr [rax], al; ret; 
0x00000000004048a3: add byte ptr [rax], al; ret; 
0x0000000000404983: add byte ptr [rax], al; ret; 
0x0000000000404a51: add byte ptr [rax], al; ret; 
0x0000000000404a95: add byte ptr [rax], al; ret; 
0x0000000000404e0a: add byte ptr [rax], al; ret; 
0x0000000000404e33: add byte ptr [rax], al; ret; 
0x0000000000407337: add byte ptr [rax], al; ret; 
0x0000000000407354: add byte ptr [rax], al; ret; 
0x000000000040737b: add byte ptr [rax], al; ret; 
0x00000000004073fb: add byte ptr [rax], al; ret; 
0x0000000000407844: add byte ptr [rax], al; ret; 
0x0000000000407918: add byte ptr [rax], al; ret; 
0x0000000000407953: add byte ptr [rax], al; ret; 
0x000000000040b977: add byte ptr [rax], al; ret; 
0x000000000040d868: add byte ptr [rax], al; ret; 
0x000000000040d882: add byte ptr [rax], al; ret; 
0x000000000040dae8: add byte ptr [rax], al; ret; 
0x000000000040db0e: add byte ptr [rax], al; ret; 
0x0000000000411562: add byte ptr [rax], al; ret; 
0x0000000000411598: add byte ptr [rax], al; ret; 
0x00000000004116f9: add byte ptr [rax], al; ret; 
0x00000000004136ce: add byte ptr [rax], al; ret; 
0x0000000000414967: add byte ptr [rax], al; ret; 
0x00000000004156cf: add byte ptr [rax], al; ret; 
0x0000000000415b99: add byte ptr [rax], al; ret; 
0x00000000004163dd: add byte ptr [rax], al; ret; 
0x000000000041677f: add byte ptr [rax], al; ret; 
0x000000000041792e: add byte ptr [rax], al; ret; 
0x0000000000417a50: add byte ptr [rax], al; ret; 
0x0000000000417bd6: add byte ptr [rax], al; ret; 
0x0000000000417be6: add byte ptr [rax], al; ret; 
0x0000000000417bf6: add byte ptr [rax], al; ret; 
0x0000000000418c9e: add byte ptr [rax], al; ret; 
0x00000000004193bd: add byte ptr [rax], al; ret; 
0x000000000041a893: add byte ptr [rax], al; ret; 
0x000000000041d799: add byte ptr [rax], al; ret; 
0x000000000041d7e5: add byte ptr [rax], al; ret; 
0x000000000041d80c: add byte ptr [rax], al; ret; 
0x00000000004226b5: add byte ptr [rax], al; ret; 
0x0000000000423815: add byte ptr [rax], al; ret; 
0x0000000000423f8d: add byte ptr [rax], al; ret; 
0x0000000000425856: add byte ptr [rax], al; ret; 
0x0000000000425876: add byte ptr [rax], al; ret; 
0x0000000000425b4f: add byte ptr [rax], al; ret; 
0x0000000000426b48: add byte ptr [rax], al; ret; 
0x0000000000426dc1: add byte ptr [rax], al; ret; 
0x0000000000426ea2: add byte ptr [rax], al; ret; 
0x0000000000431673: add byte ptr [rax], al; ret; 
0x0000000000431ab3: add byte ptr [rax], al; ret; 
0x0000000000431ee3: add byte ptr [rax], al; ret; 
0x0000000000432303: add byte ptr [rax], al; ret; 
0x0000000000432488: add byte ptr [rax], al; ret; 
0x00000000004324a6: add byte ptr [rax], al; ret; 
0x00000000004324f3: add byte ptr [rax], al; ret; 
0x00000000004326e3: add byte ptr [rax], al; ret; 
0x00000000004328d3: add byte ptr [rax], al; ret; 
0x0000000000432a5b: add byte ptr [rax], al; ret; 
0x0000000000432a78: add byte ptr [rax], al; ret; 
0x0000000000432ab3: add byte ptr [rax], al; ret; 
0x0000000000432ca3: add byte ptr [rax], al; ret; 
0x0000000000432e83: add byte ptr [rax], al; ret; 
0x0000000000433063: add byte ptr [rax], al; ret; 
0x0000000000433273: add byte ptr [rax], al; ret; 
0x0000000000433453: add byte ptr [rax], al; ret; 
0x0000000000433653: add byte ptr [rax], al; ret; 
0x00000000004336d3: add byte ptr [rax], al; ret; 
0x0000000000433763: add byte ptr [rax], al; ret; 
0x00000000004337f3: add byte ptr [rax], al; ret; 
0x0000000000433ba3: add byte ptr [rax], al; ret; 
0x0000000000434011: add byte ptr [rax], al; ret; 
0x0000000000434056: add byte ptr [rax], al; ret; 
0x0000000000434085: add byte ptr [rax], al; ret; 
0x00000000004340df: add byte ptr [rax], al; ret; 
0x0000000000434116: add byte ptr [rax], al; ret; 
0x0000000000434176: add byte ptr [rax], al; ret; 
0x000000000043c754: add byte ptr [rax], al; ret; 
0x000000000043c8cd: add byte ptr [rax], al; ret; 
0x000000000043caae: add byte ptr [rax], al; ret; 
0x000000000043cc1c: add byte ptr [rax], al; ret; 
0x000000000043cd61: add byte ptr [rax], al; ret; 
0x000000000043ceb3: add byte ptr [rax], al; ret; 
0x000000000043fc84: add byte ptr [rax], al; ret; 
0x000000000043fdfd: add byte ptr [rax], al; ret; 
0x000000000043ffde: add byte ptr [rax], al; ret; 
0x000000000044014c: add byte ptr [rax], al; ret; 
0x0000000000440291: add byte ptr [rax], al; ret; 
0x00000000004403e3: add byte ptr [rax], al; ret; 
0x0000000000449bb0: add byte ptr [rax], al; ret; 
0x0000000000449be5: add byte ptr [rax], al; ret; 
0x0000000000449be4: add byte ptr [rax], al; ret; 
0x000000000044e762: add byte ptr [rax], al; ret; 
0x000000000044e8ba: add byte ptr [rax], al; ret; 
0x000000000044ea54: add byte ptr [rax], al; ret; 
0x000000000044ee78: add byte ptr [rax], al; ret; 
0x000000000044f008: add byte ptr [rax], al; ret; 
0x000000000044f143: add byte ptr [rax], al; ret; 
0x000000000044f31f: add byte ptr [rax], al; ret; 
0x000000000044f593: add byte ptr [rax], al; ret; 
0x000000000044f9bc: add byte ptr [rax], al; ret; 
0x000000000044fc22: add byte ptr [rax], al; ret; 
0x000000000045165c: add byte ptr [rax], al; ret; 
0x000000000045196f: add byte ptr [rax], al; ret; 
0x0000000000451ca2: add byte ptr [rax], al; ret; 
0x0000000000451fe5: add byte ptr [rax], al; ret; 
0x00000000004525cf: add byte ptr [rax], al; ret; 
0x0000000000453685: add byte ptr [rax], al; ret; 
0x0000000000453850: add byte ptr [rax], al; ret; 
0x0000000000453cd5: add byte ptr [rax], al; ret; 
0x0000000000455105: add byte ptr [rax], al; ret; 
0x0000000000456b6f: add byte ptr [rax], al; ret; 
0x0000000000456de2: add byte ptr [rax], al; ret; 
0x00000000004585df: add byte ptr [rax], al; ret; 
0x0000000000459cde: add byte ptr [rax], al; ret; 
0x0000000000459fc6: add byte ptr [rax], al; ret; 
0x0000000000459fd4: add byte ptr [rax], al; ret; 
0x0000000000459fdc: add byte ptr [rax], al; ret; 
0x000000000040317a: add byte ptr [rax], al; sete al; ret; 
0x0000000000403179: add byte ptr [rax], al; sete al; ret; 
0x000000000040318a: add byte ptr [rax], al; sete al; ret; 
0x000000000040319a: add byte ptr [rax], al; sete al; ret; 
0x00000000004031aa: add byte ptr [rax], al; sete al; ret; 
0x00000000004031ba: add byte ptr [rax], al; sete al; ret; 
0x00000000004031ca: add byte ptr [rax], al; sete al; ret; 
0x00000000004031da: add byte ptr [rax], al; sete al; ret; 
0x000000000045778a: add byte ptr [rax], al; sete al; ret; 
0x0000000000457789: add byte ptr [rax], al; sete al; ret; 
0x000000000045779a: add byte ptr [rax], al; sete al; ret; 
0x00000000004577aa: add byte ptr [rax], al; sete al; ret; 
0x00000000004577ba: add byte ptr [rax], al; sete al; ret; 
0x00000000004577ca: add byte ptr [rax], al; sete al; ret; 
0x00000000004577da: add byte ptr [rax], al; sete al; ret; 
0x00000000004577ea: add byte ptr [rax], al; sete al; ret; 
0x0000000000432743: add byte ptr [rax], al; setne al; ret; 
0x0000000000432933: add byte ptr [rax], al; setne al; ret; 
0x000000000040274e: add byte ptr [rax], al; sfence; ret; 
0x0000000000417bbe: add byte ptr [rax], al; shl edi, 4; movsxd rdi, edi; movsxd rsi, esi; lea rax, [rdi + rsi]; ret; 
0x0000000000406e0f: add byte ptr [rax], al; shl esi, 0x1f; or edx, esi; mov dword ptr [rax], edx; ret; 
0x000000000042380b: add byte ptr [rax], al; shl esi, 0xa; or eax, esi; and eax, 0xffff; ret; 
0x000000000045cab4: add byte ptr [rax], al; shl esi, 0xc; or eax, esi; and ecx, 0xfff; or eax, ecx; ret; 
0x0000000000406870: add byte ptr [rax], al; shl esi, 0xf; or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x0000000000433027: add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433237: add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433417: add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433627: add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fe7: add byte ptr [rax], al; shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331f7: add byte ptr [rax], al; shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333d7: add byte ptr [rax], al; shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335e7: add byte ptr [rax], al; shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000432fc7: add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d7: add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b7: add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c7: add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433007: add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433217: add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f7: add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433607: add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000456dd4: add byte ptr [rax], al; shl rdi, cl; and rdi, qword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x0000000000406de2: add byte ptr [rax], al; shl rsi, 0x17; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406b18: add byte ptr [rax], al; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b67: add byte ptr [rax], al; shl rsi, 0x3f; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x00000000004031f5: add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000403205: add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000457805: add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000457815: add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004237ee: add byte ptr [rax], al; shr rdi, 0x10; sete al; ret; 
0x0000000000454ac6: add byte ptr [rax], al; sub eax, 1; add dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000409e46: add byte ptr [rax], al; sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000433d11: add byte ptr [rax], al; sub eax, r11d; ret; 
0x000000000042fcc1: add byte ptr [rax], al; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000041a37a: add byte ptr [rax], al; sub rax, 8; ret; 
0x000000000040b421: add byte ptr [rax], al; sub rax, r11; ret; 
0x00000000004087d7: add byte ptr [rax], al; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e17: add byte ptr [rax], al; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000044baec: add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000447d5a: add byte ptr [rax], al; sub rcx, r8; mov rax, rcx; ret; 
0x000000000044bb3f: add byte ptr [rax], al; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000401fa5: add byte ptr [rax], al; syscall; 
0x0000000000401fa5: add byte ptr [rax], al; syscall; ret; 
0x0000000000434228: add byte ptr [rax], al; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434248: add byte ptr [rax], al; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000453d08: add byte ptr [rax], al; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000401bf7: add byte ptr [rax], al; test rax, rax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x000000000044a282: add byte ptr [rax], al; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2c5: add byte ptr [rax], al; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000041156e: add byte ptr [rax], al; test rdi, rdi; je 0x1157a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000411abe: add byte ptr [rax], al; test rdi, rdi; je 0x11ace; mov rax, qword ptr [rdi - 8]; add rax, 1; ret; 
0x0000000000411ade: add byte ptr [rax], al; test rdi, rdi; je 0x11aea; mov rax, qword ptr [rdi - 8]; ret; 
0x00000000004480de: add byte ptr [rax], al; test rdi, rdi; je 0x480ec; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044beee: add byte ptr [rax], al; test rdi, rdi; je 0x4befc; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000040d88e: add byte ptr [rax], al; test rdi, rdi; je 0xd89a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000433b8e: add byte ptr [rax], al; test rdi, rdi; jge 0x33b9b; mov eax, 0xffffffff; ret; 
0x00000000004479b5: add byte ptr [rax], al; test rdi, rdi; jne 0x479c4; xor eax, eax; ret; 
0x0000000000447d25: add byte ptr [rax], al; test rdx, rdx; jne 0x47d2f; xor eax, eax; ret; 
0x000000000044bafe: add byte ptr [rax], al; test rdx, rdx; jne 0x4bb08; xor eax, eax; ret; 
0x000000000040421e: add byte ptr [rax], al; test rsi, rsi; jg 0x4228; xor eax, eax; ret; 
0x000000000040676e: add byte ptr [rax], al; test sil, sil; je 0x6779; mov rax, qword ptr [rdi]; ret; 
0x000000000040267e: add byte ptr [rax], al; xchg dword ptr [rdi], esi; mov eax, esi; ret; 
0x00000000004026ee: add byte ptr [rax], al; xchg qword ptr [rdi], rsi; mov rax, rsi; ret; 
0x000000000040268e: add byte ptr [rax], al; xchg rdi, rsi; lock xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x00000000004026fe: add byte ptr [rax], al; xchg rdi, rsi; lock xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x0000000000402666: add byte ptr [rax], al; xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026d8: add byte ptr [rax], al; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x0000000000417bce: add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000417bde: add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000417bee: add byte ptr [rax], al; xor ax, ax; and eax, 0xffff; ret; 
0x000000000042391e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042392e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042393e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042394e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042395e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042396e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042397e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042398e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042399e: add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239ae: add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004239be: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8be: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043b8ce: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000044ce8e: add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043f7c3: add byte ptr [rax], al; xor ecx, ecx; call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x0000000000443243: add byte ptr [rax], al; xor ecx, ecx; call 0x43080; lea rsp, [rsp + 8]; ret; 
0x000000000041aa72: add byte ptr [rax], al; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aaa3: add byte ptr [rax], al; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aad3: add byte ptr [rax], al; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000438d85: add byte ptr [rax], al; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000438dfe: add byte ptr [rax], al; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e5e: add byte ptr [rax], al; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438ebd: add byte ptr [rax], al; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f4d: add byte ptr [rax], al; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438d10: add byte ptr [rax], al; xor edx, edx; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x0000000000459a49: add byte ptr [rax], cl; add byte ptr [rax], al; add dword ptr [rip + 0xff], esp; lea rsp, [rsp + 8]; ret; 
0x0000000000459a82: add byte ptr [rax], cl; add byte ptr [rax], al; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000415b5a: add byte ptr [rax], cl; ror byte ptr [rdi], 0x95; shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041639a: add byte ptr [rax], cl; ror byte ptr [rdi], 0x95; shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004022c0: add byte ptr [rax], dl; add byte ptr [rax], al; jae 0x2234; mfence; jmp 0x21a8; ret; 
0x00000000004031b8: add byte ptr [rax], dl; add byte ptr [rax], al; sete al; ret; 
0x00000000004577c8: add byte ptr [rax], dl; add byte ptr [rax], al; sete al; ret; 
0x000000000041ab28: add byte ptr [rax], r8b; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004072f5: add byte ptr [rax], r8b; add rdx, 1; cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x0000000000449bd7: add byte ptr [rax], r8b; je 0x49be1; cmp rdx, rcx; jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x000000000042edf7: add byte ptr [rax], r8b; lea rsp, [rsp + 8]; ret; 
0x0000000000448239: add byte ptr [rbp + 0x15], dh; lea rax, [rip - 0x14053]; lea rdx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000410510: add byte ptr [rbp + 0x31], cl; fisttp dword ptr [rcx - 0x39]; ret 0; 
0x000000000043157f: add byte ptr [rbp + 0x48], dl; mov ebp, esp; call 0x313f0; mov rsp, rbp; pop rbp; ret; 
0x000000000043156f: add byte ptr [rbp + 0x48], dl; mov ebp, esp; call 0x314b0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e79f: add byte ptr [rbp + 0x48], dl; mov ebp, esp; call 0x368c0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e2f: add byte ptr [rbp + 0x48], dl; mov ebp, esp; lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401dff: add byte ptr [rbp + 0x48], dl; mov ebp, esp; lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x000000000040516f: add byte ptr [rbp + 0x48], dl; mov ebp, esp; mov al, 1; mov rsp, rbp; pop rbp; ret; 
0x0000000000402557: add byte ptr [rbp + 0xa], dh; cmp rdx, rcx; ja 0x2530; or rax, 0xffffffffffffffff; ret; 
0x000000000040aa4d: add byte ptr [rbp + 0xc], dh; mov rax, rcx; ret; 
0x0000000000426dac: add byte ptr [rbp + 0xd], dh; and edx, 0x30; je 0x26dbc; mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x00000000004211cf: add byte ptr [rbp + 0xd], dh; mov rdi, rbx; mov esi, 0x80; call 0x20fb0; pop rbx; ret; 
0x000000000042121f: add byte ptr [rbp + 0xd], dh; mov rdi, rbx; mov esi, 0x80; call 0x210a0; pop rbx; ret; 
0x000000000043a5b2: add byte ptr [rbp + 0xe], bh; mov rax, qword ptr [rsp]; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004030df: add byte ptr [rbp + 3], dh; xor eax, eax; ret; 
0x0000000000403a95: add byte ptr [rbp + 3], dh; xor eax, eax; ret; 
0x0000000000429f27: add byte ptr [rbp + 4], dh; mov al, 1; jmp 0x29f30; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000043a36c: add byte ptr [rbp + 4], dh; mov al, 1; jmp 0x3a375; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000423ebc: add byte ptr [rbp + 5], dh; call 0x23c80; mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041c9a2: add byte ptr [rbp + 6], dh; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000434048: add byte ptr [rbp + 8], dh; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340d1: add byte ptr [rbp + 8], dh; mov rax, 0xffffffffffffffff; ret; 
0x0000000000449bd9: add byte ptr [rbp + rax + 0x48], dh; cmp edx, ecx; jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x0000000000447c85: add byte ptr [rbp + rax + 0x48], dh; cmp edx, edi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x0000000000403a90: add byte ptr [rbp + rax - 0x80], dh; add byte ptr ds:[rbp + 3], dh; xor eax, eax; ret; 
0x0000000000431d75: add byte ptr [rbp + rcx*4 + 5], cl; and edi, dword ptr [rdi]; add al, 0; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000045026e: add byte ptr [rbp - 0x11], dh; mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000449ba9: add byte ptr [rbp - 0x14], dh; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000041b3fb: add byte ptr [rbp - 0x16], dh; pop rbx; ret; 
0x0000000000447acc: add byte ptr [rbp - 0x17], dh; xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x00000000004341e5: add byte ptr [rbp - 0x18], dh; ret; 
0x0000000000434215: add byte ptr [rbp - 0x18], dh; ret; 
0x000000000044ba07: add byte ptr [rbp - 0x1a], dh; xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000447a82: add byte ptr [rbp - 0x1d], dh; ret; 
0x0000000000403a54: add byte ptr [rbp - 0x1f], dh; mov rax, 0xffffffffffffffff; ret; 
0x000000000043a329: add byte ptr [rbp - 0x24], dh; lea rsp, [rsp + 8]; ret; 
0x000000000041a255: add byte ptr [rbp - 0x28], dh; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2f5: add byte ptr [rbp - 0x28], dh; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a4d: add byte ptr [rbp - 0x30], dh; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041b47e: add byte ptr [rbp - 0x31], dh; pop r13; pop r12; pop rbx; ret; 
0x0000000000434229: add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434249: add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x0000000000453d09: add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x0000000000403165: add byte ptr [rbp - 0x50], dh; xor eax, eax; ret; 
0x00000000004137ba: add byte ptr [rbp - 0x55], dh; ret; 
0x00000000004479c7: add byte ptr [rbp - 0xa], dh; lea rax, [rdi + rdx]; ret; 
0x0000000000404559: add byte ptr [rbp - 0xc], dh; ret; 
0x000000000042147d: add byte ptr [rbp], ah; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041c56b: add byte ptr [rbp], ah; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x0000000000423bf6: add byte ptr [rbx + 0x1e88300], cl; ret; 
0x0000000000454ac7: add byte ptr [rbx + 0x30101e8], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044d180: add byte ptr [rbx + 0x48082444], cl; lea esp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000423bbf: add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x0000000000423bbf: add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x2990; call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x000000000043b8ff: add byte ptr [rbx + 0x48], dl; mov ebx, edi; call 0x3b8e0; add rax, rbx; pop rbx; ret; 
0x00000000004169ef: add byte ptr [rbx + 0x48], dl; mov ebx, edi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169cf: add byte ptr [rbx + 0x48], dl; mov ebx, edi; lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x0000000000401081: add byte ptr [rbx + 0x50ffc7d], cl; jmp 0x107d; mov rsp, rbp; pop rbp; ret; 
0x000000000045137f: add byte ptr [rbx + 0x634801eb], al; ret; 
0x0000000000402a14: add byte ptr [rbx + 0x648d4800], cl; and al, 8; ret; 
0x0000000000405c08: add byte ptr [rbx + 0x7400943c], al; loope 0x5bf9; ret 0; 
0x0000000000413777: add byte ptr [rbx + 0x75002078], al; adc dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x0000000000403216: add byte ptr [rbx + 0x8747ff8], al; and edi, 0x7f; je 0x3224; mov al, 1; ret; 
0x0000000000457826: add byte ptr [rbx + 0x8747ff8], al; and edi, 0x7f; je 0x57834; mov al, 1; ret; 
0x000000000043358c: add byte ptr [rbx + 0xb], dh; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334bc: add byte ptr [rbx + 0xb], dh; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043319c: add byte ptr [rbx + 0xb], dh; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004330cc: add byte ptr [rbx + 0xb], dh; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000423bdb: add byte ptr [rbx + 0xc15ff38], cl; add eax, dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043487b: add byte ptr [rbx + 0xde810], cl; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432b1f: add byte ptr [rbx + 0xf48f207], cl; sub al, al; ret; 
0x0000000000432bdf: add byte ptr [rbx + 0xf48f307], cl; sub al, al; ret; 
0x000000000041f7ca: add byte ptr [rbx + rax*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c9: add byte ptr [rbx + rax*2 + 0x48], sil; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x0000000000423f97: add byte ptr [rbx + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x000000000040780b: add byte ptr [rbx + rcx*4], al; add r8d, r9d; add edi, r8d; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x0000000000412fe7: add byte ptr [rbx + rdx + 0x48], dh; mov edi, dword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000456d84: add byte ptr [rbx - 0x1183f008], al; xor eax, eax; ret; 
0x0000000000456c54: add byte ptr [rbx - 0x1183fe08], al; xor eax, eax; ret; 
0x00000000004557b0: add byte ptr [rbx - 0x3d83e505], al; pop rbx; ret; 
0x000000000042545e: add byte ptr [rbx - 0x49f0f738], al; clc; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x000000000045a09b: add byte ptr [rbx - 0x760217c1], cl; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004598e7: add byte ptr [rbx - 0x76b7fe3d], al; out 0xe8, eax; sbb eax, 0x84000001; ror byte ptr [rdi], 0x95; ret 0x8b48; 
0x0000000000417954: add byte ptr [rbx - 0x76fb6eb4], cl; ret 0x8d48; 
0x00000000004179bc: add byte ptr [rbx - 0x76fb6eb4], cl; ret 0x8d48; 
0x0000000000452991: add byte ptr [rbx - 0x7bf0fe18], al; ret 0; 
0x0000000000425cf7: add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x0000000000426755: add byte ptr [rbx - 0x7c2fd700], cl; rol byte ptr [rcx], 0x89; ret; 
0x0000000000406e1f: add byte ptr [rbx - 0xdaf9], cl; jg 0x6e27; ret; 
0x000000000045c02f: add byte ptr [rbx], ch; add al, byte ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000404e5f: add byte ptr [rcx + 0x10e0c1f8], cl; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e6f: add byte ptr [rcx + 0x10e0c1f8], cl; shr edi, 0x10; add eax, edi; ret; 
0x000000000040339b: add byte ptr [rcx + 0x1de802], cl; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040455f: add byte ptr [rcx + 0x1e083f8], cl; ret; 
0x000000000040456f: add byte ptr [rcx + 0x1e083f8], cl; ret; 
0x000000000041ad96: add byte ptr [rcx + 0x23], bh; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000416a16: add byte ptr [rcx + 0x2e], bh; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000443796: add byte ptr [rcx + 0x48042444], cl; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000450098: add byte ptr [rcx + 0x4e8c1d0], cl; xor eax, edx; and eax, 0xf; ret; 
0x0000000000427493: add byte ptr [rcx + 0x58d4802], cl; ret; 
0x000000000040d0c6: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d21f: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d27e: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d2cf: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d33b: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d38e: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d3ee: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041026a: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041464e: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000418334: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c768: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c7b8: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041ce5e: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041f004: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420052: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004200ec: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004201bc: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420257: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420308: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420397: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420501: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004205a0: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420dc8: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420e18: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000421c7e: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000424f7f: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043c411: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d621: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d7d2: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d891: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d9e5: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dc55: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dda1: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043def6: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dfb1: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440b83: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440d52: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440e33: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440fd7: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004412a7: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000441433: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004415c8: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004416a3: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004449ae: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004461af: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045227c: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004584fd: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045bb3b: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c32d: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045cc8d: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045cda9: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045d410: add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000417e82: add byte ptr [rcx + 0x5d8b48d8], cl; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000402cc8: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000403c2a: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040771c: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004077ac: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040a248: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040c57f: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040d12f: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040d762: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040de8d: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040df08: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004102f3: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000415366: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000415457: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041a885: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041d928: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041dca5: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041ddb9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e53e: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e5be: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e65c: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e6fc: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041ea58: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000420448: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004206d9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422545: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422651: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422741: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422e13: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042415f: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004251cd: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000426895: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042946e: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042b716: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042ce30: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d0cb: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d44a: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d50a: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042f2f7: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042f326: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd03: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd42: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd77: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fda6: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004302e9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004310b9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043a22c: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043e839: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043e9be: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043ea8d: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043ec8d: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043edf9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043eebe: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043f0d9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043f199: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044210b: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004422e0: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004423cf: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044261f: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004427cb: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004428c0: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442b1b: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442c0b: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000444122: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044c6fe: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000450406: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004507c1: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004509c9: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454255: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454588: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454680: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004564b2: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000457179: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004571e3: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000458882: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459251: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045995e: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459ca3: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459ea2: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045b834: add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004041f1: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000418979: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041d015: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000421e22: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000422202: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004261cb: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042692b: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000427f97: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000428dbb: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004290e9: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042a1d6: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042aff0: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042b317: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000439c72: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000445eb3: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000450b22: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000452dde: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004530f6: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045b5c5: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045b73b: add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000406267: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040afbe: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413e9c: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e9c6: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042492c: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424b31: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004253c5: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042598d: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000425aad: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042671c: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004270cb: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427ddd: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042979c: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042bb8f: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cc71: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042ff40: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434796: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043a0b8: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b0ea: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b80b: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043baa5: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043bd98: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000444904: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445629: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445c52: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004476a3: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a01c: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c504: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452883: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454ca4: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454f0d: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a51e: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a79f: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c6ba: add byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000423c72: add byte ptr [rcx + 0x648d4802], cl; and al, 8; ret; 
0x000000000043289a: add byte ptr [rcx + 0x66e0d3f1], cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432a8a: add byte ptr [rcx + 0x66e0d3f1], cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432a6a: add byte ptr [rcx + 0x66e0d3f1], cl; xor eax, dword ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043287a: add byte ptr [rcx + 0x66e0d3f1], cl; xor eax, dword ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x000000000040322f: add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x000000000045783f: add byte ptr [rcx + 0x7fe083f8], cl; ret; 
0x0000000000403425: add byte ptr [rcx + 0x8e8c1f8], cl; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404895: add byte ptr [rcx + 0x8e8c1f8], cl; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404975: add byte ptr [rcx + 0x8e8c1f8], cl; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e25: add byte ptr [rcx + 0x8e8c1f8], cl; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x000000000043245d: add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x1788; 
0x000000000043264d: add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x1788; 
0x000000000043283d: add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x8966; 
0x0000000000432a2d: add byte ptr [rcx + 0x9e0d3f1], cl; ret 0x8966; 
0x000000000040507d: add byte ptr [rcx + 0x9e2d3c1], cl; xlatb; call 0x5090; lea rsp, [rsp + 8]; ret; 
0x00000000004239d6: add byte ptr [rcx + 0xb], bh; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419026: add byte ptr [rcx + 0xc], bh; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000452b49: add byte ptr [rcx + 0xfe8c7], cl; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000444c37: add byte ptr [rcx + 0xffe1], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000041b706: add byte ptr [rcx + 6], bh; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041735f: add byte ptr [rcx + rbp + 0x48], dh; mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x0000000000453137: add byte ptr [rcx + rbp - 0x18], dh; adc dword ptr [rdi - 0x76b70004], esp; ret; 
0x0000000000433d12: add byte ptr [rcx + rbp - 0x28], al; ret; 
0x000000000040b422: add byte ptr [rcx + rbp - 0x28], cl; ret; 
0x0000000000447d5b: add byte ptr [rcx + rbp - 0x3f], cl; mov rax, rcx; ret; 
0x000000000044bb40: add byte ptr [rcx + rbp - 0x3f], cl; mov rax, rcx; ret; 
0x000000000040bad1: add byte ptr [rcx + rcx + 0x48], bh; lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf1: add byte ptr [rcx + rcx + 0x48], bh; lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000045339f: add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045339f: add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000418cbe: add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000417f3f: add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000458763: add byte ptr [rcx + rcx*4 + 2], al; mov esi, r8d; mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x000000000040ec5d: add byte ptr [rcx + rcx*4 - 0x11], cl; mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x000000000040ae6b: add byte ptr [rcx + rcx*4 - 0x18], cl; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000402d23: add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040698c: add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c88: add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f08: add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a03d: add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a083: add byte ptr [rcx + rcx*4 - 0x20], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406d2e: add byte ptr [rcx + rcx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f06: add byte ptr [rcx + rcx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421774: add byte ptr [rcx + rcx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042182f: add byte ptr [rcx + rcx*4 - 0x20], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f99: add byte ptr [rcx + rcx*4 - 0x20], cl; pop r13; pop r12; pop rbx; ret; 
0x0000000000444bf9: add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c3d: add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000413e2e: add byte ptr [rcx + rcx*4 - 9], cl; mov rax, r15; call rax; 
0x000000000045650b: add byte ptr [rcx + rdx + 0x48], dh; mov edi, ebx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004184b7: add byte ptr [rcx + rdx + 0x4c], dh; mov edx, ebp; mov rsi, r12; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x0000000000405c0c: add byte ptr [rcx + riz*8 - 0x17], dh; ret 0; 
0x0000000000407921: add byte ptr [rcx - 0x172cbe07], cl; mov dword ptr [rax], r8d; ret; 
0x00000000004178c6: add byte ptr [rcx - 0x1a], 0x7f; or eax, esi; ret; 
0x00000000004178e2: add byte ptr [rcx - 0x1a], 0x7f; or edi, esi; shr edi, 1; xor eax, edi; ret; 
0x000000000040459f: add byte ptr [rcx - 0x3850f008], cl; ret; 
0x0000000000430340: add byte ptr [rcx - 0x48], al; add dword ptr [rax], eax; add byte ptr [rax], al; call 0x30360; lea rsp, [rsp + 8]; ret; 
0x000000000041a2a9: add byte ptr [rcx - 0x4c], al; add dword ptr [rax + rcx*4 - 0x20], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411c79: add byte ptr [rcx - 0x73], cl; add r8b, byte ptr [r9 + 0xf]; mov dh, 0x55; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x00000000004047bf: add byte ptr [rcx - 0x76], al; add eax, dword ptr [rcx - 0x78]; add cl, byte ptr [rcx - 0x7d]; ret 0x4901; 
0x0000000000414b2d: add byte ptr [rcx - 0x77], al; pop rbp; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000410aba: add byte ptr [rcx - 0x7f], cl; ret 0xdc00; 
0x00000000004040ff: add byte ptr [rcx - 0x80], al; ret 0x4501; 
0x00000000004031ef: add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004031ff: add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x00000000004577ff: add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x000000000045780f: add byte ptr [rcx - 0xffda08], cl; add byte ptr [rax], al; shr eax, 8; ret; 
0x0000000000427a4c: add byte ptr [rcx], al; add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045281e: add byte ptr [rcx], al; add byte ptr [rax], al; mov rsi, qword ptr [rdx + rax*8]; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x000000000040d12c: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041d925: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e53b: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e5bb: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e659: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e6f9: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042273e: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000454252: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000454585: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045467d: add byte ptr [rcx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004103a6: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004103e5: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000410475: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004104b5: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004146ab: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416a69: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416c0c: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000416c4c: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004183df: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041d7d4: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041d8b3: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004226e3: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000424fe1: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000042582b: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004323d0: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004325c0: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004327b0: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004329a0: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000432b8f: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000432d5f: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000432f40: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433140: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433330: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000433530: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434b10: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434b60: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434bb0: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434c00: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434c4f: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000453180: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004540cb: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004551d4: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000455b65: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004584a7: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000458634: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000459545: add byte ptr [rcx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000450265: add byte ptr [rcx], al; add rdi, 8; cmp qword ptr [rdi], 0; jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000459a4c: add byte ptr [rcx], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000417f77: add byte ptr [rcx], al; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000424d99: add byte ptr [rcx], al; cmp dword ptr [rip + 0x6084b], 0x400; jl 0x24dac; call 0x24d10; lea rsp, [rsp + 8]; ret; 
0x000000000043a813: add byte ptr [rcx], al; jmp 0x3a819; mov al, 0x30; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000417f6d: add byte ptr [rcx], al; lea rax, [rip + 0x5097a]; mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x000000000041952d: add byte ptr [rcx], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042778d: add byte ptr [rcx], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041b1e0: add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b2b0: add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b340: add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b370: add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000040732f: add byte ptr [rcx], al; mov byte ptr [rax + 1], sil; ret; 
0x000000000041b210: add byte ptr [rcx], al; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2e0: add byte ptr [rcx], al; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b170: add byte ptr [rcx], al; mov eax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000417ee0: add byte ptr [rcx], al; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x0000000000426db9: add byte ptr [rcx], al; ret; 
0x00000000004539a0: add byte ptr [rcx], al; ret; 
0x000000000045bf10: add byte ptr [rcx], al; ret; 
0x000000000041b280: add byte ptr [rcx], al; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b310: add byte ptr [rcx], al; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000405693: add byte ptr [rcx], bh; ret 0x8f0f; 
0x0000000000405bba: add byte ptr [rcx], bh; ret 0x8f0f; 
0x00000000004055d4: add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000405964: add byte ptr [rcx], bh; ret 0xaf7f; 
0x000000000042782a: add byte ptr [rcx], bh; ret; 
0x00000000004278bf: add byte ptr [rcx], bh; ret; 
0x0000000000405958: add byte ptr [rcx], ch; fmul dword ptr [rcx - 0x7b7473fc]; and al, 0x48; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000424e2d: add byte ptr [rcx], ch; ret 0x58b; 
0x0000000000405561: add byte ptr [rcx], ch; ret 0x8941; 
0x000000000044539b: add byte ptr [rcx], ch; ret 0x8941; 
0x00000000004080c0: add byte ptr [rcx], ch; ret 0x8966; 
0x0000000000409af6: add byte ptr [rcx], ch; ret 0x8966; 
0x0000000000409c60: add byte ptr [rcx], ch; ret 0x8966; 
0x00000000004264f5: add byte ptr [rcx], ch; ret; 
0x00000000004265c4: add byte ptr [rcx], ch; ret; 
0x0000000000409e47: add byte ptr [rcx], ch; ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000043f7c4: add byte ptr [rcx], dh; leave; call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x0000000000443244: add byte ptr [rcx], dh; leave; call 0x43080; lea rsp, [rsp + 8]; ret; 
0x00000000004145ed: add byte ptr [rcx], dh; ror byte ptr [rax - 0x73], cl; mov esp, 0x16824; add al, ch; ret; 
0x0000000000424394: add byte ptr [rcx], dh; sar byte ptr [rdi + 4], cl; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x000000000041a6c3: add byte ptr [rcx], dh; sar byte ptr [rsi + 0xe8], cl; call 0x22e0; pop rbx; ret; 
0x0000000000438ebe: add byte ptr [rcx], dh; shr al, cl; retf 0xffe4; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000456e3c: add byte ptr [rdi + 0x82], bh; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000041d7fa: add byte ptr [rdi + 0xa], dh; lea rcx, [rip + 0x6531c]; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x000000000040b967: add byte ptr [rdi + 0xa], dh; lea rdx, [rip + 0x771af]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000402e1b: add byte ptr [rdi + 0xd], bh; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000418fb4: add byte ptr [rdi + 0xe3], bh; call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x000000000041b072: add byte ptr [rdi + 0xe8], bh; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403016: add byte ptr [rdi + 0xe], bh; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000449bf4: add byte ptr [rdi + 0xe], dh; and edi, 0xff; bt dword ptr [rsi], edi; jae 0x49c05; mov al, 1; ret; 
0x0000000000425608: add byte ptr [rdi + 1], bh; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000424201: add byte ptr [rdi + 4], bh; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x0000000000413583: add byte ptr [rdi + rax + 0x48], dh; mov eax, dword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x000000000041968b: add byte ptr [rdi + rax + 0x48], dh; mov ecx, dword ptr [rax]; mov qword ptr [rcx + 0x20], r8; mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x0000000000417c75: add byte ptr [rdi + rax + 0x48], dh; mov ecx, dword ptr [rdi]; mov rdx, qword ptr [rcx + 8]; mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x000000000041932c: add byte ptr [rdi + rax + 0x48], dh; mov edx, dword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x0000000000447353: add byte ptr [rdi + rcx - 0x4a], al; ret; 
0x00000000004508e4: add byte ptr [rdi + rdx + 0x48], dh; mov edi, ebx; mov rdx, r13; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x0000000000409549: add byte ptr [rdi - 0x1c], bh; mov rbx, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417fcb: add byte ptr [rdi - 0x2e], dh; pop rbx; ret; 
0x000000000044eeaf: add byte ptr [rdi - 0x73], ah; add al, 0x76; add eax, 2; ret; 
0x000000000044f03f: add byte ptr [rdi - 0x73], ah; add al, 0x76; ret; 
0x000000000041cc83: add byte ptr [rdi], ah; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc83: add byte ptr [rdi], ah; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x0000000000421984: add byte ptr [rdi], ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004218dd: add byte ptr [rdi], ah; mov al, r12b; pop r13; pop r12; pop rbx; ret; 
0x0000000000421772: add byte ptr [rdi], ah; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042182d: add byte ptr [rdi], ah; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415364: add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000041dca3: add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000041ddb7: add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x0000000000422543: add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000042264f: add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000041ca03: add byte ptr [rdi], ah; pop rbx; ret; 
0x000000000041dbb8: add byte ptr [rdi], ah; pop rbx; ret; 
0x0000000000421a18: add byte ptr [rdi], ah; pop rbx; ret; 
0x0000000000421aa6: add byte ptr [rdi], ah; pop rbx; ret; 
0x00000000004243dd: add byte ptr [rdi], ch; jne 0x243e7; mov byte ptr [rip + 0x60a49], al; lea rsp, [rsp + 8]; ret; 
0x000000000042be35: add byte ptr [rdi], ch; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e938: add byte ptr [rdi], cl; mov bh, 0x10; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e627: add byte ptr [rdi], cl; mov bh, 0x10; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e0ed: add byte ptr [rdi], cl; mov bh, 0x10; mov rsi, rsp; mov rdi, r13; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000040ed67: add byte ptr [rdi], cl; mov bh, 0x30; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x00000000004117b2: add byte ptr [rdi], cl; mov bh, 0x30; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000423048: add byte ptr [rdi], cl; mov bh, 0x30; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000414cda: add byte ptr [rdi], cl; mov bh, 0x38; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418632: add byte ptr [rdi], cl; mov bh, 0x38; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x000000000041d7df: add byte ptr [rdi], cl; mov bh, 0x87; je 0x1d7e8; add byte ptr [rax], al; ret; 
0x00000000004048ff: add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x00000000004049df: add byte ptr [rdi], cl; mov bh, 0xc7; ret; 
0x0000000000446e8c: add byte ptr [rdi], cl; mov bh, 4; and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x000000000043293f: add byte ptr [rdi], cl; mov bh, 7; cvtsi2sd xmm0, eax; ret; 
0x00000000004329ef: add byte ptr [rdi], cl; mov bh, 7; cvtsi2ss xmm0, eax; ret; 
0x000000000042543f: add byte ptr [rdi], cl; mov dh, 0x38; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000043a7ad: add byte ptr [rdi], cl; mov dh, 0xf0; mov rdi, qword ptr [rsp]; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x000000000042552d: add byte ptr [rdi], cl; mov dh, 0xf8; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425482: add byte ptr [rdi], cl; mov dh, 0xf8; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x000000000043236f: add byte ptr [rdi], cl; mov dh, 7; cvtsi2sd xmm0, eax; ret; 
0x000000000043241f: add byte ptr [rdi], cl; mov dh, 7; cvtsi2ss xmm0, eax; ret; 
0x0000000000418ae3: add byte ptr [rdi], cl; mov edi, 0x14e8f6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045bc33: add byte ptr [rdi], cl; mov edi, 0x14e8f6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040874c: add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409290: add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000415a7a: add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x00000000004162ba: add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x00000000004326c9: add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000045926f: add byte ptr [rdi], cl; mov edi, 0x8e0c1c7; movsx esi, si; or eax, esi; movsx eax, ax; ret; 
0x000000000045927f: add byte ptr [rdi], cl; mov edi, 0x8e0c1c7; or eax, 0x7f; movsx eax, ax; ret; 
0x0000000000408cb0: add byte ptr [rdi], cl; mov edi, 0xbf0fb85d; mov r8b, 0x29; ret; 
0x0000000000415a3a: add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x000000000041627a: add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x00000000004324d9: add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x000000000040274f: add byte ptr [rdi], cl; scasb al, byte ptr [rdi]; clc; ret; 
0x000000000041f759: add byte ptr [rdi], cl; test byte ptr [rax + 0x48000000], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f758: add byte ptr [rdi], cl; test byte ptr [rax + 0x48000000], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f659: add byte ptr [rdi], cl; test byte ptr [rbp + 0x48000000], bh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f658: add byte ptr [rdi], cl; test byte ptr [rbp + 0x48000000], bh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000045cf31: add byte ptr [rdi], cl; test byte ptr [rbp + 0x66000003], dh; sub eax, 0x840f0001; ret; 
0x0000000000427686: add byte ptr [rdi], cl; test dword ptr [rax + rax - 0x49f10000], ebx; ret; 
0x000000000041a866: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000429c6c: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000429cfc: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000429d8c: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000042c06c: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000042c0fc: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000042c18c: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000446fbc: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000447274: add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000459a3f: add byte ptr [rdx + 0x148b4800], cl; and al, 0x48; add dword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004341d9: add byte ptr [rdx + 0x17880a14], cl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x0000000000434209: add byte ptr [rdx + 0x17880a14], cl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x000000000040206f: add byte ptr [rdx + 0x2881104], cl; inc rdx; dec r8; jne 0x2070; ret; 
0x0000000000425bab: add byte ptr [rdx + 0x2eb0204], cl; xor al, al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000455b0d: add byte ptr [rdx + 0x40], bh; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000459a80: add byte ptr [rdx + 0x800], bh; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000417244: add byte ptr [rdx + rcx + 0x48], dh; mov edi, ebx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x00000000004517d7: add byte ptr [rdx + rdx + 0x48], dh; mov esi, dword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451afa: add byte ptr [rdx + rdx + 0x48], dh; mov esi, dword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451e35: add byte ptr [rdx + rdx + 0x48], dh; mov esi, dword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452178: add byte ptr [rdx + rdx + 0x48], dh; mov esi, dword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000417923: add byte ptr [rdx + rdx*8 - 0x39], bh; add eax, 0x521f0; jo 0x17930; add byte ptr [rax], al; ret; 
0x000000000041db56: add byte ptr [rdx + riz*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041db55: add byte ptr [rdx + riz*2 + 0x48], sil; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x0000000000447a77: add byte ptr [rdx + rsi], 0x20; add rsi, 1; cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x0000000000405aa8: add byte ptr [rdx], 0; add byte ptr [rax + 0x29], cl; ret 0x3c83; 
0x0000000000405df6: add byte ptr [rdx], 0; add byte ptr [rax + 0x39], cl; ret 0x917d; 
0x0000000000427a6d: add byte ptr [rdx], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000407719: add byte ptr [rdx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004077a9: add byte ptr [rdx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040a245: add byte ptr [rdx], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000416ab6: add byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000042752a: add byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004554f7: add byte ptr [rdx], bl; jbe 0x55502; mov byte ptr [rip + 0x233ee], 4; and eax, 0xff; pop rbx; ret; 
0x00000000004385e7: add byte ptr [rip + 0xff], ah; lea rdx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dcc: add byte ptr [rip + 0xff], ah; lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000415a1a: add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000041625a: add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000424ecb: add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x00000000004322e9: add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000415a5a: add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000041629a: add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000417de6: add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x00000000004328b9: add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000040d87e: add byte ptr [rip + 0xffff], ah; ret; 
0x000000000041155e: add byte ptr [rip + 0xffff], ah; ret; 
0x000000000042547e: add byte ptr [rsi + 0x25], ah; ja 0x25483; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x00000000004514f0: add byte ptr [rsi + 0x26], bh; call 0x36bc0; lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x0000000000409368: add byte ptr [rsi + 0x41], ah; mov ebp, 0xbf0f0001; ret; 
0x000000000040e6a3: add byte ptr [rsi + 0x44], ah; mov dword ptr [rax], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040947c: add byte ptr [rsi + 0x45], ah; test ecx, ecx; jg 0x9438; movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c9: add byte ptr [rsi + 0x5409], bh; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cb29: add byte ptr [rsi + 0xd7b2], bh; call 0x1ca10; pop rbx; ret; 
0x0000000000424334: add byte ptr [rsi + 0xd7b2], bh; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x000000000041cbc9: add byte ptr [rsi + 0xd7b4], bh; call 0x1ca10; pop rbx; ret; 
0x00000000004183d0: add byte ptr [rsi + 0xff], bh; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000459536: add byte ptr [rsi + 0xff], bh; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042be72: add byte ptr [rsi + 1], bh; call 0xd400; pop rbx; ret; 
0x0000000000429a56: add byte ptr [rsi + 1], bh; call 0xfb70; pop rbx; ret; 
0x00000000004546c5: add byte ptr [rsi + 1], bh; mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415b87: add byte ptr [rsi + 4], dh; mov al, byte ptr [rsp + 1]; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000406fa9: add byte ptr [rsi + 5], bh; mov edx, 0xff; mov byte ptr [rax], dl; ret; 
0x000000000041dadc: add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041f61c: add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041dadc: add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f61c: add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041dadb: add byte ptr [rsi + rax + 0x48], sil; mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041f61b: add byte ptr [rsi + rax + 0x48], sil; mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041dadb: add byte ptr [rsi + rax + 0x48], sil; mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f61b: add byte ptr [rsi + rax + 0x48], sil; mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000040dae2: add byte ptr [rsi + rax - 0x48], dh; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000041a737: add byte ptr [rsi + rax - 1], dh; adc eax, 0x4f448; lea rsp, [rsp + 8]; ret; 
0x000000000041aa42: add byte ptr [rsi + rax - 1], dh; adc eax, 0x6a32d; lea rsp, [rsp + 8]; ret; 
0x0000000000418d01: add byte ptr [rsi + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x000000000045058b: add byte ptr [rsi + rcx + 0x48], dh; mov edi, ebx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x000000000045051e: add byte ptr [rsi + rcx + 0x48], dh; mov edi, ebx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x0000000000417e5d: add byte ptr [rsi + rcx + 0x48], dh; mov esi, ebp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000425aeb: add byte ptr [rsi + rcx - 0x77], dh; ror byte ptr [rax - 0x73], 1; or eax, 0x5fb09; mov byte ptr [rcx + rax], dil; ret; 
0x000000000043b52a: add byte ptr [rsi + riz + 0x48], dh; mov esi, dword ptr [rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000044a0b7: add byte ptr [rsi - 0x12], dh; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000044a077: add byte ptr [rsi - 0x12], dh; lea rcx, [rax + 1]; sub rcx, rdx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000040928c: add byte ptr [rsi - 0x48], ah; add dword ptr [rax], eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000041d803: add byte ptr [rsi - 0x75], ah; adc dword ptr [rsi - 0x77], esp; nop; je 0x1d80f; add byte ptr [rax], al; ret; 
0x000000000040b970: add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x000000000040d861: add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x000000000040db07: add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x0000000000411591: add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x000000000040cbc2: add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rsi - 0x77]; ret; 
0x0000000000425600: add byte ptr [rsi - 0x77], ah; add bh, byte ptr [rsi + 1]; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000404e0f: add byte ptr [rsi - 0x77], ah; clc; and eax, 0xf; ret; 
0x000000000040d9cf: add byte ptr [rsi - 0x77], ah; clc; lea rdx, [rip + 0x75146]; mov word ptr [rdx], ax; ret; 
0x000000000040d9df: add byte ptr [rsi - 0x77], ah; clc; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9ef: add byte ptr [rsi - 0x77], ah; clc; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040bffc: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040c05f: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040c3c0: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040c8b8: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040cac9: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040d569: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040d58a: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000041ca90: add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040bc7d: add byte ptr [rsi - 0x77], ah; ret; 
0x0000000000408f95: add byte ptr [rsi - 0x7f], ah; ret; 
0x0000000000408fd8: add byte ptr [rsi - 0x7f], ah; ret; 
0x00000000004090a3: add byte ptr [rsi - 0x7f], ah; ret; 
0x00000000004090de: add byte ptr [rsi - 0x7f], ah; ret; 
0x0000000000458e97: add byte ptr [rsi - 0x7f], ah; ret; 
0x000000000040845c: add byte ptr [rsi - 0x7f], ah; sti; ret; 
0x0000000000415b43: add byte ptr [rsi - 9], ah; fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000416383: add byte ptr [rsi - 9], ah; fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000041bc83: add byte ptr [rsi], 0; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bcd5: add byte ptr [rsi], 0; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bc35: add byte ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc76: add byte ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc8: add byte ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x000000000041751e: add byte ptr [rsp + 0x48], dh; mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x0000000000413040: add byte ptr [rsp + rcx + 0x48], dh; mov edi, dword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000415242: add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415242: add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415212: add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415212: add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151e2: add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e2: add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045316d: add byte ptr [rsp + rcx + 0x48], dh; mov edi, esp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x000000000041527a: add byte ptr [rsp + rcx + 0x48], dh; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041527a: add byte ptr [rsp + rcx + 0x48], dh; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000417164: add byte ptr [rsp + rdx + 0x48], dh; mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000416a18: add byte ptr cs:[rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a2e: add byte ptr cs:[rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000411114: add byte ptr ds:[rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043110a: add byte ptr ds:[rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431109: add byte ptr ds:[rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000403a94: add byte ptr ds:[rbp + 3], dh; xor eax, eax; ret; 
0x0000000000447c84: add byte ptr ds:[rbp + rax + 0x48], dh; cmp edx, edi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x0000000000456e8f: add byte ptr es:[rax], al; add al, ch; or byte ptr [rax - 0x72b70006], dh; and al, 8; ret; 
0x0000000000432440: add byte ptr es:[rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004325e0: add byte ptr es:[rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004216cd: add byte ptr fs:[rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000433687: add byte ptr fs:[rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042147e: add byte ptr gs:[rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004118ed: add byte ptr ss:[rax], al; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000414ce0: add byte ptr ss:[rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000423e37: add ch, al; adc esp, dword ptr [rcx - 1]; dec dword ptr [rax - 0x77]; ret; 
0x000000000040339d: add ch, al; sbb eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x0000000000444f15: add ch, bh; push rdx; movups xmm0, xmmword ptr [rsp + 0x20]; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x0000000000425bae: add ch, bl; add dh, byte ptr [rax]; shl byte ptr [rip + 0xff], 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415d3a: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d9a: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164fa: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041655a: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed79: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043116f: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a76: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a99: add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000410732: add ch, bl; sub dword ptr [rcx - 0x7d], ecx; ret 0xeb03; 
0x0000000000401d01: add ch, bl; xor ebp, eax; mov r11d, 0x89480001; ret; 
0x0000000000452eca: add ch, byte ptr [rip + 0x4de80003]; or ah, bh; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000406e10: add cl, al; out 0x1f, al; or edx, esi; mov dword ptr [rax], edx; ret; 
0x000000000042380c: add cl, al; out 0xa, al; or eax, esi; and eax, 0xffff; ret; 
0x000000000045cab5: add cl, al; out 0xc, al; or eax, esi; and ecx, 0xfff; or eax, ecx; ret; 
0x0000000000406871: add cl, al; out 0xf, al; or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x0000000000417bbf: add cl, al; out 4, eax; movsxd rdi, edi; movsxd rsi, esi; lea rax, [rdi + rsi]; ret; 
0x0000000000415d1a: add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164da: add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042edd9: add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043114f: add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431636: add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431659: add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004043f7: add cl, byte ptr [rax + 0x39]; bnd jl 0x43ff; xor eax, eax; ret; 
0x00000000004035fe: add cl, byte ptr [rax + 0x39]; clc; ja 0x35f8; ret; 
0x000000000044f537: add cl, byte ptr [rax + 0x39]; retf 0xdb77; ret; 
0x000000000044f57c: add cl, byte ptr [rax + 0x39]; retf 0xde77; ret; 
0x0000000000411360: add cl, byte ptr [rax + 0x39]; sar byte ptr [rdi - 0x56], 1; ret; 
0x00000000004038bc: add cl, byte ptr [rax + 0x39]; stc; ja 0x3890; xor eax, eax; ret; 
0x0000000000425438: add cl, byte ptr [rax - 0x73]; add eax, 0x4c4f0; movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000407deb: add cl, byte ptr [rax - 0x73]; and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000409ec1: add cl, byte ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000423c74: add cl, byte ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043a928: add cl, byte ptr [rax - 0x75]; add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000044519d: add cl, byte ptr [rax - 0x77]; ret 0x8944; 
0x00000000004453af: add cl, byte ptr [rax - 0x77]; ret 0x8944; 
0x000000000042fecf: add cl, byte ptr [rax - 0x77]; ret; 
0x0000000000411393: add cl, byte ptr [rax - 0x7b]; sar byte ptr [rax + rbp + 0x48], 0xc7; ret 0xffff; 
0x0000000000411403: add cl, byte ptr [rax - 0x7b]; sar byte ptr [rax + rbp + 0x48], 0xc7; ret 0xffff; 
0x0000000000411303: add cl, byte ptr [rax - 0x7b]; sar byte ptr [rbp + rbx*2 + 0x48], 0xc7; ret 0xffff; 
0x0000000000402056: add cl, byte ptr [rax - 0x7d]; ret 0x4908; 
0x0000000000402031: add cl, byte ptr [rax - 0x7d]; ret 0x4d04; 
0x000000000040200b: add cl, byte ptr [rax - 0x7d]; ret 0xf601; 
0x000000000040201f: add cl, byte ptr [rax - 0x7d]; ret 0xf602; 
0x000000000044f578: add cl, byte ptr [rax - 0x7d]; rol dword ptr [rdx], 0x48; cmp edx, ecx; ja 0x4f560; ret; 
0x0000000000402074: add cl, byte ptr [rax - 1]; ret 0xff49; 
0x0000000000416fda: add cl, byte ptr [rbx - 0x7cb7e3bd]; ret; 
0x000000000041fcd7: add cl, byte ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040371e: add cl, byte ptr [rcx + rcx*4 - 0x38]; ret; 
0x000000000041ec39: add cl, byte ptr [rcx - 0x7d]; and al, 0x18; add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x000000000041ed4d: add cl, byte ptr [rcx - 0x7d]; and al, 0x18; add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x000000000040468d: add cl, byte ptr [rcx - 0x7d]; ret 0x4901; 
0x00000000004047c5: add cl, byte ptr [rcx - 0x7d]; ret 0x4901; 
0x0000000000410608: add cl, byte ptr [rcx - 0x7d]; ret 0xe903; 
0x0000000000416e6a: add cl, byte ptr [rdi]; mov dh, 0x52; add dword ptr [rax - 0x73], ecx; add al, 0x11; ret; 
0x0000000000416e69: add cl, byte ptr [rdi]; mov dh, 0x52; add dword ptr [rax - 0x73], ecx; add al, 0x11; ret; 
0x00000000004315c7: add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043187f: add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a07: add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cbf: add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043216f: add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e42: add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000040aa49: add cl, byte ptr [rdx]; cmp byte ptr [rdi], 0; jne 0xaa5c; mov rax, rcx; ret; 
0x000000000043abe5: add cl, ch; ret; 
0x000000000043b18a: add cl, dh; add byte ptr [rax], al; mov rbx, qword ptr [rbp - 0x598]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417f75: add dh, al; add byte ptr [rcx], al; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x000000000041b1de: add dh, al; add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b2ae: add dh, al; add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b33e: add dh, al; add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b36e: add dh, al; add byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b20e: add dh, al; add byte ptr [rcx], al; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2de: add dh, al; add byte ptr [rcx], al; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b16e: add dh, al; add byte ptr [rcx], al; mov eax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000417ede: add dh, al; add byte ptr [rcx], al; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x000000000041b27e: add dh, al; add byte ptr [rcx], al; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b30e: add dh, al; add byte ptr [rcx], al; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000040aa47: add dh, al; add cl, byte ptr [rdx]; cmp byte ptr [rdi], 0; jne 0xaa5c; mov rax, rcx; ret; 
0x000000000043655a: add dh, al; mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000044950c: add dh, al; mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000044b2ac: add dh, al; mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x0000000000452ec2: add dh, al; sbb byte ptr [rcx], al; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000044f82f: add dh, bh; mov rax, qword ptr [rbx]; mov byte ptr [rax + 1], 0xff; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043a816: add dh, byte ptr [rax + 0xff2530]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043e69e: add dh, byte ptr [rax]; fisttp dword ptr [rax + 0x648d48d8]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000441f31: add dh, byte ptr [rax]; fisttp dword ptr [rax + 0x648d48d8]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004130fd: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000450c76: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; pop r12; pop rbx; ret; 
0x000000000043c167: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450beb: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450e69: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000413f98: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x0000000000451341: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x0000000000450bb2: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x0000000000412f84: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004131da: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000425c2f: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429aa8: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429f2d: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042c329: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043a372: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450ca6: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e2a: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e97: add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004163cf: add dh, byte ptr [rax]; shl byte ptr [rip + 0xff], 0x48; lea esp, [rsp + 0x108]; ret; 
0x0000000000425bb0: add dh, byte ptr [rax]; shl byte ptr [rip + 0xff], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000041c999: add dh, byte ptr [rbp + 0x3e]; cmp dword ptr [rbx + 4], 0xd7b2; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000414313: add dh, byte ptr [rbp + 0xc]; mov rdi, qword ptr [r15]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000413f92: add dh, byte ptr [rbp + 4]; mov al, 1; jmp 0x13f9b; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000419760: add dh, byte ptr [rbp + 7]; call 0x196a0; mov bl, 1; mov al, bl; pop rbx; ret; 
0x00000000004025a8: add dh, byte ptr [rbp + 8]; inc r8; jne 0x25a0; xor eax, eax; ret; 
0x0000000000459fbe: add dh, byte ptr [rbp + rbx - 0x39]; add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x00000000004021ea: add dh, byte ptr [rbp - 0xd]; ret; 
0x00000000004363cd: add dh, byte ptr [rbx + 0x48d88801]; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042beac: add dh, byte ptr [rbx + 3]; mov al, 1; ret; 
0x0000000000433d31: add dh, byte ptr [rcx]; leave; mov eax, ecx; ret; 
0x00000000004104ed: add dh, byte ptr [rcx]; rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000041079d: add dh, byte ptr [rcx]; rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000041328f: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000413449: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000045ba3c: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x48; ret; 
0x0000000000456cd8: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x000000000040452c: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041337b: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041354d: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b696: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434309: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434349: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434389: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004343c9: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434409: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000434449: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004435fe: add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433c01: add dh, byte ptr [rcx]; ror byte ptr [rcx + 0x648d48d0], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000405279: add dh, byte ptr [rdi - 0x34]; movsd qword ptr [rax], xmm0; ret; 
0x000000000041c9b8: add dh, byte ptr [rsi + rax + 0x48]; mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x0000000000408746: add dh, byte ptr [rsp + rax + 0x66]; add eax, 0xbf0f0001; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000402181: add dh, dh; ret 0x7402; 
0x0000000000402023: add dh, dh; ret 0x7404; 
0x0000000000402195: add dh, dh; ret 0x7404; 
0x0000000000401ff9: add dh, dh; ret 0x7407; 
0x0000000000443a31: add dh, dl; movups xmmword ptr [r8], xmm0; ret; 
0x00000000004330d5: add dl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x00000000004334c5: add dl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x00000000004437d6: add dl, dh; cvtpi2ps xmm0, mm0; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x0000000000443a2d: add dl, dh; divps xmm0, xmmword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x000000000042d836: add dl, dh; movups xmm0, xmmword ptr [rax]; ret; 
0x000000000042d846: add dl, dh; movups xmm0, xmmword ptr [rax]; ret; 
0x00000000004054a2: add dl, dh; subps xmm1, xmmword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x0000000000401640: add dword ptr [eax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffa8: add dword ptr [r12 + 0xc], 1; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411953: add dword ptr [r14 - 0x77], esp; ret; 
0x0000000000411a13: add dword ptr [r14 - 0x77], esp; ret; 
0x000000000041cc97: add dword ptr [r14], 0x108b4800; test rdx, rdx; je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040a6ee: add dword ptr [r8 + 0x39], ecx; ret 0x97d; 
0x000000000040a7ce: add dword ptr [r8 + 0x39], ecx; ret 0x97d; 
0x0000000000446da4: add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e05: add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043a92d: add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a9c3: add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000403aa2: add dword ptr [rax + 0x39], ecx; cli; ja 0x3a68; xor eax, eax; ret; 
0x0000000000430a13: add dword ptr [rax + 0x39], ecx; ret 0x3f7f; 
0x0000000000430e93: add dword ptr [rax + 0x39], ecx; ret 0x3f7f; 
0x000000000044d316: add dword ptr [rax + 0x39], ecx; ret 0x417e; 
0x000000000044d609: add dword ptr [rax + 0x39], ecx; ret 0x417e; 
0x000000000044d7f3: add dword ptr [rax + 0x39], ecx; ret 0x417e; 
0x000000000040a6ef: add dword ptr [rax + 0x39], ecx; ret 0x97d; 
0x000000000040a7cf: add dword ptr [rax + 0x39], ecx; ret 0x97d; 
0x000000000040a874: add dword ptr [rax + 0x39], ecx; ret 0x97d; 
0x000000000040a8ed: add dword ptr [rax + 0x39], ecx; ret 0x97d; 
0x000000000040a96c: add dword ptr [rax + 0x39], ecx; ret 0x97d; 
0x000000000040a9f5: add dword ptr [rax + 0x39], ecx; ret 0x97d; 
0x00000000004482f3: add dword ptr [rax + 0x39], ecx; ret 0xa7c; 
0x000000000042fdd3: add dword ptr [rax + 0x39], ecx; ret 0xa7f; 
0x00000000004072fb: add dword ptr [rax + 0x3a], eax; cmp dword ptr [rbp + 4], esi; mov rax, rdx; ret; 
0x000000000040cf73: add dword ptr [rax + 0x3a], eax; cmp dword ptr [rbp + 4], esi; mov rax, rdx; ret; 
0x000000000042bdae: add dword ptr [rax + 0x63], ecx; leave; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004344f2: add dword ptr [rax + 0x63], ecx; ret 0x2948; 
0x00000000004592f4: add dword ptr [rax + 0x63], ecx; ret 0x3948; 
0x0000000000423efb: add dword ptr [rax + 0x63], ecx; ret; 
0x000000000042488d: add dword ptr [rax + 0x63], ecx; ret; 
0x000000000043465a: add dword ptr [rax + 0x63], ecx; ret; 
0x0000000000451382: add dword ptr [rax + 0x63], ecx; ret; 
0x00000000004452ec: add dword ptr [rax + 0x63], ecx; test byte ptr [rax + rsi*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x00000000004363cf: add dword ptr [rax + 0x648d48d8], ecx; and al, 0x10; pop rbx; ret; 
0x000000000040848a: add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0x667f; 
0x000000000040846b: add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0xd7e; 
0x0000000000411c82: add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x00000000004125af: add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x0000000000412c0c: add dword ptr [rax + 1], ecx; ret; 
0x000000000041b171: add dword ptr [rax + 1], edi; lea rsp, [rsp + 8]; ret; 
0x00000000004125ae: add dword ptr [rax + 1], r9d; ret 0x8b48; 
0x0000000000451274: add dword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000045b869: add dword ptr [rax + rax], edx; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041eff9: add dword ptr [rax + rcx*4 - 0x20], eax; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041a2ac: add dword ptr [rax + rcx*4 - 0x20], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004341e2: add dword ptr [rax - 0x178affc1], eax; ret; 
0x0000000000434212: add dword ptr [rax - 0x178affc1], eax; ret; 
0x00000000004365fc: add dword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000416e6e: add dword ptr [rax - 0x73], ecx; add al, 0x11; ret; 
0x0000000000417f6e: add dword ptr [rax - 0x73], ecx; add eax, 0x5097a; mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x00000000004262a2: add dword ptr [rax - 0x73], ecx; add eax, 0x5ed86; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x000000000043a930: add dword ptr [rax - 0x73], ecx; and al, 0x18; ret; 
0x000000000041952e: add dword ptr [rax - 0x73], ecx; and al, 8; pop r12; pop rbx; ret; 
0x000000000041fc79: add dword ptr [rax - 0x73], ecx; and al, 8; pop r12; pop rbx; ret; 
0x000000000042778e: add dword ptr [rax - 0x73], ecx; and al, 8; pop r12; pop rbx; ret; 
0x000000000041b1e1: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000041b2b1: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000041b341: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000041b371: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000042fcc6: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000043426d: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000043428d: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x00000000004365ff: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000043a9c6: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000044fa1f: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x0000000000451277: add dword ptr [rax - 0x73], ecx; and al, 8; ret; 
0x000000000041fd6a: add dword ptr [rax - 0x73], ecx; jl 0x1fd93; or byte ptr [rax - 0x73], cl; add eax, 0x63fe9; call qword ptr [rax + 0x30]; 
0x00000000004287a3: add dword ptr [rax - 0x73], ecx; jl 0x287cc; or al, ch; ret 0xfe67; 
0x0000000000452ec6: add dword ptr [rax - 0x75], ecx; cmp eax, 0x32d02; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000042fc7e: add dword ptr [rax - 0x75], ecx; xor al, ch; cdq; mov ebx, 0x8d480000; and al, 8; ret; 
0x0000000000405175: add dword ptr [rax - 0x77], ecx; in al, dx; pop rbp; ret; 
0x00000000004598ea: add dword ptr [rax - 0x77], ecx; out 0xe8, eax; sbb eax, 0x84000001; ror byte ptr [rdi], 0x95; ret 0x8b48; 
0x0000000000405997: add dword ptr [rax - 0x77], ecx; ret 0x2481; 
0x00000000004059af: add dword ptr [rax - 0x77], ecx; ret 0x2481; 
0x000000000042fdb3: add dword ptr [rax - 0x77], ecx; ret 0x2948; 
0x000000000042fdb2: add dword ptr [rax - 0x77], ecx; ret 0x2948; 
0x000000000043bd08: add dword ptr [rax - 0x77], ecx; ret 0x8948; 
0x000000000041ef43: add dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x00000000004070dd: add dword ptr [rax - 0x77], ecx; ret; 
0x000000000040cc66: add dword ptr [rax - 0x77], ecx; ret; 
0x000000000042f39f: add dword ptr [rax - 0x77], ecx; ret; 
0x000000000042f44e: add dword ptr [rax - 0x77], ecx; ret; 
0x000000000040f042: add dword ptr [rax - 0x77], ecx; ror byte ptr [rax - 0x75], 1; cmp ecx, dword ptr [rax - 0x77]; ret 0xd148; 
0x0000000000407330: add dword ptr [rax - 0x78], eax; jo 0x7336; ret; 
0x0000000000448044: add dword ptr [rax - 0x7b], ecx; div byte ptr [rbp + 7]; lea rsi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000434138: add dword ptr [rax - 0x7b], ecx; sal byte ptr [rbp + 5], 0x4c; cmp edx, eax; jne 0x34120; ret; 
0x00000000004341aa: add dword ptr [rax - 0x7b], ecx; sal byte ptr [rbp + 5], 0x4c; cmp edx, edx; jne 0x34180; ret; 
0x000000000044f533: add dword ptr [rax - 0x7d], ecx; mov byte ptr [rdx], 0x48; cmp edx, ecx; ja 0x4f518; ret; 
0x0000000000403a9e: add dword ptr [rax - 0x7d], ecx; mov dword ptr [rcx], 0x77fa3948; sal byte ptr [rcx], 0xc0; ret; 
0x000000000040cf6f: add dword ptr [rax - 0x7d], ecx; ret 0x4001; 
0x0000000000414511: add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x000000000040313d: add dword ptr [rax - 0x7d], ecx; ret 0x8301; 
0x0000000000403133: add dword ptr [rax - 0x7d], ecx; ret 0xeb01; 
0x0000000000402373: add dword ptr [rax - 1], ecx; ror dword ptr [rax - 1], 0xca; jne 0x2371; ret; 
0x000000000041b211: add dword ptr [rax - 1], edi; lea rsp, [rsp + 8]; ret; 
0x000000000041b2e1: add dword ptr [rax - 1], edi; lea rsp, [rsp + 8]; ret; 
0x000000000042e409: add dword ptr [rax], 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040cc0b: add dword ptr [rax], 0; add byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x77]; ret 0xc148; 
0x000000000042e7a6: add dword ptr [rax], 0xec894800; pop rbp; ret; 
0x00000000004451c2: add dword ptr [rax], eax; add al, ch; pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x000000000045c916: add dword ptr [rax], eax; add al, ch; ret 0xfa55; 
0x00000000004145f5: add dword ptr [rax], eax; add al, ch; ret; 
0x000000000040cfbd: add dword ptr [rax], eax; add bl, ch; and cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000426f4f: add dword ptr [rax], eax; add byte ptr [rax + 0x29], cl; ret 0x8944; 
0x00000000004466f7: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret 0x6b48; 
0x0000000000446a1f: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret 0x6b48; 
0x0000000000446ab1: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret 0x6b48; 
0x0000000000446abf: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret 0x6b48; 
0x000000000042e92d: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; adc eax, 0x43209; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000044549c: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x0000000000445419: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x000000000042f2c3: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000423893: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004238b9: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004238e3: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423909: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e37d: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000446f29: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004476b9: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004476d9: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044ea85: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044ee9b: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f02b: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f34b: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f64b: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000445494: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; mov esp, 0x17024; add byte ptr [rax - 0x73], cl; add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x000000000045281f: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; xor al, 0xc2; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x0000000000414228: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044df4c: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044df6d: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044df8b: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044dfa9: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044dfca: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000430a4f: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ecf: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000041b3cf: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x0000000000402b22: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042560a: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000426beb: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c2b: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x000000000041500c: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x2950; pop rbx; ret; 
0x0000000000430343: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x30360; lea rsp, [rsp + 8]; ret; 
0x0000000000430437: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x00000000004396c6: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x00000000004396e9: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000043913b: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000426e93: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x0000000000416c3f: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416aa9: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x7250; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000416a5c: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416bff: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042bdb3: add dword ptr [rax], eax; add byte ptr [rax], al; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b24f: add dword ptr [rax], eax; add byte ptr [rax], al; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000427a16: add dword ptr [rax], eax; add byte ptr [rax], al; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000042be74: add dword ptr [rax], eax; add byte ptr [rax], al; call 0xd400; pop rbx; ret; 
0x0000000000429a58: add dword ptr [rax], eax; add byte ptr [rax], al; call 0xfb70; pop rbx; ret; 
0x00000000004165e2: add dword ptr [rax], eax; add byte ptr [rax], al; call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x0000000000415532: add dword ptr [rax], eax; add byte ptr [rax], al; call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x0000000000433d2c: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x33d34; xor ecx, ecx; mov eax, ecx; ret; 
0x0000000000434304: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x3430c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434344: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x3434c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434384: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x3438c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343c4: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x343cc; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434404: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x3440c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434444: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x3444c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000045ba37: add dword ptr [rax], eax; add byte ptr [rax], al; jmp 0x5ba3f; xor eax, eax; lea rsp, [rsp + 0x48]; ret; 
0x000000000044a296: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448556: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448536: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448536: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000041ee89: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e631: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e50d: add dword ptr [rax], eax; add byte ptr [rax], al; lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x0000000000414812: add dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041b173: add dword ptr [rax], eax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000425605: add dword ptr [rax], eax; add byte ptr [rax], al; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c6: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cb26: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x000000000041cbc6: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000042be6f: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a53: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x0000000000413731: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413731: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x000000000041473d: add dword ptr [rax], eax; add byte ptr [rax], al; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x00000000004546c7: add dword ptr [rax], eax; add byte ptr [rax], al; mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000403811: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004038b0: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000403911: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004039ad: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000403a89: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000407352: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000040dae6: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000041a891: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000432301: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004324f1: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000433651: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004336d1: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000433ba1: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000043400f: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000434054: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000434083: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004340dd: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000434114: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000434174: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000456de0: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000433025: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433235: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433415: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433625: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fc5: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d5: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b5: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c5: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433005: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433215: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f5: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433605: add dword ptr [rax], eax; add byte ptr [rax], al; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000402664: add dword ptr [rax], eax; add byte ptr [rax], al; xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026d6: add dword ptr [rax], eax; add byte ptr [rax], al; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x0000000000426daa: add dword ptr [rax], eax; add byte ptr [rbp + 0xd], dh; and edx, 0x30; je 0x26dbc; mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x000000000040d0c4: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d21d: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d27c: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d2cd: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d339: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d38c: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d3ec: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000418332: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041f002: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420050: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004200ea: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004201ba: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420255: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420306: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420395: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004204ff: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042059e: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000424f7d: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d61f: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d7d0: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d88f: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d9e3: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dc53: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dd9f: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043def4: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dfaf: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440b81: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440d50: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440e31: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440fd5: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004412a5: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000441431: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004415c6: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004416a1: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004461ad: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045227a: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004584fb: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c32b: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045cc8b: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045cda7: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045d40e: add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d12d: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040d760: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041d926: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e53c: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e5bc: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e65a: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e6fa: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041ea56: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000420446: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042273f: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004251cb: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000426893: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043a22a: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043e837: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043e9bc: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043ea8b: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043ec8b: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043edf7: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043eebc: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043f0d7: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043f197: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442109: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004422de: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004423cd: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044261d: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004427c9: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004428be: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442b19: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442c09: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454253: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454586: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045467e: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000457177: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004571e1: add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004041ef: add dword ptr [rax], eax; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000418977: add dword ptr [rax], eax; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000426929: add dword ptr [rax], eax; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004530f4: add dword ptr [rax], eax; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045b5c3: add dword ptr [rax], eax; add byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000413e2c: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 9], cl; mov rax, r15; call rax; 
0x0000000000424e2b: add dword ptr [rax], eax; add byte ptr [rcx], ch; ret 0x58b; 
0x00000000004145eb: add dword ptr [rax], eax; add byte ptr [rcx], dh; ror byte ptr [rax - 0x73], cl; mov esp, 0x16824; add al, ch; ret; 
0x000000000040d87d: add dword ptr [rax], eax; and eax, 0xffff; ret; 
0x0000000000401221: add dword ptr [rax], eax; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040136c: add dword ptr [rax], eax; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004013f5: add dword ptr [rax], eax; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004014f7: add dword ptr [rax], eax; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040163c: add dword ptr [rax], eax; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010c7: add dword ptr [rax], eax; call 0x17d50; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004441a8: add dword ptr [rax], eax; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000444228: add dword ptr [rax], eax; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044a1df: add dword ptr [rax], eax; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a1ff: add dword ptr [rax], eax; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x00000000004527d3: add dword ptr [rax], eax; call qword ptr [rax]; 
0x000000000045282e: add dword ptr [rax], eax; call qword ptr [rax]; 
0x0000000000443a2c: add dword ptr [rax], eax; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x000000000041d7f9: add dword ptr [rax], eax; ja 0x1d807; lea rcx, [rip + 0x6531c]; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x000000000040b966: add dword ptr [rax], eax; ja 0xb974; lea rdx, [rip + 0x771af]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000409548: add dword ptr [rax], eax; jg 0x9530; mov rbx, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443e90: add dword ptr [rax], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e6e: add dword ptr [rax], eax; lea rsp, [rsp + 0x28]; ret; 
0x000000000040515f: add dword ptr [rax], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d7fd: add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x000000000042d81d: add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x000000000042e5d3: add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x000000000040928b: add dword ptr [rax], eax; mov ax, 1; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000402d22: add dword ptr [rax], eax; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004514ef: add dword ptr [rax], eax; mov esi, 0x26; call 0x36bc0; lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x0000000000456946: add dword ptr [rax], eax; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x000000000044363e: add dword ptr [rax], eax; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000441b99: add dword ptr [rax], eax; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000403ba5: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403cff: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401226: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401371: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004013fa: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004014fc: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401641: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401def: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010cc: add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443fdb: add dword ptr [rax], eax; mov rdi, qword ptr [rsp]; mov rsi, qword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450b8e: add dword ptr [rax], eax; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000403c74: add dword ptr [rax], eax; mov rsp, rbp; pop rbp; ret; 
0x000000000040874b: add dword ptr [rax], eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000040928f: add dword ptr [rax], eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416a00: add dword ptr [rax], eax; pop rbx; ret; 
0x0000000000402984: add dword ptr [rax], eax; ret; 
0x0000000000434268: add dword ptr [rax], eax; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434288: add dword ptr [rax], eax; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000045168f: add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519af: add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ce3: add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452023: add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041483b: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc3a: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd8b: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044016a: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402bb: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e78a: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045152b: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045183b: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522ca: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c77f: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cade: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcaf: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044000e: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b5f: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e9f: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8e3: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c905: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe35: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004135c4: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c634: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb64: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e634: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed54: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee4: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f4: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a4: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa4: add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000407348: add dword ptr [rbp + 0xc], esi; cmp rdx, 1; jne 0x7357; mov eax, 1; ret; 
0x0000000000407326: add dword ptr [rbp + 0xd], esi; test rcx, rcx; jle 0x7336; mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x0000000000414736: add dword ptr [rbp + 0xe], esi; mov rdi, rbx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x0000000000434a1e: add dword ptr [rbp + 3], edi; xor al, al; ret; 
0x000000000040734e: add dword ptr [rbp + 6], esi; mov eax, 1; ret; 
0x000000000041a36a: add dword ptr [rbp + 9], esi; and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x0000000000408458: add dword ptr [rbp - 0x5c], 0x81660001; sti; ret; 
0x00000000004321e9: add dword ptr [rbp - 3], -1; lea rsp, [rsp + 8]; ret; 
0x0000000000408b23: add dword ptr [rbx + 0x16601c0], eax; ret 0x4166; 
0x000000000041fc76: add dword ptr [rbx + 0x18], 1; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041da83: add dword ptr [rbx + 0x18], eax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041dac2: add dword ptr [rbx + 0x18], esp; pop r13; pop r12; pop rbx; ret; 
0x000000000040a60a: add dword ptr [rbx + 0x39402444], ecx; ret 0xbd7f; 
0x000000000041c9b3: add dword ptr [rbx + rcx - 0x7d], esi; clc; add dh, byte ptr [rsi + rax + 0x48]; mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x000000000044f881: add dword ptr [rbx - 0x37c6fd3f], eax; jg 0x4f858; ret; 
0x0000000000408b20: add dword ptr [rbx - 0x3f7cfe40], eax; add dword ptr [rsi + 1], esp; ret 0x4166; 
0x0000000000454acb: add dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458496: add dword ptr [rcx + 0x1b6bade], ecx; add byte ptr [rax], al; call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043a98e: add dword ptr [rcx + 0x38], 1; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x000000000044de5f: add dword ptr [rcx + 0x558948c2], ecx; fadd dword ptr [rbp - 0x74f88325]; fdivr dword ptr [r9]; ret; 
0x000000000041ec3f: add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x000000000041ed53: add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x0000000000456f07: add dword ptr [rcx + 0x648d48d0], ecx; and al, 0x48; ret; 
0x00000000004570dc: add dword ptr [rcx + 0x648d48d8], ecx; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000444bf3: add dword ptr [rcx + 0xffe1], eax; add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000427873: add dword ptr [rcx + rdi - 0x1d], eax; jg 0x27838; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000410761: add dword ptr [rcx + rdi - 0x27], ecx; ja 0x106f8; lea rax, [r10 + 1]; pop rbx; ret; 
0x000000000044cd66: add dword ptr [rcx - 0x76f7dbbc], ecx; ret 0x8d48; 
0x0000000000410864: add dword ptr [rcx - 0x78], eax; ret 0x8041; 
0x00000000004341a6: add dword ptr [rcx - 0x7d], ecx; ret 0x4801; 
0x000000000040b408: add dword ptr [rcx - 0x7d], ecx; ret 0x4d01; 
0x0000000000433cf8: add dword ptr [rcx - 0x7d], ecx; ret 0x4d01; 
0x00000000004105b6: add dword ptr [rcx - 0x7d], ecx; ret 0xe902; 
0x00000000004106c7: add dword ptr [rcx - 0x7d], ecx; ret; 
0x000000000041075d: add dword ptr [rcx - 0x7d], ecx; ret; 
0x0000000000454aca: add dword ptr [rcx], eax; add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000043a991: add dword ptr [rcx], edi; sar byte ptr [rdi - 0x36], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000041b281: add dword ptr [rcx], esi; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b311: add dword ptr [rcx], esi; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000417ee1: add dword ptr [rdi + 0xca], edi; call 0x185b0; pop rbx; ret; 
0x0000000000459fcc: add dword ptr [rdi + rcx - 0x39], esi; add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000425cec: add dword ptr [rdi + rcx*2 - 0x7d], esi; call 0xffffffffc8866bf6; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x000000000040750d: add dword ptr [rdi - 0x18], edi; ret; 
0x00000000004075ce: add dword ptr [rdi - 0x19], edi; ret; 
0x0000000000407496: add dword ptr [rdi - 0x21], edi; ret; 
0x00000000004074d6: add dword ptr [rdi - 0x21], edi; ret; 
0x0000000000407559: add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000407599: add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000407669: add dword ptr [rdi - 0x24], edi; ret; 
0x000000000042e346: add dword ptr [rdi], ecx; mov dh, 0x44; add bh, bh; ret; 
0x0000000000425cf1: add dword ptr [rdi], ecx; test al, cl; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x000000000043abdf: add dword ptr [rdi], ecx; test byte ptr [rcx - 0x17000000], ch; ret; 
0x0000000000409be5: add dword ptr [rdi], ecx; xchg edx, eax; ret 0xe281; 
0x0000000000433855: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x12e8; 
0x0000000000433735: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x32e8; 
0x000000000043366a: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x00000000004336ea: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x000000000043377a: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x000000000043380a: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x00000000004336ad: add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8a40; 
0x00000000004337c7: add dword ptr [rdi], ecx; xchg esp, eax; ret 0xa0e8; 
0x000000000042e345: add dword ptr [rdi], r9d; mov dh, 0x44; add bh, bh; ret; 
0x0000000000407684: add dword ptr [rdx + 0x20], edi; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000459a47: add dword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512ef: add dword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000450229: add dword ptr [rdx], 0; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000450274: add dword ptr [rdx], 0; ret; 
0x0000000000427a4d: add dword ptr [rdx], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000450260: add dword ptr [rip + 0x28349], 1; add rdi, 8; cmp qword ptr [rdi], 0; jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000415b8d: add dword ptr [rip + 0xff], esp; lea rsp, [rsp + 0x108]; ret; 
0x00000000004512f2: add dword ptr [rip + 0xff], esp; lea rsp, [rsp + 8]; ret; 
0x0000000000459a4d: add dword ptr [rip + 0xff], esp; lea rsp, [rsp + 8]; ret; 
0x0000000000425852: add dword ptr [rip + 0xff], esp; ret; 
0x0000000000425872: add dword ptr [rip + 0xff], esp; ret; 
0x000000000044bad3: add dword ptr [rsi + 0x39], esp; ret 0xa75; 
0x000000000040f933: add dword ptr [rsi + 0x3b], esp; cmp dword ptr [rbp + 4], esi; mov rax, rdx; ret; 
0x0000000000408b26: add dword ptr [rsi + 1], esp; ret 0x4166; 
0x0000000000408ed4: add dword ptr [rsi + 1], esp; ret 0xbf0f; 
0x000000000040424d: add dword ptr [rsi + 5], esi; cmp cl, 6; jb 0x4259; neg rax; ret; 
0x00000000004089be: add dword ptr [rsi - 0x77], esp; ret 0xbf0f; 
0x0000000000411954: add dword ptr [rsi - 0x77], esp; ret; 
0x0000000000411a14: add dword ptr [rsi - 0x77], esp; ret; 
0x0000000000404553: add dword ptr [rsi - 0x7f], esp; cmp al, 0x47; add byte ptr [rax], al; jne 0x4550; ret; 
0x0000000000449ba3: add dword ptr [rsi - 0x7f], esp; cmp al, 0x56; add byte ptr [rax], al; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000041cbe8: add dword ptr [rsi], 0x108b4800; test rdx, rdx; je 0x1cc00; lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc30: add dword ptr [rsi], 0x108b4800; test rdx, rdx; je 0x1cc48; lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc98: add dword ptr [rsi], 0x108b4800; test rdx, rdx; je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc5e: add dword ptr [rsi], 0x8b4800; test rax, rax; je 0x1cc76; lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cccf: add dword ptr [rsi], 0x8b4800; test rax, rax; je 0x1cce7; lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec3b: add dword ptr [rsp + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000041ed4f: add dword ptr [rsp + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000044ffa9: add dword ptr [rsp + 0xc], 1; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405423: add dword ptr [rsp + rbx + 0x31], edi; ror byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x0000000000447fcc: add dword ptr [rsp], 4; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000402d21: add dword ptr fs:[rax], eax; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000401dee: add dword ptr gs:[rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ded: add dword ptr gs:[rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417f74: add eax, 0x100c600; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000417edd: add eax, 0x100c600; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x00000000004277f6: add eax, 0x1044c600; sub byte ptr [rax], al; pop rbx; ret; 
0x0000000000427144: add eax, 0x108b4800; test rdx, rdx; je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272be: add eax, 0x108b4800; test rdx, rdx; je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427321: add eax, 0x108b4800; test rdx, rdx; je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042734e: add eax, 0x108b4800; test rdx, rdx; je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f0: add eax, 0x108b4800; test rdx, rdx; je 0x28407; lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042841b: add eax, 0x108b4800; test rdx, rdx; je 0x28432; lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428452: add eax, 0x108b4800; test rdx, rdx; je 0x28469; lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c2d: add eax, 0x108b4800; test rdx, rdx; je 0x29c47; lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cbd: add eax, 0x108b4800; test rdx, rdx; je 0x29cd7; lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d4d: add eax, 0x108b4800; test rdx, rdx; je 0x29d67; lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b0: add eax, 0x108b4800; test rdx, rdx; je 0x2a5c7; lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c02d: add eax, 0x108b4800; test rdx, rdx; je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0bd: add eax, 0x108b4800; test rdx, rdx; je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c14d: add eax, 0x108b4800; test rdx, rdx; je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000403158: add eax, 0x1418d49; ret; 
0x000000000045282b: add eax, 0x16180; call qword ptr [rax]; 
0x00000000004527d0: add eax, 0x161db; call qword ptr [rax]; 
0x00000000004181a1: add eax, 0x188b4800; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x000000000045c0ca: add eax, 0x1a431f; movsxd rdi, edi; add rax, rdi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x0000000000456943: add eax, 0x1f5b8; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004073f0: add eax, 0x20; jmp 0x73f8; mov al, dil; and eax, 0xff; ret; 
0x00000000004533a4: add eax, 0x22b57; call qword ptr [rax]; 
0x00000000004533a4: add eax, 0x22b57; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000453397: add eax, 0x22b64; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045333d: add eax, 0x22bce; call qword ptr [rax]; 
0x00000000004554fc: add eax, 0x233ee; add al, 0x25; inc dword ptr [rax]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041ff54: add eax, 0x2404c641; and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000458361: add eax, 0x24448b48; sub byte ptr [rax - 0x73], cl; and al, 0x50; pop rbx; ret; 
0x0000000000453221: add eax, 0x2568a; pop rbx; ret; 
0x0000000000459310: add eax, 0x25d3b; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x000000000044f643: add eax, 0x260f8; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f343: add eax, 0x262a0; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f023: add eax, 0x26460; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee93: add eax, 0x26490; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea7d: add eax, 0x26746; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000045cd46: add eax, 0x26c35; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccfb: add eax, 0x26c80; mov edi, dword ptr [rax]; call rdx; 
0x0000000000401034: add eax, 0x27; mov qword ptr [r10 + 0x60], rax; mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000045ac03: add eax, 0x282f8; mov edi, dword ptr [rax]; call rdx; 
0x0000000000450227: add eax, 0x28334; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000450272: add eax, 0x28339; ret; 
0x000000000045abad: add eax, 0x286ce; mov edi, dword ptr [rax]; call rdx; 
0x000000000044b916: add eax, 0x2a385; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e6: add eax, 0x2a5b5; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000459daf: add eax, 0x2bf38; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000449b76: add eax, 0x2c125; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449aab: add eax, 0x2c1f0; mov qword ptr [rsp], rax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x0000000000433591: add eax, 0x2dd92; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334c1: add eax, 0x2de52; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004331a1: add eax, 0x2e16a; addss xmm0, dword ptr [rax]; ret; 
0x00000000004330d1: add eax, 0x2e22a; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000455bbf: add eax, 0x2e2ac; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x0000000000455b97: add eax, 0x2e2d4; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x000000000044711a: add eax, 0x2eb81; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004470da: add eax, 0x2ebc1; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x0000000000405272: add eax, 0x2f0f6600; or bh, byte ptr [rdx + 2]; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x0000000000456516: add eax, 0x2f2c5; call qword ptr [rax]; 
0x00000000004182a1: add eax, 0x308b4800; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000423047: add eax, 0x30b70f00; mov dl, 1; call 0xd950; pop rbx; ret; 
0x000000000045264b: add eax, 0x30fb0; mov edi, dword ptr [rax]; call rdx; 
0x0000000000444cde: add eax, 0x30fbd; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c6a: add eax, 0x31031; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000045261f: add eax, 0x3135c; mov edi, dword ptr [rax]; call rdx; 
0x0000000000453175: add eax, 0x326a6; call qword ptr [rax]; 
0x0000000000453175: add eax, 0x326a6; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004500d0: add eax, 0x32a9b; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452ebe: add eax, 0x32d0d; mov byte ptr [rax + 0x18], 1; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000042d842: add eax, 0x339c9; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d832: add eax, 0x339d9; movsd xmm0, qword ptr [rax]; ret; 
0x0000000000434877: add eax, 0x342e4; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x0000000000413cc7: add eax, 0x348b4c08; and al, 0x48; mov esi, dword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x00000000004508f2: add eax, 0x34ef9; call qword ptr [rax]; 
0x0000000000450593: add eax, 0x35238; call qword ptr [rax]; 
0x0000000000450526: add eax, 0x35295; call qword ptr [rax]; 
0x000000000041183d: add eax, 0x376de8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000417f3a: add eax, 0x38834800; add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000427578: add eax, 0x388b4800; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000042720d: add eax, 0x388b4800; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000041908b: add eax, 0x3894800; pop rbx; ret; 
0x000000000044ccfd: add eax, 0x38b2e; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000414cd9: add eax, 0x38b70f00; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418631: add eax, 0x38b70f00; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x000000000044cc5d: add eax, 0x38bce; mov rax, qword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c90d: add eax, 0x38f1e; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c5f1: add eax, 0x3923a; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044a29c: add eax, 0x39abf; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a259: add eax, 0x39b02; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a237: add eax, 0x39b24; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a217: add eax, 0x39b44; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000449d3f: add eax, 0x3a01c; call qword ptr [rax + 0x10]; 
0x0000000000449d2f: add eax, 0x3a02c; call qword ptr [rax + 0x10]; 
0x000000000041523d: add eax, 0x3a834800; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x000000000041520d: add eax, 0x3a834800; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x00000000004151dd: add eax, 0x3a834800; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x0000000000415275: add eax, 0x3a834800; add byte ptr [rsp + rcx + 0x48], dh; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000423770: add eax, 0x3a8b0006; call rax; 
0x000000000044855c: add eax, 0x3b7ff; call qword ptr [rax + 0x20]; 
0x000000000044853c: add eax, 0x3b81f; call qword ptr [rax + 0x20]; 
0x000000000044853c: add eax, 0x3b81f; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000448519: add eax, 0x3b842; call qword ptr [rax + 0x20]; 
0x00000000004484f9: add eax, 0x3b862; call qword ptr [rax + 0x20]; 
0x00000000004484f9: add eax, 0x3b862; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d7: add eax, 0x3b884; call qword ptr [rax + 0x18]; 
0x00000000004484d7: add eax, 0x3b884; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b7: add eax, 0x3b8a4; call qword ptr [rax + 0x10]; 
0x00000000004484b7: add eax, 0x3b8a4; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x0000000000439351: add eax, 0x3c94a; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000439227: add eax, 0x3ca74; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c7: add eax, 0x3cad4; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043909c: add eax, 0x3cbff; call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x00000000004454a1: add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x000000000044541e: add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x0000000000411111: add eax, 0x3e99e8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423c4f: add eax, 0x3ebfffe; mov byte ptr [rbx], 0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000423c4e: add eax, 0x3ebfffe; mov byte ptr [rbx], 0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411357: add eax, 0x3f06c766; add byte ptr [rax - 0x7d], cl; mov byte ptr [rdx], 0x48; cmp eax, edx; jg 0x11310; ret; 
0x0000000000436b36: add eax, 0x3f165; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b16: add eax, 0x3f185; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x000000000041108f: add eax, 0x3f1be8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000436a3b: add eax, 0x3f260; mov qword ptr [rsp], rax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c6: add eax, 0x3f3d5; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x000000000041100d: add eax, 0x3f9de8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000456730: add eax, 0x3fe9c148; add rdx, rcx; mov rax, rdx; ret; 
0x00000000004146de: add eax, 0x4002b8; or byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000414a0e: add eax, 0x4002b8; or byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000410f1b: add eax, 0x408fe8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000417f47: add eax, 0x4110ff00; pop rbp; pop r12; pop rbx; ret; 
0x0000000000426be5: add eax, 0x41388b00; mov eax, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c25: add eax, 0x41388b00; mov eax, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000410e1f: add eax, 0x418be8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000433978: add eax, 0x42533; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433958: add eax, 0x42553; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000432234: add eax, 0x43a67; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f82: add eax, 0x43d19; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431d78: add eax, 0x43f23; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af7: add eax, 0x441a4; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004245d0: add eax, 0x4434b; cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x0000000000431938: add eax, 0x44363; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316b7: add eax, 0x445e4; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ec6: add eax, 0x44cb5; lea rsp, [rsp + 8]; ret; 
0x0000000000423bac: add eax, 0x44fff; ret; 
0x0000000000423b62: add eax, 0x461e9; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x0000000000419147: add eax, 0x4800050a; lea esp, [rsp + 8]; ret; 
0x000000000041abf7: add eax, 0x480006a1; lea esp, [rsp + 8]; ret; 
0x0000000000423c71: add eax, 0x48028900; lea esp, [rsp + 8]; ret; 
0x00000000004151ed: add eax, 0x4810ff00; lea esp, [rsp + 8]; ret; 
0x000000000041521d: add eax, 0x4810ff00; lea esp, [rsp + 8]; ret; 
0x000000000041524d: add eax, 0x4810ff00; lea esp, [rsp + 8]; ret; 
0x0000000000415285: add eax, 0x4810ff00; lea esp, [rsp + 8]; ret; 
0x000000000043b8e7: add eax, 0x48474; call qword ptr [rax + 0x28]; 
0x000000000043b8e7: add eax, 0x48474; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043b549: add eax, 0x48812; call qword ptr [rax + 0x38]; 
0x000000000043b539: add eax, 0x48822; call qword ptr [rax + 0x38]; 
0x00000000004565a7: add eax, 0x48fffbea; lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000434c47: add eax, 0x48fffd8d; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042543b: add eax, 0x4c4f0; movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x00000000004250fb: add eax, 0x4c860; movsxd rax, dword ptr [rax]; cmp rdx, rax; jne 0x2510b; mov al, 1; ret; 
0x000000000041b36a: add eax, 0x4d551; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b33a: add eax, 0x4d581; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b30a: add eax, 0x4d5b1; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b2da: add eax, 0x4d5e1; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2aa: add eax, 0x4d611; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b27a: add eax, 0x4d641; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b20a: add eax, 0x4d6b1; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b1da: add eax, 0x4d6e1; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041a651: add eax, 0x4e46a; mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x0000000000434487: add eax, 0x4f8d4; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434467: add eax, 0x4f8f4; call qword ptr [rax + 0x78]; 
0x0000000000434467: add eax, 0x4f8f4; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434427: add eax, 0x4f934; call qword ptr [rax + 0x70]; 
0x00000000004343e7: add eax, 0x4f974; call qword ptr [rax + 0x68]; 
0x00000000004343a7: add eax, 0x4f9b4; call qword ptr [rax + 0x60]; 
0x0000000000434367: add eax, 0x4f9f4; call qword ptr [rax + 0x58]; 
0x0000000000434327: add eax, 0x4fa34; call qword ptr [rax + 0x50]; 
0x00000000004342e7: add eax, 0x4fa74; call qword ptr [rax + 0x48]; 
0x00000000004342c7: add eax, 0x4fa94; call qword ptr [rax + 0x40]; 
0x00000000004342c7: add eax, 0x4fa94; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a7: add eax, 0x4fab4; call qword ptr [rax + 0x38]; 
0x00000000004342a7: add eax, 0x4fab4; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000418d09: add eax, 0x4fcd2; call qword ptr [rax]; 
0x0000000000418cc3: add eax, 0x4fd08; call qword ptr [rax]; 
0x0000000000418cb6: add eax, 0x4fd15; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x00000000004189fa: add eax, 0x4fe71; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004189a4: add eax, 0x4fec7; mov rdx, qword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x0000000000418951: add eax, 0x5005a; call qword ptr [rax]; 
0x00000000004188fe: add eax, 0x500ad; call qword ptr [rax]; 
0x0000000000418882: add eax, 0x50129; call qword ptr [rax]; 
0x000000000041862e: add eax, 0x5025d; movzx edi, word ptr [rax]; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000418745: add eax, 0x50266; call qword ptr [rax]; 
0x00000000004184c4: add eax, 0x504f7; call qword ptr [rax]; 
0x000000000041829e: add eax, 0x505dd; mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x00000000004181a8: add eax, 0x506c3; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x000000000041819e: add eax, 0x506cd; mov rbx, qword ptr [rax]; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x00000000004182ab: add eax, 0x50700; call qword ptr [rax]; 
0x0000000000417f71: add eax, 0x5097a; mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000417f44: add eax, 0x50997; call qword ptr [rax]; 
0x0000000000417f44: add eax, 0x50997; call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x0000000000417f37: add eax, 0x509a4; cmp qword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417eda: add eax, 0x509f1; mov byte ptr [rax], 1; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x0000000000417e67: add eax, 0x50b84; call qword ptr [rax]; 
0x00000000004189ec: add eax, 0x5113f; lea rdx, [rip - 0x68]; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000417635: add eax, 0x51446; call qword ptr [rax]; 
0x00000000004169f6: add eax, 0x52065; call qword ptr [rax]; 
0x00000000004169f6: add eax, 0x52065; call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x00000000004169d6: add eax, 0x52085; call qword ptr [rax]; 
0x00000000004169d6: add eax, 0x52085; call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x0000000000417a49: add eax, 0x520ce; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000417927: add eax, 0x521f0; jo 0x17930; add byte ptr [rax], al; ret; 
0x0000000000415282: add eax, 0x537f9; call qword ptr [rax]; 
0x0000000000415282: add eax, 0x537f9; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041524a: add eax, 0x53831; call qword ptr [rax]; 
0x000000000041524a: add eax, 0x53831; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041521a: add eax, 0x53851; call qword ptr [rax]; 
0x000000000041521a: add eax, 0x53851; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151ea: add eax, 0x53871; call qword ptr [rax]; 
0x00000000004151ea: add eax, 0x53871; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414cd6: add eax, 0x53bb5; movzx edi, word ptr [rax]; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000414df9: add eax, 0x53c32; call qword ptr [rax]; 
0x0000000000414caa: add eax, 0x53d71; call qword ptr [rax]; 
0x000000000042c159: add eax, 0x57ba2; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c9: add eax, 0x57c32; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c039: add eax, 0x57cc2; mov edi, dword ptr [rax]; call rdx; 
0x000000000040f6e9: add eax, 0x58c1e8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040549e: add eax, 0x58f45; subsd xmm1, qword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x000000000042a5bc: add eax, 0x5973f; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d59: add eax, 0x59fa2; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc9: add eax, 0x5a032; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c39: add eax, 0x5a0c2; mov edi, dword ptr [rax]; call rdx; 
0x000000000040f469: add eax, 0x5b41e8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042845e: add eax, 0x5b89d; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428427: add eax, 0x5b8d4; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283fc: add eax, 0x5b8ff; mov edi, dword ptr [rax]; call rdx; 
0x000000000042735a: add eax, 0x5bba1; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427150: add eax, 0x5bdab; mov edi, dword ptr [rax]; call rdx; 
0x000000000042732d: add eax, 0x5bf4e; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272ca: add eax, 0x5bfb1; mov edi, dword ptr [rax]; call rdx; 
0x00000000004054a1: add eax, 0x5c0ff200; or byte ptr [rsi + 0xf], ah; sub eax, ecx; lea rsp, [rsp + 0x28]; ret; 
0x0000000000427575: add eax, 0x5daf6; mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000042720a: add eax, 0x5de61; mov rdi, qword ptr [rax]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040f1ab: add eax, 0x5dffe8; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004277f3: add eax, 0x5e0a8; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x0000000000426c22: add eax, 0x5e409; mov edi, dword ptr [rax]; mov r8d, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000426be2: add eax, 0x5e449; mov edi, dword ptr [rax]; mov r8d, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x00000000004262a5: add eax, 0x5ed86; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd7: add eax, 0x5ef24; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000424525: add eax, 0x5f7f6; mov edi, dword ptr [rax]; call rdx; 
0x0000000000425862: add eax, 0x5f829; lea rdx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000425842: add eax, 0x5f839; lea rdx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000423044: add eax, 0x5fb07; movzx esi, word ptr [rax]; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000425ae7: add eax, 0x5fb44; je 0x25afc; mov eax, edx; lea rcx, [rip + 0x5fb09]; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000423bf2: add eax, 0x60259; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x0000000000424ec3: add eax, 0x60314; add byte ptr [rax], al; add byte ptr [rax], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000423372: add eax, 0x60989; mov edi, dword ptr [rax]; call rdx; 
0x00000000004243e2: add eax, 0x60a49; lea rsp, [rsp + 8]; ret; 
0x000000000042289c: add eax, 0x6145f; mov edi, dword ptr [rax]; call rdx; 
0x00000000004227a6: add eax, 0x61555; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x0000000000422765: add eax, 0x61596; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422609: add eax, 0x616f2; mov edi, dword ptr [rax]; call rdx; 
0x000000000042256e: add eax, 0x6178d; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224fd: add eax, 0x617fe; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421cea: add eax, 0x62011; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b86: add eax, 0x62175; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ac5: add eax, 0x62236; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421a9b: add eax, 0x62260; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a0d: add eax, 0x622ee; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x00000000004216c1: add eax, 0x6263a; add rax, 8; mov word ptr [rax], 0x64; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042167b: add eax, 0x62680; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421530: add eax, 0x627cb; mov edi, dword ptr [rax]; call rdx; 
0x000000000042142a: add eax, 0x628d1; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212e0: add eax, 0x62a1b; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fcf: add eax, 0x62d2c; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204df: add eax, 0x6381c; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202e6: add eax, 0x63a15; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdf1: add eax, 0x63f0a; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdad: add eax, 0x63fae; call qword ptr [rax + 8]; 
0x000000000041fd72: add eax, 0x63fe9; call qword ptr [rax + 0x30]; 
0x00000000004190b9: add eax, 0x648d4800; and al, 8; ret; 
0x00000000004190e9: add eax, 0x648d4800; and al, 8; ret; 
0x0000000000419109: add eax, 0x648d4800; and al, 8; ret; 
0x0000000000419129: add eax, 0x648d4800; and al, 8; ret; 
0x0000000000419149: add eax, 0x648d4800; and al, 8; ret; 
0x0000000000419179: add eax, 0x648d4800; and al, 8; ret; 
0x00000000004191a9: add eax, 0x648d4800; and al, 8; ret; 
0x00000000004191c9: add eax, 0x648d4800; and al, 8; ret; 
0x0000000000419209: add eax, 0x648d4800; and al, 8; ret; 
0x0000000000419229: add eax, 0x648d4800; and al, 8; ret; 
0x000000000041ee8f: add eax, 0x64ecc; call qword ptr [rax]; 
0x000000000041ee03: add eax, 0x64ef8; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edb7: add eax, 0x64f44; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e967: add eax, 0x65394; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e91a: add eax, 0x653e1; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e824: add eax, 0x654d7; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e754: add eax, 0x655a7; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d873: add eax, 0x65688; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041e459: add eax, 0x658a2; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2b5: add eax, 0x65a46; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d833: add eax, 0x65a48; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041e108: add eax, 0x65bf3; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e08f: add eax, 0x65c6c; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dffc: add eax, 0x65cff; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df3d: add eax, 0x65dbe; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de9d: add eax, 0x65e5e; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddfd: add eax, 0x65efe; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd71: add eax, 0x65f8a; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc5d: add eax, 0x6609e; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dbad: add eax, 0x6614e; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041db72: add eax, 0x66189; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db05: add eax, 0x661f6; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d986: add eax, 0x66375; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x000000000041d945: add eax, 0x663b6; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d686: add eax, 0x66675; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d49c: add eax, 0x6685f; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d396: add eax, 0x66965; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d246: add eax, 0x66ab5; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfb1: add eax, 0x66d4a; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ceca: add eax, 0x66e31; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd66: add eax, 0x66f95; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cca5: add eax, 0x67056; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc78: add eax, 0x67083; add rax, 8; mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc3d: add eax, 0x670be; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbf5: add eax, 0x67106; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca56: add eax, 0x672a5; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c9f8: add eax, 0x67303; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041c5d1: add eax, 0x6772a; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c560: add eax, 0x6779b; add rax, 8; mov word ptr [rax], 0x65; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041c18d: add eax, 0x67b6e; mov edi, dword ptr [rax]; call rdx; 
0x000000000041bf3a: add eax, 0x67dc1; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bee6: add eax, 0x67e15; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041be9a: add eax, 0x67e61; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bd23: add eax, 0x67fd8; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bcd3: add eax, 0x68028; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bc81: add eax, 0x6807a; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041a9ba: add eax, 0x681b1; add rax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x000000000041b7be: add eax, 0x681bd; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afee: add eax, 0x6898d; mov edi, dword ptr [rax]; call rdx; 
0x000000000040e668: add eax, 0x6942e8; add byte ptr [rax - 0x73], cl; and al, 0x70; pop rbx; ret; 
0x000000000041a775: add eax, 0x6a666; mov rax, qword ptr [rax]; test rax, rax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a707: add eax, 0x6a6d4; mov rax, qword ptr [rax]; test rax, rax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a67c: add eax, 0x6a75f; mov rax, qword ptr [rax]; test rax, rax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a61f: add eax, 0x6a7bc; mov rax, qword ptr [rax]; test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a45c: add eax, 0x6a97f; mov rax, qword ptr [rax]; test rax, rax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x0000000000418f5f: add eax, 0x6aa1c; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e8c: add eax, 0x6aaef; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e58: add eax, 0x6ab23; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418045: add eax, 0x6ab36; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418dbd: add eax, 0x6abbe; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d8c: add eax, 0x6abef; mov edi, dword ptr [rax]; call rdx; 
0x000000000041a1b5: add eax, 0x6ac26; mov rax, qword ptr [rax]; test rax, rax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x0000000000417e23: add eax, 0x6ad48; add rax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000418016: add eax, 0x6aee5; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fe6: add eax, 0x6af15; mov edi, dword ptr [rax]; call rdx; 
0x0000000000419e37: add eax, 0x6afa4; mov rax, qword ptr [rax]; test rax, rax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x0000000000419cfe: add eax, 0x6b0dd; mov rax, qword ptr [rax]; test rax, rax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419296: add eax, 0x6bb45; mov rax, qword ptr [rax]; test rax, rax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419246: add eax, 0x6bb95; mov rax, qword ptr [rax]; test rax, rax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x0000000000417c3c: add eax, 0x6c0df; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c12: add eax, 0x6c0f9; mov edi, dword ptr [rax]; call rdx; 
0x00000000004184ee: add eax, 0x6c8ed; mov rax, qword ptr [rax]; test rax, rax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x000000000041531e: add eax, 0x6e9dd; mov edi, dword ptr [rax]; call rdx; 
0x00000000004150d7: add eax, 0x6ee6c; mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000414a40: add eax, 0x6f513; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041513a: add eax, 0x6fca1; mov rax, qword ptr [rax]; test rax, rax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004150be: add eax, 0x6fd1d; mov rax, qword ptr [rax]; test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415097: add eax, 0x6fd44; mov rax, qword ptr [rax]; test rax, rax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x000000000041502d: add eax, 0x6fdae; mov rax, qword ptr [rax]; test rax, rax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x0000000000414fe0: add eax, 0x6fdfb; mov rax, qword ptr [rax]; test rax, rax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000414fb3: add eax, 0x6fe28; mov rax, qword ptr [rax]; test rax, rax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414f27: add eax, 0x6feb4; mov rax, qword ptr [rax]; test rax, rax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414ebc: add eax, 0x6ff1f; mov rax, qword ptr [rax]; test rax, rax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414e7a: add eax, 0x6ff61; mov rax, qword ptr [rax]; test rax, rax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414e23: add eax, 0x6ffb8; mov rax, qword ptr [rax]; test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414db6: add eax, 0x70025; mov rax, qword ptr [rax]; test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414d89: add eax, 0x70052; mov rax, qword ptr [rax]; test rax, rax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414d63: add eax, 0x70078; mov rax, qword ptr [rax]; test rax, rax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d2f: add eax, 0x700ac; mov rax, qword ptr [rax]; test rax, rax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d00: add eax, 0x700db; mov rax, qword ptr [rax]; test rax, rax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414c67: add eax, 0x70174; mov rax, qword ptr [rax]; test rax, rax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414b64: add eax, 0x70277; mov rax, qword ptr [rax]; test rax, rax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414aff: add eax, 0x702dc; mov rax, qword ptr [rax]; test rax, rax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414aa7: add eax, 0x70334; mov rax, qword ptr [rax]; test rax, rax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414a53: add eax, 0x70388; mov rax, qword ptr [rax]; test rax, rax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414a27: add eax, 0x703b4; mov rax, qword ptr [rax]; test rax, rax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000412f47: add eax, 0x70ee4; call qword ptr [rax]; 
0x0000000000412f47: add eax, 0x70ee4; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040424f: add eax, 0x7206f980; add al, 0x48; neg eax; ret; 
0x00000000004114ad: add eax, 0x724ce; mov edi, dword ptr [rax]; call rdx; 
0x000000000040ed63: add eax, 0x73db8; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ff97: add eax, 0x73dc4; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea7: add eax, 0x73eb4; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000040e934: add eax, 0x741e7; movzx edx, word ptr [rax]; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e623: add eax, 0x744f8; movzx edx, word ptr [rax]; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040f22e: add eax, 0x74b2d; call qword ptr [rax + 8]; 
0x000000000040ed6d: add eax, 0x74fee; call qword ptr [rax + 8]; 
0x0000000000403a51: add eax, 0x75003980; loope 0x3aa0; mov eax, 0xffffffff; ret; 
0x000000000040ec6a: add eax, 0x750f1; call qword ptr [rax + 8]; 
0x000000000040ea1a: add eax, 0x75341; call qword ptr [rax]; 
0x000000000040e942: add eax, 0x75419; call qword ptr [rax]; 
0x000000000040e637: add eax, 0x75724; call qword ptr [rax]; 
0x000000000040e513: add eax, 0x75848; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040e0f9: add eax, 0x75c62; call qword ptr [rax]; 
0x000000000040e070: add eax, 0x75ceb; call qword ptr [rax]; 
0x000000000040e070: add eax, 0x75ceb; call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x00000000004341af: add eax, 0x75d2394c; retf; ret; 
0x000000000040defe: add eax, 0x75e5d; call qword ptr [rax + 0xa0]; pop r13; pop r12; pop rbx; ret; 
0x000000000040de16: add eax, 0x75f45; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413c01: add eax, 0x75fe3948; loope 0x13c50; cmp esi, edi; sete al; ret; 
0x000000000040d73f: add eax, 0x7661c; call qword ptr [rax]; 
0x00000000004050ab: add eax, 0x7ec90; mov edi, dword ptr [rax]; call rdx; 
0x00000000004030d7: add eax, 0x80d94; cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x0000000000402a3e: add eax, 0x814f5; mov dword ptr [rax], ebx; pop rbx; ret; 
0x0000000000402a10: add eax, 0x81523; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040106e: add eax, 0x8198d; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x0000000000401052: add eax, 0x819a9; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x000000000042584c: add eax, 0x83022b00; rol byte ptr [rcx], 0x25; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000042586c: add eax, 0x83022b00; rol byte ptr [rcx], 0x25; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000042511d: add eax, 0x83128b00; ret 0x8801; 
0x0000000000425aea: add eax, 0x890e7400; ror byte ptr [rax - 0x73], 1; or eax, 0x5fb09; mov byte ptr [rcx + rax], dil; ret; 
0x00000000004306c0: add eax, 0x89480000; in al, dx; pop rbp; ret; 
0x0000000000401086: add eax, 0x8948f4eb; in al, dx; pop rbp; ret; 
0x00000000004182a0: add eax, 0x8b480005; xor byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000426c67: add eax, 0x8b4800; test rax, rax; je 0x26c7e; lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb3: add eax, 0x8b4800; test rax, rax; je 0x26cca; lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042722e: add eax, 0x8b4800; test rax, rax; je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042725d: add eax, 0x8b4800; test rax, rax; je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427291: add eax, 0x8b4800; test rax, rax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272ed: add eax, 0x8b4800; test rax, rax; je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427386: add eax, 0x8b4800; test rax, rax; je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273ca: add eax, 0x8b4800; test rax, rax; je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273fe: add eax, 0x8b4800; test rax, rax; je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c75: add eax, 0x8b4800; test rax, rax; je 0x29c8c; lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d05: add eax, 0x8b4800; test rax, rax; je 0x29d1c; lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d95: add eax, 0x8b4800; test rax, rax; je 0x29dac; lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5db: add eax, 0x8b4800; test rax, rax; je 0x2a5f2; lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a626: add eax, 0x8b4800; test rax, rax; je 0x2a63d; lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c075: add eax, 0x8b4800; test rax, rax; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c105: add eax, 0x8b4800; test rax, rax; je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c195: add eax, 0x8b4800; test rax, rax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045c217: add eax, 0x8d48fffc; and al, 8; ret; 
0x00000000004238de: add eax, 0x9ae80006; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004341d8: add eax, 0xa148a00; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x0000000000434208: add eax, 0xa148a00; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x000000000041868c: add eax, 0xb60f6600; cmp al, 2; and edi, 0xffff; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000040874a: add eax, 0xbf0f0001; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000419038: add eax, 0xc6894800; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004181ab: add eax, 0xc74800; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, rbx; call rax; 
0x000000000042432a: add eax, 0xc7834800; or byte ptr [rdx + 2], bh; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000425128: add eax, 0xc7894800; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x00000000004130d9: add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413269: add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413419: add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004250a7: add eax, 0xca39ff00; jg 0x25020; pop rbx; ret; 
0x0000000000419025: add eax, 0xcb900; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000042388e: add eax, 0xeae80006; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041f91e: add eax, 0xeb01b541; or dword ptr [rax - 0x7d], ecx; ret; 
0x000000000040d894: add eax, 0xf0478b48; ret; 
0x0000000000411574: add eax, 0xf0478b48; ret; 
0x0000000000419281: add eax, 0xf3000000; movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000042ee12: add eax, 0xf6854800; jne 0x2ee20; lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000411ae4: add eax, 0xf8478b48; ret; 
0x000000000045c3e8: add eax, 0xfb8bc2e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000458a4e: add eax, 0xfbc55ce8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457f31: add eax, 0xfbd079e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457d81: add eax, 0xfbd229e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457b49: add eax, 0xfbd461e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457a19: add eax, 0xfbd591e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045669b: add eax, 0xfbe90fe8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004565a5: add eax, 0xfbea05e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000456191: add eax, 0xfbee19e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004553a9: add eax, 0xfbfc01e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000455264: add eax, 0xfbfd46e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000453d9d: add eax, 0xfc120de8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000453840: add eax, 0xfc176ae8; dec dword ptr [rdx + 0x48082444]; lea esp, [rsp + 0xf8]; ret; 
0x0000000000450859: add eax, 0xfc4751e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045068b: add eax, 0xfc491fe8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004505e8: add eax, 0xfc49c2e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000044e610: add eax, 0xfc699ae8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044d274: add eax, 0xfc7d36e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044b3b6: add eax, 0xfc9bf4e8; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x0000000000449616: add eax, 0xfcb994e8; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x000000000044833f: add eax, 0xfccc6be8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044750a: add eax, 0xfcdaa0e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043dcd7: add eax, 0xfd72d3e8; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043d707: add eax, 0xfd78a3e8; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004372ce: add eax, 0xfddcdce8; dec dword ptr [rdx - 0x76b723bb]; in al, dx; pop rbp; ret; 
0x0000000000436f70: add eax, 0xfde03ae8; dec dword ptr [rdx - 0x76b71bbb]; in al, dx; pop rbp; ret; 
0x0000000000433b7f: add eax, 0xfe142be8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042e831: add eax, 0xfe6779e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042e769: add eax, 0xfe6841e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042dc84: add eax, 0xfe7326e8; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042d99c: add eax, 0xfe760ee8; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042d8ec: add eax, 0xfe76bee8; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042d792: add eax, 0xfe7818e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042cb41: add eax, 0xfe8469e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042cab9: add eax, 0xfe84f1e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042ca36: add eax, 0xfe8574e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042c989: add eax, 0xfe8621e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c901: add eax, 0xfe86a9e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c879: add eax, 0xfe8731e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c7f1: add eax, 0xfe87b9e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c761: add eax, 0xfe8849e8; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c6d9: add eax, 0xfe88d1e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c5c1: add eax, 0xfe89e9e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c539: add eax, 0xfe8a71e8; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c423: add eax, 0xfe8b87e8; inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042b073: add eax, 0xfe9f37e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042a023: add eax, 0xfeaf87e8; inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000428e43: add eax, 0xfec167e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004237ba: add eax, 0xff17f0e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042370a: add eax, 0xff18a0e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042365a: add eax, 0xff1950e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004235ab: add eax, 0xff19ffe8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423527: add eax, 0xff1a83e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004234a7: add eax, 0xff1b03e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000423427: add eax, 0xff1b83e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004232da: add eax, 0xff1cd0e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042322a: add eax, 0xff1d80e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042317a: add eax, 0xff1e30e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004230d1: add eax, 0xff1ed9e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042301a: add eax, 0xff1f90e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000422f6a: add eax, 0xff2040e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000422eba: add eax, 0xff20f0e8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004229c8: add eax, 0xff25e2e8; dec dword ptr [rax - 0x73]; and al, 0x68; ret; 
0x00000000004228ed: add eax, 0xff26bde8; dec dword ptr [rax - 0x73]; and al, 0x68; ret; 
0x000000000042282f: add eax, 0xff277be8; dec dword ptr [rax - 0x73]; and al, 0x68; ret; 
0x0000000000421fa2: add eax, 0xff3008e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421f21: add eax, 0xff3089e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421ea1: add eax, 0xff3109e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423bda: add eax, 0xff388b00; adc eax, 0x6030c; lea rsp, [rsp + 8]; ret; 
0x0000000000420f92: add eax, 0xff4018e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f11: add eax, 0xff4099e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420e91: add eax, 0xff4119e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c91: add eax, 0xff4319e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c11: add eax, 0xff4399e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041eed5: add eax, 0xff60d5e8; dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041d192: add eax, 0xff7e18e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d091: add eax, 0xff7f19e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c932: add eax, 0xff8678e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c831: add eax, 0xff8779e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c3f7: add eax, 0xff8bb3e8; dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041c2ff: add eax, 0xff8cabe8; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000041b64a: add eax, 0xff9960e8; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000041b574: add eax, 0xff9a36e8; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0x78]; ret; 
0x00000000004187be: add eax, 0xffc92ce8; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000416802: add eax, 0xffe7a8e8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415cfc: add eax, 0xfff2aee8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415830: add eax, 0xfff77ae8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041574e: add eax, 0xfff85ce8; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423ebe: add eax, 0xfffdbce8; dec dword ptr [rax - 0x75]; add eax, 0x44cb5; lea rsp, [rsp + 8]; ret; 
0x000000000044823e: add eax, 0xfffebfad; lea rdx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000424df6: add eax, 0xffff14e8; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000424da6: add eax, 0xffff64e8; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041f717: add eax, 0xffff73e9; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041f80a: add eax, 0xffff78e9; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040dc80: add eax, 0xffff7ae8; dec dword ptr [rax - 0x75]; add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004116e8: add eax, 0xffffc403; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000420968: add eax, 0xfffffcd3; mov qword ptr [rbx + 0x40], rax; pop r13; pop r12; pop rbx; ret; 
0x00000000004209c8: add eax, 0xfffffd13; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a1a: add eax, 0xfffffe61; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b8a: add eax, 0xfffffea1; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041c671: add eax, 0xfffffeaa; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000426bb2: add eax, 0xffffff99; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x0000000000425850: add eax, 1; and eax, 0xff; ret; 
0x0000000000425870: add eax, 1; and eax, 0xff; ret; 
0x0000000000404551: add eax, 1; cmp word ptr [rdi + rax*2], 0; jne 0x4550; ret; 
0x000000000042e5c8: add eax, 1; lea rdi, [rdi + rax - 1]; call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x0000000000411aca: add eax, 1; ret; 
0x000000000043cede: add eax, 1; ret; 
0x000000000044040e: add eax, 1; ret; 
0x0000000000434136: add eax, 1; test rax, rax; jne 0x34143; cmp rdx, r8; jne 0x34120; ret; 
0x000000000044eeb4: add eax, 2; ret; 
0x000000000044bedb: add eax, 4; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443f6b: add eax, 7; ret; 
0x000000000041d839: add eax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d879: add eax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041b3c9: add eax, 8; mov qword ptr [rax], 1; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x000000000041a9c0: add eax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x0000000000417e29: add eax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000417c4f: add eax, 8; mov rdx, qword ptr [rbx]; mov rax, qword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x000000000041bc87: add eax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bcd9: add eax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bd29: add eax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041beec: add eax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bf9d: add eax, 8; mov word ptr [rax], 0; mov rax, rbx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bea0: add eax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bf40: add eax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041d98c: add eax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004227ac: add eax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004216c7: add eax, 8; mov word ptr [rax], 0x64; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421478: add eax, 8; mov word ptr [rax], 0x65; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041c566: add eax, 8; mov word ptr [rax], 0x65; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041cc7e: add eax, 8; mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000042197f: add eax, 8; mov word ptr [rax], 0x67; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041535f: add eax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041dc9e: add eax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041ddb2: add eax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000042253e: add eax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000042264a: add eax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041c9fe: add eax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041dbb3: add eax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a13: add eax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421aa1: add eax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000428471: add eax, 8; mov word ptr [rax], r13w; pop r13; pop r12; pop rbx; ret; 
0x000000000042a645: add eax, 8; mov word ptr [rax], r13w; pop r13; pop r12; pop rbx; ret; 
0x0000000000427b8f: add eax, dword ptr [rax + rcx*4 + 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000407374: add eax, dword ptr [rax - 0x78]; clc; and eax, 0xff; ret; 
0x00000000004073f4: add eax, dword ptr [rax - 0x78]; clc; and eax, 0xff; ret; 
0x00000000004208ff: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000443d9f: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000402aa9: add eax, dword ptr [rax]; add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000041d7c7: add eax, dword ptr [rax]; add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000459ca1: add eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000410ab8: add eax, dword ptr [rax]; add byte ptr [rcx - 0x7f], cl; ret 0xdc00; 
0x000000000041ca8e: add eax, dword ptr [rax]; add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000040cfbb: add eax, dword ptr [rax]; add dword ptr [rax], eax; add bl, ch; and cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000444c36: add eax, dword ptr [rax]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c35: add eax, dword ptr [rax]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c34: add eax, dword ptr [rax]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004458f4: add eax, dword ptr [rax]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000042bea8: add eax, dword ptr [rax]; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x0000000000452ecc: add eax, dword ptr [rax]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000044ce4e: add eax, dword ptr [rax]; call 0x1acf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ce76: add eax, dword ptr [rax]; call 0x1ad10; lea rsp, [rsp + 8]; ret; 
0x0000000000426ba9: add eax, dword ptr [rax]; call 0x1c7c0; lea rax, [rip - 0x67]; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000041eabd: add eax, dword ptr [rax]; call 0x1dbc0; pop r13; pop r12; pop rbx; ret; 
0x000000000041eb37: add eax, dword ptr [rax]; call 0x1dcb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042751f: add eax, dword ptr [rax]; call 0x24dc0; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000426d1a: add eax, dword ptr [rax]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d3a: add eax, dword ptr [rax]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d5a: add eax, dword ptr [rax]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x00000000004368c9: add eax, dword ptr [rax]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c8: add eax, dword ptr [rax]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b19: add eax, dword ptr [rax]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b39: add eax, dword ptr [rax]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bc9: add eax, dword ptr [rax]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436f8a: add eax, dword ptr [rax]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000436faa: add eax, dword ptr [rax]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004372ea: add eax, dword ptr [rax]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x000000000043732a: add eax, dword ptr [rax]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x000000000043736a: add eax, dword ptr [rax]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000438d45: add eax, dword ptr [rax]; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000438e1a: add eax, dword ptr [rax]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000438e7a: add eax, dword ptr [rax]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438f0a: add eax, dword ptr [rax]; call 0x38f20; lea rsp, [rsp + 8]; ret; 
0x000000000043909f: add eax, dword ptr [rax]; call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x0000000000439105: add eax, dword ptr [rax]; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x00000000004391ca: add eax, dword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043922a: add eax, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004392fa: add eax, dword ptr [rax]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000439a9a: add eax, dword ptr [rax]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043b1c5: add eax, dword ptr [rax]; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x000000000044804f: add eax, dword ptr [rax]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x000000000042993f: add eax, dword ptr [rax]; call 0xe180; pop rbx; ret; 
0x0000000000429a0a: add eax, dword ptr [rax]; call 0xe180; pop rbx; ret; 
0x00000000004484ba: add eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000449d32: add eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000449d42: add eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004484ba: add eax, dword ptr [rax]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x00000000004484da: add eax, dword ptr [rax]; call qword ptr [rax + 0x18]; 
0x00000000004484da: add eax, dword ptr [rax]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484fc: add eax, dword ptr [rax]; call qword ptr [rax + 0x20]; 
0x000000000044851c: add eax, dword ptr [rax]; call qword ptr [rax + 0x20]; 
0x000000000044853f: add eax, dword ptr [rax]; call qword ptr [rax + 0x20]; 
0x000000000044855f: add eax, dword ptr [rax]; call qword ptr [rax + 0x20]; 
0x00000000004484fc: add eax, dword ptr [rax]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000044853f: add eax, dword ptr [rax]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000445421: add eax, dword ptr [rax]; call qword ptr [rax + 0x50]; 
0x00000000004454a4: add eax, dword ptr [rax]; call qword ptr [rax + 0x50]; 
0x000000000044a21a: add eax, dword ptr [rax]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a23a: add eax, dword ptr [rax]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a25c: add eax, dword ptr [rax]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a29f: add eax, dword ptr [rax]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000450529: add eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000450596: add eax, dword ptr [rax]; call qword ptr [rax]; 
0x00000000004508f5: add eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000453178: add eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000453178: add eax, dword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000450519: add eax, dword ptr [rax]; cmp qword ptr [rax], 0; je 0x5052f; mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x0000000000450586: add eax, dword ptr [rax]; cmp qword ptr [rax], 0; je 0x5059c; mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x0000000000453168: add eax, dword ptr [rax]; cmp qword ptr [rax], 0; je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000455b05: add eax, dword ptr [rax]; lea rdi, [rip + 0x229e2]; mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000426e9a: add eax, dword ptr [rax]; lea rsp, [rsp + 0x88]; ret; 
0x0000000000423c55: add eax, dword ptr [rax]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004261f4: add eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000452ec1: add eax, dword ptr [rax]; mov byte ptr [rax + 0x18], 1; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004500d3: add eax, dword ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452622: add eax, dword ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045264e: add eax, dword ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452aff: add eax, dword ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000043487a: add eax, dword ptr [rax]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x0000000000434879: add eax, dword ptr [rax]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x0000000000452e8c: add eax, dword ptr [rax]; mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000448248: add eax, dword ptr [rax]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x00000000004557a6: add eax, dword ptr [rax]; mov qword ptr [rdx + rax*8 - 0x20], 0; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x0000000000436a3e: add eax, dword ptr [rax]; mov qword ptr [rsp], rax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a3d: add eax, dword ptr [rax]; mov qword ptr [rsp], rax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x000000000044cbc0: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c910: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc60: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd00: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c865: add eax, dword ptr [rax]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c5f4: add eax, dword ptr [rax]; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000444c6d: add eax, dword ptr [rax]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444ce1: add eax, dword ptr [rax]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000043b224: add eax, dword ptr [rax]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x0000000000438db4: add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000438ee4: add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000439164: add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439294: add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439354: add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x000000000042d835: add eax, dword ptr [rax]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d845: add eax, dword ptr [rax]; movsd xmm0, qword ptr [rax]; ret; 
0x00000000004385f2: add eax, dword ptr [rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000445951: add eax, dword ptr [rax]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000040553d: add eax, dword ptr [rbp + 0x31]; jmp qword ptr [rdi + 0x41]; 
0x000000000042bdab: add eax, dword ptr [rbx + 0x634801e9]; leave; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004074d3: add eax, dword ptr [rbx - 0x2080fe08]; ret; 
0x0000000000407596: add eax, dword ptr [rbx - 0x2380fe08]; ret; 
0x0000000000456f04: add eax, dword ptr [rbx - 0x2f76fe3e]; lea rsp, [rsp + 0x48]; ret; 
0x00000000004040cd: add eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040cd07: add eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000041a5da: add eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040468a: add eax, dword ptr [rcx - 0x78]; add cl, byte ptr [rcx - 0x7d]; ret 0x4901; 
0x00000000004047c2: add eax, dword ptr [rcx - 0x78]; add cl, byte ptr [rcx - 0x7d]; ret 0x4901; 
0x000000000041868b: add eax, dword ptr [rip - 0x49f09a00]; cmp al, 2; and edi, 0xffff; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000423be1: add eax, dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000424ec5: add eax, dword ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000453177: add eax, dword ptr es:[rax]; call qword ptr [rax]; 
0x0000000000453177: add eax, dword ptr es:[rax]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000453167: add eax, dword ptr es:[rax]; cmp qword ptr [rax], 0; je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000454b07: add eax, ebp; adc esi, edi; cli; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x00000000004321e7: add eax, ebp; add dword ptr [rbp - 3], -1; lea rsp, [rsp + 8]; ret; 
0x00000000004318f7: add eax, ebp; add edx, dword ptr [rbp + rdi*8 - 1]; lea rsp, [rsp + 8]; ret; 
0x0000000000450877: add eax, ebp; pop r12; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d37: add eax, ebp; ret; 
0x00000000004117b7: add eax, ebp; xchg ebx, eax; sar edi, 0xff; pop rbx; ret; 
0x000000000041f9db: add eax, ebx; mov byte ptr [rax], 0; pop rbx; ret; 
0x000000000043b90a: add eax, ebx; pop rbx; ret; 
0x000000000044ba86: add eax, ebx; pop rbx; ret; 
0x0000000000407810: add eax, ecx; add edi, r8d; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x0000000000409ebd: add eax, ecx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000404a86: add eax, ecx; shr di, 4; cmp rdx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404ac4: add eax, ecx; shr edi, 4; cmp rdx, 7; jl 0x4ab0; ret; 
0x00000000004024f8: add eax, edi; cmp rdx, rax; jbe 0x24eb; ret; 
0x000000000045c0d3: add eax, edi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x0000000000404e68: add eax, edi; ret; 
0x0000000000404e78: add eax, edi; ret; 
0x0000000000404e8c: add eax, edi; ret; 
0x0000000000404e9c: add eax, edi; ret; 
0x000000000040b6fc: add eax, edi; shl rdi, 1; shl r8, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x0000000000404a4c: add eax, edx; and eax, 0xff; ret; 
0x00000000004195c7: add eax, edx; jmp 0x195b0; ret; 
0x0000000000403259: add eax, edx; jmp rax; 
0x0000000000425dde: add eax, edx; jmp rax; 
0x000000000042e93c: add eax, edx; jmp rax; 
0x00000000004385f9: add eax, edx; jmp rax; 
0x0000000000417029: add eax, edx; mov rax, qword ptr [rax + 0xc]; ret; 
0x0000000000416e39: add eax, edx; mov rax, qword ptr [rax]; ret; 
0x0000000000453964: add eax, edx; mov word ptr [rsi], ax; ret; 
0x000000000045bed4: add eax, edx; mov word ptr [rsi], ax; ret; 
0x0000000000416e49: add eax, edx; movsxd rax, dword ptr [rax + 8]; ret; 
0x0000000000417c59: add eax, edx; pop rbx; ret; 
0x000000000044f0fb: add eax, edx; sar rax, 1; ret; 
0x000000000044f4ab: add eax, edx; sar rax, 1; ret; 
0x0000000000423c53: add eax, esi; add eax, dword ptr [rax]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f833: add eax, esi; add edi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f4f3: add eax, esi; add esi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000402476: add eax, esi; cmp rdx, rax; jbe 0x246b; ret; 
0x000000000040256a: add eax, esi; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x0000000000404af4: add eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000453963: add eax, r10d; mov word ptr [rsi], ax; ret; 
0x0000000000453962: add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045bed3: add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045bed2: add eax, r10d; mov word ptr [rsi], ax; ret; 
0x0000000000402475: add eax, r14d; cmp rdx, rax; jbe 0x246b; ret; 
0x0000000000402569: add eax, r14d; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x00000000004024f7: add eax, r15d; cmp rdx, rax; jbe 0x24eb; ret; 
0x000000000044ed29: add ebp, dword ptr [rdi]; cld; dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000043a814: add ebx, ebp; add dh, byte ptr [rax + 0xff2530]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004130fb: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043c165: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450be9: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450e67: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000413f96: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x000000000045133f: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x0000000000412f82: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004131d8: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000425c2d: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429aa6: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429f2b: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042c327: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043a370: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450ca4: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e28: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e95: add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004163cd: add ebx, ebp; add dh, byte ptr [rax]; shl byte ptr [rip + 0xff], 0x48; lea esp, [rsp + 0x108]; ret; 
0x00000000004363cb: add ebx, ebp; add dh, byte ptr [rbx + 0x48d88801]; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041d723: add ebx, ebp; mov al, byte ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f921: add ebx, ebp; or dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000407503: add ecx, 0x30; mov byte ptr [rdi + rdx], cl; shr esi, 1; cmp eax, 1; jg 0x74f8; ret; 
0x000000000044f531: add ecx, 1; add rsi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000407306: add ecx, 1; cmp rsi, rdx; jg 0x72f8; xor eax, eax; ret; 
0x000000000040cf7e: add ecx, 1; cmp rsi, rdx; jg 0xcf70; xor eax, eax; ret; 
0x000000000044f882: add ecx, 2; cmp eax, ecx; jg 0x4f858; ret; 
0x000000000044f57a: add ecx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x000000000040f93e: add ecx, 2; cmp rsi, rdx; jg 0xf930; xor eax, eax; ret; 
0x0000000000403724: add ecx, 4; cmp r8, rcx; ja 0x3700; mov rax, 0xffffffffffffffff; ret; 
0x00000000004037a5: add ecx, 8; cmp r8, rcx; ja 0x3780; mov rax, 0xffffffffffffffff; ret; 
0x0000000000439a4a: add ecx, dword ptr [rax + 0x48a241c]; and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a7a: add ecx, dword ptr [rax + 0x48a241c]; and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042b9af: add ecx, dword ptr [rax + 0x63]; xchg esp, eax; and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042135e: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000421393: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004213bd: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004213f3: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004215ae: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004215e3: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000042160d: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000421643: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000447997: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000454acc: add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000404c0e: add ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000404c61: add ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000416ffe: add ecx, dword ptr [rax - 0x75]; xor byte ptr [rcx + rcx*4 - 0x10], cl; call rax; 
0x0000000000424455: add ecx, dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x18; pop r12; pop rbx; ret; 
0x0000000000445344: add ecx, dword ptr [rax - 0x77]; ret 0x20b9; 
0x0000000000445343: add ecx, dword ptr [rax - 0x77]; ret 0x20b9; 
0x000000000040477b: add ecx, dword ptr [rax - 0x77]; ror dword ptr [rcx - 0x7d], cl; ret; 
0x0000000000458c09: add ecx, dword ptr [rbx - 0x2776dbe4]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432342: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043253a: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043272b: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432913: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432af2: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432cda: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ebb: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433093: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332ab: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433483: add ecx, dword ptr [rbx - 0x3f7adbfc]; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000403717: add ecx, dword ptr [rcx + 1]; int1; sar r9, 2; mov rax, r9; ret; 
0x000000000040652d: add ecx, dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x000000000040379f: add ecx, dword ptr [rcx + rcx*4 - 0x38]; ret; 
0x00000000004106bf: add ecx, dword ptr [rcx - 0x7d]; ret 0x4904; 
0x00000000004065e0: add ecx, dword ptr [rcx]; ret 0x5488; 
0x0000000000459adb: add ecx, dword ptr [rcx]; ror byte ptr [rcx + 0x648d4806], 1; and al, 8; ret; 
0x0000000000431e79: add ecx, dword ptr [rdx - 3]; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000433c7b: add ecx, ebp; cld; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x0000000000403719: add ecx, esi; sar r9, 2; mov rax, r9; ret; 
0x000000000040379a: add ecx, esi; sar r9, 3; mov rax, r9; ret; 
0x000000000044fa16: add edi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad9: add edi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x00000000004341e0: add edi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x0000000000434210: add edi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x0000000000403aa0: add edi, 1; cmp rdx, rdi; ja 0x3a68; xor eax, eax; ret; 
0x00000000004035fc: add edi, 2; cmp rax, rdi; ja 0x35f8; ret; 
0x00000000004038ba: add edi, 2; cmp rcx, rdi; ja 0x3890; xor eax, eax; ret; 
0x0000000000403693: add edi, 4; cmp rax, rdi; ja 0x3690; ret; 
0x00000000004039bf: add edi, 4; cmp rcx, rdi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000456701: add edi, 8; call 0x1cbe0; call 0x17d50; pop rbx; ret; 
0x0000000000418149: add edi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x000000000041d2ec: add edi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041d46c: add edi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d5dc: add edi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d76c: add edi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x00000000004146f6: add edi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000450268: add edi, 8; cmp qword ptr [rdi], 0; jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x00000000004036b4: add edi, 8; cmp rax, rdi; ja 0x36b0; ret; 
0x000000000042432d: add edi, 8; mov edx, 2; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000403532: add edi, eax; and edx, 0xff; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b998: add edi, eax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9c5: add edi, eax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9fe: add edi, eax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000407813: add edi, eax; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x000000000040701d: add edi, ecx; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000413bb6: add edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042fddf: add edi, edi; jne 0x2fdd0; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x000000000044f836: add edi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f835: add edi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000045930a: add edi, edi; mov edx, eax; mov rax, qword ptr [rip + 0x25d3b]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x0000000000415186: add edi, edi; push rax; js 0x15114; ret; 
0x000000000042d5f0: add edi, esi; inc dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459309: add edi, r15d; mov edx, eax; mov rax, qword ptr [rip + 0x25d3b]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x0000000000407812: add edi, r8d; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x00000000004479c1: add edx, 1; cmp byte ptr [rdi + rdx], 0; jne 0x479c0; lea rax, [rdi + rdx]; ret; 
0x000000000040f931: add edx, 1; cmp di, word ptr [rcx]; jne 0xf93d; mov rax, rdx; ret; 
0x00000000004072f9: add edx, 1; cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000040cf71: add edx, 1; cmp dil, byte ptr [rcx]; jne 0xcf7d; mov rax, rdx; ret; 
0x0000000000449ba1: add edx, 1; cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x0000000000425121: add edx, 1; mov byte ptr [rip + 0x5ff56], dl; mov rdi, rax; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000456f05: add edx, 1; mov eax, edx; lea rsp, [rsp + 0x48]; ret; 
0x000000000042fc7c: add edx, 1; mov rsi, qword ptr [rax]; call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x00000000004310cc: add edx, 1; mov rsi, qword ptr [rax]; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004341a8: add edx, 1; test rax, rax; jne 0x341b5; cmp rdx, r10; jne 0x34180; ret; 
0x0000000000453958: add edx, 3; mov word ptr [r8], dx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045bec8: add edx, 3; mov word ptr [r8], dx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000040315f: add edx, 8; cmp qword ptr [r10], 0; jne 0x3118; xor eax, eax; ret; 
0x00000000004032bd: add edx, 8; mov ax, bx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x0000000000403307: add edx, 8; mov ax, bx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x0000000000417ddc: add edx, 8; mov ax, word ptr [rdx]; mov word ptr [rdx], 0; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x00000000004318f9: add edx, dword ptr [rbp + rdi*8 - 1]; lea rsp, [rsp + 8]; ret; 
0x00000000004077d2: add edx, dword ptr [rdi]; add edx, ecx; mov dword ptr [rdi], edx; mov qword ptr [rsi], rax; ret; 
0x0000000000443a20: add edx, ecx; cvtsi2sd xmm0, rdx; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000453ad8: add edx, ecx; lea rbx, [rsi + rdx]; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004077d4: add edx, ecx; mov dword ptr [rdi], edx; mov qword ptr [rsi], rax; ret; 
0x0000000000456736: add edx, ecx; mov rax, rdx; ret; 
0x000000000045672b: add edx, ecx; sar rdx, 5; shr rcx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x0000000000403a9c: add esi, 1; add rdi, 1; cmp rdx, rdi; ja 0x3a68; xor eax, eax; ret; 
0x0000000000447a7c: add esi, 1; cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x0000000000418941: add esi, 1; movsxd rax, r14d; mov rsi, qword ptr [r13 + rax*8]; mov rdi, rsp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x000000000044f576: add esi, 2; add rcx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x00000000004038b6: add esi, 2; add rdi, 2; cmp rcx, rdi; ja 0x3890; xor eax, eax; ret; 
0x000000000041135e: add esi, 2; cmp rax, rdx; jg 0x11310; ret; 
0x000000000044f535: add esi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x00000000004039bb: add esi, 4; add rdi, 4; cmp rcx, rdi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000414311: add esi, dword ptr [rdx + rax + 0x75]; or al, 0x49; mov edi, dword ptr [rdi]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000043f1dc: add esi, eax; sar rsi, 1; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000442c5c: add esi, eax; sar rsi, 1; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x000000000040b995: add esi, ecx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9c2: add esi, ecx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9f5: add esi, ecx; and edi, 0xff; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000044f4f6: add esi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f4f5: add esi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040200f: add esi, esi; ret 0x7402; 
0x0000000000408f92: add esp, 0x81660001; ret; 
0x0000000000408fd5: add esp, 0x81660001; ret; 
0x00000000004090a0: add esp, 0x81660001; ret; 
0x00000000004090db: add esp, 0x81660001; ret; 
0x000000000041a8d9: add esp, dword ptr [rbp - 0x74b7fffa]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69414; mov edi, dword ptr [rdx]; call rax; 
0x000000000045395a: add esp, dword ptr [rsi + 0x41]; mov dword ptr [rax], edx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045beca: add esp, dword ptr [rsi + 0x41]; mov dword ptr [rax], edx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x0000000000455923: add esp, dword ptr [rsi - 0x77]; adc ecx, dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x000000000044bb70: add esp, dword ptr [rsi - 0x77]; fsub dword ptr [rip + 0xffff]; pop rbx; ret; 
0x00000000004553ab: add esp, edi; sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000041ec3a: add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000041ed4e: add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x00000000004344f1: add qword ptr [rax + 0x63], rcx; ret 0x2948; 
0x0000000000451273: add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x00000000004365fb: add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000403cfe: add qword ptr [rax], rax; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403c73: add qword ptr [rax], rax; mov rsp, rbp; pop rbp; ret; 
0x000000000041fc75: add qword ptr [rbx + 0x18], 1; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041dac1: add qword ptr [rbx + 0x18], r12; pop r13; pop r12; pop rbx; ret; 
0x000000000041da82: add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000459a46: add qword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512ee: add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000447fcb: add qword ptr [rsp], 4; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004341a7: add r10, 1; test rax, rax; jne 0x341b5; cmp rdx, r10; jne 0x34180; ret; 
0x000000000040315e: add r10, 8; cmp qword ptr [r10], 0; jne 0x3118; xor eax, eax; ret; 
0x0000000000408f91: add r12d, 0x81660001; ret; 
0x0000000000408fd4: add r12d, 0x81660001; ret; 
0x000000000040909f: add r12d, 0x81660001; ret; 
0x00000000004090da: add r12d, 0x81660001; ret; 
0x0000000000418940: add r14d, 1; movsxd rax, r14d; mov rsi, qword ptr [r13 + rax*8]; mov rdi, rsp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x000000000043b403: add r15b, dil; bt dword ptr [rsp], ecx; jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x000000000042e349: add r15b, dil; ret; 
0x0000000000434135: add r8, 1; test rax, rax; jne 0x34143; cmp rdx, r8; jne 0x34120; ret; 
0x00000000004508f4: add r8, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000411c7c: add r8b, byte ptr [r9 + 0xf]; mov dh, 0x55; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x000000000040780f: add r8d, r9d; add edi, r8d; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x0000000000403718: add r9, rsi; sar r9, 2; mov rax, r9; ret; 
0x0000000000403799: add r9, rsi; sar r9, 3; mov rax, r9; ret; 
0x000000000045c0c9: add rax, 0x1a431f; movsxd rdi, edi; add rax, rdi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x0000000000404550: add rax, 1; cmp word ptr [rdi + rax*2], 0; jne 0x4550; ret; 
0x000000000042e5c7: add rax, 1; lea rdi, [rdi + rax - 1]; call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x0000000000411ac9: add rax, 1; ret; 
0x000000000043cedd: add rax, 1; ret; 
0x000000000044040d: add rax, 1; ret; 
0x000000000044beda: add rax, 4; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041d838: add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d878: add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041b3c8: add rax, 8; mov qword ptr [rax], 1; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x000000000041a9bf: add rax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x0000000000417e28: add rax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000417c4e: add rax, 8; mov rdx, qword ptr [rbx]; mov rax, qword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x000000000041bc86: add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bcd8: add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bd28: add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041beeb: add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bf9c: add rax, 8; mov word ptr [rax], 0; mov rax, rbx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041be9f: add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bf3f: add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041d98b: add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004227ab: add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004216c6: add rax, 8; mov word ptr [rax], 0x64; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421477: add rax, 8; mov word ptr [rax], 0x65; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041c565: add rax, 8; mov word ptr [rax], 0x65; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041cc7d: add rax, 8; mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000042197e: add rax, 8; mov word ptr [rax], 0x67; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041535e: add rax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041dc9d: add rax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041ddb1: add rax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000042253d: add rax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x0000000000422649: add rax, 8; mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041c9fd: add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041dbb2: add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a12: add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421aa0: add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000428470: add rax, 8; mov word ptr [rax], r13w; pop r13; pop r12; pop rbx; ret; 
0x000000000042a644: add rax, 8; mov word ptr [rax], r13w; pop r13; pop r12; pop rbx; ret; 
0x0000000000426e99: add rax, qword ptr [r8]; lea rsp, [rsp + 0x88]; ret; 
0x0000000000404af3: add rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f9da: add rax, rbx; mov byte ptr [rax], 0; pop rbx; ret; 
0x000000000043b909: add rax, rbx; pop rbx; ret; 
0x000000000044ba85: add rax, rbx; pop rbx; ret; 
0x0000000000409ebc: add rax, rcx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x000000000045c0d2: add rax, rdi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x0000000000404e8b: add rax, rdi; ret; 
0x0000000000404e9b: add rax, rdi; ret; 
0x000000000040b6fb: add rax, rdi; shl rdi, 1; shl r8, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x00000000004195c6: add rax, rdx; jmp 0x195b0; ret; 
0x0000000000403258: add rax, rdx; jmp rax; 
0x0000000000425ddd: add rax, rdx; jmp rax; 
0x000000000042e93b: add rax, rdx; jmp rax; 
0x00000000004385f8: add rax, rdx; jmp rax; 
0x0000000000417028: add rax, rdx; mov rax, qword ptr [rax + 0xc]; ret; 
0x0000000000416e38: add rax, rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000416e48: add rax, rdx; movsxd rax, dword ptr [rax + 8]; ret; 
0x0000000000417c58: add rax, rdx; pop rbx; ret; 
0x000000000044f0fa: add rax, rdx; sar rax, 1; ret; 
0x000000000044f4aa: add rax, rdx; sar rax, 1; ret; 
0x000000000044f530: add rcx, 1; add rsi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000407305: add rcx, 1; cmp rsi, rdx; jg 0x72f8; xor eax, eax; ret; 
0x000000000040cf7d: add rcx, 1; cmp rsi, rdx; jg 0xcf70; xor eax, eax; ret; 
0x000000000044f579: add rcx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x000000000040f93d: add rcx, 2; cmp rsi, rdx; jg 0xf930; xor eax, eax; ret; 
0x0000000000403723: add rcx, 4; cmp r8, rcx; ja 0x3700; mov rax, 0xffffffffffffffff; ret; 
0x00000000004037a4: add rcx, 8; cmp r8, rcx; ja 0x3780; mov rax, 0xffffffffffffffff; ret; 
0x000000000044fa15: add rdi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad8: add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x00000000004341df: add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x000000000043420f: add rdi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x0000000000403a9f: add rdi, 1; cmp rdx, rdi; ja 0x3a68; xor eax, eax; ret; 
0x00000000004035fb: add rdi, 2; cmp rax, rdi; ja 0x35f8; ret; 
0x00000000004038b9: add rdi, 2; cmp rcx, rdi; ja 0x3890; xor eax, eax; ret; 
0x0000000000403692: add rdi, 4; cmp rax, rdi; ja 0x3690; ret; 
0x00000000004039be: add rdi, 4; cmp rcx, rdi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000456700: add rdi, 8; call 0x1cbe0; call 0x17d50; pop rbx; ret; 
0x0000000000418148: add rdi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x000000000041d2eb: add rdi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041d46b: add rdi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d5db: add rdi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d76b: add rdi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x00000000004146f5: add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000450267: add rdi, 8; cmp qword ptr [rdi], 0; jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x00000000004036b3: add rdi, 8; cmp rax, rdi; ja 0x36b0; ret; 
0x000000000042432c: add rdi, 8; mov edx, 2; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000403531: add rdi, rax; and edx, 0xff; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b997: add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9c4: add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9fd: add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040701c: add rdi, rcx; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004479c0: add rdx, 1; cmp byte ptr [rdi + rdx], 0; jne 0x479c0; lea rax, [rdi + rdx]; ret; 
0x000000000040f930: add rdx, 1; cmp di, word ptr [rcx]; jne 0xf93d; mov rax, rdx; ret; 
0x00000000004072f8: add rdx, 1; cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000040cf70: add rdx, 1; cmp dil, byte ptr [rcx]; jne 0xcf7d; mov rax, rdx; ret; 
0x0000000000449ba0: add rdx, 1; cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000042fc7b: add rdx, 1; mov rsi, qword ptr [rax]; call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x00000000004310cb: add rdx, 1; mov rsi, qword ptr [rax]; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004032bc: add rdx, 8; mov ax, bx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x0000000000403306: add rdx, 8; mov ax, bx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x0000000000417ddb: add rdx, 8; mov ax, word ptr [rdx]; mov word ptr [rdx], 0; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000443a1f: add rdx, rcx; cvtsi2sd xmm0, rdx; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000453ad7: add rdx, rcx; lea rbx, [rsi + rdx]; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456735: add rdx, rcx; mov rax, rdx; ret; 
0x000000000045672a: add rdx, rcx; sar rdx, 5; shr rcx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x0000000000403a9b: add rsi, 1; add rdi, 1; cmp rdx, rdi; ja 0x3a68; xor eax, eax; ret; 
0x0000000000447a7b: add rsi, 1; cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x000000000044f575: add rsi, 2; add rcx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x00000000004038b5: add rsi, 2; add rdi, 2; cmp rcx, rdi; ja 0x3890; xor eax, eax; ret; 
0x000000000041135d: add rsi, 2; cmp rax, rdx; jg 0x11310; ret; 
0x000000000044f534: add rsi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x00000000004039ba: add rsi, 4; add rdi, 4; cmp rcx, rdi; ja 0x39a0; xor eax, eax; ret; 
0x000000000043f1db: add rsi, rax; sar rsi, 1; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000442c5b: add rsi, rax; sar rsi, 1; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x000000000040b994: add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b993: add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9c1: add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9f4: add rsi, rcx; and edi, 0xff; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9f3: add rsi, rcx; and edi, 0xff; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431b2d: addps xmm0, xmmword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004330d7: addps xmm0, xmmword ptr [rax]; ret; 
0x00000000004331a7: addps xmm0, xmmword ptr [rax]; ret; 
0x00000000004334c7: addps xmm0, xmmword ptr [rax]; ret; 
0x0000000000433597: addps xmm0, xmmword ptr [rax]; ret; 
0x00000000004053fd: addps xmm2, xmmword ptr [rdi + rax*8]; movapd xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000405435: addps xmm2, xmmword ptr [rdi + rdx*8]; movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x00000000004330d6: addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334c6: addsd xmm0, qword ptr [rax]; ret; 
0x00000000004053fc: addsd xmm2, qword ptr [rdi + rax*8]; movapd xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000405434: addsd xmm2, qword ptr [rdi + rdx*8]; movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x00000000004331a6: addss xmm0, dword ptr [rax]; ret; 
0x0000000000433596: addss xmm0, dword ptr [rax]; ret; 
0x00000000004253aa: and al, 0; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000407718: and al, 0; add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004077a8: and al, 0; add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040a244: and al, 0; add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000432630: and al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004327d0: and al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000429c5b: and al, 0; add byte ptr [rax - 0x77], cl; fucompi st(0); mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000429ceb: and al, 0; add byte ptr [rax - 0x77], cl; fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x000000000042c05b: and al, 0; add byte ptr [rax - 0x77], cl; fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0eb: and al, 0; add byte ptr [rax - 0x77], cl; fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x0000000000429c6a: and al, 0; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000429cfa: and al, 0; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000429d8a: and al, 0; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000042c06a: and al, 0; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000042c0fa: and al, 0; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000042c18a: and al, 0; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000040d12b: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041d924: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e53a: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e5ba: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e658: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041e6f8: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042273d: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454251: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454584: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045467c: and al, 0; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000415b86: and al, 0; jbe 0x15b8e; mov al, byte ptr [rsp + 1]; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x00000000004102ef: and al, 0x10; add al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041309d: and al, 0x10; add byte ptr [rax + rdx + 0x48], dh; mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041319d: and al, 0x10; add byte ptr [rax + rdx + 0x48], dh; mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041ea54: and al, 0x10; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000420444: and al, 0x10; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004251c9: and al, 0x10; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000426891: and al, 0x10; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043c77d: and al, 0x10; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cadc: and al, 0x10; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcad: and al, 0x10; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044000c: and al, 0x10; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b5d: and al, 0x10; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e9d: and al, 0x10; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044404f: and al, 0x10; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000044404e: and al, 0x10; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004558c7: and al, 0x10; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455961: and al, 0x10; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045599b: and al, 0x10; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045599a: and al, 0x10; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000043238a: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432389: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043257a: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432579: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043276a: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432769: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043295a: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432959: and al, 0x10; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040b914: and al, 0x10; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b94d: and al, 0x10; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x00000000004100d0: and al, 0x10; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x220]; pop rbx; ret; 
0x00000000004067af: and al, 0x10; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a64: and al, 0x10; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d54: and al, 0x10; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000043238e: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043238d: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043257e: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043257d: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043276e: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043276d: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043295e: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043295d: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b45: and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416950: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041694f: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041691f: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168c0: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168bf: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416890: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041688f: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415990: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041598f: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041595f: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415900: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158ff: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d0: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158cf: and al, 0x10; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000417631: and al, 0x10; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x0000000000456f3b: and al, 0x10; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456f3a: and al, 0x10; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004100d4: and al, 0x10; lea rsp, [rsp + 0x220]; pop rbx; ret; 
0x00000000004067b3: and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a68: and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d58: and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b918: and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b951: and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000041495f: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000041495e: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd59: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd58: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ceab: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ceaa: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440289: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440288: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403db: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403da: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8b2: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8b1: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451654: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451653: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451967: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451966: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c7: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c6: and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044384c: and al, 0x10; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000044384b: and al, 0x10; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000439207: and al, 0x10; mov r9d, 2; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004391a7: and al, 0x10; mov r9d, 4; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000043925f: and al, 0x10; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392cf: and al, 0x10; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004130aa: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004130a9: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131aa: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a9: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041492e: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041492d: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd28: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd27: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce7a: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce79: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440258: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440257: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403aa: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a9: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e881: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e880: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451623: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451622: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451936: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451935: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452596: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452595: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c50: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450c4f: and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130a5: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a5: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414929: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd23: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce75: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440253: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a5: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e87c: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045161e: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451931: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452591: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c4b: and al, 0x10; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041426d: and al, 0x10; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041426c: and al, 0x10; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041417d: and al, 0x10; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000041417c: and al, 0x10; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000417524: and al, 0x10; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000041368b: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c711: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc41: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e71f: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee35: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efc5: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2dc: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f979: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbdf: and al, 0x10; mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000414846: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc45: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd96: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440175: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c6: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e795: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451536: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451846: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d5: and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000414275: and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414274: and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414185: and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000414184: and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000414841: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000414840: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc40: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc3f: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd91: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd90: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440170: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044016f: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c1: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c0: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e790: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e78f: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451531: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451530: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451841: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451840: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d0: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522cf: and al, 0x10; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000413162: and al, 0x10; mov rsi, rsp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004132fb: and al, 0x10; mov rsi, rsp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134bb: and al, 0x10; mov rsi, rsp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413083: and al, 0x10; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413216: and al, 0x10; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b6: and al, 0x10; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004436f8: and al, 0x10; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x00000000004436f7: and al, 0x10; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x00000000004436f2: and al, 0x10; movsd xmm0, qword ptr [rsp + 0x10]; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x000000000040ae72: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040ae71: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040b368: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040b367: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040ccb1: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040ccb0: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040f088: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040f087: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000411245: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000411244: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x00000000004140ad: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x00000000004140ac: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fb3: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fb2: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000425733: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000425732: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000427b50: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000427b4f: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000042e251: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000042e250: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000430f83: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000430f82: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044431a: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000444319: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000445688: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000445687: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000445fb0: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000445faf: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000446057: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000446056: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044c073: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044c072: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044c66b: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044c66a: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044d5ac: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044d5ab: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044d958: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044d957: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044dcac: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044dcab: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000454aa0: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a9f: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000456ac4: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000456ac3: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000045a187: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000045a186: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000045a219: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000045a218: and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc8d: and al, 0x10; pop rbx; ret; 
0x000000000040dc8c: and al, 0x10; pop rbx; ret; 
0x0000000000413103: and al, 0x10; pop rbx; ret; 
0x0000000000413102: and al, 0x10; pop rbx; ret; 
0x0000000000413295: and al, 0x10; pop rbx; ret; 
0x0000000000413294: and al, 0x10; pop rbx; ret; 
0x000000000041344f: and al, 0x10; pop rbx; ret; 
0x000000000041344e: and al, 0x10; pop rbx; ret; 
0x0000000000417289: and al, 0x10; pop rbx; ret; 
0x0000000000417288: and al, 0x10; pop rbx; ret; 
0x0000000000418571: and al, 0x10; pop rbx; ret; 
0x0000000000418570: and al, 0x10; pop rbx; ret; 
0x0000000000421362: and al, 0x10; pop rbx; ret; 
0x0000000000421361: and al, 0x10; pop rbx; ret; 
0x0000000000421397: and al, 0x10; pop rbx; ret; 
0x0000000000421396: and al, 0x10; pop rbx; ret; 
0x00000000004213c1: and al, 0x10; pop rbx; ret; 
0x00000000004213c0: and al, 0x10; pop rbx; ret; 
0x00000000004213f7: and al, 0x10; pop rbx; ret; 
0x00000000004213f6: and al, 0x10; pop rbx; ret; 
0x0000000000421483: and al, 0x10; pop rbx; ret; 
0x0000000000421482: and al, 0x10; pop rbx; ret; 
0x00000000004215b2: and al, 0x10; pop rbx; ret; 
0x00000000004215b1: and al, 0x10; pop rbx; ret; 
0x00000000004215e7: and al, 0x10; pop rbx; ret; 
0x00000000004215e6: and al, 0x10; pop rbx; ret; 
0x0000000000421611: and al, 0x10; pop rbx; ret; 
0x0000000000421610: and al, 0x10; pop rbx; ret; 
0x0000000000421647: and al, 0x10; pop rbx; ret; 
0x0000000000421646: and al, 0x10; pop rbx; ret; 
0x00000000004216d2: and al, 0x10; pop rbx; ret; 
0x00000000004216d1: and al, 0x10; pop rbx; ret; 
0x0000000000423ea4: and al, 0x10; pop rbx; ret; 
0x0000000000423ea3: and al, 0x10; pop rbx; ret; 
0x000000000043234e: and al, 0x10; pop rbx; ret; 
0x000000000043234d: and al, 0x10; pop rbx; ret; 
0x0000000000432546: and al, 0x10; pop rbx; ret; 
0x0000000000432545: and al, 0x10; pop rbx; ret; 
0x0000000000432737: and al, 0x10; pop rbx; ret; 
0x0000000000432736: and al, 0x10; pop rbx; ret; 
0x000000000043291f: and al, 0x10; pop rbx; ret; 
0x000000000043291e: and al, 0x10; pop rbx; ret; 
0x0000000000432afe: and al, 0x10; pop rbx; ret; 
0x0000000000432afd: and al, 0x10; pop rbx; ret; 
0x0000000000432ce6: and al, 0x10; pop rbx; ret; 
0x0000000000432ce5: and al, 0x10; pop rbx; ret; 
0x0000000000432ec7: and al, 0x10; pop rbx; ret; 
0x0000000000432ec6: and al, 0x10; pop rbx; ret; 
0x000000000043309f: and al, 0x10; pop rbx; ret; 
0x000000000043309e: and al, 0x10; pop rbx; ret; 
0x00000000004332b7: and al, 0x10; pop rbx; ret; 
0x00000000004332b6: and al, 0x10; pop rbx; ret; 
0x000000000043348f: and al, 0x10; pop rbx; ret; 
0x000000000043348e: and al, 0x10; pop rbx; ret; 
0x0000000000434ff8: and al, 0x10; pop rbx; ret; 
0x0000000000434ff7: and al, 0x10; pop rbx; ret; 
0x0000000000435149: and al, 0x10; pop rbx; ret; 
0x0000000000435148: and al, 0x10; pop rbx; ret; 
0x00000000004352a0: and al, 0x10; pop rbx; ret; 
0x000000000043529f: and al, 0x10; pop rbx; ret; 
0x00000000004352f1: and al, 0x10; pop rbx; ret; 
0x00000000004352f0: and al, 0x10; pop rbx; ret; 
0x0000000000435335: and al, 0x10; pop rbx; ret; 
0x0000000000435334: and al, 0x10; pop rbx; ret; 
0x000000000043535d: and al, 0x10; pop rbx; ret; 
0x000000000043535c: and al, 0x10; pop rbx; ret; 
0x00000000004353a7: and al, 0x10; pop rbx; ret; 
0x00000000004353a6: and al, 0x10; pop rbx; ret; 
0x00000000004353cf: and al, 0x10; pop rbx; ret; 
0x00000000004353ce: and al, 0x10; pop rbx; ret; 
0x00000000004363d5: and al, 0x10; pop rbx; ret; 
0x00000000004363d4: and al, 0x10; pop rbx; ret; 
0x0000000000436471: and al, 0x10; pop rbx; ret; 
0x0000000000436470: and al, 0x10; pop rbx; ret; 
0x0000000000439a54: and al, 0x10; pop rbx; ret; 
0x0000000000439a53: and al, 0x10; pop rbx; ret; 
0x0000000000439a84: and al, 0x10; pop rbx; ret; 
0x0000000000439a83: and al, 0x10; pop rbx; ret; 
0x0000000000443e95: and al, 0x10; pop rbx; ret; 
0x0000000000443e94: and al, 0x10; pop rbx; ret; 
0x0000000000443f3f: and al, 0x10; pop rbx; ret; 
0x0000000000443f3e: and al, 0x10; pop rbx; ret; 
0x00000000004441b2: and al, 0x10; pop rbx; ret; 
0x00000000004441b1: and al, 0x10; pop rbx; ret; 
0x0000000000444232: and al, 0x10; pop rbx; ret; 
0x0000000000444231: and al, 0x10; pop rbx; ret; 
0x0000000000446daa: and al, 0x10; pop rbx; ret; 
0x0000000000446da9: and al, 0x10; pop rbx; ret; 
0x0000000000446e0b: and al, 0x10; pop rbx; ret; 
0x0000000000446e0a: and al, 0x10; pop rbx; ret; 
0x000000000044799b: and al, 0x10; pop rbx; ret; 
0x000000000044799a: and al, 0x10; pop rbx; ret; 
0x0000000000447fd7: and al, 0x10; pop rbx; ret; 
0x0000000000447fd6: and al, 0x10; pop rbx; ret; 
0x000000000044942c: and al, 0x10; pop rbx; ret; 
0x000000000044942b: and al, 0x10; pop rbx; ret; 
0x000000000044b1cc: and al, 0x10; pop rbx; ret; 
0x000000000044b1cb: and al, 0x10; pop rbx; ret; 
0x000000000044bee5: and al, 0x10; pop rbx; ret; 
0x000000000044bee4: and al, 0x10; pop rbx; ret; 
0x000000000044ed30: and al, 0x10; pop rbx; ret; 
0x000000000044ed2f: and al, 0x10; pop rbx; ret; 
0x000000000044f0a2: and al, 0x10; pop rbx; ret; 
0x000000000044f0a1: and al, 0x10; pop rbx; ret; 
0x000000000044f4fb: and al, 0x10; pop rbx; ret; 
0x000000000044f4fa: and al, 0x10; pop rbx; ret; 
0x000000000044f83b: and al, 0x10; pop rbx; ret; 
0x000000000044f83a: and al, 0x10; pop rbx; ret; 
0x0000000000454ad0: and al, 0x10; pop rbx; ret; 
0x0000000000454acf: and al, 0x10; pop rbx; ret; 
0x0000000000454b1f: and al, 0x10; pop rbx; ret; 
0x0000000000454b1e: and al, 0x10; pop rbx; ret; 
0x0000000000456f72: and al, 0x10; pop rbx; ret; 
0x0000000000456f71: and al, 0x10; pop rbx; ret; 
0x0000000000458b4a: and al, 0x10; pop rbx; ret; 
0x0000000000458b49: and al, 0x10; pop rbx; ret; 
0x0000000000458b8a: and al, 0x10; pop rbx; ret; 
0x0000000000458b89: and al, 0x10; pop rbx; ret; 
0x0000000000417368: and al, 0x14; call qword ptr [rax + 0x10]; 
0x0000000000417367: and al, 0x14; call qword ptr [rax + 0x10]; 
0x000000000041716d: and al, 0x14; call qword ptr [rax]; 
0x000000000041716c: and al, 0x14; call qword ptr [rax]; 
0x0000000000455996: and al, 0x14; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455995: and al, 0x14; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004558bd: and al, 0x14; lea rsi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455957: and al, 0x14; lea rsi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004559c5: and al, 0x14; mov qword ptr [rsp], rdi; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x000000000044e8e1: and al, 0x18; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041ec3d: and al, 0x18; add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x000000000041ec3c: and al, 0x18; add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x000000000041ed51: and al, 0x18; add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x000000000041ed50: and al, 0x18; add dword ptr [rcx + 0x5d], eax; pop r12; pop rbx; ret; 
0x0000000000404ef5: and al, 0x18; fld qword ptr [rsp + 0x18]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000404ef4: and al, 0x18; fld qword ptr [rsp + 0x18]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000404ef9: and al, 0x18; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000404ef8: and al, 0x18; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455991: and al, 0x18; lea r8, [rsp + 0x14]; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455990: and al, 0x18; lea r8, [rsp + 0x14]; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004558c2: and al, 0x18; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045595c: and al, 0x18; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443704: and al, 0x18; lea rsp, [rsp + 0x38]; ret; 
0x0000000000443703: and al, 0x18; lea rsp, [rsp + 0x38]; ret; 
0x000000000043c8c5: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8c4: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc14: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc13: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf5: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf4: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440144: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440143: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c9a: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c99: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fdd: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fdc: and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000419728: and al, 0x18; mov qword ptr [rdx + 0xa8], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419727: and al, 0x18; mov qword ptr [rdx + 0xa8], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043c894: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c893: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbe3: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbe2: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc4: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc3: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440113: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440112: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c69: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c68: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fac: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fab: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041316f: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041316e: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413308: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413307: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c8: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c7: and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000417529: and al, 0x18; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000043c88f: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbde: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdbf: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044010e: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c64: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa7: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041316a: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413303: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c3: and al, 0x18; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000040ba5e: and al, 0x18; mov rax, qword ptr [rsp]; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041762c: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x0000000000414924: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd1e: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce70: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044024e: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a0: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e877: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451619: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045192c: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045258c: and al, 0x18; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c78a: and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae9: and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcba: and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440019: and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b6a: and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451eaa: and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c785: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c784: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae4: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae3: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb5: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb4: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440014: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440013: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b65: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b64: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea5: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea4: and al, 0x18; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000040a00f: and al, 0x18; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x00000000004436fe: and al, 0x18; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x00000000004436fd: and al, 0x18; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000423f68: and al, 0x18; pop r12; pop rbx; ret; 
0x0000000000423f67: and al, 0x18; pop r12; pop rbx; ret; 
0x000000000042445c: and al, 0x18; pop r12; pop rbx; ret; 
0x000000000042445b: and al, 0x18; pop r12; pop rbx; ret; 
0x000000000044d188: and al, 0x18; pop r12; pop rbx; ret; 
0x000000000044d187: and al, 0x18; pop r12; pop rbx; ret; 
0x0000000000450c7c: and al, 0x18; pop r12; pop rbx; ret; 
0x0000000000450c7b: and al, 0x18; pop r12; pop rbx; ret; 
0x000000000040c961: and al, 0x18; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c960: and al, 0x18; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e0b: and al, 0x18; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e0a: and al, 0x18; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b28: and al, 0x18; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b27: and al, 0x18; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004053d7: and al, 0x18; ret; 
0x00000000004053d6: and al, 0x18; ret; 
0x0000000000406640: and al, 0x18; ret; 
0x000000000040663f: and al, 0x18; ret; 
0x000000000040ae93: and al, 0x18; ret; 
0x000000000040ae92: and al, 0x18; ret; 
0x00000000004158e1: and al, 0x18; ret; 
0x00000000004158e0: and al, 0x18; ret; 
0x0000000000415911: and al, 0x18; ret; 
0x0000000000415910: and al, 0x18; ret; 
0x0000000000415970: and al, 0x18; ret; 
0x000000000041596f: and al, 0x18; ret; 
0x00000000004159a1: and al, 0x18; ret; 
0x00000000004159a0: and al, 0x18; ret; 
0x0000000000415d64: and al, 0x18; ret; 
0x0000000000415d63: and al, 0x18; ret; 
0x0000000000416524: and al, 0x18; ret; 
0x0000000000416523: and al, 0x18; ret; 
0x00000000004168a1: and al, 0x18; ret; 
0x00000000004168a0: and al, 0x18; ret; 
0x00000000004168d1: and al, 0x18; ret; 
0x00000000004168d0: and al, 0x18; ret; 
0x0000000000416930: and al, 0x18; ret; 
0x000000000041692f: and al, 0x18; ret; 
0x0000000000416961: and al, 0x18; ret; 
0x0000000000416960: and al, 0x18; ret; 
0x000000000042de8c: and al, 0x18; ret; 
0x000000000042de8b: and al, 0x18; ret; 
0x000000000042deb9: and al, 0x18; ret; 
0x000000000042deb8: and al, 0x18; ret; 
0x000000000042df8f: and al, 0x18; ret; 
0x000000000042df8e: and al, 0x18; ret; 
0x000000000042e199: and al, 0x18; ret; 
0x000000000042e198: and al, 0x18; ret; 
0x000000000042eda3: and al, 0x18; ret; 
0x000000000042eda2: and al, 0x18; ret; 
0x0000000000430a5b: and al, 0x18; ret; 
0x0000000000430a5a: and al, 0x18; ret; 
0x0000000000430edb: and al, 0x18; ret; 
0x0000000000430eda: and al, 0x18; ret; 
0x0000000000431199: and al, 0x18; ret; 
0x0000000000431198: and al, 0x18; ret; 
0x0000000000431863: and al, 0x18; ret; 
0x0000000000431862: and al, 0x18; ret; 
0x0000000000431ca3: and al, 0x18; ret; 
0x0000000000431ca2: and al, 0x18; ret; 
0x0000000000431eb0: and al, 0x18; ret; 
0x0000000000431eaf: and al, 0x18; ret; 
0x0000000000431ed3: and al, 0x18; ret; 
0x0000000000431ed2: and al, 0x18; ret; 
0x0000000000432153: and al, 0x18; ret; 
0x0000000000432152: and al, 0x18; ret; 
0x0000000000432241: and al, 0x18; ret; 
0x0000000000432240: and al, 0x18; ret; 
0x000000000043227d: and al, 0x18; ret; 
0x000000000043227c: and al, 0x18; ret; 
0x00000000004322a6: and al, 0x18; ret; 
0x00000000004322a5: and al, 0x18; ret; 
0x00000000004322da: and al, 0x18; ret; 
0x00000000004322d9: and al, 0x18; ret; 
0x0000000000432399: and al, 0x18; ret; 
0x0000000000432398: and al, 0x18; ret; 
0x0000000000432589: and al, 0x18; ret; 
0x0000000000432588: and al, 0x18; ret; 
0x0000000000432779: and al, 0x18; ret; 
0x0000000000432778: and al, 0x18; ret; 
0x0000000000432969: and al, 0x18; ret; 
0x0000000000432968: and al, 0x18; ret; 
0x0000000000432b50: and al, 0x18; ret; 
0x0000000000432b4f: and al, 0x18; ret; 
0x0000000000432d23: and al, 0x18; ret; 
0x0000000000432d22: and al, 0x18; ret; 
0x0000000000432f03: and al, 0x18; ret; 
0x0000000000432f02: and al, 0x18; ret; 
0x0000000000433103: and al, 0x18; ret; 
0x0000000000433102: and al, 0x18; ret; 
0x00000000004332f3: and al, 0x18; ret; 
0x00000000004332f2: and al, 0x18; ret; 
0x00000000004334f3: and al, 0x18; ret; 
0x00000000004334f2: and al, 0x18; ret; 
0x0000000000436c80: and al, 0x18; ret; 
0x0000000000436c7f: and al, 0x18; ret; 
0x0000000000438d91: and al, 0x18; ret; 
0x0000000000438d90: and al, 0x18; ret; 
0x0000000000439147: and al, 0x18; ret; 
0x0000000000439146: and al, 0x18; ret; 
0x0000000000439732: and al, 0x18; ret; 
0x0000000000439731: and al, 0x18; ret; 
0x0000000000439775: and al, 0x18; ret; 
0x0000000000439774: and al, 0x18; ret; 
0x000000000043a934: and al, 0x18; ret; 
0x000000000043a933: and al, 0x18; ret; 
0x000000000043a999: and al, 0x18; ret; 
0x000000000043a998: and al, 0x18; ret; 
0x000000000043b20d: and al, 0x18; ret; 
0x000000000043b20c: and al, 0x18; ret; 
0x000000000043c16d: and al, 0x18; ret; 
0x000000000043c16c: and al, 0x18; ret; 
0x0000000000443888: and al, 0x18; ret; 
0x0000000000443887: and al, 0x18; ret; 
0x0000000000443f97: and al, 0x18; ret; 
0x0000000000443f96: and al, 0x18; ret; 
0x0000000000443fc9: and al, 0x18; ret; 
0x0000000000443fc8: and al, 0x18; ret; 
0x0000000000443fee: and al, 0x18; ret; 
0x0000000000443fed: and al, 0x18; ret; 
0x0000000000446e94: and al, 0x18; ret; 
0x0000000000446e93: and al, 0x18; ret; 
0x00000000004477c3: and al, 0x18; ret; 
0x00000000004477c2: and al, 0x18; ret; 
0x0000000000447809: and al, 0x18; ret; 
0x0000000000447808: and al, 0x18; ret; 
0x0000000000447849: and al, 0x18; ret; 
0x0000000000447848: and al, 0x18; ret; 
0x00000000004478c0: and al, 0x18; ret; 
0x00000000004478bf: and al, 0x18; ret; 
0x0000000000447904: and al, 0x18; ret; 
0x0000000000447903: and al, 0x18; ret; 
0x0000000000447944: and al, 0x18; ret; 
0x0000000000447943: and al, 0x18; ret; 
0x0000000000450bf1: and al, 0x18; ret; 
0x0000000000450bf0: and al, 0x18; ret; 
0x0000000000450e6f: and al, 0x18; ret; 
0x0000000000450e6e: and al, 0x18; ret; 
0x00000000004546d6: and al, 0x18; ret; 
0x00000000004546d5: and al, 0x18; ret; 
0x00000000004559d6: and al, 0x18; ret; 
0x00000000004559d5: and al, 0x18; ret; 
0x0000000000455a19: and al, 0x18; ret; 
0x0000000000455a18: and al, 0x18; ret; 
0x00000000004587fd: and al, 0x18; ret; 
0x00000000004587fc: and al, 0x18; ret; 
0x00000000004588e5: and al, 0x18; ret; 
0x00000000004588e4: and al, 0x18; ret; 
0x0000000000459f03: and al, 0x18; ret; 
0x0000000000459f02: and al, 0x18; ret; 
0x000000000043c903: and al, 0x20; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe33: and al, 0x20; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000446f04: and al, 0x20; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000446f03: and al, 0x20; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000444f1c: and al, 0x20; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x0000000000444f1b: and al, 0x20; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x000000000044ea4c: and al, 0x20; lea rsp, [rsp + 0xf8]; ret; 
0x000000000044ea4b: and al, 0x20; lea rsp, [rsp + 0xf8]; ret; 
0x000000000041ff58: and al, 0x20; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044ea1b: and al, 0x20; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea1a: and al, 0x20; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea16: and al, 0x20; mov rax, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c88a: and al, 0x20; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbd9: and al, 0x20; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdba: and al, 0x20; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440109: and al, 0x20; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c5f: and al, 0x20; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa2: and al, 0x20; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e8ee: and al, 0x20; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8e9: and al, 0x20; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8e8: and al, 0x20; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000407def: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000407dee: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d5c: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d5b: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000451247: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000451246: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a0c: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a0b: and al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x00000000004130b7: and al, 0x20; pop rbx; ret; 
0x00000000004130b6: and al, 0x20; pop rbx; ret; 
0x00000000004131b7: and al, 0x20; pop rbx; ret; 
0x00000000004131b6: and al, 0x20; pop rbx; ret; 
0x000000000041323e: and al, 0x20; pop rbx; ret; 
0x000000000041323d: and al, 0x20; pop rbx; ret; 
0x00000000004133f2: and al, 0x20; pop rbx; ret; 
0x00000000004133f1: and al, 0x20; pop rbx; ret; 
0x000000000042dcd6: and al, 0x20; pop rbx; ret; 
0x000000000042dcd5: and al, 0x20; pop rbx; ret; 
0x0000000000444059: and al, 0x20; pop rbx; ret; 
0x0000000000444058: and al, 0x20; pop rbx; ret; 
0x0000000000453ae4: and al, 0x20; pop rbx; ret; 
0x0000000000453ae3: and al, 0x20; pop rbx; ret; 
0x000000000045592a: and al, 0x20; pop rbx; ret; 
0x0000000000455929: and al, 0x20; pop rbx; ret; 
0x0000000000456044: and al, 0x20; pop rbx; ret; 
0x0000000000456043: and al, 0x20; pop rbx; ret; 
0x0000000000456f40: and al, 0x20; pop rbx; ret; 
0x0000000000456f3f: and al, 0x20; pop rbx; ret; 
0x000000000045cc89: and al, 0x28; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043caa6: and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000043caa5: and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd6: and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd5: and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x0000000000458365: and al, 0x28; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000458364: and al, 0x28; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x000000000043ca75: and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca74: and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa5: and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa4: and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa0: and al, 0x28; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca70: and al, 0x28; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea11: and al, 0x28; mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c910: and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe40: and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c90b: and al, 0x28; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c90a: and al, 0x28; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe3b: and al, 0x28; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe3a: and al, 0x28; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041334e: and al, 0x28; pop r12; pop rbx; ret; 
0x000000000041334d: and al, 0x28; pop r12; pop rbx; ret; 
0x0000000000413518: and al, 0x28; pop r12; pop rbx; ret; 
0x0000000000413517: and al, 0x28; pop r12; pop rbx; ret; 
0x00000000004241b0: and al, 0x28; pop r12; pop rbx; ret; 
0x00000000004241af: and al, 0x28; pop r12; pop rbx; ret; 
0x000000000043cf7f: and al, 0x28; pop r13; pop r12; pop rbx; ret; 
0x000000000042f615: and al, 0x28; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f614: and al, 0x28; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000404f04: and al, 0x28; ret; 
0x0000000000404f03: and al, 0x28; ret; 
0x00000000004054ae: and al, 0x28; ret; 
0x00000000004054ad: and al, 0x28; ret; 
0x00000000004067b8: and al, 0x28; ret; 
0x00000000004067b7: and al, 0x28; ret; 
0x0000000000406a6d: and al, 0x28; ret; 
0x0000000000406a6c: and al, 0x28; ret; 
0x0000000000406d5d: and al, 0x28; ret; 
0x0000000000406d5c: and al, 0x28; ret; 
0x000000000040a018: and al, 0x28; ret; 
0x000000000040a017: and al, 0x28; ret; 
0x000000000040b91d: and al, 0x28; ret; 
0x000000000040b91c: and al, 0x28; ret; 
0x000000000040b956: and al, 0x28; ret; 
0x000000000040b955: and al, 0x28; ret; 
0x0000000000413f9e: and al, 0x28; ret; 
0x0000000000413f9d: and al, 0x28; ret; 
0x0000000000417bb2: and al, 0x28; ret; 
0x0000000000417bb1: and al, 0x28; ret; 
0x0000000000438e0a: and al, 0x28; ret; 
0x0000000000438e09: and al, 0x28; ret; 
0x0000000000438e6a: and al, 0x28; ret; 
0x0000000000438e69: and al, 0x28; ret; 
0x0000000000438ec9: and al, 0x28; ret; 
0x0000000000438ec8: and al, 0x28; ret; 
0x0000000000438f59: and al, 0x28; ret; 
0x0000000000438f58: and al, 0x28; ret; 
0x00000000004391b7: and al, 0x28; ret; 
0x00000000004391b6: and al, 0x28; ret; 
0x0000000000439217: and al, 0x28; ret; 
0x0000000000439216: and al, 0x28; ret; 
0x000000000043926f: and al, 0x28; ret; 
0x000000000043926e: and al, 0x28; ret; 
0x00000000004392df: and al, 0x28; ret; 
0x00000000004392de: and al, 0x28; ret; 
0x000000000043b40f: and al, 0x28; ret; 
0x000000000043b40e: and al, 0x28; ret; 
0x000000000044385a: and al, 0x28; ret; 
0x0000000000443859: and al, 0x28; ret; 
0x0000000000446d2f: and al, 0x28; ret; 
0x0000000000446d2e: and al, 0x28; ret; 
0x0000000000446e73: and al, 0x28; ret; 
0x0000000000446e72: and al, 0x28; ret; 
0x0000000000446f0e: and al, 0x28; ret; 
0x0000000000446f0d: and al, 0x28; ret; 
0x0000000000451347: and al, 0x28; ret; 
0x0000000000451346: and al, 0x28; ret; 
0x00000000004558d1: and al, 0x28; ret; 
0x00000000004558d0: and al, 0x28; ret; 
0x000000000045596b: and al, 0x28; ret; 
0x000000000045596a: and al, 0x28; ret; 
0x00000000004559a5: and al, 0x28; ret; 
0x00000000004559a4: and al, 0x28; ret; 
0x000000000043ca6b: and al, 0x30; mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ff9b: and al, 0x30; mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000427970: and al, 0x30; pop r13; pop r12; pop rbx; ret; 
0x000000000042796f: and al, 0x30; pop r13; pop r12; pop rbx; ret; 
0x00000000004046a4: and al, 0x30; pop rbx; ret; 
0x00000000004046a3: and al, 0x30; pop rbx; ret; 
0x0000000000404724: and al, 0x30; pop rbx; ret; 
0x0000000000404723: and al, 0x30; pop rbx; ret; 
0x00000000004047dc: and al, 0x30; pop rbx; ret; 
0x00000000004047db: and al, 0x30; pop rbx; ret; 
0x0000000000424623: and al, 0x30; pop rbx; ret; 
0x0000000000424622: and al, 0x30; pop rbx; ret; 
0x00000000004277c5: and al, 0x30; pop rbx; ret; 
0x00000000004277c4: and al, 0x30; pop rbx; ret; 
0x0000000000450109: and al, 0x31; ret 0x8948; 
0x000000000045008a: and al, 0x31; ret 0xc148; 
0x0000000000443709: and al, 0x38; ret; 
0x0000000000443708: and al, 0x38; ret; 
0x000000000045995a: and al, 0x40; or eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000409fcf: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x0000000000409fce: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x0000000000428035: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x0000000000428034: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x0000000000428100: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x00000000004280ff: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x00000000004282b8: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x00000000004282b7: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a262: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a261: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a318: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a317: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a495: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a494: and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x0000000000426e8e: and al, 0x40; xor esi, esi; mov edi, 1; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x000000000045b221: and al, 0x41; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000403d93: and al, 0x41; pop rbp; pop r12; pop rbx; ret; 
0x0000000000405dea: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x0000000000405e0a: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x000000000040568f: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x0000000000405bb6: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x00000000004055d0: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000405960: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000451272: and al, 0x48; add dword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041fc74: and al, 0x48; add dword ptr [rbx + 0x18], 1; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459a45: and al, 0x48; add dword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512ed: and al, 0x48; add dword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000044bed9: and al, 0x48; add eax, 4; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041708e: and al, 0x48; lea edi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x000000000040b364: and al, 0x48; lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000456ac0: and al, 0x48; lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc89: and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a50: and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a80: and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447fd3: and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044bee1: and al, 0x48; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040cfe6: and al, 0x48; lea esp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040d061: and al, 0x48; lea esp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040663c: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x000000000040ae8f: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000415d60: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000416520: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x000000000042ed9f: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000431195: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x000000000043185f: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000431c9f: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000431eac: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000431ecf: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x000000000043214f: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432395: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432585: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432775: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432965: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432b4c: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432d1f: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000432eff: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x00000000004330ff: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x00000000004332ef: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x00000000004334ef: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000436c7c: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000446e90: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x00000000004477bf: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000447805: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000447845: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x00000000004478bc: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000447900: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000447940: and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000404f00: and al, 0x48; lea esp, [rsp + 0x28]; ret; 
0x0000000000417bae: and al, 0x48; lea esp, [rsp + 0x28]; ret; 
0x000000000044c5fc: and al, 0x48; lea esp, [rsp + 0x68]; ret; 
0x000000000044c86e: and al, 0x48; lea esp, [rsp + 0x68]; ret; 
0x000000000044c919: and al, 0x48; lea esp, [rsp + 0x68]; ret; 
0x000000000044cbc9: and al, 0x48; lea esp, [rsp + 0x68]; ret; 
0x000000000044cc69: and al, 0x48; lea esp, [rsp + 0x68]; ret; 
0x000000000044cd09: and al, 0x48; lea esp, [rsp + 0x68]; ret; 
0x000000000044cb1b: and al, 0x48; lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000040c4b0: and al, 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041507a: and al, 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458680: and al, 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458b02: and al, 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004051bc: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000040ba6a: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415d22: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415d42: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415d80: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415da2: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415dc0: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x00000000004164e2: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000416502: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000416540: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000416562: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000416580: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000042ed81: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000042ede1: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000431157: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000431177: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000043163e: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000431661: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000431a7e: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000431aa1: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000044364b: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x000000000044379e: and al, 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000447994: and al, 0x48; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000402943: and al, 0x48; mov dword ptr [rdi + 0x38], eax; xor eax, eax; ret; 
0x0000000000439725: and al, 0x48; mov dword ptr [rsp + 8], eax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439768: and al, 0x48; mov dword ptr [rsp + 8], eax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042de7a: and al, 0x48; mov dword ptr [rsp + 8], edx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dea7: and al, 0x48; mov dword ptr [rsp + 8], edx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df7d: and al, 0x48; mov dword ptr [rsp + 8], edx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004365f7: and al, 0x48; mov eax, dword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000436557: and al, 0x48; mov eax, dword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000449509: and al, 0x48; mov eax, dword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2a9: and al, 0x48; mov eax, dword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000447990: and al, 0x48; mov eax, dword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043b201: and al, 0x48; mov edi, eax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x00000000004559ca: and al, 0x48; mov edi, eax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416954: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416923: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168c4: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416894: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415994: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415963: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415904: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d4: and al, 0x48; mov edi, eax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041697b: and al, 0x48; mov edi, eax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159bb: and al, 0x48; mov edi, eax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x00000000004191e8: and al, 0x48; mov edi, esp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000456f66: and al, 0x48; mov edi, esp; call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042de83: and al, 0x48; mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deb0: and al, 0x48; mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df86: and al, 0x48; mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e190: and al, 0x48; mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dccd: and al, 0x48; mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000417520: and al, 0x48; mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x0000000000443fe0: and al, 0x48; mov esi, dword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000413ccc: and al, 0x48; mov esi, dword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x000000000041676c: and al, 0x48; mov esi, esp; mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156bc: and al, 0x48; mov esi, esp; mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000406534: and al, 0x48; pop r12; pop rbx; ret; 
0x0000000000406533: and al, 0x48; pop r12; pop rbx; ret; 
0x0000000000456f0d: and al, 0x48; ret; 
0x0000000000456f0c: and al, 0x48; ret; 
0x000000000045ba42: and al, 0x48; ret; 
0x000000000045ba41: and al, 0x48; ret; 
0x000000000042f65e: and al, 0x4c; cmp ecx, dword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x0000000000404864: and al, 0x50; pop rbx; ret; 
0x0000000000404863: and al, 0x50; pop rbx; ret; 
0x000000000045836a: and al, 0x50; pop rbx; ret; 
0x0000000000458369: and al, 0x50; pop rbx; ret; 
0x00000000004550fd: and al, 0x58; lea rsp, [rsp + 0x98]; ret; 
0x00000000004550fc: and al, 0x58; lea rsp, [rsp + 0x98]; ret; 
0x00000000004507d8: and al, 0x5b; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000405c04: and al, 0x60; add al, byte ptr [rax]; add byte ptr [rbx + 0x7400943c], al; loope 0x5bf9; ret 0; 
0x00000000004283c1: and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x00000000004283c0: and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x000000000042a582: and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x000000000042a581: and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x0000000000422829: and al, 0x60; test rax, rax; je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422828: and al, 0x60; test rax, rax; je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228e7: and al, 0x60; test rax, rax; je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228e6: and al, 0x60; test rax, rax; je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004229c2: and al, 0x60; test rax, rax; je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004229c1: and al, 0x60; test rax, rax; je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000449610: and al, 0x60; test rax, rax; je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044960f: and al, 0x60; test rax, rax; je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b3b0: and al, 0x60; test rax, rax; je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b3af: and al, 0x60; test rax, rax; je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x0000000000429c56: and al, 0x66; mov dword ptr [r12], 0x89480000; fucompi st(0); mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000429ce6: and al, 0x66; mov dword ptr [r12], 0x89480000; fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x000000000042c056: and al, 0x66; mov dword ptr [r12], 0x89480000; fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0e6: and al, 0x66; mov dword ptr [r12], 0x89480000; fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x0000000000421390: and al, 0x66; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213f0: and al, 0x66; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215e0: and al, 0x66; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421640: and al, 0x66; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432294: and al, 0x66; mov eax, dword ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043226b: and al, 0x66; mov eax, dword ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004053cf: and al, 0x66; movaps xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000434fee: and al, 0x66; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043513f: and al, 0x66; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435296: and al, 0x66; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352e7: and al, 0x66; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041ce5a: and al, 0x68; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000421c7a: and al, 0x68; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004451c0: and al, 0x68; add dword ptr [rax], eax; add al, ch; pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x00000000004145f3: and al, 0x68; add dword ptr [rax], eax; add al, ch; ret; 
0x0000000000445417: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x000000000043d61d: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d7ce: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d88d: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d9e1: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dc51: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dd9d: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043def2: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dfad: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440d4e: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c503: and al, 0x68; call rax; 
0x000000000045c502: and al, 0x68; call rax; 
0x0000000000445f5d: and al, 0x68; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000445f5c: and al, 0x68; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000044777c: and al, 0x68; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044777b: and al, 0x68; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000040f114: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f113: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f1b4: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f1b3: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f472: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f471: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f660: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f65f: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f6f2: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f6f1: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000410e28: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000410e27: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000410f24: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000410f23: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411016: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411015: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411098: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411097: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041111a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411119: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411846: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000411845: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415757: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415756: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415839: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415838: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004158b9: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004158b8: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415d05: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415d04: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041680b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041680a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416b44: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416b43: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416bd4: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416bd3: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416ce4: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416ce3: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416d74: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416d73: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c83a: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c839: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c8ba: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c8b9: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c93b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c93a: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d09a: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d099: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d11a: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d119: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d19b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d19a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c1a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c19: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c9a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c99: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420e9a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420e99: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f1a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f19: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f9b: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f9a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421eaa: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421ea9: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421f2a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421f29: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421fab: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421faa: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004230da: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004230d9: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004235b4: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004235b3: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000428e4c: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000428e4b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042b07c: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042b07b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c4bc: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c4bb: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c5cc: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c5cb: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c76c: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c76b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c7fc: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c7fb: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c90c: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c90b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042cb4c: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042cb4b: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042e774: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042e773: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000433b88: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000433b87: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043da72: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043da71: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043db91: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043db90: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043de34: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043de33: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043e1c1: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043e1c0: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441061: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441060: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044197f: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044197e: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441c3a: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441c39: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000447515: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000447514: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000448348: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000448347: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004483f1: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004483f0: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004484a6: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004484a5: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044e619: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044e618: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f1d9: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f1d8: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f629: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f628: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000453e43: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000453e42: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004565ae: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004565ad: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004570e2: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004570e1: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457994: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457993: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457a24: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457a23: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457b54: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457b53: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457cfe: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457cfd: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457eb4: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457eb3: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458104: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458103: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458194: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458193: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458242: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458241: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004582d4: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004582d3: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458459: and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458458: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004589d5: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004589d4: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045b645: and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045b644: and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004404b1: and al, 0x68; pop r13; pop r12; pop rbx; ret; 
0x000000000040c464: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c463: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fdbc: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fdbb: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e31d: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e31c: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e4c1: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e4c0: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f3ce: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f3cd: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f47d: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f47c: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043018a: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000430189: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043026a: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000430269: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447299: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447298: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044cf32: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044cf31: and al, 0x68; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000422838: and al, 0x68; ret; 
0x0000000000422837: and al, 0x68; ret; 
0x00000000004228f6: and al, 0x68; ret; 
0x00000000004228f5: and al, 0x68; ret; 
0x00000000004229d1: and al, 0x68; ret; 
0x00000000004229d0: and al, 0x68; ret; 
0x000000000044c600: and al, 0x68; ret; 
0x000000000044c5ff: and al, 0x68; ret; 
0x000000000044c872: and al, 0x68; ret; 
0x000000000044c871: and al, 0x68; ret; 
0x000000000044c91d: and al, 0x68; ret; 
0x000000000044c91c: and al, 0x68; ret; 
0x000000000044cbcd: and al, 0x68; ret; 
0x000000000044cbcc: and al, 0x68; ret; 
0x000000000044cc6d: and al, 0x68; ret; 
0x000000000044cc6c: and al, 0x68; ret; 
0x000000000044cd0d: and al, 0x68; ret; 
0x000000000044cd0c: and al, 0x68; ret; 
0x000000000044549a: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x000000000043a228: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043e835: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043e9ba: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043ea89: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043ec89: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043edf5: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043eeba: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043f0d5: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043f195: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442107: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004422dc: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004423cb: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044261b: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004427c7: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004428bc: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442b17: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000442c07: and al, 0x70; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000422e0f: and al, 0x70; or al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040d939: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040d938: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040ddca: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040ddc9: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040e12e: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040e12d: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f288: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f287: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f348: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f347: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f3da: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f3d9: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f538: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f537: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f5ca: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f5c9: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d6: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d5: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa66: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa65: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf6: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf5: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x00000000004118f3: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x00000000004118f2: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041c267: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041c266: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041c4b7: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041c4b6: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041fc20: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041fc1f: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041fe2b: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041fe2a: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000420858: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000420857: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x00000000004233ac: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x00000000004233ab: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042c664: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042c663: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042cd04: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042cd03: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042d396: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042d395: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042dae7: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042dae6: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042dbd7: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042dbd6: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042e308: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042e307: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef50: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef4f: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043d928: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043d927: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043e76c: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043e76b: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebba: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebb9: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef59: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef58: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000440ef3: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000440ef2: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044201e: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044201d: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000442529: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000442528: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044297b: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044297a: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000449377: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000449376: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044b117: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044b116: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044bfe7: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044bfe6: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e1ad: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e1ac: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e31d: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e31c: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e49d: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e49c: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044f448: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044f447: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c95: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c94: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457abc: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457abb: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c5c: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c5b: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e1c: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e1b: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a835: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a834: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c5: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c4: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a955: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a954: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e5: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e4: and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040e4eb: and al, 0x70; pop rbx; ret; 
0x000000000040e4ea: and al, 0x70; pop rbx; ret; 
0x000000000040e5d2: and al, 0x70; pop rbx; ret; 
0x000000000040e5d1: and al, 0x70; pop rbx; ret; 
0x000000000040e671: and al, 0x70; pop rbx; ret; 
0x000000000040e670: and al, 0x70; pop rbx; ret; 
0x0000000000415c20: and al, 0x70; pop rbx; ret; 
0x0000000000415c1f: and al, 0x70; pop rbx; ret; 
0x0000000000416465: and al, 0x70; pop rbx; ret; 
0x0000000000416464: and al, 0x70; pop rbx; ret; 
0x000000000041b656: and al, 0x70; pop rbx; ret; 
0x000000000041b655: and al, 0x70; pop rbx; ret; 
0x000000000041c308: and al, 0x70; pop rbx; ret; 
0x000000000041c307: and al, 0x70; pop rbx; ret; 
0x0000000000422ec3: and al, 0x70; pop rbx; ret; 
0x0000000000422ec2: and al, 0x70; pop rbx; ret; 
0x0000000000422f73: and al, 0x70; pop rbx; ret; 
0x0000000000422f72: and al, 0x70; pop rbx; ret; 
0x0000000000423023: and al, 0x70; pop rbx; ret; 
0x0000000000423022: and al, 0x70; pop rbx; ret; 
0x0000000000423183: and al, 0x70; pop rbx; ret; 
0x0000000000423182: and al, 0x70; pop rbx; ret; 
0x0000000000423233: and al, 0x70; pop rbx; ret; 
0x0000000000423232: and al, 0x70; pop rbx; ret; 
0x00000000004232e3: and al, 0x70; pop rbx; ret; 
0x00000000004232e2: and al, 0x70; pop rbx; ret; 
0x0000000000423430: and al, 0x70; pop rbx; ret; 
0x000000000042342f: and al, 0x70; pop rbx; ret; 
0x00000000004234b0: and al, 0x70; pop rbx; ret; 
0x00000000004234af: and al, 0x70; pop rbx; ret; 
0x0000000000423530: and al, 0x70; pop rbx; ret; 
0x000000000042352f: and al, 0x70; pop rbx; ret; 
0x0000000000423663: and al, 0x70; pop rbx; ret; 
0x0000000000423662: and al, 0x70; pop rbx; ret; 
0x0000000000423713: and al, 0x70; pop rbx; ret; 
0x0000000000423712: and al, 0x70; pop rbx; ret; 
0x00000000004237c3: and al, 0x70; pop rbx; ret; 
0x00000000004237c2: and al, 0x70; pop rbx; ret; 
0x000000000042c544: and al, 0x70; pop rbx; ret; 
0x000000000042c543: and al, 0x70; pop rbx; ret; 
0x000000000042c6e4: and al, 0x70; pop rbx; ret; 
0x000000000042c6e3: and al, 0x70; pop rbx; ret; 
0x000000000042c884: and al, 0x70; pop rbx; ret; 
0x000000000042c883: and al, 0x70; pop rbx; ret; 
0x000000000042c994: and al, 0x70; pop rbx; ret; 
0x000000000042c993: and al, 0x70; pop rbx; ret; 
0x000000000042cac4: and al, 0x70; pop rbx; ret; 
0x000000000042cac3: and al, 0x70; pop rbx; ret; 
0x000000000042e83c: and al, 0x70; pop rbx; ret; 
0x000000000042e83b: and al, 0x70; pop rbx; ret; 
0x000000000043d713: and al, 0x70; pop rbx; ret; 
0x000000000043d712: and al, 0x70; pop rbx; ret; 
0x000000000043db01: and al, 0x70; pop rbx; ret; 
0x000000000043db00: and al, 0x70; pop rbx; ret; 
0x000000000043dce3: and al, 0x70; pop rbx; ret; 
0x000000000043dce2: and al, 0x70; pop rbx; ret; 
0x00000000004505f1: and al, 0x70; pop rbx; ret; 
0x00000000004505f0: and al, 0x70; pop rbx; ret; 
0x0000000000450694: and al, 0x70; pop rbx; ret; 
0x0000000000450693: and al, 0x70; pop rbx; ret; 
0x0000000000450862: and al, 0x70; pop rbx; ret; 
0x0000000000450861: and al, 0x70; pop rbx; ret; 
0x0000000000453da8: and al, 0x70; pop rbx; ret; 
0x0000000000453da7: and al, 0x70; pop rbx; ret; 
0x000000000045526f: and al, 0x70; pop rbx; ret; 
0x000000000045526e: and al, 0x70; pop rbx; ret; 
0x00000000004553b4: and al, 0x70; pop rbx; ret; 
0x00000000004553b3: and al, 0x70; pop rbx; ret; 
0x00000000004560e8: and al, 0x70; pop rbx; ret; 
0x00000000004560e7: and al, 0x70; pop rbx; ret; 
0x000000000045619a: and al, 0x70; pop rbx; ret; 
0x0000000000456199: and al, 0x70; pop rbx; ret; 
0x00000000004566a4: and al, 0x70; pop rbx; ret; 
0x00000000004566a3: and al, 0x70; pop rbx; ret; 
0x0000000000457d8c: and al, 0x70; pop rbx; ret; 
0x0000000000457d8b: and al, 0x70; pop rbx; ret; 
0x0000000000457f3c: and al, 0x70; pop rbx; ret; 
0x0000000000457f3b: and al, 0x70; pop rbx; ret; 
0x0000000000457fbc: and al, 0x70; pop rbx; ret; 
0x0000000000457fbb: and al, 0x70; pop rbx; ret; 
0x000000000045858e: and al, 0x70; pop rbx; ret; 
0x000000000045858d: and al, 0x70; pop rbx; ret; 
0x0000000000458a59: and al, 0x70; pop rbx; ret; 
0x0000000000458a58: and al, 0x70; pop rbx; ret; 
0x000000000045c3f3: and al, 0x70; pop rbx; ret; 
0x000000000045c3f2: and al, 0x70; pop rbx; ret; 
0x0000000000431f88: and al, 0x71; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000043b409: and al, 0x73; in al, dx; lea rsp, [rsp + 0x28]; ret; 
0x000000000041464a: and al, 0x78; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440b7f: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440e2f: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440fd3: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004412a3: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044142f: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004415c4: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044169f: and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043b530: and al, 0x78; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000041887b: and al, 0x78; or byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x50129; call qword ptr [rax]; 
0x000000000040c82c: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040c82b: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040ca5e: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040ca5d: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040fe99: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040fe98: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040ff89: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040ff88: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000416e2a: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000416e29: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041c400: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041c3ff: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041eede: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041eedd: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042a02f: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042a02e: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042c42f: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042c42e: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042ca41: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042ca40: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042d79d: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042d79c: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043e8cb: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043e8ca: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043eb29: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043eb28: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043ed2b: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043ed2a: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004411c3: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004411c2: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004414e6: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004414e5: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004418d3: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004418d2: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004421cd: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004421cc: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044248b: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044248a: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004426dd: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004426dc: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000445f62: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000445f61: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044d27f: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044d27e: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004504fc: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004504fb: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000453463: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000453462: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045531d: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045531c: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000455462: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000455461: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004562f8: and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004562f7: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000457902: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000457901: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000458072: and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000458071: and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040bc12: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040bc11: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004153fa: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004153f9: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cf0f: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cf0e: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cfef: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cfee: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b4: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b3: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6ef: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6ee: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c5: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c4: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f5: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f4: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450d62: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450d61: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450e02: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450e01: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000458daf: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000458dae: and al, 0x78; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b582: and al, 0x78; ret; 
0x000000000041b581: and al, 0x78; ret; 
0x000000000044961f: and al, 0x78; ret; 
0x000000000044961e: and al, 0x78; ret; 
0x000000000044b3bf: and al, 0x78; ret; 
0x000000000044b3be: and al, 0x78; ret; 
0x0000000000405aa7: and al, 0x80; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x3c83; 
0x0000000000405df5: and al, 0x80; add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x917d; 
0x000000000043b747: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000042d0c7: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d446: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042d506: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045887e: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459e9e: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045b830: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040662e: and al, 0x80; or al, byte ptr [rsp + 7]; mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a98d: and al, 0x83; cmp byte ptr [r9], al; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a92c: and al, 0x83; cmp byte ptr [rcx], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a9c2: and al, 0x83; cmp byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432345: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043253d: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043272e: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432916: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432af5: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432cdd: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432ebe: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000433096: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004332ae: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000433486: and al, 0x85; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000045bb37: and al, 0x88; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004449aa: and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000452278: and al, 0x88; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045324b: and al, 0x88; ret; 
0x000000000042135c: and al, 0x89; add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004213bb: and al, 0x89; add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004215ac: and al, 0x89; add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000042160b: and al, 0x89; add ecx, dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000458c0c: and al, 0x89; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041e645: and al, 0x89; ret; 
0x000000000041e6e5: and al, 0x89; ret; 
0x0000000000439a4d: and al, 0x8a; add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a7d: and al, 0x8a; add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004051b9: and al, 0x8b; add al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000405189: and al, 0x8b; and al, 4; lea rsp, [rsp + 8]; ret; 
0x0000000000459a7a: and al, 0x8b; mov eax, 0x808; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x00000000004364cf: and al, 0x8b; or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x0000000000449481: and al, 0x8b; or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x000000000044b221: and al, 0x8b; or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x0000000000436502: and al, 0x8b; or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b2: and al, 0x8b; or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b252: and al, 0x8b; or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000040555d: and al, 0x90; add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x0000000000402cc4: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042ce2c: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000450402: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004507bd: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004509c5: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004564ae: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000457175: and al, 0x90; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004571df: and al, 0x90; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459c9f: and al, 0x90; add eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043b69e: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000449ea1: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000044c389: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000043c40d: and al, 0x98; add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042b867: and al, 0x98; or byte ptr [rax], al; add al, ch; syscall; 
0x000000000044a238: and al, 0x9b; add eax, dword ptr [rax]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000042b85f: and al, 0xa0; or byte ptr [rax], al; add byte ptr [rax - 0x73], cl; mov esp, 0x89824; add al, ch; syscall; 
0x000000000042a83a: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000042415b: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000443fba: and al, 0xa; movzx edi, word ptr [rsp + 8]; call 0x43610; lea rsp, [rsp + 0x18]; ret; 
0x00000000004452f0: and al, 0xb0; add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x00000000004453a8: and al, 0xb8; add al, byte ptr [rax]; add byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x77]; ret 0x8944; 
0x0000000000445397: and al, 0xb8; add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x00000000004461ab: and al, 0xb8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042b954: and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000042b9b3: and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042ba8f: and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042bac8: and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xc601; 
0x0000000000439328: and al, 0xb9; adc eax, dword ptr [rax]; add byte ptr [rax], al; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x000000000045924d: and al, 0xc0; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000458b43: and al, 0xc1; call 0x6492d352; and al, 0x10; pop rbx; ret; 
0x0000000000458b83: and al, 0xc1; call 0x6492d392; and al, 0x10; pop rbx; ret; 
0x000000000045126b: and al, 0xc6; add byte ptr [rax], al; mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040ba63: and al, 0xc6; add byte ptr [rax], al; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043a5b8: and al, 0xc7; add byte ptr [rax], 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000438e78: and al, 0xce; add eax, dword ptr [rax]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x000000000040cfe3: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040ae8c: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d5d: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000041651d: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed9c: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431192: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000043185c: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c9c: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ea9: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ecc: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000043214c: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432392: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432582: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432772: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432962: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b49: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d1c: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432efc: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004330fc: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332ec: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334ec: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c79: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404efd: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417bab: and al, 0xdb; sub al, 0x24; lea rsp, [rsp + 0x28]; ret; 
0x000000000044387a: and al, 0xde; rcr edi, 0x7c; and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040d05e: and al, 0xdf; sub al, 0x24; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000415d7d: and al, 0xdf; sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000415dbd: and al, 0xdf; sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000041653d: and al, 0xdf; sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000041657d: and al, 0xdf; sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000042946a: and al, 0xe0; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040c7f7: and al, 0xe8; add byte ptr [r8], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044465d: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x1c75; 
0x000000000042ed93: and al, 0xe8; call 0x36c60; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed92: and al, 0xe8; call 0x36c60; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec3: and al, 0xe8; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec2: and al, 0xe8; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432143: and al, 0xe8; call 0x6790; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432142: and al, 0xe8; call 0x6790; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c93: and al, 0xe8; call 0x6a50; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c92: and al, 0xe8; call 0x6a50; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431853: and al, 0xe8; call 0x6d40; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431852: and al, 0xe8; call 0x6d40; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040ae83: and al, 0xe8; call 0x9560; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040ae82: and al, 0xe8; call 0x9560; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416513: and al, 0xe8; call qword ptr [rip + 0x6da75]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416512: and al, 0xe8; call qword ptr [rip + 0x6da75]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d53: and al, 0xe8; call qword ptr [rip + 0x6e235]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d52: and al, 0xe8; call qword ptr [rip + 0x6e235]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443f8a: and al, 0xe8; idiv dil; push rdx; cvtpi2ps xmm0, mm0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a7b4: and al, 0xe8; jbe 0x3a7b8; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000438db9: and al, 0xe8; movabs eax, dword ptr [0x824648d48ffffff]; ret; 
0x0000000000438ee9: and al, 0xe8; movabs eax, dword ptr [0x824648d48ffffff]; ret; 
0x0000000000439299: and al, 0xe8; movabs eax, dword ptr [0x824648d48ffffff]; ret; 
0x0000000000443698: and al, 0xe8; ret 0xfbf1; 
0x0000000000446d26: and al, 0xe8; test byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 0x28]; ret; 
0x000000000041328d: and al, 0xeb; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000413447: and al, 0xeb; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000413379: and al, 0xeb; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041354b: and al, 0xeb; add dh, byte ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000040f8d4: and al, 0xeb; or dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000423bd8: and al, 0xef; add eax, 0xff388b00; adc eax, 0x6030c; lea rsp, [rsp + 8]; ret; 
0x000000000042b712: and al, 0xf0; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042f877: and al, 0xf0; lea r9, [rbp - 8]; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x000000000042f876: and al, 0xf0; lea r9, [rbp - 8]; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ea7: and al, 0xf0; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401ea6: and al, 0xf0; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e67: and al, 0xf0; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e66: and al, 0xf0; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e37: and al, 0xf0; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e36: and al, 0xf0; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e07: and al, 0xf0; mov rax, rdi; syscall; 
0x0000000000401e06: and al, 0xf0; mov rax, rdi; syscall; 
0x00000000004435f7: and al, 0xf2; cvttps2pi mm0, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004477ba: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447800: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447840: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b7: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478fb: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044793b: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d3d: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d9d: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164fd: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041655d: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed7c: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431172: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a79: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a9c: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000443646: and al, 0xf2; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d1d: and al, 0xf3; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164dd: and al, 0xf3; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042eddc: and al, 0xf3; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431152: and al, 0xf3; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431639: and al, 0xf3; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043165c: and al, 0xf3; movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044fa13: and al, 0xf8; add rdi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x000000000044fa12: and al, 0xf8; add rdi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x00000000004146f3: and al, 0xf8; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x00000000004146f2: and al, 0xf8; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000423aa3: and al, 0xf8; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x0000000000423aa2: and al, 0xf8; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004237d3: and al, 0xf8; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x00000000004237d2: and al, 0xf8; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x0000000000403443: and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403442: and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403463: and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403462: and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403483: and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403482: and al, 0xf8; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034a3: and al, 0xf8; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034a2: and al, 0xf8; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034f3: and al, 0xf8; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004034f2: and al, 0xf8; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004075e3: and al, 0xf8; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x00000000004075e2: and al, 0xf8; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407603: and al, 0xf8; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407602: and al, 0xf8; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407623: and al, 0xf8; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x0000000000407622: and al, 0xf8; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x0000000000422003: and al, 0xf8; and esi, 0xff; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x0000000000422002: and al, 0xf8; and esi, 0xff; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000042e613: and al, 0xf8; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x000000000042e612: and al, 0xf8; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x000000000040b7e3: and al, 0xf8; and esi, esi; and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x000000000040b7e2: and al, 0xf8; and esi, esi; and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x00000000004117c3: and al, 0xf8; call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x00000000004117c2: and al, 0xf8; call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x00000000004115c3: and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115c2: and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115f3: and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115f2: and al, 0xf8; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412f03: and al, 0xf8; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x0000000000412f02: and al, 0xf8; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x0000000000414333: and al, 0xf8; call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x0000000000414332: and al, 0xf8; call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x00000000004150f3: and al, 0xf8; call 0x14e70; mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004150f2: and al, 0xf8; call 0x14e70; mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004177f3: and al, 0xf8; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x00000000004177f2: and al, 0xf8; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x0000000000417663: and al, 0xf8; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x0000000000417662: and al, 0xf8; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x0000000000417803: and al, 0xf8; call 0x176f0; lea rsp, [rsp + 8]; ret; 
0x0000000000417802: and al, 0xf8; call 0x176f0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab63: and al, 0xf8; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab62: and al, 0xf8; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418343: and al, 0xf8; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418342: and al, 0xf8; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418363: and al, 0xf8; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x0000000000418362: and al, 0xf8; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x0000000000456823: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456822: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456833: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456832: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456843: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456842: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456853: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456852: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568a3: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568a2: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568d3: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568d2: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568e3: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568e2: and al, 0xf8; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004190a3: and al, 0xf8; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190a2: and al, 0xf8; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190d3: and al, 0xf8; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004190d2: and al, 0xf8; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000419163: and al, 0xf8; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000419162: and al, 0xf8; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000419193: and al, 0xf8; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x0000000000419192: and al, 0xf8; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b0d3: and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0d2: and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0f3: and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0f2: and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b133: and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b132: and al, 0xf8; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b093: and al, 0xf8; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b092: and al, 0xf8; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b113: and al, 0xf8; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b112: and al, 0xf8; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b243: and al, 0xf8; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b242: and al, 0xf8; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b5d3: and al, 0xf8; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x000000000041b5d2: and al, 0xf8; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x0000000000453363: and al, 0xf8; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x0000000000453362: and al, 0xf8; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6f3: and al, 0xf8; call 0x1b660; lea rsp, [rsp + 8]; ret; 
0x000000000041b6f2: and al, 0xf8; call 0x1b660; lea rsp, [rsp + 8]; ret; 
0x000000000041b6e3: and al, 0xf8; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6e2: and al, 0xf8; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b863: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b862: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b873: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b872: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b883: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b882: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b893: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b892: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8c3: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8c2: and al, 0xf8; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8f3: and al, 0xf8; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b8f2: and al, 0xf8; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c253: and al, 0xf8; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c252: and al, 0xf8; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c213: and al, 0xf8; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x000000000045c212: and al, 0xf8; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x000000000045c143: and al, 0xf8; call 0x1c840; lea rsp, [rsp + 8]; ret; 
0x000000000045c142: and al, 0xf8; call 0x1c840; lea rsp, [rsp + 8]; ret; 
0x000000000045c263: and al, 0xf8; call 0x1c950; lea rsp, [rsp + 8]; ret; 
0x000000000045c262: and al, 0xf8; call 0x1c950; lea rsp, [rsp + 8]; ret; 
0x0000000000421fc3: and al, 0xf8; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x0000000000421fc2: and al, 0xf8; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c123: and al, 0xf8; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c122: and al, 0xf8; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x0000000000421fd3: and al, 0xf8; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fd2: and al, 0xf8; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c113: and al, 0xf8; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c112: and al, 0xf8; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fe3: and al, 0xf8; call 0x20e20; lea rsp, [rsp + 8]; ret; 
0x0000000000421fe2: and al, 0xf8; call 0x20e20; lea rsp, [rsp + 8]; ret; 
0x0000000000421ff3: and al, 0xf8; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000421ff2: and al, 0xf8; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e3: and al, 0xf8; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e2: and al, 0xf8; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000422033: and al, 0xf8; call 0x20fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000422032: and al, 0xf8; call 0x20fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000422023: and al, 0xf8; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x0000000000422022: and al, 0xf8; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c133: and al, 0xf8; call 0x21a20; lea rsp, [rsp + 8]; ret; 
0x000000000045c132: and al, 0xf8; call 0x21a20; lea rsp, [rsp + 8]; ret; 
0x000000000045c2b3: and al, 0xf8; call 0x21fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2b2: and al, 0xf8; call 0x21fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2a3: and al, 0xf8; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2a2: and al, 0xf8; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c273: and al, 0xf8; call 0x21ff0; lea rsp, [rsp + 8]; ret; 
0x000000000045c272: and al, 0xf8; call 0x21ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004034c3: and al, 0xf8; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004034c2: and al, 0xf8; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048b3: and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x00000000004048b2: and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000404993: and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000404992: and al, 0xf8; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x00000000004048c3: and al, 0xf8; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004048c2: and al, 0xf8; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004049a3: and al, 0xf8; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004049a2: and al, 0xf8; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004048d3: and al, 0xf8; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004048d2: and al, 0xf8; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004049b3: and al, 0xf8; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004049b2: and al, 0xf8; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004048e3: and al, 0xf8; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004048e2: and al, 0xf8; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004049c3: and al, 0xf8; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004049c2: and al, 0xf8; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004279d3: and al, 0xf8; call 0x27980; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004279d2: and al, 0xf8; call 0x27980; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000404f83: and al, 0xf8; call 0x27c0; lea rsp, [rsp + 8]; ret; 
0x0000000000404f82: and al, 0xf8; call 0x27c0; lea rsp, [rsp + 8]; ret; 
0x0000000000428e63: and al, 0xf8; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000428e62: and al, 0xf8; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000429953: and al, 0xf8; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x0000000000429952: and al, 0xf8; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x0000000000429963: and al, 0xf8; call 0x29970; lea rsp, [rsp + 8]; ret; 
0x0000000000429962: and al, 0xf8; call 0x29970; lea rsp, [rsp + 8]; ret; 
0x0000000000456053: and al, 0xf8; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000456052: and al, 0xf8; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f83: and al, 0xf8; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f82: and al, 0xf8; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x0000000000458373: and al, 0xf8; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x0000000000458372: and al, 0xf8; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b093: and al, 0xf8; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x000000000042b092: and al, 0xf8; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x0000000000458383: and al, 0xf8; call 0x2b10; lea rsp, [rsp + 8]; ret; 
0x0000000000458382: and al, 0xf8; call 0x2b10; lea rsp, [rsp + 8]; ret; 
0x000000000042bd63: and al, 0xf8; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x000000000042bd62: and al, 0xf8; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x000000000042bd73: and al, 0xf8; call 0x2bd80; lea rsp, [rsp + 8]; ret; 
0x000000000042bd72: and al, 0xf8; call 0x2bd80; lea rsp, [rsp + 8]; ret; 
0x000000000042fc93: and al, 0xf8; call 0x2e350; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042fc92: and al, 0xf8; call 0x2e350; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004588f3: and al, 0xf8; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x00000000004588f2: and al, 0xf8; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x0000000000419013: and al, 0xf8; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x0000000000419012: and al, 0xf8; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x00000000004243f3: and al, 0xf8; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004243f2: and al, 0xf8; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edf3: and al, 0xf8; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042edf2: and al, 0xf8; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ece3: and al, 0xf8; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042ece2: and al, 0xf8; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000433de3: and al, 0xf8; call 0x33bb0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433de2: and al, 0xf8; call 0x33bb0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e3: and al, 0xf8; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e2: and al, 0xf8; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x0000000000433d83: and al, 0xf8; call 0x33c90; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433d82: and al, 0xf8; call 0x33c90; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000427a03: and al, 0xf8; call 0x342a0; lea rsp, [rsp + 8]; ret; 
0x0000000000427a02: and al, 0xf8; call 0x342a0; lea rsp, [rsp + 8]; ret; 
0x00000000004279f3: and al, 0xf8; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x00000000004279f2: and al, 0xf8; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000434243: and al, 0xf8; call 0x342e0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434242: and al, 0xf8; call 0x342e0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434223: and al, 0xf8; call 0x34320; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434222: and al, 0xf8; call 0x34320; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed53: and al, 0xf8; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed52: and al, 0xf8; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb3: and al, 0xf8; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb2: and al, 0xf8; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed43: and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000042ed42: and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e93: and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e92: and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433283: and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433282: and al, 0xf8; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433073: and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433072: and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433463: and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433462: and al, 0xf8; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434ea3: and al, 0xf8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434ea2: and al, 0xf8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004322e3: and al, 0xf8; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004322e2: and al, 0xf8; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b3: and al, 0xf8; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b2: and al, 0xf8; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000042edc3: and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x000000000042edc2: and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa3: and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa2: and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c93: and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c92: and al, 0xf8; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324d3: and al, 0xf8; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004324d2: and al, 0xf8; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326c3: and al, 0xf8; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004326c2: and al, 0xf8; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e63: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e62: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433043: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433042: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433253: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433252: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433433: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433432: and al, 0xf8; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edb3: and al, 0xf8; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x000000000042edb2: and al, 0xf8; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351e3: and al, 0xf8; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004351e2: and al, 0xf8; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352b3: and al, 0xf8; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352b2: and al, 0xf8; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352c3: and al, 0xf8; call 0x35280; lea rsp, [rsp + 8]; ret; 
0x00000000004352c2: and al, 0xf8; call 0x35280; lea rsp, [rsp + 8]; ret; 
0x0000000000435303: and al, 0xf8; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x0000000000435302: and al, 0xf8; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x0000000000435373: and al, 0xf8; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x0000000000435372: and al, 0xf8; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353e3: and al, 0xf8; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x00000000004353e2: and al, 0xf8; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000042edd3: and al, 0xf8; call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042edd2: and al, 0xf8; call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed73: and al, 0xf8; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed72: and al, 0xf8; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431653: and al, 0xf8; call 0x36c90; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431652: and al, 0xf8; call 0x36c90; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a93: and al, 0xf8; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a92: and al, 0xf8; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000437383: and al, 0xf8; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000437382: and al, 0xf8; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431703: and al, 0xf8; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431702: and al, 0xf8; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b43: and al, 0xf8; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431b42: and al, 0xf8; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff3: and al, 0xf8; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff2: and al, 0xf8; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae3: and al, 0xf8; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae2: and al, 0xf8; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004316a3: and al, 0xf8; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004316a2: and al, 0xf8; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b13: and al, 0xf8; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431b12: and al, 0xf8; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316d3: and al, 0xf8; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316d2: and al, 0xf8; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed63: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed62: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433643: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433642: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336c3: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336c2: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433753: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433752: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337e3: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337e2: and al, 0xf8; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433683: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433682: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433703: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433702: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433793: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433792: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433823: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433822: and al, 0xf8; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dad3: and al, 0xf8; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x000000000040dad2: and al, 0xf8; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x0000000000434263: and al, 0xf8; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434262: and al, 0xf8; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434283: and al, 0xf8; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434282: and al, 0xf8; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000427a33: and al, 0xf8; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000427a32: and al, 0xf8; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000455b23: and al, 0xf8; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x0000000000455b22: and al, 0xf8; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x000000000044c923: and al, 0xf8; call 0x4c930; lea rsp, [rsp + 8]; ret; 
0x000000000044c922: and al, 0xf8; call 0x4c930; lea rsp, [rsp + 8]; ret; 
0x0000000000404f73: and al, 0xf8; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x0000000000404f72: and al, 0xf8; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x00000000004479a3: and al, 0xf8; call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x00000000004479a2: and al, 0xf8; call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x0000000000452b43: and al, 0xf8; call 0x56050; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000452b42: and al, 0xf8; call 0x56050; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x00000000004581a3: and al, 0xf8; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x00000000004581a2: and al, 0xf8; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x0000000000458393: and al, 0xf8; call 0x576a0; lea rsp, [rsp + 8]; ret; 
0x0000000000458392: and al, 0xf8; call 0x576a0; lea rsp, [rsp + 8]; ret; 
0x00000000004583a3: and al, 0xf8; call 0x576d0; lea rsp, [rsp + 8]; ret; 
0x00000000004583a2: and al, 0xf8; call 0x576d0; lea rsp, [rsp + 8]; ret; 
0x0000000000453d03: and al, 0xf8; call 0x58ac0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000453d02: and al, 0xf8; call 0x58ac0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045a233: and al, 0xf8; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045a232: and al, 0xf8; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b843: and al, 0xf8; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b842: and al, 0xf8; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dc3: and al, 0xf8; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dc2: and al, 0xf8; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b853: and al, 0xf8; call 0x59cf0; lea rsp, [rsp + 8]; ret; 
0x000000000045b852: and al, 0xf8; call 0x59cf0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7f3: and al, 0xf8; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x000000000045c7f2: and al, 0xf8; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x0000000000432133: and al, 0xf8; call 0x67c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432132: and al, 0xf8; call 0x67c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432063: and al, 0xf8; call 0x6820; lea rsp, [rsp + 8]; ret; 
0x0000000000432062: and al, 0xf8; call 0x6820; lea rsp, [rsp + 8]; ret; 
0x00000000004320f3: and al, 0xf8; call 0x6830; lea rsp, [rsp + 8]; ret; 
0x00000000004320f2: and al, 0xf8; call 0x6830; lea rsp, [rsp + 8]; ret; 
0x0000000000432083: and al, 0xf8; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x0000000000432082: and al, 0xf8; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x0000000000432113: and al, 0xf8; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x0000000000432112: and al, 0xf8; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321c3: and al, 0xf8; call 0x6880; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321c2: and al, 0xf8; call 0x6880; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321a3: and al, 0xf8; call 0x6880; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321a2: and al, 0xf8; call 0x6880; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432183: and al, 0xf8; call 0x6880; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432182: and al, 0xf8; call 0x6880; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432203: and al, 0xf8; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000432202: and al, 0xf8; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000432123: and al, 0xf8; call 0x69a0; lea rsp, [rsp + 8]; ret; 
0x0000000000432122: and al, 0xf8; call 0x69a0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c83: and al, 0xf8; call 0x6a70; lea rsp, [rsp + 8]; ret; 
0x0000000000431c82: and al, 0xf8; call 0x6a70; lea rsp, [rsp + 8]; ret; 
0x0000000000431bb3: and al, 0xf8; call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431bb2: and al, 0xf8; call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c43: and al, 0xf8; call 0x6b00; lea rsp, [rsp + 8]; ret; 
0x0000000000431c42: and al, 0xf8; call 0x6b00; lea rsp, [rsp + 8]; ret; 
0x0000000000431bd3: and al, 0xf8; call 0x6b30; lea rsp, [rsp + 8]; ret; 
0x0000000000431bd2: and al, 0xf8; call 0x6b30; lea rsp, [rsp + 8]; ret; 
0x0000000000431c63: and al, 0xf8; call 0x6b50; lea rsp, [rsp + 8]; ret; 
0x0000000000431c62: and al, 0xf8; call 0x6b50; lea rsp, [rsp + 8]; ret; 
0x0000000000431bc3: and al, 0xf8; call 0x6b80; lea rsp, [rsp + 8]; ret; 
0x0000000000431bc2: and al, 0xf8; call 0x6b80; lea rsp, [rsp + 8]; ret; 
0x0000000000431c53: and al, 0xf8; call 0x6ba0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c52: and al, 0xf8; call 0x6ba0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d13: and al, 0xf8; call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d12: and al, 0xf8; call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cf3: and al, 0xf8; call 0x6bd0; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cf2: and al, 0xf8; call 0x6bd0; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd3: and al, 0xf8; call 0x6bd0; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd2: and al, 0xf8; call 0x6bd0; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d53: and al, 0xf8; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d52: and al, 0xf8; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c73: and al, 0xf8; call 0x6ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c72: and al, 0xf8; call 0x6ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000431843: and al, 0xf8; call 0x6d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431842: and al, 0xf8; call 0x6d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431773: and al, 0xf8; call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431772: and al, 0xf8; call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431803: and al, 0xf8; call 0x6dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431802: and al, 0xf8; call 0x6dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431793: and al, 0xf8; call 0x6df0; lea rsp, [rsp + 8]; ret; 
0x0000000000431792: and al, 0xf8; call 0x6df0; lea rsp, [rsp + 8]; ret; 
0x0000000000431823: and al, 0xf8; call 0x6e00; lea rsp, [rsp + 8]; ret; 
0x0000000000431822: and al, 0xf8; call 0x6e00; lea rsp, [rsp + 8]; ret; 
0x0000000000431783: and al, 0xf8; call 0x6e20; lea rsp, [rsp + 8]; ret; 
0x0000000000431782: and al, 0xf8; call 0x6e20; lea rsp, [rsp + 8]; ret; 
0x0000000000431813: and al, 0xf8; call 0x6e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431812: and al, 0xf8; call 0x6e30; lea rsp, [rsp + 8]; ret; 
0x00000000004318d3: and al, 0xf8; call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004318d2: and al, 0xf8; call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431893: and al, 0xf8; call 0x6e50; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431892: and al, 0xf8; call 0x6e50; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431913: and al, 0xf8; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x0000000000431912: and al, 0xf8; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x0000000000431833: and al, 0xf8; call 0x6f20; lea rsp, [rsp + 8]; ret; 
0x0000000000431832: and al, 0xf8; call 0x6f20; lea rsp, [rsp + 8]; ret; 
0x000000000042a593: and al, 0xf8; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042a592: and al, 0xf8; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba23: and al, 0xf8; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba22: and al, 0xf8; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283d3: and al, 0xf8; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x00000000004283d2: and al, 0xf8; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f123: and al, 0xf8; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x000000000040f122: and al, 0xf8; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b43: and al, 0xf8; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b42: and al, 0xf8; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b23: and al, 0xf8; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b22: and al, 0xf8; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b03: and al, 0xf8; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b02: and al, 0xf8; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae3: and al, 0xf8; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae2: and al, 0xf8; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac3: and al, 0xf8; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac2: and al, 0xf8; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a83: and al, 0xf8; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a82: and al, 0xf8; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a63: and al, 0xf8; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a62: and al, 0xf8; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a43: and al, 0xf8; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a42: and al, 0xf8; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a23: and al, 0xf8; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a22: and al, 0xf8; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a03: and al, 0xf8; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a02: and al, 0xf8; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419223: and al, 0xf8; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x0000000000419222: and al, 0xf8; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x0000000000419203: and al, 0xf8; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x0000000000419202: and al, 0xf8; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191c3: and al, 0xf8; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191c2: and al, 0xf8; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191a3: and al, 0xf8; call qword ptr [rip + 0x509b5]; lea rsp, [rsp + 8]; ret; 
0x00000000004191a2: and al, 0xf8; call qword ptr [rip + 0x509b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419173: and al, 0xf8; call qword ptr [rip + 0x509cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000419172: and al, 0xf8; call qword ptr [rip + 0x509cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000419143: and al, 0xf8; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x0000000000419142: and al, 0xf8; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x0000000000419123: and al, 0xf8; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x0000000000419122: and al, 0xf8; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x0000000000419103: and al, 0xf8; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x0000000000419102: and al, 0xf8; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190b3: and al, 0xf8; call qword ptr [rip + 0x50a9d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190b2: and al, 0xf8; call qword ptr [rip + 0x50a9d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190e3: and al, 0xf8; call qword ptr [rip + 0x50aa5]; lea rsp, [rsp + 8]; ret; 
0x00000000004190e2: and al, 0xf8; call qword ptr [rip + 0x50aa5]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6c3: and al, 0xf8; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6c2: and al, 0xf8; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a3: and al, 0xf8; call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a2: and al, 0xf8; call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b663: and al, 0xf8; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b662: and al, 0xf8; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b3: and al, 0xf8; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b2: and al, 0xf8; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b593: and al, 0xf8; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b592: and al, 0xf8; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af73: and al, 0xf8; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af72: and al, 0xf8; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af53: and al, 0xf8; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af52: and al, 0xf8; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af33: and al, 0xf8; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af32: and al, 0xf8; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af13: and al, 0xf8; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af12: and al, 0xf8; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aef3: and al, 0xf8; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aef2: and al, 0xf8; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aed3: and al, 0xf8; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aed2: and al, 0xf8; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb3: and al, 0xf8; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb2: and al, 0xf8; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae93: and al, 0xf8; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae92: and al, 0xf8; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae73: and al, 0xf8; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae72: and al, 0xf8; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae53: and al, 0xf8; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae52: and al, 0xf8; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae33: and al, 0xf8; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae32: and al, 0xf8; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad73: and al, 0xf8; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad72: and al, 0xf8; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad53: and al, 0xf8; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad52: and al, 0xf8; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad33: and al, 0xf8; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad32: and al, 0xf8; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad13: and al, 0xf8; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad12: and al, 0xf8; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acf3: and al, 0xf8; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acf2: and al, 0xf8; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acd3: and al, 0xf8; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acd2: and al, 0xf8; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acb3: and al, 0xf8; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acb2: and al, 0xf8; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac93: and al, 0xf8; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac92: and al, 0xf8; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac73: and al, 0xf8; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac72: and al, 0xf8; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac53: and al, 0xf8; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac52: and al, 0xf8; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac33: and al, 0xf8; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac32: and al, 0xf8; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac13: and al, 0xf8; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac12: and al, 0xf8; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abf3: and al, 0xf8; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abf2: and al, 0xf8; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abd3: and al, 0xf8; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abd2: and al, 0xf8; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abb3: and al, 0xf8; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abb2: and al, 0xf8; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab93: and al, 0xf8; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab92: and al, 0xf8; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab73: and al, 0xf8; call qword ptr [rip + 0x6a15d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab72: and al, 0xf8; call qword ptr [rip + 0x6a15d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab43: and al, 0xf8; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab42: and al, 0xf8; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x0000000000416993: and al, 0xf8; call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x0000000000416992: and al, 0xf8; call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x0000000000416863: and al, 0xf8; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416862: and al, 0xf8; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416843: and al, 0xf8; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416842: and al, 0xf8; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416823: and al, 0xf8; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x0000000000416822: and al, 0xf8; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166f3: and al, 0xf8; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004166f2: and al, 0xf8; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165b3: and al, 0xf8; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x00000000004165b2: and al, 0xf8; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416593: and al, 0xf8; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416592: and al, 0xf8; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416573: and al, 0xf8; call qword ptr [rip + 0x6da25]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416572: and al, 0xf8; call qword ptr [rip + 0x6da25]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416553: and al, 0xf8; call qword ptr [rip + 0x6da35]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416552: and al, 0xf8; call qword ptr [rip + 0x6da35]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164d3: and al, 0xf8; call qword ptr [rip + 0x6dab5]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164d2: and al, 0xf8; call qword ptr [rip + 0x6dab5]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b3: and al, 0xf8; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b2: and al, 0xf8; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416493: and al, 0xf8; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x0000000000416492: and al, 0xf8; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x0000000000416473: and al, 0xf8; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416472: and al, 0xf8; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416353: and al, 0xf8; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416352: and al, 0xf8; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416333: and al, 0xf8; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x0000000000416332: and al, 0xf8; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x0000000000416313: and al, 0xf8; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416312: and al, 0xf8; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162f3: and al, 0xf8; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162f2: and al, 0xf8; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162d3: and al, 0xf8; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162d2: and al, 0xf8; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162b3: and al, 0xf8; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004162b2: and al, 0xf8; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416293: and al, 0xf8; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416292: and al, 0xf8; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416273: and al, 0xf8; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416272: and al, 0xf8; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416253: and al, 0xf8; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416252: and al, 0xf8; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416233: and al, 0xf8; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x0000000000416232: and al, 0xf8; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x0000000000416153: and al, 0xf8; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416152: and al, 0xf8; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e13: and al, 0xf8; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e12: and al, 0xf8; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd3: and al, 0xf8; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd2: and al, 0xf8; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415db3: and al, 0xf8; call qword ptr [rip + 0x6e1e5]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415db2: and al, 0xf8; call qword ptr [rip + 0x6e1e5]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d73: and al, 0xf8; call qword ptr [rip + 0x6e215]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d72: and al, 0xf8; call qword ptr [rip + 0x6e215]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d33: and al, 0xf8; call qword ptr [rip + 0x6e255]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d32: and al, 0xf8; call qword ptr [rip + 0x6e255]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df3: and al, 0xf8; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df2: and al, 0xf8; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d13: and al, 0xf8; call qword ptr [rip + 0x6e275]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d12: and al, 0xf8; call qword ptr [rip + 0x6e275]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c73: and al, 0xf8; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c72: and al, 0xf8; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c53: and al, 0xf8; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c52: and al, 0xf8; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c33: and al, 0xf8; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c32: and al, 0xf8; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b13: and al, 0xf8; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b12: and al, 0xf8; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415af3: and al, 0xf8; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415af2: and al, 0xf8; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad3: and al, 0xf8; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad2: and al, 0xf8; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab3: and al, 0xf8; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab2: and al, 0xf8; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a93: and al, 0xf8; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a92: and al, 0xf8; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a73: and al, 0xf8; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a72: and al, 0xf8; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a53: and al, 0xf8; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a52: and al, 0xf8; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a33: and al, 0xf8; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a32: and al, 0xf8; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a13: and al, 0xf8; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a12: and al, 0xf8; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159d3: and al, 0xf8; call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x00000000004159d2: and al, 0xf8; call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x00000000004157a3: and al, 0xf8; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x00000000004157a2: and al, 0xf8; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x0000000000415783: and al, 0xf8; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415782: and al, 0xf8; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415763: and al, 0xf8; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415762: and al, 0xf8; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415643: and al, 0xf8; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415642: and al, 0xf8; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415623: and al, 0xf8; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415622: and al, 0xf8; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415603: and al, 0xf8; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415602: and al, 0xf8; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154c3: and al, 0xf8; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x00000000004154c2: and al, 0xf8; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415483: and al, 0xf8; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x0000000000415482: and al, 0xf8; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154e3: and al, 0xf8; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x00000000004154e2: and al, 0xf8; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x00000000004154a3: and al, 0xf8; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x00000000004154a2: and al, 0xf8; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415503: and al, 0xf8; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415502: and al, 0xf8; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415463: and al, 0xf8; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415462: and al, 0xf8; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x0000000000439223: and al, 0xf8; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000439222: and al, 0xf8; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c3: and al, 0xf8; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004391c2: and al, 0xf8; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af3: and al, 0xf8; lea r8, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af2: and al, 0xf8; lea r8, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316b3: and al, 0xf8; lea r8, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316b2: and al, 0xf8; lea r8, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004392f3: and al, 0xf8; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x00000000004392f2: and al, 0xf8; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000453393: and al, 0xf8; lea rax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x0000000000453392: and al, 0xf8; lea rax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x0000000000455b93: and al, 0xf8; lea rax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000455b92: and al, 0xf8; lea rax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000434873: and al, 0xf8; lea rax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x0000000000434872: and al, 0xf8; lea rax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000044a233: and al, 0xf8; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a232: and al, 0xf8; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a213: and al, 0xf8; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a212: and al, 0xf8; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d3: and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d2: and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d3: and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d2: and al, 0xf8; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b3: and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b2: and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b3: and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b2: and al, 0xf8; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8e3: and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e2: and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e3: and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8e2: and al, 0xf8; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x0000000000434483: and al, 0xf8; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434482: and al, 0xf8; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434463: and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434462: and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434463: and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434462: and al, 0xf8; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434423: and al, 0xf8; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x0000000000434422: and al, 0xf8; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343e3: and al, 0xf8; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343e2: and al, 0xf8; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343a3: and al, 0xf8; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x00000000004343a2: and al, 0xf8; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x0000000000434363: and al, 0xf8; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434362: and al, 0xf8; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434323: and al, 0xf8; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x0000000000434322: and al, 0xf8; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342e3: and al, 0xf8; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342e2: and al, 0xf8; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342c3: and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c2: and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c3: and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342c2: and al, 0xf8; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a3: and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a2: and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a3: and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a2: and al, 0xf8; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd3: and al, 0xf8; lea rax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd2: and al, 0xf8; lea rax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f43: and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f42: and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f43: and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f42: and al, 0xf8; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040ff93: and al, 0xf8; lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040ff92: and al, 0xf8; lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea3: and al, 0xf8; lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea2: and al, 0xf8; lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa3: and al, 0xf8; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa2: and al, 0xf8; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d53: and al, 0xf8; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d52: and al, 0xf8; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d33: and al, 0xf8; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d32: and al, 0xf8; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d13: and al, 0xf8; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d12: and al, 0xf8; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000041b8d3: and al, 0xf8; lea rdi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b8d2: and al, 0xf8; lea rdi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b383: and al, 0xf8; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x000000000041b382: and al, 0xf8; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000447523: and al, 0xf8; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000447522: and al, 0xf8; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000439a93: and al, 0xf8; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000439a92: and al, 0xf8; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000437363: and al, 0xf8; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437362: and al, 0xf8; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437323: and al, 0xf8; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000437322: and al, 0xf8; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e3: and al, 0xf8; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004372e2: and al, 0xf8; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f83: and al, 0xf8; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000436f82: and al, 0xf8; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431b23: and al, 0xf8; lea rdx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431b22: and al, 0xf8; lea rdx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e3: and al, 0xf8; lea rdx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004316e2: and al, 0xf8; lea rdx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000438e73: and al, 0xf8; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e72: and al, 0xf8; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e13: and al, 0xf8; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000438e12: and al, 0xf8; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac3: and al, 0xf8; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac2: and al, 0xf8; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431683: and al, 0xf8; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431682: and al, 0xf8; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf3: and al, 0xf8; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf2: and al, 0xf8; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x0000000000459093: and al, 0xf8; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000459092: and al, 0xf8; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000043bab3: and al, 0xf8; mov dl, sil; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bab2: and al, 0xf8; mov dl, sil; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b3: and al, 0xf8; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b2: and al, 0xf8; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004300c3: and al, 0xf8; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004300c2: and al, 0xf8; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a3: and al, 0xf8; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a2: and al, 0xf8; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f3: and al, 0xf8; mov ecx, 0x20; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f2: and al, 0xf8; mov ecx, 0x20; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab3: and al, 0xf8; mov ecx, 0x20; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab2: and al, 0xf8; mov ecx, 0x20; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000044a1d3: and al, 0xf8; mov ecx, 0xffffffe0; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a1d2: and al, 0xf8; mov ecx, 0xffffffe0; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433a53: and al, 0xf8; mov ecx, 0xffffffe0; lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433a52: and al, 0xf8; mov ecx, 0xffffffe0; lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000045c823: and al, 0xf8; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045c822: and al, 0xf8; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc3: and al, 0xf8; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc2: and al, 0xf8; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e73: and al, 0xf8; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e72: and al, 0xf8; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457223: and al, 0xf8; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457222: and al, 0xf8; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457323: and al, 0xf8; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457322: and al, 0xf8; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000459de3: and al, 0xf8; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459de2: and al, 0xf8; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e03: and al, 0xf8; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e02: and al, 0xf8; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba53: and al, 0xf8; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x000000000045ba52: and al, 0xf8; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x0000000000434f93: and al, 0xf8; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434f92: and al, 0xf8; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb3: and al, 0xf8; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb2: and al, 0xf8; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160d3: and al, 0xf8; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x00000000004160d2: and al, 0xf8; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x0000000000416133: and al, 0xf8; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x0000000000416132: and al, 0xf8; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f3: and al, 0xf8; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f2: and al, 0xf8; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x0000000000416113: and al, 0xf8; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x0000000000416112: and al, 0xf8; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef63: and al, 0xf8; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x000000000042ef62: and al, 0xf8; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x0000000000434593: and al, 0xf8; mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000434592: and al, 0xf8; mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x00000000004160b3: and al, 0xf8; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004160b2: and al, 0xf8; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004166d3: and al, 0xf8; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004166d2: and al, 0xf8; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004159f3: and al, 0xf8; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004159f2: and al, 0xf8; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155e3: and al, 0xf8; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155e2: and al, 0xf8; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x00000000004396c3: and al, 0xf8; mov edx, 1; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x00000000004396c2: and al, 0xf8; mov edx, 1; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x0000000000427a13: and al, 0xf8; mov edx, 1; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x0000000000427a12: and al, 0xf8; mov edx, 1; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000044a293: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a292: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448553: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448552: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448533: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448532: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448533: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000448532: and al, 0xf8; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c3: and al, 0xf8; mov edx, 1; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c2: and al, 0xf8; mov edx, 1; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x00000000004155c3: and al, 0xf8; mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x00000000004155c2: and al, 0xf8; mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f53: and al, 0xf8; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f52: and al, 0xf8; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004166b3: and al, 0xf8; mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x00000000004166b2: and al, 0xf8; mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x00000000004572e3: and al, 0xf8; mov esi, edi; mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004572e2: and al, 0xf8; mov esi, edi; mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004191e3: and al, 0xf8; mov qword ptr [rsp], rdi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x00000000004191e2: and al, 0xf8; mov qword ptr [rsp], rdi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000430433: and al, 0xf8; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x0000000000430432: and al, 0xf8; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x000000000043f7e3: and al, 0xf8; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x000000000043f7e2: and al, 0xf8; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443263: and al, 0xf8; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000443262: and al, 0xf8; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x000000000043b423: and al, 0xf8; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x000000000043b422: and al, 0xf8; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c13: and al, 0xf8; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x0000000000449c12: and al, 0xf8; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f3: and al, 0xf8; mov r9, rsp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f2: and al, 0xf8; mov r9, rsp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x00000000004115a3: and al, 0xf8; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115a2: and al, 0xf8; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d3: and al, 0xf8; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d2: and al, 0xf8; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000456863: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456862: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456883: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456882: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b3: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b2: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f3: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f2: and al, 0xf8; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b183: and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b182: and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a3: and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a2: and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b223: and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b222: and al, 0xf8; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a3: and al, 0xf8; mov rax, rdi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a2: and al, 0xf8; mov rax, rdi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041dad3: and al, 0xf8; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041dad2: and al, 0xf8; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f613: and al, 0xf8; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f612: and al, 0xf8; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000044fa53: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa52: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa33: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa32: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa73: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa72: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b3: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b2: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d3: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d2: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x00000000004147c3: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x00000000004147c2: and al, 0xf8; mov rax, rdi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f3: and al, 0xf8; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f2: and al, 0xf8; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d813: and al, 0xf8; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d812: and al, 0xf8; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004149b3: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149b2: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414993: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414992: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414973: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000414972: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433913: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000433912: and al, 0xf8; mov rax, rdi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004396e3: and al, 0xf8; mov rcx, rdx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004396e2: and al, 0xf8; mov rcx, rdx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437303: and al, 0xf8; mov rcx, rdx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437302: and al, 0xf8; mov rcx, rdx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437343: and al, 0xf8; mov rcx, rdx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437342: and al, 0xf8; mov rcx, rdx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431103: and al, 0xf8; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431102: and al, 0xf8; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431123: and al, 0xf8; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x0000000000431122: and al, 0xf8; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004557c3: and al, 0xf8; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x00000000004557c2: and al, 0xf8; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x000000000045b863: and al, 0xf8; mov rdx, rsi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b862: and al, 0xf8; mov rdx, rsi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a3: and al, 0xf8; mov rdx, rsi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a2: and al, 0xf8; mov rdx, rsi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb3: and al, 0xf8; mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb2: and al, 0xf8; mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x0000000000457453: and al, 0xf8; mov rsi, rdi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457452: and al, 0xf8; mov rsi, rdi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba3: and al, 0xf8; mov rsi, rdi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba2: and al, 0xf8; mov rsi, rdi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402be3: and al, 0xf8; mov rsi, rdi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402be2: and al, 0xf8; mov rsi, rdi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b43: and al, 0xf8; mov rsi, rdi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b42: and al, 0xf8; mov rsi, rdi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c803: and al, 0xf8; mov rsi, rdi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c802: and al, 0xf8; mov rsi, rdi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457523: and al, 0xf8; mov rsi, rdi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457522: and al, 0xf8; mov rsi, rdi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e13: and al, 0xf8; mov rsi, rdi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e12: and al, 0xf8; mov rsi, rdi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402a53: and al, 0xf8; mov rsi, rdi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402a52: and al, 0xf8; mov rsi, rdi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004532b3: and al, 0xf8; mov rsi, rdi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x00000000004532b2: and al, 0xf8; mov rsi, rdi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x0000000000450873: and al, 0xf8; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x0000000000450872: and al, 0xf8; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321e3: and al, 0xf8; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004321e2: and al, 0xf8; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318f3: and al, 0xf8; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x00000000004318f2: and al, 0xf8; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x0000000000405183: and al, 0xf8; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x0000000000405182: and al, 0xf8; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b3: and al, 0xf8; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b2: and al, 0xf8; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000045b963: and al, 0xf8; movsxd rdx, esi; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b962: and al, 0xf8; movsxd rdx, esi; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e3: and al, 0xf8; movsxd rdx, esi; mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e2: and al, 0xf8; movsxd rdx, esi; mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba03: and al, 0xf8; movsxd rdx, esi; mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba02: and al, 0xf8; movsxd rdx, esi; mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b983: and al, 0xf8; movsxd rdx, esi; mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b982: and al, 0xf8; movsxd rdx, esi; mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee3: and al, 0xf8; movsxd rsi, edi; mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee2: and al, 0xf8; movsxd rsi, edi; mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457363: and al, 0xf8; movsxd rsi, edi; mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457362: and al, 0xf8; movsxd rsi, edi; mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c843: and al, 0xf8; movsxd rsi, edi; mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c842: and al, 0xf8; movsxd rsi, edi; mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc3: and al, 0xf8; movsxd rsi, edi; mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc2: and al, 0xf8; movsxd rsi, edi; mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa3: and al, 0xf8; movsxd rsi, edi; mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa2: and al, 0xf8; movsxd rsi, edi; mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000453f63: and al, 0xf8; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x0000000000453f62: and al, 0xf8; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x000000000040b8c3: and al, 0xf8; movsxd rsi, esi; movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x000000000040b8c2: and al, 0xf8; movsxd rsi, esi; movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad3: and al, 0xf8; movzx esi, byte ptr [rdi]; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad2: and al, 0xf8; movzx esi, byte ptr [rdi]; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000042f0d3: and al, 0xf8; xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x000000000042f0d2: and al, 0xf8; xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f93: and al, 0xf8; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f92: and al, 0xf8; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf3: and al, 0xf8; xor dl, dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf2: and al, 0xf8; xor dl, dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004507d3: and al, 0xf8; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x00000000004507d2: and al, 0xf8; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x000000000043bad3: and al, 0xf8; xor dl, dl; lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bad2: and al, 0xf8; xor dl, dl; lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000418663: and al, 0xf8; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418662: and al, 0xf8; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418643: and al, 0xf8; xor edi, edi; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000418642: and al, 0xf8; xor edi, edi; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab23: and al, 0xf8; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000041ab22: and al, 0xf8; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000045cad3: and al, 0xf8; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x000000000045cad2: and al, 0xf8; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x00000000004034d3: and al, 0xf8; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034d2: and al, 0xf8; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f23: and al, 0xf8; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f22: and al, 0xf8; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472b3: and al, 0xf8; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004472b2: and al, 0xf8; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004473a3: and al, 0xf8; xor edx, edx; call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x00000000004473a2: and al, 0xf8; xor edx, edx; call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447f93: and al, 0xf8; xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x0000000000447f92: and al, 0xf8; xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x000000000044a253: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a252: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448513: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x0000000000448512: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f3: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f2: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f3: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004484f2: and al, 0xf8; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004151b3: and al, 0xf8; xor edx, edx; mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004151b2: and al, 0xf8; xor edx, edx; mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004509d3: and al, 0xf8; xor edx, edx; xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x00000000004509d2: and al, 0xf8; xor edx, edx; xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x00000000004476b3: and al, 0xf8; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476b2: and al, 0xf8; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476d3: and al, 0xf8; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x00000000004476d2: and al, 0xf8; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x0000000000447853: and al, 0xf8; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447852: and al, 0xf8; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447873: and al, 0xf8; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x0000000000447872: and al, 0xf8; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x00000000004353f3: and al, 0xf8; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004353f2: and al, 0xf8; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453373: and al, 0xf8; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453372: and al, 0xf8; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042e403: and al, 0xf8; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e402: and al, 0xf8; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000420863: and al, 0xf8; xor sil, sil; call 0x20780; lea rsp, [rsp + 8]; ret; 
0x0000000000420862: and al, 0xf8; xor sil, sil; call 0x20780; lea rsp, [rsp + 8]; ret; 
0x0000000000445310: and al, 0xf; mov dh, 0x40; sbb byte ptr [rax - 0x77], cl; ret 0x20b9; 
0x000000000040e1ee: and al, 0xf; xchg esp, eax; ret; 
0x0000000000456827: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456837: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456847: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456846: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456857: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045686a: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456869: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045688a: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568a7: and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000416982: and al, 0xff; adc eax, 0x6d67f; lea rsp, [rsp + 8]; ret; 
0x00000000004159c2: and al, 0xff; adc eax, 0x6e63f; lea rsp, [rsp + 8]; ret; 
0x0000000000415b8c: and al, 1; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415b8b: and al, 1; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000458629: and al, 1; call 0x2b80; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004585d2: and al, 1; call 0x2c00; lea rsp, [rsp + 0x108]; ret; 
0x0000000000456b62: and al, 1; call 0x30d0; lea rsp, [rsp + 0x108]; ret; 
0x00000000004163cc: and al, 1; jmp 0x163d2; xor al, al; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x00000000004163cb: and al, 1; jmp 0x163d2; xor al, al; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x000000000042bd4b: and al, 1; mov byte ptr [rax + rdx - 1], 0x2f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000446da3: and al, 1; pop rax; sbb byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000446e04: and al, 1; pop rax; sbb byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x000000000041fcd6: and al, 2; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040518c: and al, 4; lea rsp, [rsp + 8]; ret; 
0x000000000040518b: and al, 4; lea rsp, [rsp + 8]; ret; 
0x0000000000458afd: and al, 4; mov dword ptr [r12], edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447fce: and al, 4; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443799: and al, 4; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000443798: and al, 4; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000404eb4: and al, 4; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x0000000000404eb3: and al, 4; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x00000000004594ba: and al, 4; mov rsi, rsp; mov edi, eax; call 0x59320; lea rsp, [rsp + 8]; ret; 
0x00000000004053c9: and al, 4; movsd xmm1, qword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x00000000004053c8: and al, 4; movsd xmm1, qword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000446e65: and al, 4; movzx edi, word ptr [rsp]; call 0x5bfd0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406632: and al, 7; mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000406631: and al, 7; mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000406636: and al, 7; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000406635: and al, 7; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000410266: and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c764: and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c7b4: and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420dc4: and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420e14: and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d0c2: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d21b: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d27a: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d2cb: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d337: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d38a: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d3ea: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000418330: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041f000: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042004e: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004200e8: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004201b8: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420253: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420304: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420393: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004204fd: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042059c: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000424f7b: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004584f9: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c329: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045cda5: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045d40c: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000413e2a: and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 9], cl; mov rax, r15; call rax; 
0x0000000000414839: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc38: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd89: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440168: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402b9: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e788: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451529: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451839: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522c8: and al, 8; add dword ptr [rbp + 0x15], esi; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004067a6: and al, 8; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x00000000004067a5: and al, 8; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000043229c: and al, 8; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043229b: and al, 8; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432273: and al, 8; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432272: and al, 8; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443fbf: and al, 8; call 0x43610; lea rsp, [rsp + 0x18]; ret; 
0x0000000000446ef9: and al, 8; call 0x43a40; movsd xmm1, qword ptr [rsp + 0x20]; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443fe4: and al, 8; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000453678: and al, 8; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x0000000000410427: and al, 8; call 0xdde0; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000439729: and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439728: and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043976c: and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043976b: and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044387f: and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004101db: and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000432230: and al, 8; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043222f: and al, 8; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000449d2b: and al, 8; lea rax, [rip + 0x3a02c]; call qword ptr [rax + 0x10]; 
0x000000000043b535: and al, 8; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000041fd6e: and al, 8; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x00000000004322c9: and al, 8; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c8: and al, 8; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000044d183: and al, 8; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000044d182: and al, 8; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000042de87: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deb4: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df8a: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e194: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000043972d: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439770: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443883: and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dcd1: and al, 8; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004101df: and al, 8; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000443855: and al, 8; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443854: and al, 8; lea rsp, [rsp + 0x28]; ret; 
0x000000000041b57d: and al, 8; lea rsp, [rsp + 0x78]; ret; 
0x000000000041b57c: and al, 8; lea rsp, [rsp + 0x78]; ret; 
0x00000000004136c6: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x00000000004136c5: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c74c: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c74b: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc7c: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc7b: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e75a: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e759: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee70: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee6f: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f000: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044efff: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f317: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f316: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9b4: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9b3: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc1a: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc19: and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000453848: and al, 8; lea rsp, [rsp + 0xf8]; ret; 
0x0000000000453847: and al, 8; lea rsp, [rsp + 0xf8]; ret; 
0x000000000041ee86: and al, 8; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e62e: and al, 8; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x0000000000410141: and al, 8; mov edi, 4; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000430a4c: and al, 8; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430a4b: and al, 8; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ecc: and al, 8; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ecb: and al, 8; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000040293a: and al, 8; mov qword ptr [rdi + 0x30], rax; mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000402939: and al, 8; mov qword ptr [rdi + 0x30], rax; mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x00000000004587ed: and al, 8; mov r8, rsp; mov rdx, r9; call 0x57540; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439137: and al, 8; mov r9d, 1; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000413695: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413694: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c71b: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c71a: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc4b: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc4a: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e729: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e728: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee3f: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee3e: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efcf: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efce: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e6: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e5: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f983: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f982: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe9: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe8: and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000443850: and al, 8; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000044384f: and al, 8; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000413690: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c716: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc46: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e724: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee3a: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efca: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e1: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f97e: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe4: and al, 8; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000042de7e: and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deab: and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df81: and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dcc8: and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000413cd0: and al, 8; mov rdi, r14; mov rax, r15; call rax; 
0x0000000000431f4b: and al, 8; mov rdi, rax; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed2b: and al, 8; mov rdi, rax; call 0x38d20; mov rsp, rbp; pop rbp; ret; 
0x0000000000431fbb: and al, 8; mov rdi, rax; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x00000000004135cf: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c63f: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb6f: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e63f: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed5f: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eeef: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1ff: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8af: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faaf: and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004168fb: and al, 8; mov rdi, rax; call qword ptr [rip + 0x6d6f2]; mov rsp, rbp; pop rbp; ret; 
0x000000000041593b: and al, 8; mov rdi, rax; call qword ptr [rip + 0x6e6b2]; mov rsp, rbp; pop rbp; ret; 
0x00000000004135ca: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004135c9: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c63a: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c639: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb6a: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb69: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e63a: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e639: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed5a: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed59: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eeea: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee9: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1fa: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f9: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8aa: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a9: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faaa: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa9: and al, 8; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041fda6: and al, 8; mov rdx, rsp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x00000000004588d8: and al, 8; mov rsi, rsp; call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ef6: and al, 8; mov rsi, rsp; call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477b4: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477b3: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477fa: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f9: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044783a: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447839: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b1: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b0: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f5: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f4: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447935: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447934: and al, 8; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000402d2a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000402d29: and al, 8; pop r12; pop rbx; ret; 
0x0000000000403d43: and al, 8; pop r12; pop rbx; ret; 
0x0000000000403d42: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404af9: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404af8: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404bbd: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404bbc: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404c12: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404c11: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404c65: and al, 8; pop r12; pop rbx; ret; 
0x0000000000404c64: and al, 8; pop r12; pop rbx; ret; 
0x0000000000405164: and al, 8; pop r12; pop rbx; ret; 
0x0000000000405163: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406815: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406814: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406993: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406992: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406a44: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406a43: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406acc: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406acb: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406c8f: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406c8e: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406d35: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406d34: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406dba: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406db9: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406f0f: and al, 8; pop r12; pop rbx; ret; 
0x0000000000406f0e: and al, 8; pop r12; pop rbx; ret; 
0x000000000040bb28: and al, 8; pop r12; pop rbx; ret; 
0x000000000040bb27: and al, 8; pop r12; pop rbx; ret; 
0x000000000040c4b4: and al, 8; pop r12; pop rbx; ret; 
0x000000000040c4b3: and al, 8; pop r12; pop rbx; ret; 
0x000000000040d6a6: and al, 8; pop r12; pop rbx; ret; 
0x000000000040d6a5: and al, 8; pop r12; pop rbx; ret; 
0x000000000040de24: and al, 8; pop r12; pop rbx; ret; 
0x000000000040de23: and al, 8; pop r12; pop rbx; ret; 
0x000000000040df4c: and al, 8; pop r12; pop rbx; ret; 
0x000000000040df4b: and al, 8; pop r12; pop rbx; ret; 
0x000000000040df9c: and al, 8; pop r12; pop rbx; ret; 
0x000000000040df9b: and al, 8; pop r12; pop rbx; ret; 
0x000000000040e173: and al, 8; pop r12; pop rbx; ret; 
0x000000000040e172: and al, 8; pop r12; pop rbx; ret; 
0x000000000040e6ab: and al, 8; pop r12; pop rbx; ret; 
0x000000000040e6aa: and al, 8; pop r12; pop rbx; ret; 
0x000000000040e76a: and al, 8; pop r12; pop rbx; ret; 
0x000000000040e769: and al, 8; pop r12; pop rbx; ret; 
0x000000000040fb67: and al, 8; pop r12; pop rbx; ret; 
0x000000000040fb66: and al, 8; pop r12; pop rbx; ret; 
0x000000000041004f: and al, 8; pop r12; pop rbx; ret; 
0x000000000041004e: and al, 8; pop r12; pop rbx; ret; 
0x0000000000411296: and al, 8; pop r12; pop rbx; ret; 
0x0000000000411295: and al, 8; pop r12; pop rbx; ret; 
0x00000000004112e6: and al, 8; pop r12; pop rbx; ret; 
0x00000000004112e5: and al, 8; pop r12; pop rbx; ret; 
0x00000000004113d7: and al, 8; pop r12; pop rbx; ret; 
0x00000000004113d6: and al, 8; pop r12; pop rbx; ret; 
0x0000000000411447: and al, 8; pop r12; pop rbx; ret; 
0x0000000000411446: and al, 8; pop r12; pop rbx; ret; 
0x0000000000413055: and al, 8; pop r12; pop rbx; ret; 
0x0000000000413054: and al, 8; pop r12; pop rbx; ret; 
0x0000000000413715: and al, 8; pop r12; pop rbx; ret; 
0x0000000000413714: and al, 8; pop r12; pop rbx; ret; 
0x000000000041474d: and al, 8; pop r12; pop rbx; ret; 
0x000000000041474c: and al, 8; pop r12; pop rbx; ret; 
0x00000000004147ad: and al, 8; pop r12; pop rbx; ret; 
0x00000000004147ac: and al, 8; pop r12; pop rbx; ret; 
0x0000000000414f0d: and al, 8; pop r12; pop rbx; ret; 
0x0000000000414f0c: and al, 8; pop r12; pop rbx; ret; 
0x000000000041507e: and al, 8; pop r12; pop rbx; ret; 
0x000000000041507d: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415e5a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415e59: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415e8a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415e89: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415eba: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415eb9: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f0a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f09: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f3a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f39: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f67: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f66: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f9a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f99: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415fca: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415fc9: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415ffa: and al, 8; pop r12; pop rbx; ret; 
0x0000000000415ff9: and al, 8; pop r12; pop rbx; ret; 
0x000000000041602a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000416029: and al, 8; pop r12; pop rbx; ret; 
0x000000000041605a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000416059: and al, 8; pop r12; pop rbx; ret; 
0x000000000041608a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000416089: and al, 8; pop r12; pop rbx; ret; 
0x000000000041717e: and al, 8; pop r12; pop rbx; ret; 
0x000000000041717d: and al, 8; pop r12; pop rbx; ret; 
0x000000000041738e: and al, 8; pop r12; pop rbx; ret; 
0x000000000041738d: and al, 8; pop r12; pop rbx; ret; 
0x0000000000417b78: and al, 8; pop r12; pop rbx; ret; 
0x0000000000417b77: and al, 8; pop r12; pop rbx; ret; 
0x0000000000418c91: and al, 8; pop r12; pop rbx; ret; 
0x0000000000418c90: and al, 8; pop r12; pop rbx; ret; 
0x00000000004194ba: and al, 8; pop r12; pop rbx; ret; 
0x00000000004194b9: and al, 8; pop r12; pop rbx; ret; 
0x0000000000419532: and al, 8; pop r12; pop rbx; ret; 
0x0000000000419531: and al, 8; pop r12; pop rbx; ret; 
0x0000000000419734: and al, 8; pop r12; pop rbx; ret; 
0x0000000000419733: and al, 8; pop r12; pop rbx; ret; 
0x00000000004197b2: and al, 8; pop r12; pop rbx; ret; 
0x00000000004197b1: and al, 8; pop r12; pop rbx; ret; 
0x0000000000419fad: and al, 8; pop r12; pop rbx; ret; 
0x0000000000419fac: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a008: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a007: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a25b: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a25a: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a2b3: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a2b2: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a2fb: and al, 8; pop r12; pop rbx; ret; 
0x000000000041a2fa: and al, 8; pop r12; pop rbx; ret; 
0x000000000041ae21: and al, 8; pop r12; pop rbx; ret; 
0x000000000041ae20: and al, 8; pop r12; pop rbx; ret; 
0x000000000041bbe7: and al, 8; pop r12; pop rbx; ret; 
0x000000000041bbe6: and al, 8; pop r12; pop rbx; ret; 
0x000000000041c67d: and al, 8; pop r12; pop rbx; ret; 
0x000000000041c67c: and al, 8; pop r12; pop rbx; ret; 
0x000000000041cae9: and al, 8; pop r12; pop rbx; ret; 
0x000000000041cae8: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d2b3: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d2b2: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d430: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d42f: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d59b: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d59a: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d72c: and al, 8; pop r12; pop rbx; ret; 
0x000000000041d72b: and al, 8; pop r12; pop rbx; ret; 
0x000000000041f16b: and al, 8; pop r12; pop rbx; ret; 
0x000000000041f16a: and al, 8; pop r12; pop rbx; ret; 
0x000000000041f720: and al, 8; pop r12; pop rbx; ret; 
0x000000000041f71f: and al, 8; pop r12; pop rbx; ret; 
0x000000000041f813: and al, 8; pop r12; pop rbx; ret; 
0x000000000041f812: and al, 8; pop r12; pop rbx; ret; 
0x000000000041fc7d: and al, 8; pop r12; pop rbx; ret; 
0x000000000041fc7c: and al, 8; pop r12; pop rbx; ret; 
0x000000000041fcde: and al, 8; pop r12; pop rbx; ret; 
0x000000000041fcdd: and al, 8; pop r12; pop rbx; ret; 
0x000000000041ff5d: and al, 8; pop r12; pop rbx; ret; 
0x000000000041ff5c: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420905: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420904: and al, 8; pop r12; pop rbx; ret; 
0x00000000004209d4: and al, 8; pop r12; pop rbx; ret; 
0x00000000004209d3: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420a26: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420a25: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420aa4: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420aa3: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420b40: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420b3f: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420b96: and al, 8; pop r12; pop rbx; ret; 
0x0000000000420b95: and al, 8; pop r12; pop rbx; ret; 
0x000000000042109a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000421099: and al, 8; pop r12; pop rbx; ret; 
0x000000000042118f: and al, 8; pop r12; pop rbx; ret; 
0x000000000042118e: and al, 8; pop r12; pop rbx; ret; 
0x000000000042177b: and al, 8; pop r12; pop rbx; ret; 
0x000000000042177a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000421836: and al, 8; pop r12; pop rbx; ret; 
0x0000000000421835: and al, 8; pop r12; pop rbx; ret; 
0x000000000042198a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000421989: and al, 8; pop r12; pop rbx; ret; 
0x0000000000422333: and al, 8; pop r12; pop rbx; ret; 
0x0000000000422332: and al, 8; pop r12; pop rbx; ret; 
0x0000000000422398: and al, 8; pop r12; pop rbx; ret; 
0x0000000000422397: and al, 8; pop r12; pop rbx; ret; 
0x0000000000423c5a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000423c59: and al, 8; pop r12; pop rbx; ret; 
0x0000000000427792: and al, 8; pop r12; pop rbx; ret; 
0x0000000000427791: and al, 8; pop r12; pop rbx; ret; 
0x000000000042787c: and al, 8; pop r12; pop rbx; ret; 
0x000000000042787b: and al, 8; pop r12; pop rbx; ret; 
0x0000000000427b96: and al, 8; pop r12; pop rbx; ret; 
0x0000000000427b95: and al, 8; pop r12; pop rbx; ret; 
0x000000000042bd55: and al, 8; pop r12; pop rbx; ret; 
0x000000000042bd54: and al, 8; pop r12; pop rbx; ret; 
0x000000000042be3a: and al, 8; pop r12; pop rbx; ret; 
0x000000000042be39: and al, 8; pop r12; pop rbx; ret; 
0x000000000042d5f9: and al, 8; pop r12; pop rbx; ret; 
0x000000000042d5f8: and al, 8; pop r12; pop rbx; ret; 
0x000000000042db14: and al, 8; pop r12; pop rbx; ret; 
0x000000000042db13: and al, 8; pop r12; pop rbx; ret; 
0x000000000042db44: and al, 8; pop r12; pop rbx; ret; 
0x000000000042db43: and al, 8; pop r12; pop rbx; ret; 
0x000000000042f268: and al, 8; pop r12; pop rbx; ret; 
0x000000000042f267: and al, 8; pop r12; pop rbx; ret; 
0x000000000042f29a: and al, 8; pop r12; pop rbx; ret; 
0x000000000042f299: and al, 8; pop r12; pop rbx; ret; 
0x000000000042f2c9: and al, 8; pop r12; pop rbx; ret; 
0x000000000042f2c8: and al, 8; pop r12; pop rbx; ret; 
0x000000000042fc5b: and al, 8; pop r12; pop rbx; ret; 
0x000000000042fc5a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000430ad8: and al, 8; pop r12; pop rbx; ret; 
0x0000000000430ad7: and al, 8; pop r12; pop rbx; ret; 
0x00000000004311c9: and al, 8; pop r12; pop rbx; ret; 
0x00000000004311c8: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431739: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431738: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431769: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431768: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431b79: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431b78: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431ba9: and al, 8; pop r12; pop rbx; ret; 
0x0000000000431ba8: and al, 8; pop r12; pop rbx; ret; 
0x0000000000432029: and al, 8; pop r12; pop rbx; ret; 
0x0000000000432028: and al, 8; pop r12; pop rbx; ret; 
0x0000000000432059: and al, 8; pop r12; pop rbx; ret; 
0x0000000000432058: and al, 8; pop r12; pop rbx; ret; 
0x00000000004338af: and al, 8; pop r12; pop rbx; ret; 
0x00000000004338ae: and al, 8; pop r12; pop rbx; ret; 
0x0000000000433aa4: and al, 8; pop r12; pop rbx; ret; 
0x0000000000433aa3: and al, 8; pop r12; pop rbx; ret; 
0x0000000000433b04: and al, 8; pop r12; pop rbx; ret; 
0x0000000000433b03: and al, 8; pop r12; pop rbx; ret; 
0x0000000000433c09: and al, 8; pop r12; pop rbx; ret; 
0x0000000000433c08: and al, 8; pop r12; pop rbx; ret; 
0x00000000004399e2: and al, 8; pop r12; pop rbx; ret; 
0x00000000004399e1: and al, 8; pop r12; pop rbx; ret; 
0x0000000000439a20: and al, 8; pop r12; pop rbx; ret; 
0x0000000000439a1f: and al, 8; pop r12; pop rbx; ret; 
0x000000000043cf2c: and al, 8; pop r12; pop rbx; ret; 
0x000000000043cf2b: and al, 8; pop r12; pop rbx; ret; 
0x000000000043cfe4: and al, 8; pop r12; pop rbx; ret; 
0x000000000043cfe3: and al, 8; pop r12; pop rbx; ret; 
0x000000000043e6a6: and al, 8; pop r12; pop rbx; ret; 
0x000000000043e6a5: and al, 8; pop r12; pop rbx; ret; 
0x000000000044045c: and al, 8; pop r12; pop rbx; ret; 
0x000000000044045b: and al, 8; pop r12; pop rbx; ret; 
0x0000000000440514: and al, 8; pop r12; pop rbx; ret; 
0x0000000000440513: and al, 8; pop r12; pop rbx; ret; 
0x0000000000441f39: and al, 8; pop r12; pop rbx; ret; 
0x0000000000441f38: and al, 8; pop r12; pop rbx; ret; 
0x0000000000443da5: and al, 8; pop r12; pop rbx; ret; 
0x0000000000443da4: and al, 8; pop r12; pop rbx; ret; 
0x00000000004441f8: and al, 8; pop r12; pop rbx; ret; 
0x00000000004441f7: and al, 8; pop r12; pop rbx; ret; 
0x0000000000444278: and al, 8; pop r12; pop rbx; ret; 
0x0000000000444277: and al, 8; pop r12; pop rbx; ret; 
0x00000000004442c2: and al, 8; pop r12; pop rbx; ret; 
0x00000000004442c1: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447a04: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447a03: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447a56: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447a55: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447b9d: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447b9c: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447e27: and al, 8; pop r12; pop rbx; ret; 
0x0000000000447e26: and al, 8; pop r12; pop rbx; ret; 
0x00000000004480a6: and al, 8; pop r12; pop rbx; ret; 
0x00000000004480a5: and al, 8; pop r12; pop rbx; ret; 
0x000000000044b98d: and al, 8; pop r12; pop rbx; ret; 
0x000000000044b98c: and al, 8; pop r12; pop rbx; ret; 
0x000000000044bab7: and al, 8; pop r12; pop rbx; ret; 
0x000000000044bab6: and al, 8; pop r12; pop rbx; ret; 
0x000000000044bc9e: and al, 8; pop r12; pop rbx; ret; 
0x000000000044bc9d: and al, 8; pop r12; pop rbx; ret; 
0x000000000044bf54: and al, 8; pop r12; pop rbx; ret; 
0x000000000044bf53: and al, 8; pop r12; pop rbx; ret; 
0x000000000044c014: and al, 8; pop r12; pop rbx; ret; 
0x000000000044c013: and al, 8; pop r12; pop rbx; ret; 
0x000000000044d0c4: and al, 8; pop r12; pop rbx; ret; 
0x000000000044d0c3: and al, 8; pop r12; pop rbx; ret; 
0x000000000044dfd6: and al, 8; pop r12; pop rbx; ret; 
0x000000000044dfd5: and al, 8; pop r12; pop rbx; ret; 
0x000000000044f9fe: and al, 8; pop r12; pop rbx; ret; 
0x000000000044f9fd: and al, 8; pop r12; pop rbx; ret; 
0x0000000000450bb8: and al, 8; pop r12; pop rbx; ret; 
0x0000000000450bb7: and al, 8; pop r12; pop rbx; ret; 
0x0000000000453261: and al, 8; pop r12; pop rbx; ret; 
0x0000000000453260: and al, 8; pop r12; pop rbx; ret; 
0x00000000004532a7: and al, 8; pop r12; pop rbx; ret; 
0x00000000004532a6: and al, 8; pop r12; pop rbx; ret; 
0x0000000000453357: and al, 8; pop r12; pop rbx; ret; 
0x0000000000453356: and al, 8; pop r12; pop rbx; ret; 
0x0000000000453fbd: and al, 8; pop r12; pop rbx; ret; 
0x0000000000453fbc: and al, 8; pop r12; pop rbx; ret; 
0x0000000000456bd8: and al, 8; pop r12; pop rbx; ret; 
0x0000000000456bd7: and al, 8; pop r12; pop rbx; ret; 
0x0000000000456c3a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000456c39: and al, 8; pop r12; pop rbx; ret; 
0x0000000000456cde: and al, 8; pop r12; pop rbx; ret; 
0x0000000000456cdd: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458684: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458683: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458733: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458732: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458b06: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458b05: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458c12: and al, 8; pop r12; pop rbx; ret; 
0x0000000000458c11: and al, 8; pop r12; pop rbx; ret; 
0x0000000000459f4f: and al, 8; pop r12; pop rbx; ret; 
0x0000000000459f4e: and al, 8; pop r12; pop rbx; ret; 
0x0000000000459f9a: and al, 8; pop r12; pop rbx; ret; 
0x0000000000459f99: and al, 8; pop r12; pop rbx; ret; 
0x000000000045a044: and al, 8; pop r12; pop rbx; ret; 
0x000000000045a043: and al, 8; pop r12; pop rbx; ret; 
0x000000000045a08a: and al, 8; pop r12; pop rbx; ret; 
0x000000000045a089: and al, 8; pop r12; pop rbx; ret; 
0x000000000045bde1: and al, 8; pop r12; pop rbx; ret; 
0x000000000045bde0: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c176: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c175: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c1cc: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c1cb: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c206: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c205: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c246: and al, 8; pop r12; pop rbx; ret; 
0x000000000045c245: and al, 8; pop r12; pop rbx; ret; 
0x0000000000402da9: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000402da8: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b1d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b1c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f5: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f4: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040723e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040723d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004073c9: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004073c8: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407449: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407448: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c520: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c51f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c618: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c617: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb32: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb31: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a5: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a4: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d701: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d700: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040da6c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040da6b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f75f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f75e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc2b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc2a: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412db8: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412db7: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413852: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413851: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041392e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041392d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f3e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f3d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a17b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a17a: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a20f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a20e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1ab: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1aa: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e154: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e153: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f39c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f39b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5f7: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5f6: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000420630: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042062f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042076f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042076e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042132c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042132b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042157c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042157b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d04: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d03: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b21: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b20: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042772f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042772e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042821c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042821b: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5a8: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5a7: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043123a: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000431239: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea6: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea5: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f16: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f15: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043d15d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043d15c: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000440690: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044068f: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004439ad: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004439ac: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e3e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e3d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000446001: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000446000: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b41: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b40: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c16: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c15: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f05: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f04: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f85: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f84: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044be65: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044be64: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453efe: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453efd: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f4e: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f4d: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004599ff: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004599fe: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e5: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e4: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c742: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c741: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7c0: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7bf: and al, 8; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004029df: and al, 8; ret; 
0x00000000004029de: and al, 8; ret; 
0x0000000000402a1a: and al, 8; ret; 
0x0000000000402a19: and al, 8; ret; 
0x0000000000402a65: and al, 8; ret; 
0x0000000000402a64: and al, 8; ret; 
0x0000000000402a94: and al, 8; ret; 
0x0000000000402a93: and al, 8; ret; 
0x0000000000402ab5: and al, 8; ret; 
0x0000000000402ab4: and al, 8; ret; 
0x0000000000402ade: and al, 8; ret; 
0x0000000000402add: and al, 8; ret; 
0x0000000000402b0b: and al, 8; ret; 
0x0000000000402b0a: and al, 8; ret; 
0x0000000000402b2e: and al, 8; ret; 
0x0000000000402b2d: and al, 8; ret; 
0x0000000000402b55: and al, 8; ret; 
0x0000000000402b54: and al, 8; ret; 
0x0000000000402b78: and al, 8; ret; 
0x0000000000402b77: and al, 8; ret; 
0x0000000000402b98: and al, 8; ret; 
0x0000000000402b97: and al, 8; ret; 
0x0000000000402bb5: and al, 8; ret; 
0x0000000000402bb4: and al, 8; ret; 
0x0000000000402bd8: and al, 8; ret; 
0x0000000000402bd7: and al, 8; ret; 
0x0000000000402bf5: and al, 8; ret; 
0x0000000000402bf4: and al, 8; ret; 
0x0000000000402dd5: and al, 8; ret; 
0x0000000000402dd4: and al, 8; ret; 
0x0000000000402e29: and al, 8; ret; 
0x0000000000402e28: and al, 8; ret; 
0x0000000000402e48: and al, 8; ret; 
0x0000000000402e47: and al, 8; ret; 
0x0000000000402e68: and al, 8; ret; 
0x0000000000402e67: and al, 8; ret; 
0x0000000000402e82: and al, 8; ret; 
0x0000000000402e81: and al, 8; ret; 
0x0000000000402eb1: and al, 8; ret; 
0x0000000000402eb0: and al, 8; ret; 
0x0000000000402ed8: and al, 8; ret; 
0x0000000000402ed7: and al, 8; ret; 
0x0000000000402ef5: and al, 8; ret; 
0x0000000000402ef4: and al, 8; ret; 
0x0000000000402f18: and al, 8; ret; 
0x0000000000402f17: and al, 8; ret; 
0x0000000000402f45: and al, 8; ret; 
0x0000000000402f44: and al, 8; ret; 
0x0000000000402f68: and al, 8; ret; 
0x0000000000402f67: and al, 8; ret; 
0x0000000000402f8b: and al, 8; ret; 
0x0000000000402f8a: and al, 8; ret; 
0x0000000000402fae: and al, 8; ret; 
0x0000000000402fad: and al, 8; ret; 
0x0000000000402fd2: and al, 8; ret; 
0x0000000000402fd1: and al, 8; ret; 
0x0000000000402ffb: and al, 8; ret; 
0x0000000000402ffa: and al, 8; ret; 
0x0000000000403024: and al, 8; ret; 
0x0000000000403023: and al, 8; ret; 
0x0000000000403048: and al, 8; ret; 
0x0000000000403047: and al, 8; ret; 
0x0000000000403068: and al, 8; ret; 
0x0000000000403067: and al, 8; ret; 
0x0000000000403088: and al, 8; ret; 
0x0000000000403087: and al, 8; ret; 
0x00000000004030a8: and al, 8; ret; 
0x00000000004030a7: and al, 8; ret; 
0x00000000004030c8: and al, 8; ret; 
0x00000000004030c7: and al, 8; ret; 
0x00000000004033a6: and al, 8; ret; 
0x00000000004033a5: and al, 8; ret; 
0x0000000000403453: and al, 8; ret; 
0x0000000000403452: and al, 8; ret; 
0x0000000000403473: and al, 8; ret; 
0x0000000000403472: and al, 8; ret; 
0x0000000000403493: and al, 8; ret; 
0x0000000000403492: and al, 8; ret; 
0x00000000004034b3: and al, 8; ret; 
0x00000000004034b2: and al, 8; ret; 
0x00000000004034cd: and al, 8; ret; 
0x00000000004034cc: and al, 8; ret; 
0x00000000004034df: and al, 8; ret; 
0x00000000004034de: and al, 8; ret; 
0x0000000000403503: and al, 8; ret; 
0x0000000000403502: and al, 8; ret; 
0x0000000000403542: and al, 8; ret; 
0x0000000000403541: and al, 8; ret; 
0x000000000040421b: and al, 8; ret; 
0x000000000040421a: and al, 8; ret; 
0x0000000000404532: and al, 8; ret; 
0x0000000000404531: and al, 8; ret; 
0x00000000004048bd: and al, 8; ret; 
0x00000000004048bc: and al, 8; ret; 
0x00000000004048cd: and al, 8; ret; 
0x00000000004048cc: and al, 8; ret; 
0x00000000004048dd: and al, 8; ret; 
0x00000000004048dc: and al, 8; ret; 
0x00000000004048ed: and al, 8; ret; 
0x00000000004048ec: and al, 8; ret; 
0x000000000040499d: and al, 8; ret; 
0x000000000040499c: and al, 8; ret; 
0x00000000004049ad: and al, 8; ret; 
0x00000000004049ac: and al, 8; ret; 
0x00000000004049bd: and al, 8; ret; 
0x00000000004049bc: and al, 8; ret; 
0x00000000004049cd: and al, 8; ret; 
0x00000000004049cc: and al, 8; ret; 
0x0000000000404ec1: and al, 8; ret; 
0x0000000000404ec0: and al, 8; ret; 
0x0000000000404f7d: and al, 8; ret; 
0x0000000000404f7c: and al, 8; ret; 
0x0000000000404f8d: and al, 8; ret; 
0x0000000000404f8c: and al, 8; ret; 
0x000000000040508c: and al, 8; ret; 
0x000000000040508b: and al, 8; ret; 
0x0000000000405191: and al, 8; ret; 
0x0000000000405190: and al, 8; ret; 
0x00000000004051c0: and al, 8; ret; 
0x00000000004051bf: and al, 8; ret; 
0x0000000000407027: and al, 8; ret; 
0x0000000000407026: and al, 8; ret; 
0x00000000004070a7: and al, 8; ret; 
0x00000000004070a6: and al, 8; ret; 
0x00000000004075f3: and al, 8; ret; 
0x00000000004075f2: and al, 8; ret; 
0x0000000000407613: and al, 8; ret; 
0x0000000000407612: and al, 8; ret; 
0x0000000000407633: and al, 8; ret; 
0x0000000000407632: and al, 8; ret; 
0x0000000000407692: and al, 8; ret; 
0x0000000000407691: and al, 8; ret; 
0x0000000000407b64: and al, 8; ret; 
0x0000000000407b63: and al, 8; ret; 
0x0000000000408753: and al, 8; ret; 
0x0000000000408752: and al, 8; ret; 
0x00000000004087bb: and al, 8; ret; 
0x00000000004087ba: and al, 8; ret; 
0x00000000004087e2: and al, 8; ret; 
0x00000000004087e1: and al, 8; ret; 
0x000000000040917f: and al, 8; ret; 
0x000000000040917e: and al, 8; ret; 
0x0000000000409297: and al, 8; ret; 
0x0000000000409296: and al, 8; ret; 
0x000000000040948a: and al, 8; ret; 
0x0000000000409489: and al, 8; ret; 
0x0000000000409e22: and al, 8; ret; 
0x0000000000409e21: and al, 8; ret; 
0x0000000000409e50: and al, 8; ret; 
0x0000000000409e4f: and al, 8; ret; 
0x0000000000409ec5: and al, 8; ret; 
0x0000000000409ec4: and al, 8; ret; 
0x000000000040a1ab: and al, 8; ret; 
0x000000000040a1aa: and al, 8; ret; 
0x000000000040b050: and al, 8; ret; 
0x000000000040b04f: and al, 8; ret; 
0x000000000040b7f1: and al, 8; ret; 
0x000000000040b7f0: and al, 8; ret; 
0x000000000040b8d3: and al, 8; ret; 
0x000000000040b8d2: and al, 8; ret; 
0x000000000040b9a2: and al, 8; ret; 
0x000000000040b9a1: and al, 8; ret; 
0x000000000040b9cf: and al, 8; ret; 
0x000000000040b9ce: and al, 8; ret; 
0x000000000040ba08: and al, 8; ret; 
0x000000000040ba07: and al, 8; ret; 
0x000000000040ba6e: and al, 8; ret; 
0x000000000040ba6d: and al, 8; ret; 
0x000000000040bae0: and al, 8; ret; 
0x000000000040badf: and al, 8; ret; 
0x000000000040d9cc: and al, 8; ret; 
0x000000000040d9cb: and al, 8; ret; 
0x000000000040dadd: and al, 8; ret; 
0x000000000040dadc: and al, 8; ret; 
0x000000000040dd00: and al, 8; ret; 
0x000000000040dcff: and al, 8; ret; 
0x000000000040e521: and al, 8; ret; 
0x000000000040e520: and al, 8; ret; 
0x000000000040e701: and al, 8; ret; 
0x000000000040e700: and al, 8; ret; 
0x000000000040f12d: and al, 8; ret; 
0x000000000040f12c: and al, 8; ret; 
0x000000000040feb5: and al, 8; ret; 
0x000000000040feb4: and al, 8; ret; 
0x000000000040ffa5: and al, 8; ret; 
0x000000000040ffa4: and al, 8; ret; 
0x00000000004115b0: and al, 8; ret; 
0x00000000004115af: and al, 8; ret; 
0x00000000004115cd: and al, 8; ret; 
0x00000000004115cc: and al, 8; ret; 
0x00000000004115e0: and al, 8; ret; 
0x00000000004115df: and al, 8; ret; 
0x00000000004115fd: and al, 8; ret; 
0x00000000004115fc: and al, 8; ret; 
0x0000000000411740: and al, 8; ret; 
0x000000000041173f: and al, 8; ret; 
0x00000000004117cd: and al, 8; ret; 
0x00000000004117cc: and al, 8; ret; 
0x0000000000412f0d: and al, 8; ret; 
0x0000000000412f0c: and al, 8; ret; 
0x0000000000412f51: and al, 8; ret; 
0x0000000000412f50: and al, 8; ret; 
0x0000000000412f8a: and al, 8; ret; 
0x0000000000412f89: and al, 8; ret; 
0x0000000000413019: and al, 8; ret; 
0x0000000000413018: and al, 8; ret; 
0x00000000004131e0: and al, 8; ret; 
0x00000000004131df: and al, 8; ret; 
0x0000000000413381: and al, 8; ret; 
0x0000000000413380: and al, 8; ret; 
0x0000000000413553: and al, 8; ret; 
0x0000000000413552: and al, 8; ret; 
0x000000000041373e: and al, 8; ret; 
0x000000000041373d: and al, 8; ret; 
0x0000000000413bbc: and al, 8; ret; 
0x0000000000413bbb: and al, 8; ret; 
0x0000000000413bd7: and al, 8; ret; 
0x0000000000413bd6: and al, 8; ret; 
0x000000000041433d: and al, 8; ret; 
0x000000000041433c: and al, 8; ret; 
0x00000000004146e7: and al, 8; ret; 
0x00000000004146e6: and al, 8; ret; 
0x0000000000414701: and al, 8; ret; 
0x0000000000414700: and al, 8; ret; 
0x00000000004147d4: and al, 8; ret; 
0x00000000004147d3: and al, 8; ret; 
0x00000000004147fb: and al, 8; ret; 
0x00000000004147fa: and al, 8; ret; 
0x0000000000414819: and al, 8; ret; 
0x0000000000414818: and al, 8; ret; 
0x0000000000414988: and al, 8; ret; 
0x0000000000414987: and al, 8; ret; 
0x00000000004149a9: and al, 8; ret; 
0x00000000004149a8: and al, 8; ret; 
0x00000000004149c9: and al, 8; ret; 
0x00000000004149c8: and al, 8; ret; 
0x00000000004149e7: and al, 8; ret; 
0x00000000004149e6: and al, 8; ret; 
0x0000000000414a17: and al, 8; ret; 
0x0000000000414a16: and al, 8; ret; 
0x0000000000414a4b: and al, 8; ret; 
0x0000000000414a4a: and al, 8; ret; 
0x0000000000414ae6: and al, 8; ret; 
0x0000000000414ae5: and al, 8; ret; 
0x0000000000414ce6: and al, 8; ret; 
0x0000000000414ce5: and al, 8; ret; 
0x00000000004150e6: and al, 8; ret; 
0x00000000004150e5: and al, 8; ret; 
0x0000000000415105: and al, 8; ret; 
0x0000000000415104: and al, 8; ret; 
0x000000000041512a: and al, 8; ret; 
0x0000000000415129: and al, 8; ret; 
0x00000000004151c4: and al, 8; ret; 
0x00000000004151c3: and al, 8; ret; 
0x00000000004151f4: and al, 8; ret; 
0x00000000004151f3: and al, 8; ret; 
0x0000000000415224: and al, 8; ret; 
0x0000000000415223: and al, 8; ret; 
0x0000000000415254: and al, 8; ret; 
0x0000000000415253: and al, 8; ret; 
0x000000000041528c: and al, 8; ret; 
0x000000000041528b: and al, 8; ret; 
0x000000000041542d: and al, 8; ret; 
0x000000000041542c: and al, 8; ret; 
0x000000000041546e: and al, 8; ret; 
0x000000000041546d: and al, 8; ret; 
0x000000000041548e: and al, 8; ret; 
0x000000000041548d: and al, 8; ret; 
0x00000000004154ae: and al, 8; ret; 
0x00000000004154ad: and al, 8; ret; 
0x00000000004154ce: and al, 8; ret; 
0x00000000004154cd: and al, 8; ret; 
0x00000000004154ee: and al, 8; ret; 
0x00000000004154ed: and al, 8; ret; 
0x000000000041550e: and al, 8; ret; 
0x000000000041550d: and al, 8; ret; 
0x000000000041553f: and al, 8; ret; 
0x000000000041553e: and al, 8; ret; 
0x000000000041556d: and al, 8; ret; 
0x000000000041556c: and al, 8; ret; 
0x000000000041558f: and al, 8; ret; 
0x000000000041558e: and al, 8; ret; 
0x00000000004155bc: and al, 8; ret; 
0x00000000004155bb: and al, 8; ret; 
0x00000000004155d3: and al, 8; ret; 
0x00000000004155d2: and al, 8; ret; 
0x00000000004155f3: and al, 8; ret; 
0x00000000004155f2: and al, 8; ret; 
0x000000000041560e: and al, 8; ret; 
0x000000000041560d: and al, 8; ret; 
0x000000000041562e: and al, 8; ret; 
0x000000000041562d: and al, 8; ret; 
0x000000000041564e: and al, 8; ret; 
0x000000000041564d: and al, 8; ret; 
0x000000000041567b: and al, 8; ret; 
0x000000000041567a: and al, 8; ret; 
0x000000000041569a: and al, 8; ret; 
0x0000000000415699: and al, 8; ret; 
0x000000000041576e: and al, 8; ret; 
0x000000000041576d: and al, 8; ret; 
0x000000000041578e: and al, 8; ret; 
0x000000000041578d: and al, 8; ret; 
0x00000000004157ae: and al, 8; ret; 
0x00000000004157ad: and al, 8; ret; 
0x00000000004159cc: and al, 8; ret; 
0x00000000004159cb: and al, 8; ret; 
0x00000000004159de: and al, 8; ret; 
0x00000000004159dd: and al, 8; ret; 
0x0000000000415a03: and al, 8; ret; 
0x0000000000415a02: and al, 8; ret; 
0x0000000000415a23: and al, 8; ret; 
0x0000000000415a22: and al, 8; ret; 
0x0000000000415a41: and al, 8; ret; 
0x0000000000415a40: and al, 8; ret; 
0x0000000000415a63: and al, 8; ret; 
0x0000000000415a62: and al, 8; ret; 
0x0000000000415a81: and al, 8; ret; 
0x0000000000415a80: and al, 8; ret; 
0x0000000000415a9e: and al, 8; ret; 
0x0000000000415a9d: and al, 8; ret; 
0x0000000000415abe: and al, 8; ret; 
0x0000000000415abd: and al, 8; ret; 
0x0000000000415ade: and al, 8; ret; 
0x0000000000415add: and al, 8; ret; 
0x0000000000415afe: and al, 8; ret; 
0x0000000000415afd: and al, 8; ret; 
0x0000000000415b1e: and al, 8; ret; 
0x0000000000415b1d: and al, 8; ret; 
0x0000000000415b4d: and al, 8; ret; 
0x0000000000415b4c: and al, 8; ret; 
0x0000000000415b6a: and al, 8; ret; 
0x0000000000415b69: and al, 8; ret; 
0x0000000000415c3e: and al, 8; ret; 
0x0000000000415c3d: and al, 8; ret; 
0x0000000000415c5e: and al, 8; ret; 
0x0000000000415c5d: and al, 8; ret; 
0x0000000000415c7e: and al, 8; ret; 
0x0000000000415c7d: and al, 8; ret; 
0x0000000000415d26: and al, 8; ret; 
0x0000000000415d25: and al, 8; ret; 
0x0000000000415d46: and al, 8; ret; 
0x0000000000415d45: and al, 8; ret; 
0x0000000000415d84: and al, 8; ret; 
0x0000000000415d83: and al, 8; ret; 
0x0000000000415da6: and al, 8; ret; 
0x0000000000415da5: and al, 8; ret; 
0x0000000000415dc4: and al, 8; ret; 
0x0000000000415dc3: and al, 8; ret; 
0x0000000000415dde: and al, 8; ret; 
0x0000000000415ddd: and al, 8; ret; 
0x0000000000415dfe: and al, 8; ret; 
0x0000000000415dfd: and al, 8; ret; 
0x0000000000415e1e: and al, 8; ret; 
0x0000000000415e1d: and al, 8; ret; 
0x00000000004160c3: and al, 8; ret; 
0x00000000004160c2: and al, 8; ret; 
0x00000000004160e3: and al, 8; ret; 
0x00000000004160e2: and al, 8; ret; 
0x0000000000416103: and al, 8; ret; 
0x0000000000416102: and al, 8; ret; 
0x0000000000416123: and al, 8; ret; 
0x0000000000416122: and al, 8; ret; 
0x0000000000416143: and al, 8; ret; 
0x0000000000416142: and al, 8; ret; 
0x000000000041615e: and al, 8; ret; 
0x000000000041615d: and al, 8; ret; 
0x000000000041623e: and al, 8; ret; 
0x000000000041623d: and al, 8; ret; 
0x0000000000416263: and al, 8; ret; 
0x0000000000416262: and al, 8; ret; 
0x0000000000416281: and al, 8; ret; 
0x0000000000416280: and al, 8; ret; 
0x00000000004162a3: and al, 8; ret; 
0x00000000004162a2: and al, 8; ret; 
0x00000000004162c1: and al, 8; ret; 
0x00000000004162c0: and al, 8; ret; 
0x00000000004162de: and al, 8; ret; 
0x00000000004162dd: and al, 8; ret; 
0x00000000004162fe: and al, 8; ret; 
0x00000000004162fd: and al, 8; ret; 
0x000000000041631e: and al, 8; ret; 
0x000000000041631d: and al, 8; ret; 
0x000000000041633e: and al, 8; ret; 
0x000000000041633d: and al, 8; ret; 
0x000000000041635e: and al, 8; ret; 
0x000000000041635d: and al, 8; ret; 
0x000000000041638d: and al, 8; ret; 
0x000000000041638c: and al, 8; ret; 
0x00000000004163aa: and al, 8; ret; 
0x00000000004163a9: and al, 8; ret; 
0x000000000041647e: and al, 8; ret; 
0x000000000041647d: and al, 8; ret; 
0x000000000041649e: and al, 8; ret; 
0x000000000041649d: and al, 8; ret; 
0x00000000004164be: and al, 8; ret; 
0x00000000004164bd: and al, 8; ret; 
0x00000000004164e6: and al, 8; ret; 
0x00000000004164e5: and al, 8; ret; 
0x0000000000416506: and al, 8; ret; 
0x0000000000416505: and al, 8; ret; 
0x0000000000416544: and al, 8; ret; 
0x0000000000416543: and al, 8; ret; 
0x0000000000416566: and al, 8; ret; 
0x0000000000416565: and al, 8; ret; 
0x0000000000416584: and al, 8; ret; 
0x0000000000416583: and al, 8; ret; 
0x000000000041659e: and al, 8; ret; 
0x000000000041659d: and al, 8; ret; 
0x00000000004165be: and al, 8; ret; 
0x00000000004165bd: and al, 8; ret; 
0x00000000004165ef: and al, 8; ret; 
0x00000000004165ee: and al, 8; ret; 
0x000000000041661d: and al, 8; ret; 
0x000000000041661c: and al, 8; ret; 
0x000000000041663f: and al, 8; ret; 
0x000000000041663e: and al, 8; ret; 
0x000000000041666d: and al, 8; ret; 
0x000000000041666c: and al, 8; ret; 
0x000000000041668b: and al, 8; ret; 
0x000000000041668a: and al, 8; ret; 
0x00000000004166ac: and al, 8; ret; 
0x00000000004166ab: and al, 8; ret; 
0x00000000004166c3: and al, 8; ret; 
0x00000000004166c2: and al, 8; ret; 
0x00000000004166e3: and al, 8; ret; 
0x00000000004166e2: and al, 8; ret; 
0x00000000004166fe: and al, 8; ret; 
0x00000000004166fd: and al, 8; ret; 
0x000000000041672b: and al, 8; ret; 
0x000000000041672a: and al, 8; ret; 
0x000000000041674a: and al, 8; ret; 
0x0000000000416749: and al, 8; ret; 
0x000000000041682e: and al, 8; ret; 
0x000000000041682d: and al, 8; ret; 
0x000000000041684e: and al, 8; ret; 
0x000000000041684d: and al, 8; ret; 
0x000000000041686e: and al, 8; ret; 
0x000000000041686d: and al, 8; ret; 
0x000000000041698c: and al, 8; ret; 
0x000000000041698b: and al, 8; ret; 
0x000000000041699e: and al, 8; ret; 
0x000000000041699d: and al, 8; ret; 
0x00000000004169cc: and al, 8; ret; 
0x00000000004169cb: and al, 8; ret; 
0x000000000041766d: and al, 8; ret; 
0x000000000041766c: and al, 8; ret; 
0x00000000004177fd: and al, 8; ret; 
0x00000000004177fc: and al, 8; ret; 
0x000000000041780d: and al, 8; ret; 
0x000000000041780c: and al, 8; ret; 
0x0000000000417def: and al, 8; ret; 
0x0000000000417dee: and al, 8; ret; 
0x0000000000417e32: and al, 8; ret; 
0x0000000000417e31: and al, 8; ret; 
0x0000000000417f81: and al, 8; ret; 
0x0000000000417f80: and al, 8; ret; 
0x0000000000418154: and al, 8; ret; 
0x0000000000418153: and al, 8; ret; 
0x0000000000418352: and al, 8; ret; 
0x0000000000418351: and al, 8; ret; 
0x000000000041836d: and al, 8; ret; 
0x000000000041836c: and al, 8; ret; 
0x000000000041839e: and al, 8; ret; 
0x000000000041839d: and al, 8; ret; 
0x00000000004185ab: and al, 8; ret; 
0x00000000004185aa: and al, 8; ret; 
0x000000000041864f: and al, 8; ret; 
0x000000000041864e: and al, 8; ret; 
0x000000000041866f: and al, 8; ret; 
0x000000000041866e: and al, 8; ret; 
0x00000000004186a1: and al, 8; ret; 
0x00000000004186a0: and al, 8; ret; 
0x0000000000418aef: and al, 8; ret; 
0x0000000000418aee: and al, 8; ret; 
0x000000000041901d: and al, 8; ret; 
0x000000000041901c: and al, 8; ret; 
0x00000000004190ad: and al, 8; ret; 
0x00000000004190ac: and al, 8; ret; 
0x00000000004190be: and al, 8; ret; 
0x00000000004190bd: and al, 8; ret; 
0x00000000004190dd: and al, 8; ret; 
0x00000000004190dc: and al, 8; ret; 
0x00000000004190ee: and al, 8; ret; 
0x00000000004190ed: and al, 8; ret; 
0x000000000041910e: and al, 8; ret; 
0x000000000041910d: and al, 8; ret; 
0x000000000041912e: and al, 8; ret; 
0x000000000041912d: and al, 8; ret; 
0x000000000041914e: and al, 8; ret; 
0x000000000041914d: and al, 8; ret; 
0x000000000041916d: and al, 8; ret; 
0x000000000041916c: and al, 8; ret; 
0x000000000041917e: and al, 8; ret; 
0x000000000041917d: and al, 8; ret; 
0x000000000041919d: and al, 8; ret; 
0x000000000041919c: and al, 8; ret; 
0x00000000004191ae: and al, 8; ret; 
0x00000000004191ad: and al, 8; ret; 
0x00000000004191ce: and al, 8; ret; 
0x00000000004191cd: and al, 8; ret; 
0x00000000004191f4: and al, 8; ret; 
0x00000000004191f3: and al, 8; ret; 
0x000000000041920e: and al, 8; ret; 
0x000000000041920d: and al, 8; ret; 
0x000000000041922e: and al, 8; ret; 
0x000000000041922d: and al, 8; ret; 
0x0000000000419591: and al, 8; ret; 
0x0000000000419590: and al, 8; ret; 
0x000000000041a743: and al, 8; ret; 
0x000000000041a742: and al, 8; ret; 
0x000000000041aa4e: and al, 8; ret; 
0x000000000041aa4d: and al, 8; ret; 
0x000000000041aa7f: and al, 8; ret; 
0x000000000041aa7e: and al, 8; ret; 
0x000000000041aab0: and al, 8; ret; 
0x000000000041aaaf: and al, 8; ret; 
0x000000000041aae0: and al, 8; ret; 
0x000000000041aadf: and al, 8; ret; 
0x000000000041ab11: and al, 8; ret; 
0x000000000041ab10: and al, 8; ret; 
0x000000000041ab2f: and al, 8; ret; 
0x000000000041ab2e: and al, 8; ret; 
0x000000000041ab4e: and al, 8; ret; 
0x000000000041ab4d: and al, 8; ret; 
0x000000000041ab6d: and al, 8; ret; 
0x000000000041ab6c: and al, 8; ret; 
0x000000000041ab7e: and al, 8; ret; 
0x000000000041ab7d: and al, 8; ret; 
0x000000000041ab9e: and al, 8; ret; 
0x000000000041ab9d: and al, 8; ret; 
0x000000000041abbe: and al, 8; ret; 
0x000000000041abbd: and al, 8; ret; 
0x000000000041abde: and al, 8; ret; 
0x000000000041abdd: and al, 8; ret; 
0x000000000041abfe: and al, 8; ret; 
0x000000000041abfd: and al, 8; ret; 
0x000000000041ac1e: and al, 8; ret; 
0x000000000041ac1d: and al, 8; ret; 
0x000000000041ac3e: and al, 8; ret; 
0x000000000041ac3d: and al, 8; ret; 
0x000000000041ac5e: and al, 8; ret; 
0x000000000041ac5d: and al, 8; ret; 
0x000000000041ac7e: and al, 8; ret; 
0x000000000041ac7d: and al, 8; ret; 
0x000000000041ac9e: and al, 8; ret; 
0x000000000041ac9d: and al, 8; ret; 
0x000000000041acbe: and al, 8; ret; 
0x000000000041acbd: and al, 8; ret; 
0x000000000041acde: and al, 8; ret; 
0x000000000041acdd: and al, 8; ret; 
0x000000000041acfe: and al, 8; ret; 
0x000000000041acfd: and al, 8; ret; 
0x000000000041ad1e: and al, 8; ret; 
0x000000000041ad1d: and al, 8; ret; 
0x000000000041ad3e: and al, 8; ret; 
0x000000000041ad3d: and al, 8; ret; 
0x000000000041ad5e: and al, 8; ret; 
0x000000000041ad5d: and al, 8; ret; 
0x000000000041ad7e: and al, 8; ret; 
0x000000000041ad7d: and al, 8; ret; 
0x000000000041ae3e: and al, 8; ret; 
0x000000000041ae3d: and al, 8; ret; 
0x000000000041ae5e: and al, 8; ret; 
0x000000000041ae5d: and al, 8; ret; 
0x000000000041ae7e: and al, 8; ret; 
0x000000000041ae7d: and al, 8; ret; 
0x000000000041ae9e: and al, 8; ret; 
0x000000000041ae9d: and al, 8; ret; 
0x000000000041aebe: and al, 8; ret; 
0x000000000041aebd: and al, 8; ret; 
0x000000000041aede: and al, 8; ret; 
0x000000000041aedd: and al, 8; ret; 
0x000000000041aefe: and al, 8; ret; 
0x000000000041aefd: and al, 8; ret; 
0x000000000041af1e: and al, 8; ret; 
0x000000000041af1d: and al, 8; ret; 
0x000000000041af3e: and al, 8; ret; 
0x000000000041af3d: and al, 8; ret; 
0x000000000041af5e: and al, 8; ret; 
0x000000000041af5d: and al, 8; ret; 
0x000000000041af7e: and al, 8; ret; 
0x000000000041af7d: and al, 8; ret; 
0x000000000041b080: and al, 8; ret; 
0x000000000041b07f: and al, 8; ret; 
0x000000000041b0a4: and al, 8; ret; 
0x000000000041b0a3: and al, 8; ret; 
0x000000000041b0bf: and al, 8; ret; 
0x000000000041b0be: and al, 8; ret; 
0x000000000041b0e2: and al, 8; ret; 
0x000000000041b0e1: and al, 8; ret; 
0x000000000041b102: and al, 8; ret; 
0x000000000041b101: and al, 8; ret; 
0x000000000041b11f: and al, 8; ret; 
0x000000000041b11e: and al, 8; ret; 
0x000000000041b142: and al, 8; ret; 
0x000000000041b141: and al, 8; ret; 
0x000000000041b17a: and al, 8; ret; 
0x000000000041b179: and al, 8; ret; 
0x000000000041b190: and al, 8; ret; 
0x000000000041b18f: and al, 8; ret; 
0x000000000041b1b0: and al, 8; ret; 
0x000000000041b1af: and al, 8; ret; 
0x000000000041b1e5: and al, 8; ret; 
0x000000000041b1e4: and al, 8; ret; 
0x000000000041b21a: and al, 8; ret; 
0x000000000041b219: and al, 8; ret; 
0x000000000041b230: and al, 8; ret; 
0x000000000041b22f: and al, 8; ret; 
0x000000000041b24f: and al, 8; ret; 
0x000000000041b24e: and al, 8; ret; 
0x000000000041b287: and al, 8; ret; 
0x000000000041b286: and al, 8; ret; 
0x000000000041b2b5: and al, 8; ret; 
0x000000000041b2b4: and al, 8; ret; 
0x000000000041b2ea: and al, 8; ret; 
0x000000000041b2e9: and al, 8; ret; 
0x000000000041b317: and al, 8; ret; 
0x000000000041b316: and al, 8; ret; 
0x000000000041b345: and al, 8; ret; 
0x000000000041b344: and al, 8; ret; 
0x000000000041b375: and al, 8; ret; 
0x000000000041b374: and al, 8; ret; 
0x000000000041b394: and al, 8; ret; 
0x000000000041b393: and al, 8; ret; 
0x000000000041b3db: and al, 8; ret; 
0x000000000041b3da: and al, 8; ret; 
0x000000000041b59e: and al, 8; ret; 
0x000000000041b59d: and al, 8; ret; 
0x000000000041b5be: and al, 8; ret; 
0x000000000041b5bd: and al, 8; ret; 
0x000000000041b5dd: and al, 8; ret; 
0x000000000041b5dc: and al, 8; ret; 
0x000000000041b66e: and al, 8; ret; 
0x000000000041b66d: and al, 8; ret; 
0x000000000041b69c: and al, 8; ret; 
0x000000000041b69b: and al, 8; ret; 
0x000000000041b6ae: and al, 8; ret; 
0x000000000041b6ad: and al, 8; ret; 
0x000000000041b6ce: and al, 8; ret; 
0x000000000041b6cd: and al, 8; ret; 
0x000000000041b6ed: and al, 8; ret; 
0x000000000041b6ec: and al, 8; ret; 
0x000000000041b6fd: and al, 8; ret; 
0x000000000041b6fc: and al, 8; ret; 
0x000000000041b850: and al, 8; ret; 
0x000000000041b84f: and al, 8; ret; 
0x000000000041b86d: and al, 8; ret; 
0x000000000041b86c: and al, 8; ret; 
0x000000000041b87d: and al, 8; ret; 
0x000000000041b87c: and al, 8; ret; 
0x000000000041b88d: and al, 8; ret; 
0x000000000041b88c: and al, 8; ret; 
0x000000000041b89d: and al, 8; ret; 
0x000000000041b89c: and al, 8; ret; 
0x000000000041b8b0: and al, 8; ret; 
0x000000000041b8af: and al, 8; ret; 
0x000000000041b8cd: and al, 8; ret; 
0x000000000041b8cc: and al, 8; ret; 
0x000000000041b8e4: and al, 8; ret; 
0x000000000041b8e3: and al, 8; ret; 
0x000000000041b8fd: and al, 8; ret; 
0x000000000041b8fc: and al, 8; ret; 
0x000000000041bce4: and al, 8; ret; 
0x000000000041bce3: and al, 8; ret; 
0x000000000041bd34: and al, 8; ret; 
0x000000000041bd33: and al, 8; ret; 
0x000000000041bef7: and al, 8; ret; 
0x000000000041bef6: and al, 8; ret; 
0x000000000041d2f7: and al, 8; ret; 
0x000000000041d2f6: and al, 8; ret; 
0x000000000041d477: and al, 8; ret; 
0x000000000041d476: and al, 8; ret; 
0x000000000041d5e7: and al, 8; ret; 
0x000000000041d5e6: and al, 8; ret; 
0x000000000041d777: and al, 8; ret; 
0x000000000041d776: and al, 8; ret; 
0x000000000041d83f: and al, 8; ret; 
0x000000000041d83e: and al, 8; ret; 
0x000000000041d87f: and al, 8; ret; 
0x000000000041d87e: and al, 8; ret; 
0x000000000041dae8: and al, 8; ret; 
0x000000000041dae7: and al, 8; ret; 
0x000000000041f628: and al, 8; ret; 
0x000000000041f627: and al, 8; ret; 
0x0000000000420870: and al, 8; ret; 
0x000000000042086f: and al, 8; ret; 
0x0000000000420a46: and al, 8; ret; 
0x0000000000420a45: and al, 8; ret; 
0x0000000000420ad0: and al, 8; ret; 
0x0000000000420acf: and al, 8; ret; 
0x0000000000421fcd: and al, 8; ret; 
0x0000000000421fcc: and al, 8; ret; 
0x0000000000421fdd: and al, 8; ret; 
0x0000000000421fdc: and al, 8; ret; 
0x0000000000421fed: and al, 8; ret; 
0x0000000000421fec: and al, 8; ret; 
0x0000000000421ffd: and al, 8; ret; 
0x0000000000421ffc: and al, 8; ret; 
0x0000000000422013: and al, 8; ret; 
0x0000000000422012: and al, 8; ret; 
0x000000000042202d: and al, 8; ret; 
0x000000000042202c: and al, 8; ret; 
0x000000000042203d: and al, 8; ret; 
0x000000000042203c: and al, 8; ret; 
0x00000000004237e3: and al, 8; ret; 
0x00000000004237e2: and al, 8; ret; 
0x0000000000423845: and al, 8; ret; 
0x0000000000423844: and al, 8; ret; 
0x000000000042387b: and al, 8; ret; 
0x000000000042387a: and al, 8; ret; 
0x0000000000423899: and al, 8; ret; 
0x0000000000423898: and al, 8; ret; 
0x00000000004238bf: and al, 8; ret; 
0x00000000004238be: and al, 8; ret; 
0x00000000004238e9: and al, 8; ret; 
0x00000000004238e8: and al, 8; ret; 
0x000000000042390f: and al, 8; ret; 
0x000000000042390e: and al, 8; ret; 
0x0000000000423a0e: and al, 8; ret; 
0x0000000000423a0d: and al, 8; ret; 
0x0000000000423a2e: and al, 8; ret; 
0x0000000000423a2d: and al, 8; ret; 
0x0000000000423a4e: and al, 8; ret; 
0x0000000000423a4d: and al, 8; ret; 
0x0000000000423a6e: and al, 8; ret; 
0x0000000000423a6d: and al, 8; ret; 
0x0000000000423a8e: and al, 8; ret; 
0x0000000000423a8d: and al, 8; ret; 
0x0000000000423ab4: and al, 8; ret; 
0x0000000000423ab3: and al, 8; ret; 
0x0000000000423ace: and al, 8; ret; 
0x0000000000423acd: and al, 8; ret; 
0x0000000000423aee: and al, 8; ret; 
0x0000000000423aed: and al, 8; ret; 
0x0000000000423b0e: and al, 8; ret; 
0x0000000000423b0d: and al, 8; ret; 
0x0000000000423b2e: and al, 8; ret; 
0x0000000000423b2d: and al, 8; ret; 
0x0000000000423b4e: and al, 8; ret; 
0x0000000000423b4d: and al, 8; ret; 
0x0000000000423be7: and al, 8; ret; 
0x0000000000423be6: and al, 8; ret; 
0x0000000000423c78: and al, 8; ret; 
0x0000000000423c77: and al, 8; ret; 
0x0000000000423ece: and al, 8; ret; 
0x0000000000423ecd: and al, 8; ret; 
0x000000000042420f: and al, 8; ret; 
0x000000000042420e: and al, 8; ret; 
0x0000000000424342: and al, 8; ret; 
0x0000000000424341: and al, 8; ret; 
0x00000000004243a4: and al, 8; ret; 
0x00000000004243a3: and al, 8; ret; 
0x00000000004243ea: and al, 8; ret; 
0x00000000004243e9: and al, 8; ret; 
0x0000000000424400: and al, 8; ret; 
0x00000000004243ff: and al, 8; ret; 
0x0000000000424d46: and al, 8; ret; 
0x0000000000424d45: and al, 8; ret; 
0x0000000000424daf: and al, 8; ret; 
0x0000000000424dae: and al, 8; ret; 
0x0000000000424ed4: and al, 8; ret; 
0x0000000000424ed3: and al, 8; ret; 
0x0000000000425135: and al, 8; ret; 
0x0000000000425134: and al, 8; ret; 
0x000000000042540a: and al, 8; ret; 
0x0000000000425409: and al, 8; ret; 
0x000000000042544b: and al, 8; ret; 
0x000000000042544a: and al, 8; ret; 
0x000000000042546d: and al, 8; ret; 
0x000000000042546c: and al, 8; ret; 
0x000000000042548e: and al, 8; ret; 
0x000000000042548d: and al, 8; ret; 
0x00000000004254b9: and al, 8; ret; 
0x00000000004254b8: and al, 8; ret; 
0x0000000000425539: and al, 8; ret; 
0x0000000000425538: and al, 8; ret; 
0x0000000000425616: and al, 8; ret; 
0x0000000000425615: and al, 8; ret; 
0x0000000000425bbb: and al, 8; ret; 
0x0000000000425bba: and al, 8; ret; 
0x0000000000425c35: and al, 8; ret; 
0x0000000000425c34: and al, 8; ret; 
0x00000000004261f9: and al, 8; ret; 
0x00000000004261f8: and al, 8; ret; 
0x00000000004262b4: and al, 8; ret; 
0x00000000004262b3: and al, 8; ret; 
0x0000000000426bf7: and al, 8; ret; 
0x0000000000426bf6: and al, 8; ret; 
0x0000000000426c37: and al, 8; ret; 
0x0000000000426c36: and al, 8; ret; 
0x0000000000426ce6: and al, 8; ret; 
0x0000000000426ce5: and al, 8; ret; 
0x0000000000426d00: and al, 8; ret; 
0x0000000000426cff: and al, 8; ret; 
0x0000000000426d24: and al, 8; ret; 
0x0000000000426d23: and al, 8; ret; 
0x0000000000426d44: and al, 8; ret; 
0x0000000000426d43: and al, 8; ret; 
0x0000000000426d64: and al, 8; ret; 
0x0000000000426d63: and al, 8; ret; 
0x000000000042721c: and al, 8; ret; 
0x000000000042721b: and al, 8; ret; 
0x0000000000427585: and al, 8; ret; 
0x0000000000427584: and al, 8; ret; 
0x00000000004279e3: and al, 8; ret; 
0x00000000004279e2: and al, 8; ret; 
0x00000000004279fd: and al, 8; ret; 
0x00000000004279fc: and al, 8; ret; 
0x0000000000427a0d: and al, 8; ret; 
0x0000000000427a0c: and al, 8; ret; 
0x0000000000427a22: and al, 8; ret; 
0x0000000000427a21: and al, 8; ret; 
0x0000000000427a3d: and al, 8; ret; 
0x0000000000427a3c: and al, 8; ret; 
0x0000000000427a53: and al, 8; ret; 
0x0000000000427a52: and al, 8; ret; 
0x0000000000427a73: and al, 8; ret; 
0x0000000000427a72: and al, 8; ret; 
0x00000000004283dd: and al, 8; ret; 
0x00000000004283dc: and al, 8; ret; 
0x0000000000428e6d: and al, 8; ret; 
0x0000000000428e6c: and al, 8; ret; 
0x000000000042995d: and al, 8; ret; 
0x000000000042995c: and al, 8; ret; 
0x000000000042996d: and al, 8; ret; 
0x000000000042996c: and al, 8; ret; 
0x0000000000429aae: and al, 8; ret; 
0x0000000000429aad: and al, 8; ret; 
0x0000000000429f33: and al, 8; ret; 
0x0000000000429f32: and al, 8; ret; 
0x000000000042a59d: and al, 8; ret; 
0x000000000042a59c: and al, 8; ret; 
0x000000000042b09d: and al, 8; ret; 
0x000000000042b09c: and al, 8; ret; 
0x000000000042bd6d: and al, 8; ret; 
0x000000000042bd6c: and al, 8; ret; 
0x000000000042bd7d: and al, 8; ret; 
0x000000000042bd7c: and al, 8; ret; 
0x000000000042bdbf: and al, 8; ret; 
0x000000000042bdbe: and al, 8; ret; 
0x000000000042c32f: and al, 8; ret; 
0x000000000042c32e: and al, 8; ret; 
0x000000000042d7c4: and al, 8; ret; 
0x000000000042d7c3: and al, 8; ret; 
0x000000000042d7e4: and al, 8; ret; 
0x000000000042d7e3: and al, 8; ret; 
0x000000000042d802: and al, 8; ret; 
0x000000000042d801: and al, 8; ret; 
0x000000000042d822: and al, 8; ret; 
0x000000000042d821: and al, 8; ret; 
0x000000000042e383: and al, 8; ret; 
0x000000000042e382: and al, 8; ret; 
0x000000000042e3f3: and al, 8; ret; 
0x000000000042e3f2: and al, 8; ret; 
0x000000000042e410: and al, 8; ret; 
0x000000000042e40f: and al, 8; ret; 
0x000000000042e5a0: and al, 8; ret; 
0x000000000042e59f: and al, 8; ret; 
0x000000000042e5d8: and al, 8; ret; 
0x000000000042e5d7: and al, 8; ret; 
0x000000000042e5ed: and al, 8; ret; 
0x000000000042e5ec: and al, 8; ret; 
0x000000000042e623: and al, 8; ret; 
0x000000000042e622: and al, 8; ret; 
0x000000000042e793: and al, 8; ret; 
0x000000000042e792: and al, 8; ret; 
0x000000000042eced: and al, 8; ret; 
0x000000000042ecec: and al, 8; ret; 
0x000000000042ecff: and al, 8; ret; 
0x000000000042ecfe: and al, 8; ret; 
0x000000000042ed4d: and al, 8; ret; 
0x000000000042ed4c: and al, 8; ret; 
0x000000000042ed5d: and al, 8; ret; 
0x000000000042ed5c: and al, 8; ret; 
0x000000000042ed6d: and al, 8; ret; 
0x000000000042ed6c: and al, 8; ret; 
0x000000000042ed85: and al, 8; ret; 
0x000000000042ed84: and al, 8; ret; 
0x000000000042edbd: and al, 8; ret; 
0x000000000042edbc: and al, 8; ret; 
0x000000000042edcd: and al, 8; ret; 
0x000000000042edcc: and al, 8; ret; 
0x000000000042ede5: and al, 8; ret; 
0x000000000042ede4: and al, 8; ret; 
0x000000000042edfd: and al, 8; ret; 
0x000000000042edfc: and al, 8; ret; 
0x000000000042ee28: and al, 8; ret; 
0x000000000042ee27: and al, 8; ret; 
0x000000000042ee91: and al, 8; ret; 
0x000000000042ee90: and al, 8; ret; 
0x000000000042ef72: and al, 8; ret; 
0x000000000042ef71: and al, 8; ret; 
0x000000000042f0df: and al, 8; ret; 
0x000000000042f0de: and al, 8; ret; 
0x000000000042f1f6: and al, 8; ret; 
0x000000000042f1f5: and al, 8; ret; 
0x000000000042f668: and al, 8; ret; 
0x000000000042f667: and al, 8; ret; 
0x000000000042fc8a: and al, 8; ret; 
0x000000000042fc89: and al, 8; ret; 
0x000000000042fca3: and al, 8; ret; 
0x000000000042fca2: and al, 8; ret; 
0x000000000042fcca: and al, 8; ret; 
0x000000000042fcc9: and al, 8; ret; 
0x00000000004300d2: and al, 8; ret; 
0x00000000004300d1: and al, 8; ret; 
0x00000000004301b2: and al, 8; ret; 
0x00000000004301b1: and al, 8; ret; 
0x0000000000430296: and al, 8; ret; 
0x0000000000430295: and al, 8; ret; 
0x00000000004302bc: and al, 8; ret; 
0x00000000004302bb: and al, 8; ret; 
0x000000000043034f: and al, 8; ret; 
0x000000000043034e: and al, 8; ret; 
0x0000000000430443: and al, 8; ret; 
0x0000000000430442: and al, 8; ret; 
0x0000000000430466: and al, 8; ret; 
0x0000000000430465: and al, 8; ret; 
0x0000000000430f9f: and al, 8; ret; 
0x0000000000430f9e: and al, 8; ret; 
0x00000000004310da: and al, 8; ret; 
0x00000000004310d9: and al, 8; ret; 
0x00000000004310f0: and al, 8; ret; 
0x00000000004310ef: and al, 8; ret; 
0x0000000000431110: and al, 8; ret; 
0x000000000043110f: and al, 8; ret; 
0x0000000000431130: and al, 8; ret; 
0x000000000043112f: and al, 8; ret; 
0x000000000043115b: and al, 8; ret; 
0x000000000043115a: and al, 8; ret; 
0x000000000043117b: and al, 8; ret; 
0x000000000043117a: and al, 8; ret; 
0x0000000000431266: and al, 8; ret; 
0x0000000000431265: and al, 8; ret; 
0x0000000000431286: and al, 8; ret; 
0x0000000000431285: and al, 8; ret; 
0x00000000004312a6: and al, 8; ret; 
0x00000000004312a5: and al, 8; ret; 
0x00000000004312c6: and al, 8; ret; 
0x00000000004312c5: and al, 8; ret; 
0x00000000004312e6: and al, 8; ret; 
0x00000000004312e5: and al, 8; ret; 
0x0000000000431306: and al, 8; ret; 
0x0000000000431305: and al, 8; ret; 
0x0000000000431326: and al, 8; ret; 
0x0000000000431325: and al, 8; ret; 
0x00000000004315ab: and al, 8; ret; 
0x00000000004315aa: and al, 8; ret; 
0x00000000004315ce: and al, 8; ret; 
0x00000000004315cd: and al, 8; ret; 
0x00000000004315fb: and al, 8; ret; 
0x00000000004315fa: and al, 8; ret; 
0x000000000043161b: and al, 8; ret; 
0x000000000043161a: and al, 8; ret; 
0x0000000000431642: and al, 8; ret; 
0x0000000000431641: and al, 8; ret; 
0x0000000000431665: and al, 8; ret; 
0x0000000000431664: and al, 8; ret; 
0x0000000000431694: and al, 8; ret; 
0x0000000000431693: and al, 8; ret; 
0x00000000004316ad: and al, 8; ret; 
0x00000000004316ac: and al, 8; ret; 
0x00000000004316c4: and al, 8; ret; 
0x00000000004316c3: and al, 8; ret; 
0x00000000004316dd: and al, 8; ret; 
0x00000000004316dc: and al, 8; ret; 
0x00000000004316f4: and al, 8; ret; 
0x00000000004316f3: and al, 8; ret; 
0x000000000043170d: and al, 8; ret; 
0x000000000043170c: and al, 8; ret; 
0x000000000043177d: and al, 8; ret; 
0x000000000043177c: and al, 8; ret; 
0x000000000043178d: and al, 8; ret; 
0x000000000043178c: and al, 8; ret; 
0x000000000043179d: and al, 8; ret; 
0x000000000043179c: and al, 8; ret; 
0x000000000043180d: and al, 8; ret; 
0x000000000043180c: and al, 8; ret; 
0x000000000043181d: and al, 8; ret; 
0x000000000043181c: and al, 8; ret; 
0x000000000043182d: and al, 8; ret; 
0x000000000043182c: and al, 8; ret; 
0x000000000043183d: and al, 8; ret; 
0x000000000043183c: and al, 8; ret; 
0x000000000043184d: and al, 8; ret; 
0x000000000043184c: and al, 8; ret; 
0x0000000000431886: and al, 8; ret; 
0x0000000000431885: and al, 8; ret; 
0x00000000004318a3: and al, 8; ret; 
0x00000000004318a2: and al, 8; ret; 
0x00000000004318c3: and al, 8; ret; 
0x00000000004318c2: and al, 8; ret; 
0x00000000004318e3: and al, 8; ret; 
0x00000000004318e2: and al, 8; ret; 
0x0000000000431900: and al, 8; ret; 
0x00000000004318ff: and al, 8; ret; 
0x000000000043191d: and al, 8; ret; 
0x000000000043191c: and al, 8; ret; 
0x0000000000431945: and al, 8; ret; 
0x0000000000431944: and al, 8; ret; 
0x0000000000431971: and al, 8; ret; 
0x0000000000431970: and al, 8; ret; 
0x000000000043199a: and al, 8; ret; 
0x0000000000431999: and al, 8; ret; 
0x00000000004319be: and al, 8; ret; 
0x00000000004319bd: and al, 8; ret; 
0x00000000004319eb: and al, 8; ret; 
0x00000000004319ea: and al, 8; ret; 
0x0000000000431a0e: and al, 8; ret; 
0x0000000000431a0d: and al, 8; ret; 
0x0000000000431a3b: and al, 8; ret; 
0x0000000000431a3a: and al, 8; ret; 
0x0000000000431a5b: and al, 8; ret; 
0x0000000000431a5a: and al, 8; ret; 
0x0000000000431a82: and al, 8; ret; 
0x0000000000431a81: and al, 8; ret; 
0x0000000000431aa5: and al, 8; ret; 
0x0000000000431aa4: and al, 8; ret; 
0x0000000000431ad4: and al, 8; ret; 
0x0000000000431ad3: and al, 8; ret; 
0x0000000000431aed: and al, 8; ret; 
0x0000000000431aec: and al, 8; ret; 
0x0000000000431b04: and al, 8; ret; 
0x0000000000431b03: and al, 8; ret; 
0x0000000000431b1d: and al, 8; ret; 
0x0000000000431b1c: and al, 8; ret; 
0x0000000000431b34: and al, 8; ret; 
0x0000000000431b33: and al, 8; ret; 
0x0000000000431b4d: and al, 8; ret; 
0x0000000000431b4c: and al, 8; ret; 
0x0000000000431bbd: and al, 8; ret; 
0x0000000000431bbc: and al, 8; ret; 
0x0000000000431bcd: and al, 8; ret; 
0x0000000000431bcc: and al, 8; ret; 
0x0000000000431bdd: and al, 8; ret; 
0x0000000000431bdc: and al, 8; ret; 
0x0000000000431c4d: and al, 8; ret; 
0x0000000000431c4c: and al, 8; ret; 
0x0000000000431c5d: and al, 8; ret; 
0x0000000000431c5c: and al, 8; ret; 
0x0000000000431c6d: and al, 8; ret; 
0x0000000000431c6c: and al, 8; ret; 
0x0000000000431c7d: and al, 8; ret; 
0x0000000000431c7c: and al, 8; ret; 
0x0000000000431c8d: and al, 8; ret; 
0x0000000000431c8c: and al, 8; ret; 
0x0000000000431cc6: and al, 8; ret; 
0x0000000000431cc5: and al, 8; ret; 
0x0000000000431ce3: and al, 8; ret; 
0x0000000000431ce2: and al, 8; ret; 
0x0000000000431d03: and al, 8; ret; 
0x0000000000431d02: and al, 8; ret; 
0x0000000000431d23: and al, 8; ret; 
0x0000000000431d22: and al, 8; ret; 
0x0000000000431d40: and al, 8; ret; 
0x0000000000431d3f: and al, 8; ret; 
0x0000000000431d5d: and al, 8; ret; 
0x0000000000431d5c: and al, 8; ret; 
0x0000000000431d85: and al, 8; ret; 
0x0000000000431d84: and al, 8; ret; 
0x0000000000431db1: and al, 8; ret; 
0x0000000000431db0: and al, 8; ret; 
0x0000000000431dda: and al, 8; ret; 
0x0000000000431dd9: and al, 8; ret; 
0x0000000000431dfe: and al, 8; ret; 
0x0000000000431dfd: and al, 8; ret; 
0x0000000000431fe4: and al, 8; ret; 
0x0000000000431fe3: and al, 8; ret; 
0x0000000000431ffd: and al, 8; ret; 
0x0000000000431ffc: and al, 8; ret; 
0x000000000043206d: and al, 8; ret; 
0x000000000043206c: and al, 8; ret; 
0x000000000043208d: and al, 8; ret; 
0x000000000043208c: and al, 8; ret; 
0x00000000004320fd: and al, 8; ret; 
0x00000000004320fc: and al, 8; ret; 
0x000000000043211d: and al, 8; ret; 
0x000000000043211c: and al, 8; ret; 
0x000000000043212d: and al, 8; ret; 
0x000000000043212c: and al, 8; ret; 
0x000000000043213d: and al, 8; ret; 
0x000000000043213c: and al, 8; ret; 
0x0000000000432176: and al, 8; ret; 
0x0000000000432175: and al, 8; ret; 
0x0000000000432193: and al, 8; ret; 
0x0000000000432192: and al, 8; ret; 
0x00000000004321b3: and al, 8; ret; 
0x00000000004321b2: and al, 8; ret; 
0x00000000004321d3: and al, 8; ret; 
0x00000000004321d2: and al, 8; ret; 
0x00000000004321f0: and al, 8; ret; 
0x00000000004321ef: and al, 8; ret; 
0x000000000043220d: and al, 8; ret; 
0x000000000043220c: and al, 8; ret; 
0x00000000004322f2: and al, 8; ret; 
0x00000000004322f1: and al, 8; ret; 
0x0000000000432329: and al, 8; ret; 
0x0000000000432328: and al, 8; ret; 
0x00000000004323f6: and al, 8; ret; 
0x00000000004323f5: and al, 8; ret; 
0x0000000000432416: and al, 8; ret; 
0x0000000000432415: and al, 8; ret; 
0x0000000000432446: and al, 8; ret; 
0x0000000000432445: and al, 8; ret; 
0x00000000004324e0: and al, 8; ret; 
0x00000000004324df: and al, 8; ret; 
0x0000000000432517: and al, 8; ret; 
0x0000000000432516: and al, 8; ret; 
0x00000000004325e6: and al, 8; ret; 
0x00000000004325e5: and al, 8; ret; 
0x0000000000432606: and al, 8; ret; 
0x0000000000432605: and al, 8; ret; 
0x0000000000432636: and al, 8; ret; 
0x0000000000432635: and al, 8; ret; 
0x00000000004326d0: and al, 8; ret; 
0x00000000004326cf: and al, 8; ret; 
0x0000000000432706: and al, 8; ret; 
0x0000000000432705: and al, 8; ret; 
0x00000000004327d6: and al, 8; ret; 
0x00000000004327d5: and al, 8; ret; 
0x00000000004327f6: and al, 8; ret; 
0x00000000004327f5: and al, 8; ret; 
0x0000000000432826: and al, 8; ret; 
0x0000000000432825: and al, 8; ret; 
0x00000000004328c2: and al, 8; ret; 
0x00000000004328c1: and al, 8; ret; 
0x00000000004328f9: and al, 8; ret; 
0x00000000004328f8: and al, 8; ret; 
0x00000000004329c6: and al, 8; ret; 
0x00000000004329c5: and al, 8; ret; 
0x00000000004329e6: and al, 8; ret; 
0x00000000004329e5: and al, 8; ret; 
0x0000000000432a16: and al, 8; ret; 
0x0000000000432a15: and al, 8; ret; 
0x0000000000432aad: and al, 8; ret; 
0x0000000000432aac: and al, 8; ret; 
0x0000000000432ad5: and al, 8; ret; 
0x0000000000432ad4: and al, 8; ret; 
0x0000000000432bb5: and al, 8; ret; 
0x0000000000432bb4: and al, 8; ret; 
0x0000000000432bd5: and al, 8; ret; 
0x0000000000432bd4: and al, 8; ret; 
0x0000000000432c05: and al, 8; ret; 
0x0000000000432c04: and al, 8; ret; 
0x0000000000432c9d: and al, 8; ret; 
0x0000000000432c9c: and al, 8; ret; 
0x0000000000432cbd: and al, 8; ret; 
0x0000000000432cbc: and al, 8; ret; 
0x0000000000432d85: and al, 8; ret; 
0x0000000000432d84: and al, 8; ret; 
0x0000000000432da5: and al, 8; ret; 
0x0000000000432da4: and al, 8; ret; 
0x0000000000432dd5: and al, 8; ret; 
0x0000000000432dd4: and al, 8; ret; 
0x0000000000432e70: and al, 8; ret; 
0x0000000000432e6f: and al, 8; ret; 
0x0000000000432e9d: and al, 8; ret; 
0x0000000000432e9c: and al, 8; ret; 
0x0000000000432f66: and al, 8; ret; 
0x0000000000432f65: and al, 8; ret; 
0x0000000000432f86: and al, 8; ret; 
0x0000000000432f85: and al, 8; ret; 
0x0000000000432fb6: and al, 8; ret; 
0x0000000000432fb5: and al, 8; ret; 
0x0000000000433050: and al, 8; ret; 
0x000000000043304f: and al, 8; ret; 
0x000000000043307d: and al, 8; ret; 
0x000000000043307c: and al, 8; ret; 
0x0000000000433166: and al, 8; ret; 
0x0000000000433165: and al, 8; ret; 
0x0000000000433186: and al, 8; ret; 
0x0000000000433185: and al, 8; ret; 
0x00000000004331c6: and al, 8; ret; 
0x00000000004331c5: and al, 8; ret; 
0x0000000000433260: and al, 8; ret; 
0x000000000043325f: and al, 8; ret; 
0x000000000043328d: and al, 8; ret; 
0x000000000043328c: and al, 8; ret; 
0x0000000000433356: and al, 8; ret; 
0x0000000000433355: and al, 8; ret; 
0x0000000000433376: and al, 8; ret; 
0x0000000000433375: and al, 8; ret; 
0x00000000004333a6: and al, 8; ret; 
0x00000000004333a5: and al, 8; ret; 
0x0000000000433440: and al, 8; ret; 
0x000000000043343f: and al, 8; ret; 
0x000000000043346d: and al, 8; ret; 
0x000000000043346c: and al, 8; ret; 
0x0000000000433556: and al, 8; ret; 
0x0000000000433555: and al, 8; ret; 
0x0000000000433576: and al, 8; ret; 
0x0000000000433575: and al, 8; ret; 
0x00000000004335b6: and al, 8; ret; 
0x00000000004335b5: and al, 8; ret; 
0x000000000043364d: and al, 8; ret; 
0x000000000043364c: and al, 8; ret; 
0x0000000000433679: and al, 8; ret; 
0x0000000000433678: and al, 8; ret; 
0x000000000043368d: and al, 8; ret; 
0x000000000043368c: and al, 8; ret; 
0x00000000004336bc: and al, 8; ret; 
0x00000000004336bb: and al, 8; ret; 
0x00000000004336cd: and al, 8; ret; 
0x00000000004336cc: and al, 8; ret; 
0x00000000004336f9: and al, 8; ret; 
0x00000000004336f8: and al, 8; ret; 
0x000000000043370d: and al, 8; ret; 
0x000000000043370c: and al, 8; ret; 
0x0000000000433741: and al, 8; ret; 
0x0000000000433740: and al, 8; ret; 
0x000000000043375d: and al, 8; ret; 
0x000000000043375c: and al, 8; ret; 
0x0000000000433789: and al, 8; ret; 
0x0000000000433788: and al, 8; ret; 
0x000000000043379d: and al, 8; ret; 
0x000000000043379c: and al, 8; ret; 
0x00000000004337d3: and al, 8; ret; 
0x00000000004337d2: and al, 8; ret; 
0x00000000004337ed: and al, 8; ret; 
0x00000000004337ec: and al, 8; ret; 
0x0000000000433819: and al, 8; ret; 
0x0000000000433818: and al, 8; ret; 
0x000000000043382d: and al, 8; ret; 
0x000000000043382c: and al, 8; ret; 
0x0000000000433861: and al, 8; ret; 
0x0000000000433860: and al, 8; ret; 
0x00000000004338ff: and al, 8; ret; 
0x00000000004338fe: and al, 8; ret; 
0x0000000000433923: and al, 8; ret; 
0x0000000000433922: and al, 8; ret; 
0x000000000043394b: and al, 8; ret; 
0x000000000043394a: and al, 8; ret; 
0x0000000000433a69: and al, 8; ret; 
0x0000000000433a68: and al, 8; ret; 
0x0000000000433ac9: and al, 8; ret; 
0x0000000000433ac8: and al, 8; ret; 
0x0000000000433d92: and al, 8; ret; 
0x0000000000433d91: and al, 8; ret; 
0x0000000000433df2: and al, 8; ret; 
0x0000000000433df1: and al, 8; ret; 
0x0000000000434232: and al, 8; ret; 
0x0000000000434231: and al, 8; ret; 
0x0000000000434252: and al, 8; ret; 
0x0000000000434251: and al, 8; ret; 
0x0000000000434271: and al, 8; ret; 
0x0000000000434270: and al, 8; ret; 
0x0000000000434291: and al, 8; ret; 
0x0000000000434290: and al, 8; ret; 
0x00000000004342b2: and al, 8; ret; 
0x00000000004342b1: and al, 8; ret; 
0x00000000004342d2: and al, 8; ret; 
0x00000000004342d1: and al, 8; ret; 
0x000000000043430f: and al, 8; ret; 
0x000000000043430e: and al, 8; ret; 
0x000000000043434f: and al, 8; ret; 
0x000000000043434e: and al, 8; ret; 
0x000000000043438f: and al, 8; ret; 
0x000000000043438e: and al, 8; ret; 
0x00000000004343cf: and al, 8; ret; 
0x00000000004343ce: and al, 8; ret; 
0x000000000043440f: and al, 8; ret; 
0x000000000043440e: and al, 8; ret; 
0x000000000043444f: and al, 8; ret; 
0x000000000043444e: and al, 8; ret; 
0x0000000000434472: and al, 8; ret; 
0x0000000000434471: and al, 8; ret; 
0x0000000000434495: and al, 8; ret; 
0x0000000000434494: and al, 8; ret; 
0x0000000000434504: and al, 8; ret; 
0x0000000000434503: and al, 8; ret; 
0x000000000043454a: and al, 8; ret; 
0x0000000000434549: and al, 8; ret; 
0x000000000043458c: and al, 8; ret; 
0x000000000043458b: and al, 8; ret; 
0x00000000004345a2: and al, 8; ret; 
0x00000000004345a1: and al, 8; ret; 
0x0000000000434886: and al, 8; ret; 
0x0000000000434885: and al, 8; ret; 
0x0000000000434ead: and al, 8; ret; 
0x0000000000434eac: and al, 8; ret; 
0x0000000000434ecc: and al, 8; ret; 
0x0000000000434ecb: and al, 8; ret; 
0x0000000000434eee: and al, 8; ret; 
0x0000000000434eed: and al, 8; ret; 
0x0000000000434f1b: and al, 8; ret; 
0x0000000000434f1a: and al, 8; ret; 
0x0000000000434f3e: and al, 8; ret; 
0x0000000000434f3d: and al, 8; ret; 
0x0000000000434f62: and al, 8; ret; 
0x0000000000434f61: and al, 8; ret; 
0x0000000000434f8a: and al, 8; ret; 
0x0000000000434f89: and al, 8; ret; 
0x0000000000434fa2: and al, 8; ret; 
0x0000000000434fa1: and al, 8; ret; 
0x0000000000434fc2: and al, 8; ret; 
0x0000000000434fc1: and al, 8; ret; 
0x00000000004351ed: and al, 8; ret; 
0x00000000004351ec: and al, 8; ret; 
0x00000000004352bd: and al, 8; ret; 
0x00000000004352bc: and al, 8; ret; 
0x00000000004352cd: and al, 8; ret; 
0x00000000004352cc: and al, 8; ret; 
0x000000000043530d: and al, 8; ret; 
0x000000000043530c: and al, 8; ret; 
0x000000000043537d: and al, 8; ret; 
0x000000000043537c: and al, 8; ret; 
0x00000000004353ed: and al, 8; ret; 
0x00000000004353ec: and al, 8; ret; 
0x00000000004353ff: and al, 8; ret; 
0x00000000004353fe: and al, 8; ret; 
0x00000000004364d9: and al, 8; ret; 
0x00000000004364d8: and al, 8; ret; 
0x0000000000436517: and al, 8; ret; 
0x0000000000436516: and al, 8; ret; 
0x0000000000436562: and al, 8; ret; 
0x0000000000436561: and al, 8; ret; 
0x0000000000436603: and al, 8; ret; 
0x0000000000436602: and al, 8; ret; 
0x0000000000436f94: and al, 8; ret; 
0x0000000000436f93: and al, 8; ret; 
0x0000000000436fb4: and al, 8; ret; 
0x0000000000436fb3: and al, 8; ret; 
0x00000000004372f4: and al, 8; ret; 
0x00000000004372f3: and al, 8; ret; 
0x0000000000437315: and al, 8; ret; 
0x0000000000437314: and al, 8; ret; 
0x0000000000437334: and al, 8; ret; 
0x0000000000437333: and al, 8; ret; 
0x0000000000437355: and al, 8; ret; 
0x0000000000437354: and al, 8; ret; 
0x0000000000437374: and al, 8; ret; 
0x0000000000437373: and al, 8; ret; 
0x000000000043738d: and al, 8; ret; 
0x000000000043738c: and al, 8; ret; 
0x0000000000438dc2: and al, 8; ret; 
0x0000000000438dc1: and al, 8; ret; 
0x0000000000438e24: and al, 8; ret; 
0x0000000000438e23: and al, 8; ret; 
0x0000000000438e84: and al, 8; ret; 
0x0000000000438e83: and al, 8; ret; 
0x0000000000438ef2: and al, 8; ret; 
0x0000000000438ef1: and al, 8; ret; 
0x0000000000438f14: and al, 8; ret; 
0x0000000000438f13: and al, 8; ret; 
0x0000000000439172: and al, 8; ret; 
0x0000000000439171: and al, 8; ret; 
0x00000000004391d4: and al, 8; ret; 
0x00000000004391d3: and al, 8; ret; 
0x0000000000439234: and al, 8; ret; 
0x0000000000439233: and al, 8; ret; 
0x00000000004392a2: and al, 8; ret; 
0x00000000004392a1: and al, 8; ret; 
0x0000000000439304: and al, 8; ret; 
0x0000000000439303: and al, 8; ret; 
0x0000000000439336: and al, 8; ret; 
0x0000000000439335: and al, 8; ret; 
0x0000000000439362: and al, 8; ret; 
0x0000000000439361: and al, 8; ret; 
0x0000000000439585: and al, 8; ret; 
0x0000000000439584: and al, 8; ret; 
0x00000000004395b8: and al, 8; ret; 
0x00000000004395b7: and al, 8; ret; 
0x00000000004396d2: and al, 8; ret; 
0x00000000004396d1: and al, 8; ret; 
0x00000000004396f5: and al, 8; ret; 
0x00000000004396f4: and al, 8; ret; 
0x00000000004397a0: and al, 8; ret; 
0x000000000043979f: and al, 8; ret; 
0x0000000000439962: and al, 8; ret; 
0x0000000000439961: and al, 8; ret; 
0x0000000000439aa4: and al, 8; ret; 
0x0000000000439aa3: and al, 8; ret; 
0x000000000043a32f: and al, 8; ret; 
0x000000000043a32e: and al, 8; ret; 
0x000000000043a378: and al, 8; ret; 
0x000000000043a377: and al, 8; ret; 
0x000000000043a5c6: and al, 8; ret; 
0x000000000043a5c5: and al, 8; ret; 
0x000000000043a7bd: and al, 8; ret; 
0x000000000043a7bc: and al, 8; ret; 
0x000000000043a821: and al, 8; ret; 
0x000000000043a820: and al, 8; ret; 
0x000000000043a9ca: and al, 8; ret; 
0x000000000043a9c9: and al, 8; ret; 
0x000000000043aa91: and al, 8; ret; 
0x000000000043aa90: and al, 8; ret; 
0x000000000043b232: and al, 8; ret; 
0x000000000043b231: and al, 8; ret; 
0x000000000043b25b: and al, 8; ret; 
0x000000000043b25a: and al, 8; ret; 
0x000000000043b2b0: and al, 8; ret; 
0x000000000043b2af: and al, 8; ret; 
0x000000000043b430: and al, 8; ret; 
0x000000000043b42f: and al, 8; ret; 
0x000000000043b8f2: and al, 8; ret; 
0x000000000043b8f1: and al, 8; ret; 
0x000000000043bac7: and al, 8; ret; 
0x000000000043bac6: and al, 8; ret; 
0x000000000043bae6: and al, 8; ret; 
0x000000000043bae5: and al, 8; ret; 
0x000000000043bdd4: and al, 8; ret; 
0x000000000043bdd3: and al, 8; ret; 
0x000000000043f7cf: and al, 8; ret; 
0x000000000043f7ce: and al, 8; ret; 
0x000000000043f7f3: and al, 8; ret; 
0x000000000043f7f2: and al, 8; ret; 
0x000000000043f8f8: and al, 8; ret; 
0x000000000043f8f7: and al, 8; ret; 
0x000000000044324f: and al, 8; ret; 
0x000000000044324e: and al, 8; ret; 
0x0000000000443273: and al, 8; ret; 
0x0000000000443272: and al, 8; ret; 
0x0000000000443378: and al, 8; ret; 
0x0000000000443377: and al, 8; ret; 
0x0000000000443604: and al, 8; ret; 
0x0000000000443603: and al, 8; ret; 
0x000000000044364f: and al, 8; ret; 
0x000000000044364e: and al, 8; ret; 
0x00000000004437a2: and al, 8; ret; 
0x00000000004437a1: and al, 8; ret; 
0x00000000004437e4: and al, 8; ret; 
0x00000000004437e3: and al, 8; ret; 
0x0000000000444c05: and al, 8; ret; 
0x0000000000444c04: and al, 8; ret; 
0x0000000000444c49: and al, 8; ret; 
0x0000000000444c48: and al, 8; ret; 
0x0000000000444c7b: and al, 8; ret; 
0x0000000000444c7a: and al, 8; ret; 
0x0000000000444ca4: and al, 8; ret; 
0x0000000000444ca3: and al, 8; ret; 
0x0000000000444cef: and al, 8; ret; 
0x0000000000444cee: and al, 8; ret; 
0x0000000000444d38: and al, 8; ret; 
0x0000000000444d37: and al, 8; ret; 
0x00000000004458c0: and al, 8; ret; 
0x00000000004458bf: and al, 8; ret; 
0x0000000000445904: and al, 8; ret; 
0x0000000000445903: and al, 8; ret; 
0x0000000000445929: and al, 8; ret; 
0x0000000000445928: and al, 8; ret; 
0x000000000044595d: and al, 8; ret; 
0x000000000044595c: and al, 8; ret; 
0x0000000000445eda: and al, 8; ret; 
0x0000000000445ed9: and al, 8; ret; 
0x0000000000446f2f: and al, 8; ret; 
0x0000000000446f2e: and al, 8; ret; 
0x00000000004470eb: and al, 8; ret; 
0x00000000004470ea: and al, 8; ret; 
0x000000000044710a: and al, 8; ret; 
0x0000000000447109: and al, 8; ret; 
0x000000000044712b: and al, 8; ret; 
0x000000000044712a: and al, 8; ret; 
0x00000000004472bf: and al, 8; ret; 
0x00000000004472be: and al, 8; ret; 
0x00000000004473af: and al, 8; ret; 
0x00000000004473ae: and al, 8; ret; 
0x0000000000447534: and al, 8; ret; 
0x0000000000447533: and al, 8; ret; 
0x00000000004476bf: and al, 8; ret; 
0x00000000004476be: and al, 8; ret; 
0x00000000004476df: and al, 8; ret; 
0x00000000004476de: and al, 8; ret; 
0x000000000044785f: and al, 8; ret; 
0x000000000044785e: and al, 8; ret; 
0x000000000044787f: and al, 8; ret; 
0x000000000044787e: and al, 8; ret; 
0x00000000004479ad: and al, 8; ret; 
0x00000000004479ac: and al, 8; ret; 
0x0000000000447f9f: and al, 8; ret; 
0x0000000000447f9e: and al, 8; ret; 
0x0000000000448059: and al, 8; ret; 
0x0000000000448058: and al, 8; ret; 
0x00000000004480ce: and al, 8; ret; 
0x00000000004480cd: and al, 8; ret; 
0x0000000000448254: and al, 8; ret; 
0x0000000000448253: and al, 8; ret; 
0x00000000004484c2: and al, 8; ret; 
0x00000000004484c1: and al, 8; ret; 
0x00000000004484e2: and al, 8; ret; 
0x00000000004484e1: and al, 8; ret; 
0x0000000000448504: and al, 8; ret; 
0x0000000000448503: and al, 8; ret; 
0x000000000044852a: and al, 8; ret; 
0x0000000000448529: and al, 8; ret; 
0x0000000000448547: and al, 8; ret; 
0x0000000000448546: and al, 8; ret; 
0x000000000044856d: and al, 8; ret; 
0x000000000044856c: and al, 8; ret; 
0x000000000044948b: and al, 8; ret; 
0x000000000044948a: and al, 8; ret; 
0x00000000004494c7: and al, 8; ret; 
0x00000000004494c6: and al, 8; ret; 
0x0000000000449514: and al, 8; ret; 
0x0000000000449513: and al, 8; ret; 
0x0000000000449c20: and al, 8; ret; 
0x0000000000449c1f: and al, 8; ret; 
0x000000000044a089: and al, 8; ret; 
0x000000000044a088: and al, 8; ret; 
0x000000000044a0c2: and al, 8; ret; 
0x000000000044a0c1: and al, 8; ret; 
0x000000000044a107: and al, 8; ret; 
0x000000000044a106: and al, 8; ret; 
0x000000000044a1e9: and al, 8; ret; 
0x000000000044a1e8: and al, 8; ret; 
0x000000000044a209: and al, 8; ret; 
0x000000000044a208: and al, 8; ret; 
0x000000000044a225: and al, 8; ret; 
0x000000000044a224: and al, 8; ret; 
0x000000000044a245: and al, 8; ret; 
0x000000000044a244: and al, 8; ret; 
0x000000000044a267: and al, 8; ret; 
0x000000000044a266: and al, 8; ret; 
0x000000000044a28d: and al, 8; ret; 
0x000000000044a28c: and al, 8; ret; 
0x000000000044a2aa: and al, 8; ret; 
0x000000000044a2a9: and al, 8; ret; 
0x000000000044a2d0: and al, 8; ret; 
0x000000000044a2cf: and al, 8; ret; 
0x000000000044b22b: and al, 8; ret; 
0x000000000044b22a: and al, 8; ret; 
0x000000000044b267: and al, 8; ret; 
0x000000000044b266: and al, 8; ret; 
0x000000000044b2b4: and al, 8; ret; 
0x000000000044b2b3: and al, 8; ret; 
0x000000000044b9b9: and al, 8; ret; 
0x000000000044b9b8: and al, 8; ret; 
0x000000000044ba2d: and al, 8; ret; 
0x000000000044ba2c: and al, 8; ret; 
0x000000000044bf1e: and al, 8; ret; 
0x000000000044bf1d: and al, 8; ret; 
0x000000000044c100: and al, 8; ret; 
0x000000000044c0ff: and al, 8; ret; 
0x000000000044c6a4: and al, 8; ret; 
0x000000000044c6a3: and al, 8; ret; 
0x000000000044c92d: and al, 8; ret; 
0x000000000044c92c: and al, 8; ret; 
0x000000000044ce58: and al, 8; ret; 
0x000000000044ce57: and al, 8; ret; 
0x000000000044ce80: and al, 8; ret; 
0x000000000044ce7f: and al, 8; ret; 
0x000000000044ea8b: and al, 8; ret; 
0x000000000044ea8a: and al, 8; ret; 
0x000000000044eea1: and al, 8; ret; 
0x000000000044eea0: and al, 8; ret; 
0x000000000044f031: and al, 8; ret; 
0x000000000044f030: and al, 8; ret; 
0x000000000044f351: and al, 8; ret; 
0x000000000044f350: and al, 8; ret; 
0x000000000044f485: and al, 8; ret; 
0x000000000044f484: and al, 8; ret; 
0x000000000044f651: and al, 8; ret; 
0x000000000044f650: and al, 8; ret; 
0x000000000044fa23: and al, 8; ret; 
0x000000000044fa22: and al, 8; ret; 
0x000000000044fa44: and al, 8; ret; 
0x000000000044fa43: and al, 8; ret; 
0x000000000044fa64: and al, 8; ret; 
0x000000000044fa63: and al, 8; ret; 
0x000000000044fa84: and al, 8; ret; 
0x000000000044fa83: and al, 8; ret; 
0x00000000004507df: and al, 8; ret; 
0x00000000004507de: and al, 8; ret; 
0x0000000000450880: and al, 8; ret; 
0x000000000045087f: and al, 8; ret; 
0x00000000004509e1: and al, 8; ret; 
0x00000000004509e0: and al, 8; ret; 
0x0000000000450b4a: and al, 8; ret; 
0x0000000000450b49: and al, 8; ret; 
0x0000000000450b6a: and al, 8; ret; 
0x0000000000450b69: and al, 8; ret; 
0x0000000000450cac: and al, 8; ret; 
0x0000000000450cab: and al, 8; ret; 
0x0000000000450cc0: and al, 8; ret; 
0x0000000000450cbf: and al, 8; ret; 
0x0000000000450e30: and al, 8; ret; 
0x0000000000450e2f: and al, 8; ret; 
0x0000000000450e9d: and al, 8; ret; 
0x0000000000450e9c: and al, 8; ret; 
0x000000000045127b: and al, 8; ret; 
0x000000000045127a: and al, 8; ret; 
0x00000000004512fb: and al, 8; ret; 
0x00000000004512fa: and al, 8; ret; 
0x00000000004522a9: and al, 8; ret; 
0x00000000004522a8: and al, 8; ret; 
0x0000000000452b54: and al, 8; ret; 
0x0000000000452b53: and al, 8; ret; 
0x0000000000452c95: and al, 8; ret; 
0x0000000000452c94: and al, 8; ret; 
0x0000000000452e98: and al, 8; ret; 
0x0000000000452e97: and al, 8; ret; 
0x0000000000452ed6: and al, 8; ret; 
0x0000000000452ed5: and al, 8; ret; 
0x00000000004532c2: and al, 8; ret; 
0x00000000004532c1: and al, 8; ret; 
0x000000000045336d: and al, 8; ret; 
0x000000000045336c: and al, 8; ret; 
0x000000000045337f: and al, 8; ret; 
0x000000000045337e: and al, 8; ret; 
0x00000000004533ae: and al, 8; ret; 
0x00000000004533ad: and al, 8; ret; 
0x0000000000453d12: and al, 8; ret; 
0x0000000000453d11: and al, 8; ret; 
0x0000000000453f70: and al, 8; ret; 
0x0000000000453f6f: and al, 8; ret; 
0x0000000000453f8d: and al, 8; ret; 
0x0000000000453f8c: and al, 8; ret; 
0x00000000004557d0: and al, 8; ret; 
0x00000000004557cf: and al, 8; ret; 
0x0000000000455b1b: and al, 8; ret; 
0x0000000000455b1a: and al, 8; ret; 
0x0000000000455b32: and al, 8; ret; 
0x0000000000455b31: and al, 8; ret; 
0x0000000000455ba7: and al, 8; ret; 
0x0000000000455ba6: and al, 8; ret; 
0x0000000000455bcf: and al, 8; ret; 
0x0000000000455bce: and al, 8; ret; 
0x000000000045605d: and al, 8; ret; 
0x000000000045605c: and al, 8; ret; 
0x000000000045682d: and al, 8; ret; 
0x000000000045682c: and al, 8; ret; 
0x000000000045683d: and al, 8; ret; 
0x000000000045683c: and al, 8; ret; 
0x000000000045684d: and al, 8; ret; 
0x000000000045684c: and al, 8; ret; 
0x000000000045685d: and al, 8; ret; 
0x000000000045685c: and al, 8; ret; 
0x0000000000456870: and al, 8; ret; 
0x000000000045686f: and al, 8; ret; 
0x0000000000456890: and al, 8; ret; 
0x000000000045688f: and al, 8; ret; 
0x00000000004568ad: and al, 8; ret; 
0x00000000004568ac: and al, 8; ret; 
0x00000000004568c0: and al, 8; ret; 
0x00000000004568bf: and al, 8; ret; 
0x00000000004568dd: and al, 8; ret; 
0x00000000004568dc: and al, 8; ret; 
0x00000000004568ed: and al, 8; ret; 
0x00000000004568ec: and al, 8; ret; 
0x0000000000456900: and al, 8; ret; 
0x00000000004568ff: and al, 8; ret; 
0x000000000045694e: and al, 8; ret; 
0x000000000045694d: and al, 8; ret; 
0x0000000000456a2f: and al, 8; ret; 
0x0000000000456a2e: and al, 8; ret; 
0x0000000000456ae4: and al, 8; ret; 
0x0000000000456ae3: and al, 8; ret; 
0x0000000000456b09: and al, 8; ret; 
0x0000000000456b08: and al, 8; ret; 
0x0000000000456e08: and al, 8; ret; 
0x0000000000456e07: and al, 8; ret; 
0x0000000000456e25: and al, 8; ret; 
0x0000000000456e24: and al, 8; ret; 
0x0000000000456e4a: and al, 8; ret; 
0x0000000000456e49: and al, 8; ret; 
0x0000000000456e74: and al, 8; ret; 
0x0000000000456e73: and al, 8; ret; 
0x0000000000456e9b: and al, 8; ret; 
0x0000000000456e9a: and al, 8; ret; 
0x0000000000456eb8: and al, 8; ret; 
0x0000000000456eb7: and al, 8; ret; 
0x0000000000456f96: and al, 8; ret; 
0x0000000000456f95: and al, 8; ret; 
0x0000000000457105: and al, 8; ret; 
0x0000000000457104: and al, 8; ret; 
0x0000000000457211: and al, 8; ret; 
0x0000000000457210: and al, 8; ret; 
0x0000000000457232: and al, 8; ret; 
0x0000000000457231: and al, 8; ret; 
0x0000000000457252: and al, 8; ret; 
0x0000000000457251: and al, 8; ret; 
0x0000000000457272: and al, 8; ret; 
0x0000000000457271: and al, 8; ret; 
0x0000000000457292: and al, 8; ret; 
0x0000000000457291: and al, 8; ret; 
0x00000000004572b2: and al, 8; ret; 
0x00000000004572b1: and al, 8; ret; 
0x00000000004572d4: and al, 8; ret; 
0x00000000004572d3: and al, 8; ret; 
0x00000000004572f4: and al, 8; ret; 
0x00000000004572f3: and al, 8; ret; 
0x0000000000457318: and al, 8; ret; 
0x0000000000457317: and al, 8; ret; 
0x0000000000457332: and al, 8; ret; 
0x0000000000457331: and al, 8; ret; 
0x0000000000457352: and al, 8; ret; 
0x0000000000457351: and al, 8; ret; 
0x0000000000457375: and al, 8; ret; 
0x0000000000457374: and al, 8; ret; 
0x0000000000457395: and al, 8; ret; 
0x0000000000457394: and al, 8; ret; 
0x00000000004573b8: and al, 8; ret; 
0x00000000004573b7: and al, 8; ret; 
0x00000000004573e2: and al, 8; ret; 
0x00000000004573e1: and al, 8; ret; 
0x0000000000457408: and al, 8; ret; 
0x0000000000457407: and al, 8; ret; 
0x0000000000457429: and al, 8; ret; 
0x0000000000457428: and al, 8; ret; 
0x0000000000457448: and al, 8; ret; 
0x0000000000457447: and al, 8; ret; 
0x0000000000457465: and al, 8; ret; 
0x0000000000457464: and al, 8; ret; 
0x000000000045748b: and al, 8; ret; 
0x000000000045748a: and al, 8; ret; 
0x00000000004574ab: and al, 8; ret; 
0x00000000004574aa: and al, 8; ret; 
0x00000000004574c8: and al, 8; ret; 
0x00000000004574c7: and al, 8; ret; 
0x00000000004574eb: and al, 8; ret; 
0x00000000004574ea: and al, 8; ret; 
0x0000000000457512: and al, 8; ret; 
0x0000000000457511: and al, 8; ret; 
0x0000000000457535: and al, 8; ret; 
0x0000000000457534: and al, 8; ret; 
0x0000000000457564: and al, 8; ret; 
0x0000000000457563: and al, 8; ret; 
0x000000000045758a: and al, 8; ret; 
0x0000000000457589: and al, 8; ret; 
0x00000000004575a8: and al, 8; ret; 
0x00000000004575a7: and al, 8; ret; 
0x0000000000457698: and al, 8; ret; 
0x0000000000457697: and al, 8; ret; 
0x00000000004576c1: and al, 8; ret; 
0x00000000004576c0: and al, 8; ret; 
0x00000000004576f1: and al, 8; ret; 
0x00000000004576f0: and al, 8; ret; 
0x000000000045771e: and al, 8; ret; 
0x000000000045771d: and al, 8; ret; 
0x000000000045774e: and al, 8; ret; 
0x000000000045774d: and al, 8; ret; 
0x0000000000457778: and al, 8; ret; 
0x0000000000457777: and al, 8; ret; 
0x00000000004581ad: and al, 8; ret; 
0x00000000004581ac: and al, 8; ret; 
0x00000000004582f4: and al, 8; ret; 
0x00000000004582f3: and al, 8; ret; 
0x0000000000458314: and al, 8; ret; 
0x0000000000458313: and al, 8; ret; 
0x000000000045837d: and al, 8; ret; 
0x000000000045837c: and al, 8; ret; 
0x000000000045838d: and al, 8; ret; 
0x000000000045838c: and al, 8; ret; 
0x000000000045839d: and al, 8; ret; 
0x000000000045839c: and al, 8; ret; 
0x00000000004583ad: and al, 8; ret; 
0x00000000004583ac: and al, 8; ret; 
0x00000000004583c2: and al, 8; ret; 
0x00000000004583c1: and al, 8; ret; 
0x0000000000458774: and al, 8; ret; 
0x0000000000458773: and al, 8; ret; 
0x0000000000458790: and al, 8; ret; 
0x000000000045878f: and al, 8; ret; 
0x00000000004588fd: and al, 8; ret; 
0x00000000004588fc: and al, 8; ret; 
0x0000000000458a78: and al, 8; ret; 
0x0000000000458a77: and al, 8; ret; 
0x0000000000458a98: and al, 8; ret; 
0x0000000000458a97: and al, 8; ret; 
0x0000000000458ab8: and al, 8; ret; 
0x0000000000458ab7: and al, 8; ret; 
0x0000000000458ad5: and al, 8; ret; 
0x0000000000458ad4: and al, 8; ret; 
0x0000000000459069: and al, 8; ret; 
0x0000000000459068: and al, 8; ret; 
0x0000000000459089: and al, 8; ret; 
0x0000000000459088: and al, 8; ret; 
0x000000000045909f: and al, 8; ret; 
0x000000000045909e: and al, 8; ret; 
0x00000000004594c9: and al, 8; ret; 
0x00000000004594c8: and al, 8; ret; 
0x0000000000459a56: and al, 8; ret; 
0x0000000000459a55: and al, 8; ret; 
0x0000000000459a8e: and al, 8; ret; 
0x0000000000459a8d: and al, 8; ret; 
0x0000000000459ae3: and al, 8; ret; 
0x0000000000459ae2: and al, 8; ret; 
0x0000000000459dbb: and al, 8; ret; 
0x0000000000459dba: and al, 8; ret; 
0x0000000000459dd2: and al, 8; ret; 
0x0000000000459dd1: and al, 8; ret; 
0x0000000000459def: and al, 8; ret; 
0x0000000000459dee: and al, 8; ret; 
0x0000000000459e0f: and al, 8; ret; 
0x0000000000459e0e: and al, 8; ret; 
0x000000000045a0a6: and al, 8; ret; 
0x000000000045a0a5: and al, 8; ret; 
0x000000000045a23d: and al, 8; ret; 
0x000000000045a23c: and al, 8; ret; 
0x000000000045b84d: and al, 8; ret; 
0x000000000045b84c: and al, 8; ret; 
0x000000000045b85d: and al, 8; ret; 
0x000000000045b85c: and al, 8; ret; 
0x000000000045b875: and al, 8; ret; 
0x000000000045b874: and al, 8; ret; 
0x000000000045b975: and al, 8; ret; 
0x000000000045b974: and al, 8; ret; 
0x000000000045b995: and al, 8; ret; 
0x000000000045b994: and al, 8; ret; 
0x000000000045b9b5: and al, 8; ret; 
0x000000000045b9b4: and al, 8; ret; 
0x000000000045b9d7: and al, 8; ret; 
0x000000000045b9d6: and al, 8; ret; 
0x000000000045b9f5: and al, 8; ret; 
0x000000000045b9f4: and al, 8; ret; 
0x000000000045ba15: and al, 8; ret; 
0x000000000045ba14: and al, 8; ret; 
0x000000000045ba5f: and al, 8; ret; 
0x000000000045ba5e: and al, 8; ret; 
0x000000000045bb55: and al, 8; ret; 
0x000000000045bb54: and al, 8; ret; 
0x000000000045bc3f: and al, 8; ret; 
0x000000000045bc3e: and al, 8; ret; 
0x000000000045c0ed: and al, 8; ret; 
0x000000000045c0ec: and al, 8; ret; 
0x000000000045c103: and al, 8; ret; 
0x000000000045c102: and al, 8; ret; 
0x000000000045c11d: and al, 8; ret; 
0x000000000045c11c: and al, 8; ret; 
0x000000000045c12d: and al, 8; ret; 
0x000000000045c12c: and al, 8; ret; 
0x000000000045c13d: and al, 8; ret; 
0x000000000045c13c: and al, 8; ret; 
0x000000000045c14d: and al, 8; ret; 
0x000000000045c14c: and al, 8; ret; 
0x000000000045c193: and al, 8; ret; 
0x000000000045c192: and al, 8; ret; 
0x000000000045c21d: and al, 8; ret; 
0x000000000045c21c: and al, 8; ret; 
0x000000000045c25d: and al, 8; ret; 
0x000000000045c25c: and al, 8; ret; 
0x000000000045c26d: and al, 8; ret; 
0x000000000045c26c: and al, 8; ret; 
0x000000000045c27d: and al, 8; ret; 
0x000000000045c27c: and al, 8; ret; 
0x000000000045c293: and al, 8; ret; 
0x000000000045c292: and al, 8; ret; 
0x000000000045c2ad: and al, 8; ret; 
0x000000000045c2ac: and al, 8; ret; 
0x000000000045c2bd: and al, 8; ret; 
0x000000000045c2bc: and al, 8; ret; 
0x000000000045c7e6: and al, 8; ret; 
0x000000000045c7e5: and al, 8; ret; 
0x000000000045c7fd: and al, 8; ret; 
0x000000000045c7fc: and al, 8; ret; 
0x000000000045c815: and al, 8; ret; 
0x000000000045c814: and al, 8; ret; 
0x000000000045c832: and al, 8; ret; 
0x000000000045c831: and al, 8; ret; 
0x000000000045c855: and al, 8; ret; 
0x000000000045c854: and al, 8; ret; 
0x000000000045c87e: and al, 8; ret; 
0x000000000045c87d: and al, 8; ret; 
0x000000000045c8b1: and al, 8; ret; 
0x000000000045c8b0: and al, 8; ret; 
0x000000000045c8d8: and al, 8; ret; 
0x000000000045c8d7: and al, 8; ret; 
0x000000000045c8f8: and al, 8; ret; 
0x000000000045c8f7: and al, 8; ret; 
0x000000000045c921: and al, 8; ret; 
0x000000000045c920: and al, 8; ret; 
0x000000000045c945: and al, 8; ret; 
0x000000000045c944: and al, 8; ret; 
0x000000000045c97b: and al, 8; ret; 
0x000000000045c97a: and al, 8; ret; 
0x000000000045c9ad: and al, 8; ret; 
0x000000000045c9ac: and al, 8; ret; 
0x000000000045c9da: and al, 8; ret; 
0x000000000045c9d9: and al, 8; ret; 
0x000000000045c9fe: and al, 8; ret; 
0x000000000045c9fd: and al, 8; ret; 
0x000000000045ca30: and al, 8; ret; 
0x000000000045ca2f: and al, 8; ret; 
0x000000000045ca60: and al, 8; ret; 
0x000000000045ca5f: and al, 8; ret; 
0x000000000045ca8e: and al, 8; ret; 
0x000000000045ca8d: and al, 8; ret; 
0x000000000045cadf: and al, 8; ret; 
0x000000000045cade: and al, 8; ret; 
0x000000000045cb05: and al, 8; ret; 
0x000000000045cb04: and al, 8; ret; 
0x000000000045cb2d: and al, 8; ret; 
0x000000000045cb2c: and al, 8; ret; 
0x000000000045cb48: and al, 8; ret; 
0x000000000045cb47: and al, 8; ret; 
0x000000000045cb68: and al, 8; ret; 
0x000000000045cb67: and al, 8; ret; 
0x000000000045cb88: and al, 8; ret; 
0x000000000045cb87: and al, 8; ret; 
0x000000000045cba8: and al, 8; ret; 
0x000000000045cba7: and al, 8; ret; 
0x000000000045cbc6: and al, 8; ret; 
0x000000000045cbc5: and al, 8; ret; 
0x000000000045cbe6: and al, 8; ret; 
0x000000000045cbe5: and al, 8; ret; 
0x0000000000446d21: and al, 9; mov rdi, qword ptr [rsp]; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000432820: and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004329c0: and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432baf: and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000404de4: and al, byte ptr [rdi + rcx]; jne 0x4df0; cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x0000000000404d4c: and al, byte ptr [rdi + rcx]; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000432481: and al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x0000000000432671: and al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x00000000004324bf: and al, byte ptr [rdi]; setne al; ret; 
0x00000000004326af: and al, byte ptr [rdi]; setne al; ret; 
0x0000000000404d1d: and al, cl; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d10; ret; 
0x000000000042547f: and ax, 0x77; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000406854: and ax, 0x8000; setne al; ret; 
0x0000000000415b40: and ax, 0xff; neg ax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416380: and ax, 0xff; neg ax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432c96: and ax, word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432a52: and ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x0000000000432862: and ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x000000000043289f: and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432a8f: and ax, word ptr [rdi]; setne al; ret; 
0x0000000000422ebd: and bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000422f6d: and bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000407372: and bl, ch; add eax, dword ptr [rax - 0x78]; clc; and eax, 0xff; ret; 
0x00000000004073f2: and bl, ch; add eax, dword ptr [rax - 0x78]; clc; and eax, 0xff; ret; 
0x000000000044bb6e: and bl, ch; add esp, dword ptr [rsi - 0x77]; fsub dword ptr [rip + 0xffff]; pop rbx; ret; 
0x0000000000419693: and byte ptr [r9 + rcx*4], cl; mov rax, rsi; ret; 
0x0000000000404e8a: and byte ptr [rax + 1], cl; clc; ret; 
0x0000000000404e9a: and byte ptr [rax + 1], cl; clc; ret; 
0x0000000000407a67: and byte ptr [rax + 1], cl; ret 0x894c; 
0x000000000041d270: and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d3ca: and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d540: and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x0000000000404e86: and byte ptr [rax - 0x3f], cl; out dx, eax; and byte ptr [rax + 1], cl; clc; ret; 
0x0000000000404e96: and byte ptr [rax - 0x3f], cl; out dx, eax; and byte ptr [rax + 1], cl; clc; ret; 
0x000000000040e6a7: and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000041ff59: and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000427b92: and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000043cf28: and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000448500: and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000448543: and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044ea17: and byte ptr [rax - 0x75], cl; and al, 0x20; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c88b: and byte ptr [rax - 0x75], cl; jl 0x3c8b4; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbda: and byte ptr [rax - 0x75], cl; jl 0x3cc03; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdbb: and byte ptr [rax - 0x75], cl; jl 0x3fde4; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044010a: and byte ptr [rax - 0x75], cl; jl 0x40133; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c60: and byte ptr [rax - 0x75], cl; jl 0x51c89; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa3: and byte ptr [rax - 0x75], cl; jl 0x51fcc; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004555fa: and byte ptr [rax - 0x75], cl; or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000044e8ea: and byte ptr [rax - 0x75], cl; push rsp; and al, 0x20; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044cc65: and byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc64: and byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000041927c: and byte ptr [rax - 0x77], cl; fistp qword ptr [rcx + 5]; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x00000000004453e9: and byte ptr [rax - 0x77], cl; ret; 
0x0000000000448520: and byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448563: and byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000447a7a: and byte ptr [rax - 0x7d], cl; mov byte ptr [rcx], 0x80; cmp al, 0x30; add byte ptr [rbp - 0x1d], dh; ret; 
0x0000000000427a6c: and byte ptr [rax], al; add al, byte ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000044c00e: and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000432a10: and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432acf: and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432f80: and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000402ee9: and byte ptr [rax], al; add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004300c6: and byte ptr [rax], al; add byte ptr [rax], al; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a6: and byte ptr [rax], al; add byte ptr [rax], al; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x0000000000407686: and byte ptr [rax], al; add byte ptr [rax], al; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f6: and byte ptr [rax], al; add byte ptr [rax], al; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab6: and byte ptr [rax], al; add byte ptr [rax], al; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000044a0b6: and byte ptr [rax], al; jbe 0x4a0a8; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x0000000000407910: and byte ptr [rax], al; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x000000000043534c: and byte ptr [rbp - 3], bh; jmp qword ptr [rsi - 0x75]; 
0x000000000041d6ba: and byte ptr [rbx + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x0000000000414c9d: and byte ptr [rbx - 0x74b7e3b0], cl; jo 0x14cad; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000414c9c: and byte ptr [rbx - 0x74b7e3b0], cl; jo 0x14cad; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000414dec: and byte ptr [rbx - 0x74b7e3b0], cl; jo 0x14dfc; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414deb: and byte ptr [rbx - 0x74b7e3b0], cl; jo 0x14dfc; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x00000000004222ae: and byte ptr [rbx], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040b3fb: and byte ptr [rcx + 0x38], al; ret; 
0x0000000000433ceb: and byte ptr [rcx + 0x38], al; ret; 
0x0000000000407df0: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004317c7: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000431c07: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004320b7: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000443d5d: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000451248: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000454a0d: and byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000407b41: and byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000408a82: and byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413b6e: and byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414197: and byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414287: and byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414419: and byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045282c: and byte ptr [rcx + 1], 0; call qword ptr [rax]; 
0x0000000000419694: and byte ptr [rcx + rcx*4], cl; mov rax, rsi; ret; 
0x0000000000407a61: and byte ptr [rcx], ah; ror byte ptr [rax - 0x3f], 0xea; and byte ptr [rax + 1], cl; ret 0x894c; 
0x000000000043c904: and byte ptr [rcx], al; jne 0x3c91d; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe34: and byte ptr [rcx], al; jne 0x3fe4d; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000450081: and byte ptr [rcx], dh; ret 0x8948; 
0x0000000000450100: and byte ptr [rcx], dh; ret 0x8948; 
0x000000000041f6cb: and byte ptr [rdi + rcx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c3: and byte ptr [rdi + rcx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f04a: and byte ptr [rdi - 0x2d], dh; pop r13; pop r12; pop rbx; ret; 
0x000000000041f6b8: and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f7b0: and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x00000000004100da: and byte ptr [rdx], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000401cad: and byte ptr [rdx], ch; add byte ptr [rax - 0x75], cl; cmp al, 0xc5; cmp byte ptr [rdx], ch; add al, bpl; ret 0xfff6; 
0x000000000041ef4d: and byte ptr [rsi + r8 + 0x48], dil; mov edi, eax; call qword ptr [rax + 0x38]; 
0x000000000041ef4e: and byte ptr [rsi + rax + 0x48], bh; mov edi, eax; call qword ptr [rax + 0x38]; 
0x000000000041f12c: and byte ptr [rsi + rax + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f652: and byte ptr [rsi + rdx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f752: and byte ptr [rsi + rdx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x0000000000408167: and byte ptr [rsi - 0x77], ah; ret; 
0x0000000000409ad9: and byte ptr [rsi - 0x77], ah; ret; 
0x000000000040fe2a: and byte ptr [rsi - 0x77], ah; ret; 
0x000000000040ff1a: and byte ptr [rsi - 0x77], ah; ret; 
0x0000000000409ad8: and byte ptr [rsi - 0x77], spl; ret; 
0x000000000045c0fc: and byte ptr [rsi - 4], cl; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439a1a: and ch, bh; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004576ba: and ch, byte ptr [rax - 0x72b70006]; and al, 8; ret; 
0x000000000040cfc1: and cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x000000000045a3da: and cl, byte ptr [rbx + 0x3a8b0002]; call rax; 
0x0000000000459260: and di, 0xff; cmp di, 0x7f; sete al; ret; 
0x0000000000422f6c: and dil, dil; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000414c99: and dword ptr [rax - 0x75], ecx; and byte ptr [rbx - 0x74b7e3b0], cl; jo 0x14cad; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000432e67: and dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004328f3: and dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432d9f: and dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000402f0c: and dword ptr [rax], eax; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000042c0bb: and dword ptr [rbp - 0x74b7fffb], ecx; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000434539: and dword ptr [rdx - 0x14], esi; movsxd rcx, ecx; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000044ee69: and dword ptr [rdx - 4], 0xffffffff; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000042c98b: and dword ptr [rsi - 0x27770002], eax; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000421701: and eax, 0x3a8b0006; call rax; 
0x000000000042175c: and eax, 0x3a8b0006; call rax; 
0x00000000004217b1: and eax, 0x3a8b0006; call rax; 
0x0000000000411477: and eax, 0x3a8b0007; call rax; 
0x0000000000419067: and eax, 0x48000011; cmp edx, dword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x0000000000423b07: and eax, 0x48000462; lea esp, [rsp + 8]; ret; 
0x0000000000419227: and eax, 0x48000509; lea esp, [rsp + 8]; ret; 
0x000000000041ad17: and eax, 0x480006a0; lea esp, [rsp + 8]; ret; 
0x00000000004159d7: and eax, 0x480006e6; lea esp, [rsp + 8]; ret; 
0x0000000000414db7: and eax, 0x48000700; mov eax, dword ptr [rax]; test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000401c00: and eax, 0x482f00; call rax; 
0x0000000000434f37: and eax, 0x48fffffd; lea esp, [rsp + 8]; ret; 
0x0000000000450223: and eax, 0x58bfffb; xor al, 0x83; add al, byte ptr [rax]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000406dc2: and eax, 0x7f800000; shr eax, 0x17; and eax, eax; ret; 
0x0000000000403232: and eax, 0x7f; ret; 
0x0000000000457842: and eax, 0x7f; ret; 
0x0000000000406823: and eax, 0x7fff; movsxd rax, eax; ret; 
0x0000000000406e22: and eax, 0x7fffff; ret; 
0x00000000004178c2: and eax, 0x80000000; and esi, 0x7fffffff; or eax, esi; ret; 
0x0000000000406df2: and eax, 0x80000000; setne al; ret; 
0x000000000042288f: and eax, 0x8b480006; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000432511: and eax, 0x8d480000; and al, 8; ret; 
0x00000000004329e0: and eax, 0x8d480000; and al, 8; ret; 
0x0000000000432aa7: and eax, 0x8d480000; and al, 8; ret; 
0x00000000004261f3: and eax, 0x8d480003; and al, 8; ret; 
0x000000000044ba27: and eax, 0x8d48fffc; and al, 8; ret; 
0x00000000004229cb: and eax, 0x8d48ffff; and al, 0x68; ret; 
0x0000000000425480: and eax, 0xb60f0077; clc; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000403248: and eax, 0xc0214877; lea rdx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000424d1d: and eax, 0xcb056348; or byte ptr [rsi], al; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000416577: and eax, 0xdf0006da; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b41: and eax, 0xf76600ff; fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000416381: and eax, 0xf76600ff; fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000404e13: and eax, 0xf; ret; 
0x00000000004500a0: and eax, 0xf; ret; 
0x000000000041a377: and eax, 0xfe0; sub rax, 8; ret; 
0x00000000004031f2: and eax, 0xff00; shr eax, 8; ret; 
0x0000000000403202: and eax, 0xff00; shr eax, 8; ret; 
0x0000000000457802: and eax, 0xff00; shr eax, 8; ret; 
0x0000000000457812: and eax, 0xff00; shr eax, 8; ret; 
0x0000000000433d07: and eax, 0xff; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b417: and eax, 0xff; and r11d, 0xff; sub rax, r11; ret; 
0x000000000043070e: and eax, 0xff; call 0x30720; mov rsp, rbp; pop rbp; ret; 
0x00000000004307c7: and eax, 0xff; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c27: and eax, 0xff; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x00000000004385e8: and eax, 0xff; lea rdx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dcd: and eax, 0xff; lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000415b8e: and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x00000000004163d2: and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415a1b: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041625b: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000424ecc: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000425bb3: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004322ea: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000043a819: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512f3: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000459a4e: and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000415b60: and eax, 0xff; neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004163a0: and eax, 0xff; neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004253fb: and eax, 0xff; or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000455502: and eax, 0xff; pop rbx; ret; 
0x0000000000404a4e: and eax, 0xff; ret; 
0x0000000000404e07: and eax, 0xff; ret; 
0x0000000000407378: and eax, 0xff; ret; 
0x00000000004073f8: and eax, 0xff; ret; 
0x0000000000425853: and eax, 0xff; ret; 
0x0000000000425873: and eax, 0xff; ret; 
0x0000000000425b4c: and eax, 0xff; ret; 
0x0000000000432485: and eax, 0xff; ret; 
0x00000000004324a3: and eax, 0xff; ret; 
0x0000000000447d56: and eax, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x000000000044bae3: and eax, 0xffff; and edx, 0xffff; sub rax, rdx; ret; 
0x0000000000415a5b: and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000041629b: and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000417de7: and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x00000000004328ba: and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x00000000004027b0: and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000403410: and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404880: and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404960: and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e50: and eax, 0xffff; movsx eax, ax; ret; 
0x00000000004032c6: and eax, 0xffff; pop rbx; ret; 
0x0000000000403310: and eax, 0xffff; pop rbx; ret; 
0x000000000044bb74: and eax, 0xffff; pop rbx; ret; 
0x0000000000403430: and eax, 0xffff; ret; 
0x00000000004048a0: and eax, 0xffff; ret; 
0x0000000000404980: and eax, 0xffff; ret; 
0x0000000000404a92: and eax, 0xffff; ret; 
0x0000000000404e30: and eax, 0xffff; ret; 
0x000000000040b974: and eax, 0xffff; ret; 
0x000000000040d865: and eax, 0xffff; ret; 
0x000000000040d87f: and eax, 0xffff; ret; 
0x000000000040db0b: and eax, 0xffff; ret; 
0x000000000041155f: and eax, 0xffff; ret; 
0x0000000000411595: and eax, 0xffff; ret; 
0x0000000000417bd3: and eax, 0xffff; ret; 
0x0000000000417be3: and eax, 0xffff; ret; 
0x0000000000417bf3: and eax, 0xffff; ret; 
0x0000000000423812: and eax, 0xffff; ret; 
0x0000000000423f8a: and eax, 0xffff; ret; 
0x0000000000432a58: and eax, 0xffff; ret; 
0x0000000000432a75: and eax, 0xffff; ret; 
0x000000000044bb3b: and eax, 0xffff; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000426dfb: and eax, 0xfffffecf; or eax, 0x30; mov dword ptr [rbp + 0x18], eax; mov rsp, rbp; pop rbp; ret; 
0x000000000041a36e: and eax, 0xffffffe0; sub rax, 0x18; ret; 
0x0000000000404562: and eax, 1; ret; 
0x0000000000404572: and eax, 1; ret; 
0x0000000000404583: and eax, 1; ret; 
0x0000000000404593: and eax, 1; ret; 
0x0000000000432700: and eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432bcf: and eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432c97: and eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040303c: and eax, dword ptr [rax]; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000041ad98: and eax, dword ptr [rax]; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x000000000044809e: and eax, dword ptr [rax]; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411c23: and eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000432c41: and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e11: and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432ff0: and eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433200: and eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333e0: and eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335f0: and eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000432a53: and eax, dword ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x0000000000432863: and eax, dword ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x00000000004328a0: and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432a90: and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432c7f: and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432e4f: and eax, dword ptr [rdi]; setne al; ret; 
0x000000000043302d: and eax, dword ptr [rdi]; setne al; ret; 
0x000000000043323d: and eax, dword ptr [rdi]; setne al; ret; 
0x000000000043341d: and eax, dword ptr [rdi]; setne al; ret; 
0x000000000043362d: and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000404af1: and eax, eax; add rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040324b: and eax, eax; lea rdx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000406dca: and eax, eax; ret; 
0x0000000000409eb6: and eax, eax; shl rcx, 0x20; add rax, rcx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000409eb5: and eax, eax; shl rcx, 0x20; add rax, rcx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000406b8e: and eax, edx; ret; 
0x0000000000406b3e: and eax, edx; setne al; ret; 
0x0000000000406aee: and eax, edx; shr rax, 0x34; ret; 
0x0000000000418e59: and ebp, dword ptr [rbx + 0x388b0006]; call rdx; 
0x00000000004399dc: and ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000043995c: and ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000433d0d: and ebx, 0xff; sub eax, r11d; ret; 
0x000000000040b41d: and ebx, 0xff; sub rax, r11; ret; 
0x0000000000447d4f: and ecx, 0xff; and r8d, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000444bf4: and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c38: and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000045cabb: and ecx, 0xfff; or eax, ecx; ret; 
0x000000000044bb34: and ecx, 0xffff; and r8d, 0xffff; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000423aa5: and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x000000000040cd77: and ecx, dword ptr [rax + 0x39]; ret 0x127e; 
0x000000000040f7a7: and ecx, dword ptr [rax + 0x39]; ret 0x127e; 
0x0000000000403d3f: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040bb24: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040e16f: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000413051: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000431735: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000431b75: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000432025: and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041a5d7: and ecx, dword ptr [rax - 0x75]; add eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000447cd9: and ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000040dcf9: and ecx, dword ptr [rcx - 1]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431e59: and ecx, dword ptr [rdx - 3]; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000040321c: and edi, 0x7f; je 0x3224; mov al, 1; ret; 
0x000000000045782c: and edi, 0x7f; je 0x57834; mov al, 1; ret; 
0x00000000004031e0: and edi, 0x7f; sete al; ret; 
0x00000000004577f0: and edi, 0x7f; sete al; ret; 
0x00000000004031b0: and edi, 0xf000; cmp edi, 0x1000; sete al; ret; 
0x00000000004577c0: and edi, 0xf000; cmp edi, 0x1000; sete al; ret; 
0x0000000000403180: and edi, 0xf000; cmp edi, 0x2000; sete al; ret; 
0x0000000000457790: and edi, 0xf000; cmp edi, 0x2000; sete al; ret; 
0x0000000000403170: and edi, 0xf000; cmp edi, 0x4000; sete al; ret; 
0x0000000000457780: and edi, 0xf000; cmp edi, 0x4000; sete al; ret; 
0x0000000000403190: and edi, 0xf000; cmp edi, 0x6000; sete al; ret; 
0x00000000004577a0: and edi, 0xf000; cmp edi, 0x6000; sete al; ret; 
0x00000000004031a0: and edi, 0xf000; cmp edi, 0x8000; sete al; ret; 
0x00000000004577b0: and edi, 0xf000; cmp edi, 0x8000; sete al; ret; 
0x00000000004031c0: and edi, 0xf000; cmp edi, 0xa000; sete al; ret; 
0x00000000004577d0: and edi, 0xf000; cmp edi, 0xa000; sete al; ret; 
0x00000000004031d0: and edi, 0xf000; cmp edi, 0xc000; sete al; ret; 
0x00000000004577e0: and edi, 0xf000; cmp edi, 0xc000; sete al; ret; 
0x0000000000404a45: and edi, 0xf; movzx eax, byte ptr [rax + rdi]; add eax, edx; and eax, 0xff; ret; 
0x000000000040b9f7: and edi, 0xff; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000449bf7: and edi, 0xff; bt dword ptr [rsi], edi; jae 0x49c05; mov al, 1; ret; 
0x0000000000427ba0: and edi, 0xff; bt dword ptr [rsi], edi; setb al; ret; 
0x00000000004237d5: and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x0000000000418693: and edi, 0xffff; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d79: and edi, dword ptr [rdi]; add al, 0; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000456dda: and edi, dword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x000000000042511b: and edi, edi; add eax, 0x83128b00; ret 0x8801; 
0x000000000040b7e7: and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x0000000000456d1b: and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000456d5e: and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000407941: and edi, edi; mov qword ptr [rsi], rdi; jmp 0x794f; mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x00000000004568ba: and edi, esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568b9: and edi, esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568d7: and edi, esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568e7: and edi, esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568fa: and edi, esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426daf: and edx, 0x30; je 0x26dbc; mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x0000000000406837: and edx, 0x8000; and rsi, 0x7fff; or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x0000000000406e35: and edx, 0xff800000; and edx, edx; and rsi, 0x7fffff; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000403534: and edx, 0xff; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000403445: and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403465: and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403485: and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034a5: and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004302ae: and edx, 0xff; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000409171: and edx, 0xff; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x00000000004034f5: and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004458b2: and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458f6: and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004075e5: and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407605: and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407625: and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x000000000043978f: and edx, 0xff; mov rsi, rsp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x0000000000450093: and edx, 0xffff; mov eax, edx; shr eax, 4; xor eax, edx; and eax, 0xf; ret; 
0x0000000000450092: and edx, 0xffff; mov eax, edx; shr eax, 4; xor eax, edx; and eax, 0xf; ret; 
0x000000000044bae8: and edx, 0xffff; sub rax, rdx; ret; 
0x000000000045b8f6: and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b916: and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b947: and edx, 0xfffffecf; or edx, 0x30; mov dword ptr [rax + 8], edx; mov byte ptr [rax + 0x17], 1; mov byte ptr [rax + 0x16], 0; ret; 
0x00000000004195c3: and edx, 0xffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x000000000041a368: and edx, 1; jne 0x1a376; and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x0000000000402a11: and edx, dword ptr [rip + 0x8b0008]; lea rsp, [rsp + 8]; ret; 
0x0000000000456d5b: and edx, dword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000406b11: and edx, ecx; and rsi, 0x7ff; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406787: and edx, ecx; mov rax, rdx; ret; 
0x0000000000406e3b: and edx, edx; and rsi, 0x7fffff; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000407b5b: and edx, edx; imul rax, rdx; lea rsp, [rsp + 8]; ret; 
0x0000000000404c5d: and edx, esi; mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406b14: and esi, 0x7ff; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x000000000040683e: and esi, 0x7fff; or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x0000000000406e3e: and esi, 0x7fffff; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x00000000004178c7: and esi, 0x7fffffff; or eax, esi; ret; 
0x00000000004178e3: and esi, 0x7fffffff; or edi, esi; shr edi, 1; xor eax, edi; ret; 
0x0000000000422005: and esi, 0xff; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000042e615: and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x0000000000432318: and esi, 0xff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000040d9be: and esi, 0xffff; call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x00000000004328e8: and esi, 0xffff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000416628: and esi, 0xffff; mov rdi, rax; mov edx, 2; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x0000000000415578: and esi, 0xffff; mov rdi, rax; mov edx, 2; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f28: and esi, 0xffff; mov rdi, rax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000403715: and esi, 3; add r9, rsi; sar r9, 2; mov rax, r9; ret; 
0x0000000000403796: and esi, 7; add r9, rsi; sar r9, 3; mov rax, r9; ret; 
0x0000000000406bbe: and esi, ecx; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x000000000040b7e5: and esi, esi; and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x0000000000432ac8: and esi, esi; mov rdi, rax; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000416678: and esi, esi; mov rdi, rax; mov edx, 4; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f78: and esi, esi; mov rdi, rax; mov edx, 8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000456889: and esp, dword ptr [rsp + rdi*8]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004317c2: and esp, esp; mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c02: and esp, esp; mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x00000000004320b2: and esp, esp; mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x00000000004317f3: and esp, esp; mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c33: and esp, esp; mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e3: and esp, esp; mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x000000000043172f: and esp, esp; movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b6f: and esp, esp; movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043201f: and esp, esp; movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043175f: and esp, esp; movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b9f: and esp, esp; movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043204f: and esp, esp; movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433d0c: and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b41c: and r11d, 0xff; sub rax, r11; ret; 
0x00000000004317c1: and r12d, r12d; mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c01: and r12d, r12d; mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x00000000004320b1: and r12d, r12d; mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x00000000004317f2: and r12d, r12d; mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c32: and r12d, r12d; mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e2: and r12d, r12d; mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x000000000043172e: and r12d, r12d; movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b6e: and r12d, r12d; movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043201e: and r12d, r12d; movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043175e: and r12d, r12d; movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b9e: and r12d, r12d; movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043204e: and r12d, r12d; movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404de3: and r8b, byte ptr [rdi + rcx]; jne 0x4df0; cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x0000000000404d4b: and r8b, byte ptr [rdi + rcx]; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000404d1c: and r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d10; ret; 
0x000000000043070d: and r8d, 0xff; call 0x30720; mov rsp, rbp; pop rbp; ret; 
0x00000000004307c6: and r8d, 0xff; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c26: and r8d, 0xff; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000447d55: and r8d, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x000000000044bb3a: and r8d, 0xffff; sub rcx, r8; mov rax, rcx; ret; 
0x00000000004217b0: and rax, 0x3a8b0006; call rax; 
0x000000000041a376: and rax, 0xfe0; sub rax, 8; ret; 
0x000000000042288e: and rax, 0xffffffff8b480006; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041a36d: and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x0000000000432fef: and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331ff: and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333df: and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335ef: and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043302c: and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043323c: and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043341c: and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043362c: and rax, qword ptr [rdi]; setne al; ret; 
0x000000000040324a: and rax, rax; lea rdx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000406b8d: and rax, rdx; ret; 
0x0000000000406b3d: and rax, rdx; setne al; ret; 
0x0000000000406aed: and rax, rdx; shr rax, 0x34; ret; 
0x0000000000456dd9: and rdi, qword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x00000000004195c2: and rdx, 0xffffffffffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x000000000041a367: and rdx, 1; jne 0x1a376; and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x0000000000456d5a: and rdx, qword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000406b10: and rdx, rcx; and rsi, 0x7ff; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406786: and rdx, rcx; mov rax, rdx; ret; 
0x0000000000404c5c: and rdx, rsi; mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406b13: and rsi, 0x7ff; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x000000000040683d: and rsi, 0x7fff; or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x0000000000406e3d: and rsi, 0x7fffff; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000403714: and rsi, 3; add r9, rsi; sar r9, 2; mov rax, r9; ret; 
0x0000000000403795: and rsi, 7; add r9, rsi; sar r9, 3; mov rax, r9; ret; 
0x0000000000406bbd: and rsi, rcx; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x000000000045b9a9: andps xmm0, xmmword ptr [rax]; add al, ch; fidiv word ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004043fa: bnd jl 0x43ff; xor eax, eax; ret; 
0x0000000000402470: bsf eax, eax; lea rax, [rcx + rax - 0x10]; cmp rdx, rax; jbe 0x246b; ret; 
0x0000000000402564: bsf eax, eax; lea rax, [rcx + rax - 0x10]; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x00000000004024f0: bsf eax, eax; shr eax, 1; lea rax, [rcx + rax - 8]; cmp rdx, rax; jbe 0x24eb; ret; 
0x0000000000402762: bswap eax; ret; 
0x0000000000402772: bswap eax; ret; 
0x0000000000402784: bswap eax; ret; 
0x0000000000402794: bswap eax; ret; 
0x0000000000402783: bswap rax; ret; 
0x0000000000402793: bswap rax; ret; 
0x00000000004330c3: bt dword ptr [rax + 4], 0x1f; cvtsi2sd xmm0, qword ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334b3: bt dword ptr [rax + 4], 0x1f; cvtsi2sd xmm0, qword ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000433193: bt dword ptr [rax + 4], 0x1f; cvtsi2ss xmm0, qword ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433583: bt dword ptr [rax + 4], 0x1f; cvtsi2ss xmm0, qword ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x000000000043395d: bt dword ptr [rax], edi; setb al; ret; 
0x000000000043397d: bt dword ptr [rax], edi; setb al; ret; 
0x000000000042beaa: bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x0000000000449bfd: bt dword ptr [rsi], edi; jae 0x49c05; mov al, 1; ret; 
0x0000000000427ba6: bt dword ptr [rsi], edi; setb al; ret; 
0x000000000043b406: bt dword ptr [rsp], ecx; jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x0000000000458b7d: bt edx, edi; dec dword ptr [rbx - 0x173edbfc]; or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004117c5: call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x000000000041128e: call 0x11120; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004112de: call 0x11120; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004113cf: call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041143f: call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004115a8: call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115c5: call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d8: call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115f5: call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412f05: call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x0000000000411c1c: call 0x11b00; mov qword ptr [rbx], r12; pop r13; pop r12; pop rbx; ret; 
0x000000000044ed28: call 0x11c30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000430a53: call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ed3: call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000043f8c2: call 0x11c30; mov rbx, qword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443342: call 0x11c30; mov rbx, qword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417622: call 0x13020; jmp 0x17645; mov rsi, qword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x0000000000413236: call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004133ea: call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000413346: call 0x13020; lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x0000000000413510: call 0x13020; lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x00000000004149df: call 0x13020; lea rsp, [rsp + 8]; ret; 
0x000000000041511d: call 0x13720; call 0x14fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004150fd: call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000450b42: call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000452ece: call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000415196: call 0x13720; mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x00000000004522a1: call 0x13940; lea rsp, [rsp + 8]; ret; 
0x0000000000414335: call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x00000000004024f4: call 0x144b241; clc; cmp rdx, rax; jbe 0x24eb; ret; 
0x0000000000452f2f: call 0x14a20; mov ebx, dword ptr [rax + 0x1c]; mov eax, ebx; pop rbx; ret; 
0x0000000000452f4f: call 0x14a20; mov rbx, qword ptr [rax + 0x20]; mov rax, rbx; pop rbx; ret; 
0x0000000000452f0f: call 0x14a20; mov rbx, qword ptr [rax + 8]; mov rax, rbx; pop rbx; ret; 
0x0000000000452eef: call 0x14a20; mov rbx, qword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x00000000004188f0: call 0x14a20; mov rsi, qword ptr [rax + 8]; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x0000000000439621: call 0x14cf0; fild qword ptr [rbp - 8]; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439813: call 0x14cf0; mov al, byte ptr [rbp - 4]; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044feb2: call 0x14cf0; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045005e: call 0x14cf0; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004531f5: call 0x14cf0; mov rsp, rbp; pop rbp; ret; 
0x00000000004150f5: call 0x14e70; mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000415115: call 0x14f20; mov rdi, rax; call 0x13720; call 0x14fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000439553: call 0x14fb0; fild qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000040f1ac: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f46a: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f6ea: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410e20: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f1c: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041100e: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411090: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411112: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041183e: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041574f: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415831: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415cfd: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416803: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c832: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c933: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d092: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d193: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c12: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c92: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420e92: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f12: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f93: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421ea2: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421f22: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421fa3: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004230d2: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004235ac: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000428e44: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042b074: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000433b80: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000448340: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044e611: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004565a6: call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000422830: call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228ee: call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004229c9: call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x000000000041c25f: call 0x14fb0; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041fc18: call 0x14fb0; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000420850: call 0x14fb0; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042e300: call 0x14fb0; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e669: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c300: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422ebb: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422f6b: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042301b: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042317b: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042322b: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004232db: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423428: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004234a8: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423528: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042365b: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042370b: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004237bb: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004505e9: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045068c: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045085a: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000456192: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045669c: call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c3f8: call 0x14fb0; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041eed6: call 0x14fb0; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000449617: call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b3b7: call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x00000000004368a5: call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000449926: call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044b6c6: call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044ce0c: call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000415122: call 0x14fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042c762: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c7f2: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042e76a: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044750b: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c98a: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042caba: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042e832: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000455265: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004553aa: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042ca37: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000044d275: call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000436f71: call 0x14fb0; mov al, byte ptr [rbp - 0x1c]; mov rsp, rbp; pop rbp; ret; 
0x00000000004372cf: call 0x14fb0; mov al, byte ptr [rbp - 0x24]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453841: call 0x14fb0; mov al, byte ptr [rsp + 8]; lea rsp, [rsp + 0xf8]; ret; 
0x000000000042a024: call 0x14fb0; mov al, r12b; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042c424: call 0x14fb0; mov al, r12b; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004540c0: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004551c9: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042c5c2: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c902: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042cb42: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457a1a: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457b4a: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c53a: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c6da: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c87a: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000453d9e: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457d82: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457f32: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458a4f: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045c3e9: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042d793: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043c291: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043c605: call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041b575: call 0x14fb0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x78]; ret; 
0x0000000000416bc9: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416cd9: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416d69: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041b64b: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043d708: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dcd8: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000440c8a: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441108: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044134a: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000045562e: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x000000000045575e: call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000435589: call 0x14fb0; mov rbx, qword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000042d8ed: call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042d99d: call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042dc85: call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x00000000004188bd: call 0x150f0; lea rsp, [rsp + 0x980]; pop rbx; ret; 
0x0000000000451b2f: call 0x150f0; mov rax, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451e6a: call 0x150f0; mov rax, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x00000000004521ad: call 0x150f0; mov rax, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414957: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd51: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cea3: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440281: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403d3: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8aa: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000045164c: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000045195f: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525bf: call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8bd: call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc0c: call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fded: call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044013c: call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c92: call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fd5: call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044ea44: call 0x150f0; mov rax, qword ptr [rsp + 0x20]; lea rsp, [rsp + 0xf8]; ret; 
0x000000000043ca9e: call 0x150f0; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffce: call 0x150f0; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004136be: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c744: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc74: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e752: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee68: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044eff8: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f30f: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9ac: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc12: call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x00000000004187bf: call 0x150f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000451b2a: call 0x15110; call 0x150f0; mov rax, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451e65: call 0x15110; call 0x150f0; mov rax, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x00000000004521a8: call 0x15110; call 0x150f0; mov rax, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414952: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd4c: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ce9e: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044027c: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403ce: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8a5: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451647: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000045195a: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525ba: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8b8: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc07: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fde8: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440137: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c8d: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fd0: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044ea3f: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x20]; lea rsp, [rsp + 0xf8]; ret; 
0x000000000043ca99: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffc9: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x000000000043c73f: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc6f: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e74d: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee63: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044eff3: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f30a: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9a7: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc0d: call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000417176: call 0x151b0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417281: call 0x151d0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417386: call 0x15200; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416094: call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000415ec4: call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x00000000004177f5: call 0x17190; lea rsp, [rsp + 8]; ret; 
0x0000000000454b63: call 0x17190; mov rdi, qword ptr [rbx]; call 0x19220; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000417665: call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x0000000000417805: call 0x176f0; lea rsp, [rsp + 8]; ret; 
0x0000000000401223: call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040136e: call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004013f7: call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004014f9: call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040163e: call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010c9: call 0x17d50; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000456709: call 0x17d50; pop rbx; ret; 
0x0000000000417f79: call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab65: call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418345: call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418365: call 0x18160; lea rsp, [rsp + 8]; ret; 
0x0000000000418396: call 0x18340; lea rsp, [rsp + 8]; ret; 
0x0000000000401dec: call 0x18340; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414cde: call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418667: call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418636: call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000418529: call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x0000000000418fba: call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x0000000000418569: call 0x184a0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004185a3: call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x0000000000403cfc: call 0x18540; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417da2: call 0x18540; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004185cc: call 0x18540; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403c71: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040cb68: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040dc14: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040ef58: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000411542: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000411aa7: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000412f2d: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417ca4: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417cc4: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417ce4: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d04: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d24: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d44: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cda: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418d22: call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040515c: call 0x185b0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004147f3: call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x0000000000420d55: call 0x185b0; pop r13; pop r12; pop rbx; ret; 
0x0000000000417ee7: call 0x185b0; pop rbx; ret; 
0x000000000040a1a3: call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000414ade: call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000418647: call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000418699: call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041b078: call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041b848: call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000414a87: call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x0000000000418ae7: call 0x18b00; lea rsp, [rsp + 8]; ret; 
0x0000000000456825: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456835: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456845: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456855: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456868: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456888: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568a5: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b8: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568d5: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568e5: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f8: call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004194b2: call 0x19010; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004190a5: call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190d5: call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000042757d: call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004338f7: call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004480c6: call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf16: call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000419165: call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000450b62: call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000456b1d: call 0x19140; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x000000000040baac: call 0x19140; pop rbx; ret; 
0x000000000040dccc: call 0x19140; pop rbx; ret; 
0x000000000041394c: call 0x19140; pop rbx; ret; 
0x000000000042066b: call 0x19140; pop rbx; ret; 
0x0000000000456b25: call 0x19140; pop rbx; ret; 
0x0000000000419195: call 0x19170; lea rsp, [rsp + 8]; ret; 
0x00000000004191ec: call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x00000000004189b4: call 0x19220; call rbx; 
0x00000000004189b4: call 0x19220; call rbx; pop rbx; ret; 
0x0000000000454b6b: call 0x19220; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000414f95: call 0x19220; mov rax, r12; pop r13; pop r12; pop rbx; ret; 
0x00000000004338d4: call 0x19220; xor ebx, ebx; pop rbx; ret; 
0x0000000000419589: call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x0000000000419763: call 0x196a0; mov bl, 1; mov al, bl; pop rbx; ret; 
0x000000000041a0d4: call 0x19fc0; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000041b4f1: call 0x1a6e0; pop rbx; ret; 
0x000000000041aa77: call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aaa8: call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aad8: call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041ab09: call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041ab27: call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000044ce50: call 0x1acf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ce78: call 0x1ad10; lea rsp, [rsp + 8]; ret; 
0x000000000041a881: call 0x1ad10; pop r13; pop r12; pop rbx; ret; 
0x000000000044fa5c: call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa19: call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x000000000041a000: call 0x1ad70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044fa3c: call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa7c: call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000041a044: call 0x1ad70; pop rbx; ret; 
0x000000000041a339: call 0x1ad70; pop rbx; ret; 
0x000000000041adb7: call 0x1ad90; mov rdi, rbx; call 0x1add0; pop rbx; ret; 
0x000000000041b38c: call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x000000000041adbf: call 0x1add0; pop rbx; ret; 
0x000000000041b1d1: call 0x1af90; jmp 0x1b1e2; lea rax, [rip + 0x4d6e1]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b2a1: call 0x1af90; jmp 0x1b2b2; lea rax, [rip + 0x4d611]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b331: call 0x1af90; jmp 0x1b342; lea rax, [rip + 0x4d581]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b361: call 0x1af90; jmp 0x1b372; lea rax, [rip + 0x4d551]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b7: call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b188: call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a8: call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b228: call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b0d5: call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0f5: call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b135: call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b095: call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b115: call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b245: call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b3d3: call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x000000000043c161: call 0x1b3c5e2; jmp 0x3c16a; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x000000000041b5d5: call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x0000000000453365: call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6f5: call 0x1b660; lea rsp, [rsp + 8]; ret; 
0x000000000041b6e5: call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b8dc: call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b865: call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b875: call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b885: call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b895: call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a8: call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8c5: call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8f5: call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000041c4d6: call 0x1bbb0; mov dword ptr [rbx], 0xffffffff; pop rbx; ret; 
0x000000000041c4fd: call 0x1bdd0; movsxd rax, eax; mov qword ptr [rbx + 0x20], rax; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041cd00: call 0x1c270; pop rbx; ret; 
0x0000000000421b20: call 0x1c270; pop rbx; ret; 
0x000000000045c255: call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c215: call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x0000000000426bab: call 0x1c7c0; lea rax, [rip - 0x67]; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000041d8aa: call 0x1c7c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045c145: call 0x1c840; lea rsp, [rsp + 8]; ret; 
0x000000000045c18b: call 0x1c8c0; lea rsp, [rsp + 8]; ret; 
0x000000000045c265: call 0x1c950; lea rsp, [rsp + 8]; ret; 
0x000000000041cb2f: call 0x1ca10; pop rbx; ret; 
0x000000000041cb7c: call 0x1ca10; pop rbx; ret; 
0x000000000041cbcf: call 0x1ca10; pop rbx; ret; 
0x0000000000456704: call 0x1cbe0; call 0x17d50; pop rbx; ret; 
0x000000000041814c: call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x000000000041d2ef: call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041d46f: call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d5df: call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d76f: call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000045c1c4: call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1fe: call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c23e: call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041db4d: call 0x1d9a0; cmp qword ptr [rbx + 0x40], 0; je 0x1dbbb; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x0000000000401369: call 0x1daf0; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004014f4: call 0x1daf0; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010c4: call 0x1daf0; call 0x17d50; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041b06e: call 0x1daf0; mov edi, 0xe8; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041eabf: call 0x1dbc0; pop r13; pop r12; pop rbx; ret; 
0x000000000041eb39: call 0x1dcb0; pop r13; pop r12; pop rbx; ret; 
0x0000000000402e7a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fca: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045722a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045724a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045726a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045728a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x00000000004572aa: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045732a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045734a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000045c82a: call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402a5d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aad: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b4d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402bad: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402bed: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dcd: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402eed: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e1d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004570fd: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004572cc: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004572ec: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045736d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045738d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045745d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045752d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000458acd: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c80d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c84d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c93d: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045cafd: call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b70: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b90: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402bd0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e40: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e60: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402ed0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f10: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f60: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403040: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403060: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403080: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004030a0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004030c0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e00: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e42: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456eb0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457310: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004573b0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457400: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457440: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574c0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004575a0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457690: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457770: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000458a70: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000458a90: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000458ab0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8d0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8f0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb40: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb60: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb80: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cba0: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cbbe: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cbde: call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402a8c: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ad6: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b03: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b26: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f83: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402fa6: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ff3: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000456e93: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004573da: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457421: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457483: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574a3: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574e3: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045750a: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457582: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457716: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457746: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca86: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045cb25: call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045766c: call 0x1ea0; pop r13; pop r12; pop rbx; ret; 
0x0000000000402e21: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ea9: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000040301c: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000456e6c: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000457209: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576b9: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576e9: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c876: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c8a9: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c919: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9f6: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca28: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca58: call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045755c: call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x0000000000402f3d: call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c973: call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c9a5: call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c9d2: call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000041f9ae: call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x000000000041f9d2: call 0x1f820; movsxd rax, eax; add rax, rbx; mov byte ptr [rax], 0; pop rbx; ret; 
0x000000000041fd5f: call 0x1fc30; movsxd rax, r13d; lea rsi, [rax + 1]; lea rdi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x000000000040df44: call 0x1fd0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df94: call 0x1fd0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040353a: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040701f: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040709f: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b99a: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040b9c7: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040ba00: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000455b13: call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000403d38: call 0x1fd0; mov byte ptr [rbx], r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f0d9: call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x000000000044f136: call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x0000000000447e7a: call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x000000000044b93d: call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x000000000040355e: call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x000000000042ee5a: call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000403a0f: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040b39f: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040dffa: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f2b5: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f4a5: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040ffee: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000044c0cc: call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x0000000000420868: call 0x20780; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac8: call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x000000000042433a: call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fc5: call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c125: call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x0000000000421fd5: call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c115: call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fe5: call 0x20e20; lea rsp, [rsp + 8]; ret; 
0x0000000000421ff5: call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e5: call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042200b: call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000045c0fb: call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x0000000000422390: call 0x20fb0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000422035: call 0x20fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000422473: call 0x20fb0; pop r13; pop r12; pop rbx; ret; 
0x00000000004211da: call 0x20fb0; pop rbx; ret; 
0x0000000000422025: call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000042122a: call 0x210a0; pop rbx; ret; 
0x0000000000421388: call 0x21240; mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213e8: call 0x21240; mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421355: call 0x21240; mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213b4: call 0x21240; mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215d8: call 0x21490; mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421638: call 0x21490; mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215a5: call 0x21490; mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421604: call 0x21490; mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000422699: call 0x21650; jmp 0x226a4; mov byte ptr [rbx + 0x10], 1; pop rbx; ret; 
0x000000000042232b: call 0x21650; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042240e: call 0x21650; pop r13; pop r12; pop rbx; ret; 
0x000000000045c135: call 0x21a20; lea rsp, [rsp + 8]; ret; 
0x000000000045c2b5: call 0x21fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2a5: call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004226da: call 0x21fe0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004222a5: call 0x21fe0; lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x000000000045c275: call 0x21ff0; lea rsp, [rsp + 8]; ret; 
0x000000000045c28b: call 0x22000; lea rsp, [rsp + 8]; ret; 
0x000000000040344b: call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040346b: call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040348b: call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034d7: call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004151bc: call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000427214: call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000420d6b: call 0x22e0; mov dword ptr [rbx], 0xffffffff; mov dword ptr [rbx + 4], 0xd7b0; pop rbx; ret; 
0x000000000041a3ae: call 0x22e0; mov rax, rbx; pop rbx; ret; 
0x000000000041a6cb: call 0x22e0; pop rbx; ret; 
0x00000000004532ba: call 0x23030; lea rsp, [rsp + 8]; ret; 
0x00000000004237db: call 0x23540; lea rsp, [rsp + 8]; ret; 
0x000000000042383d: call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423891: call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x00000000004238e1: call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423873: call 0x23aa0; lea rsp, [rsp + 8]; ret; 
0x00000000004238b7: call 0x23aa0; lea rsp, [rsp + 8]; ret; 
0x0000000000423907: call 0x23aa0; lea rsp, [rsp + 8]; ret; 
0x00000000004029d7: call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x0000000000401043: call 0x23bc0; ret; 
0x000000000041834a: call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000423ebf: call 0x23c80; mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x0000000000404526: call 0x2400; jmp 0x452f; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004034ab: call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004241f6: call 0x24170; lea rsi, [rip + 0x60dbe]; mov edi, 4; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x0000000000424207: call 0x24170; lea rsp, [rsp + 8]; ret; 
0x00000000004245da: call 0x24350; pop rbx; ret; 
0x0000000000402da5: call 0x2464baf2; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b19: call 0x2464c866; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040ae6e: call 0x24653bbb; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040c95d: call 0x246556aa; sbb byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb2e: call 0x2465587b; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040f75b: call 0x246584a8; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000416faf: call 0x2465fcfc; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042076b: call 0x246694b8; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef4c: call 0x24677c99; jo 0x2ef94; pop rbp; pop r12; pop rbx; ret; 
0x0000000000449373: call 0x246920c0; jo 0x493bb; pop rbp; pop r12; pop rbx; ret; 
0x000000000044b113: call 0x24693e60; jo 0x4b15b; pop rbp; pop r12; pop rbx; ret; 
0x000000000045a183: call 0x246a2ed0; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045a215: call 0x246a2f62; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044ba7d: call 0x2480; shl rax, 1; add rax, rbx; pop rbx; ret; 
0x0000000000424da7: call 0x24d10; lea rsp, [rsp + 8]; ret; 
0x0000000000424d63: call 0x24d10; mov al, bl; pop rbx; ret; 
0x0000000000424df7: call 0x24d10; pop r13; pop r12; pop rbx; ret; 
0x0000000000427521: call 0x24dc0; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x000000000042512d: call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d1c: call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d3c: call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d5c: call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000425822: call 0x24ee0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000425531: call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004262ac: call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425402: call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000425443: call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000425465: call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000425486: call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x00000000004254aa: call 0x253d0; xor edi, edi; call 0x25410; lea rsp, [rsp + 8]; ret; 
0x00000000004254b1: call 0x25410; lea rsp, [rsp + 8]; ret; 
0x000000000042560e: call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf8: call 0x25620; lea rsp, [rsp + 8]; ret; 
0x00000000004034c5: call 0x2580; lea rsp, [rsp + 8]; ret; 
0x0000000000426bef: call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c2f: call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000425b66: call 0x25ac0; movzx edi, bl; call 0x25ac0; pop rbx; ret; 
0x0000000000425b6e: call 0x25ac0; pop rbx; ret; 
0x00000000004147cc: call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000040bad8: call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf8: call 0x2620; lea rsp, [rsp + 8]; ret; 
0x00000000004146f9: call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000450221: call 0x2750; mov eax, dword ptr [rip + 0x28334]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x000000000042ee20: call 0x27590; lea rsp, [rsp + 8]; ret; 
0x00000000004277bd: call 0x275f0; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004048b5: call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000404995: call 0x2760; lea rsp, [rsp + 8]; ret; 
0x00000000004048c5: call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004049a5: call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004048d5: call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004049b5: call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004048e5: call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004049c5: call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004279d5: call 0x27980; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000403390: call 0x27c0; lea rdx, [rip + 0x655e4]; mov dword ptr [rdx], eax; call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x0000000000404f85: call 0x27c0; lea rsp, [rsp + 8]; ret; 
0x00000000004067a8: call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a5d: call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d4d: call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000428e65: call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000414e08: call 0x2950; pop r13; pop r12; pop rbx; ret; 
0x0000000000415010: call 0x2950; pop rbx; ret; 
0x000000000042981c: call 0x297b0; pop rbx; ret; 
0x0000000000429955: call 0x29900; lea rsp, [rsp + 8]; ret; 
0x0000000000423bc4: call 0x2990; call qword ptr [rbx + 0x28]; 
0x0000000000423bc4: call 0x2990; call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x0000000000429965: call 0x29970; lea rsp, [rsp + 8]; ret; 
0x0000000000456037: call 0x29f0; cmp eax, 4; je 0x56010; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456055: call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000423f5d: call 0x2a20; mov al, r12b; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000401e1c: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e4f: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e82: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ec5: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f08: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f4b: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f8f: call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000418ffd: call 0x2a20; mov rax, rbx; pop rbx; ret; 
0x00000000004557c8: call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x0000000000459ccb: call 0x2a50; mov rdi, rax; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x000000000045849e: call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004583ba: call 0x2a70; lea rsp, [rsp + 8]; ret; 
0x000000000045a09e: call 0x2aa0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f85: call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x0000000000458375: call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b095: call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x0000000000458385: call 0x2b10; lea rsp, [rsp + 8]; ret; 
0x000000000045862b: call 0x2b80; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042bc0c: call 0x2bba0; pop rbx; ret; 
0x000000000042bd65: call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x000000000042bd75: call 0x2bd80; lea rsp, [rsp + 8]; ret; 
0x00000000004585d4: call 0x2c00; lea rsp, [rsp + 0x108]; ret; 
0x000000000042d2f2: call 0x2d0e0; pop r13; pop r12; pop rbx; ret; 
0x000000000042db0c: call 0x2da60; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db3c: call 0x2db50; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042439c: call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x000000000042fc95: call 0x2e350; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e37b: call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e3eb: call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e408: call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x00000000004582e7: call 0x2e50; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000458307: call 0x2e50; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e598: call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x000000000042e640: call 0x2e650; mov rsp, rbp; pop rbp; ret; 
0x000000000042f20d: call 0x2e7a0; mov rsp, rbp; pop rbp; ret; 
0x00000000004588f5: call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x0000000000458b3c: call 0x2e90; mov eax, dword ptr [rsp]; shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b7c: call 0x2e90; mov eax, dword ptr [rsp]; shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042eba1: call 0x2ebb0; mov rsp, rbp; pop rbp; ret; 
0x00000000004586a7: call 0x2ee0; mov dword ptr [rbx], eax; pop rbx; ret; 
0x000000000042ef6a: call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x000000000045876c: call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x000000000042f0d7: call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x000000000042f2f3: call 0x2f330; pop r13; pop r12; pop rbx; ret; 
0x000000000042f2c1: call 0x2f3e0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f322: call 0x2f3e0; pop r13; pop r12; pop rbx; ret; 
0x0000000000419015: call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x000000000042f87d: call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x0000000000403330: call 0x2f90; cmp eax, -1; setne al; lea rsp, [rsp + 0x108]; ret; 
0x0000000000426cde: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b86d: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b96d: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b98d: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9ad: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9cf: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9ed: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba0d: call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000426c93: call 0x2f90; pop rbx; ret; 
0x00000000004315c3: call 0x2fb98ce; setb al; lea rsp, [rsp + 8]; ret; 
0x000000000043187b: call 0x2fb9b86; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a03: call 0x2fb9d0e; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cbb: call 0x2fb9fc6; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e3e: call 0x2fba149; setb al; mov rsp, rbp; pop rbp; ret; 
0x000000000043216b: call 0x2fba476; setb al; lea rsp, [rsp + 8]; ret; 
0x00000000004243f5: call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042fcff: call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd73: call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd3e: call 0x2fe00; pop r13; pop r12; pop rbx; ret; 
0x000000000042fda2: call 0x2fe00; pop r13; pop r12; pop rbx; ret; 
0x00000000004300ca: call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301aa: call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x00000000004302e5: call 0x302f0; pop r13; pop r12; pop rbx; ret; 
0x0000000000430347: call 0x30360; lea rsp, [rsp + 8]; ret; 
0x000000000043043b: call 0x30450; lea rsp, [rsp + 8]; ret; 
0x0000000000430617: call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306df: call 0x306f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430714: call 0x30720; mov rsp, rbp; pop rbp; ret; 
0x0000000000430501: call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x000000000043059e: call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004307cd: call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430aef: call 0x30b00; mov rsp, rbp; pop rbp; ret; 
0x00000000004306be: call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c2d: call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000456b64: call 0x30d0; lea rsp, [rsp + 0x108]; ret; 
0x0000000000430f97: call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004310b5: call 0x310c0; pop r13; pop r12; pop rbx; ret; 
0x00000000004311c1: call 0x311d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431584: call 0x313f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431574: call 0x314b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000433a61: call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433ac1: call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000042edf5: call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000043129e: call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312be: call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ece5: call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043125e: call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043127e: call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000433de5: call 0x33bb0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000040339e: call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e5: call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x0000000000433d85: call 0x33c90; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433a9c: call 0x342a0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427a05: call 0x342a0; lea rsp, [rsp + 8]; ret; 
0x0000000000433afc: call 0x342c0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004279f5: call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000434245: call 0x342e0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434225: call 0x34320; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004312de: call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312fe: call 0x34510; lea rsp, [rsp + 8]; ret; 
0x000000000043131e: call 0x34550; lea rsp, [rsp + 8]; ret; 
0x000000000043028e: call 0x34590; lea rsp, [rsp + 8]; ret; 
0x00000000004302b4: call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x000000000043459a: call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x000000000040d69e: call 0x3460; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040768a: call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000409177: call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000041da77: call 0x3460; sub r12d, r13d; movsxd rax, r13d; add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000439798: call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x00000000004034fb: call 0x3480; lea rsp, [rsp + 8]; ret; 
0x000000000043487e: call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000042ed55: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432321: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000043243e: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000043250f: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000043262e: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004326fe: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000043281e: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328f1: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432a0e: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb5: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432dcd: call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed45: call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e95: call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432fae: call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433285: call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043339e: call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432acd: call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432bfd: call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433075: call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004331be: call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433465: call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335ae: call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004323ee: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325de: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327ce: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329be: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432d7d: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434ec4: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434ee6: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f13: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f36: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f5a: call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432f5e: call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x000000000043334e: call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434ea5: call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434f82: call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434f9a: call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fba: call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000432bad: call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043315e: call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043354e: call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004325fe: call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x000000000043240e: call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x00000000004327ee: call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x00000000004329de: call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x0000000000432d9d: call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bcd: call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f7e: call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x000000000043336e: call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x000000000043317e: call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000043356e: call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004322e5: call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b5: call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000042edc5: call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431108: call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa5: call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c95: call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324d5: call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326c5: call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e65: call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433045: call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433255: call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433435: call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edb5: call 0x35090; lea rsp, [rsp + 8]; ret; 
0x0000000000431128: call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351e5: call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352b5: call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352c5: call 0x35280; lea rsp, [rsp + 8]; ret; 
0x0000000000435305: call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x0000000000435375: call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353e5: call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000040a911: call 0x3550; mov rbx, qword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a990: call 0x3550; mov rbx, qword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a898: call 0x3550; mov rbx, qword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004368cb: call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e7a4: call 0x368c0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a44: call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b1b: call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b3b: call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x00000000004514f6: call 0x36bc0; lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x0000000000436bcb: call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x000000000042edd5: call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043114b: call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed75: call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043116b: call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed95: call 0x36c60; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043118b: call 0x36c60; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431655: call 0x36c90; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a72: call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a95: call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431ea2: call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec5: call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c72: call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436f8c: call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000437385: call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x00000000004396ca: call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x0000000000436fac: call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000043730d: call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000043734d: call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004396ed: call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004316ec: call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431705: call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004372ec: call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b2c: call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431b45: call 0x37340; lea rsp, [rsp + 8]; ret; 
0x000000000043732c: call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431fdc: call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff5: call 0x37380; lea rsp, [rsp + 8]; ret; 
0x000000000043736c: call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000438d89: call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x000000000043913f: call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000438e02: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e62: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438ec1: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f51: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004391af: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000043920f: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000439267: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392d7: call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438d14: call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x00000000004390d1: call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000043229e: call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322d2: call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f17: call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431f50: call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000438d47: call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed30: call 0x38d20; mov rsp, rbp; pop rbp; ret; 
0x0000000000438dba: call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431acc: call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae5: call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431dd2: call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431df6: call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000438e1c: call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043168c: call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004316a5: call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431992: call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004319b6: call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e7c: call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438eea: call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000438f0c: call 0x38f20; lea rsp, [rsp + 8]; ret; 
0x00000000004390a1: call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x0000000000432239: call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432275: call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f87: call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431fc0: call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000439107: call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x000000000043916a: call 0x39120; lea rsp, [rsp + 8]; ret; 
0x000000000043932e: call 0x39120; lea rsp, [rsp + 8]; ret; 
0x00000000004395b0: call 0x39120; lea rsp, [rsp + 8]; ret; 
0x000000000043957d: call 0x39150; lea rsp, [rsp + 8]; ret; 
0x0000000000431afc: call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431b15: call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431d7d: call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431da9: call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004391cc: call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316bc: call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316d5: call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043193d: call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431969: call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043922c: call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043929a: call 0x39240; lea rsp, [rsp + 8]; ret; 
0x00000000004392fc: call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x000000000043935a: call 0x39310; lea rsp, [rsp + 8]; ret; 
0x000000000042ed65: call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433645: call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336c5: call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433755: call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337e5: call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf7: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433671: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336b4: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336f1: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433739: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433781: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337cb: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433811: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433859: call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433685: call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433705: call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433795: call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433825: call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000439a9c: call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043a7b5: call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x00000000004242a7: call 0x3a8d42b1; call rax; 
0x0000000000439cbd: call 0x3aaa0; mov rsp, rbp; pop rbp; ret; 
0x000000000043b115: call 0x3ab40; mov rsp, rbp; pop rbp; ret; 
0x000000000043b205: call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x000000000043b1c7: call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x000000000043b22a: call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000042fcbe: call 0x3b3a0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043045e: call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x000000000043b428: call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x000000000042fc82: call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x000000000043b904: call 0x3b8e0; add rax, rbx; pop rbx; ret; 
0x000000000043babf: call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bade: call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bdcc: call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x000000000043e3b6: call 0x3cf90; mov rdi, rbx; mov esi, 0x40; call 0x3f800; pop rbx; ret; 
0x000000000041d7cb: call 0x3d10; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000424bc2: call 0x3d10; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x000000000042461b: call 0x3d10; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000413bb4: call 0x3d10; lea rsp, [rsp + 8]; ret; 
0x00000000004585ca: call 0x3da0; lea rdi, [rsp + 1]; call 0x2c00; lea rsp, [rsp + 0x108]; ret; 
0x0000000000456b5a: call 0x3da0; lea rdi, [rsp + 1]; call 0x30d0; lea rsp, [rsp + 0x108]; ret; 
0x00000000004183d6: call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045953c: call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043e3a0: call 0x3e370; pop rbx; ret; 
0x000000000043f7eb: call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x000000000043f7c7: call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x000000000043e3c3: call 0x3f800; pop rbx; ret; 
0x000000000043e6d2: call 0x3f800; pop rbx; ret; 
0x000000000043f1e4: call 0x3f800; pop rbx; ret; 
0x000000000043f8f0: call 0x3f900; lea rsp, [rsp + 8]; ret; 
0x0000000000407371: call 0x40045e96; mov al, bh; and eax, 0xff; ret; 
0x0000000000441c46: call 0x404c0; mov rdi, rbx; mov esi, 0x40; call 0x43280; pop rbx; ret; 
0x0000000000428db8: call 0x41028dbd; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042afed: call 0x4102aff2; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040cd04: call 0x41045651; pop rbp; pop r12; pop rbx; ret; 
0x0000000000404213: call 0x4190; lea rsp, [rsp + 8]; ret; 
0x000000000045b1e8: call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045b226: call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000044326b: call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000443247: call 0x43080; lea rsp, [rsp + 8]; ret; 
0x0000000000441c53: call 0x43280; pop rbx; ret; 
0x0000000000441f62: call 0x43280; pop rbx; ret; 
0x0000000000442c64: call 0x43280; pop rbx; ret; 
0x0000000000443370: call 0x43380; lea rsp, [rsp + 8]; ret; 
0x0000000000443f8b: call 0x435d0; cvtsi2sd xmm0, eax; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443fc1: call 0x43610; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443f37: call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000444051: call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000446f06: call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x00000000004437dc: call 0x43660; lea rsp, [rsp + 8]; ret; 
0x000000000044795c: call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x0000000000446efb: call 0x43a40; movsd xmm1, qword ptr [rsp + 0x20]; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443e87: call 0x43db0; sub word ptr [rbx + 6], 1; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443fe6: call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443d9d: call 0x44130; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444bfd: call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c41: call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c73: call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c9c: call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444ce7: call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d30: call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000040dad5: call 0x4510; lea rsp, [rsp + 8]; ret; 
0x00000000004458b8: call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458fc: call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000445921: call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000445955: call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004028f2: call 0x458b7192; call 0x48f496d5; mov esp, ebp; pop rbp; ret; 
0x0000000000445ed2: call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x00000000004441aa: call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044422a: call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004442ba: call 0x46010; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444312: call 0x46060; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x00000000004441f0: call 0x46060; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444270: call 0x46060; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000446d27: call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x000000000042d7fa: call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d81a: call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004470e3: call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x0000000000447102: call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x0000000000447123: call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f27: call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472b7: call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004473a7: call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x000000000044752c: call 0x47540; lea rsp, [rsp + 8]; ret; 
0x00000000004476b7: call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476d7: call 0x47810; lea rsp, [rsp + 8]; ret; 
0x0000000000447857: call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447877: call 0x47910; lea rsp, [rsp + 8]; ret; 
0x0000000000434265: call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434285: call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000447e1c: call 0x479d0; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427a6b: call 0x47a90; lea rsp, [rsp + 8]; ret; 
0x0000000000427a4b: call 0x47b50; lea rsp, [rsp + 8]; ret; 
0x0000000000447e5a: call 0x47c60; mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000042e5d0: call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x0000000000448051: call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000427a35: call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x000000000043b189: call 0x47f90; mov rbx, qword ptr [rbp - 0x598]; mov rsp, rbp; pop rbp; ret; 
0x000000000042778b: call 0x48037794; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c69d: call 0x4804c6a2; lea esp, [rsp + 8]; ret; 
0x0000000000454ac9: call 0x48084bcf; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000455b25: call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x00000000004480bf: call 0x48350bc8; mov edi, eax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf0f: call 0x48354a18; mov edi, eax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044994b: call 0x48570; mov rsp, rbp; pop rbp; ret; 
0x000000000040f8cf: call 0x48a40d5; and al, 0xeb; or dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004028f7: call 0x48f496d5; mov esp, ebp; pop rbp; ret; 
0x00000000004028f6: call 0x48f496d5; mov esp, ebp; pop rbp; ret; 
0x00000000004086fc: call 0x490086ff; mov esp, ebp; pop rbp; ret; 
0x000000000040a8a7: call 0x4900a8aa; mov esp, ebp; pop rbp; ret; 
0x000000000040d1bd: call 0x4900d1c0; mov esp, ebp; pop rbp; ret; 
0x000000000041035b: call 0x4901035e; mov esp, ebp; pop rbp; ret; 
0x000000000041e7c8: call 0x4901e7cb; mov esp, ebp; pop rbp; ret; 
0x000000000041e896: call 0x4901e899; mov esp, ebp; pop rbp; ret; 
0x000000000043b254: call 0x4903af73; lea esp, [rsp + 8]; ret; 
0x000000000045c974: call 0x4905c3ce; lea esp, [rsp + 8]; ret; 
0x0000000000449ab4: call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b7b: call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x000000000044baac: call 0x49b90; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bc37: call 0x49bc0; mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x0000000000449c18: call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044a1e1: call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a201: call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044b6eb: call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x000000000044b854: call 0x4b700; mov rsp, rbp; pop rbp; ret; 
0x000000000044b91b: call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044be9a: call 0x4b930; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000044b9b1: call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f8: call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x000000000044c6fa: call 0x4c710; pop r13; pop r12; pop rbx; ret; 
0x000000000044c925: call 0x4c930; lea rsp, [rsp + 8]; ret; 
0x000000000040a71a: call 0x4d00a71c; mov esp, dword ptr [rbp - 0x210]; mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a7fa: call 0x4d00a7fc; mov esp, dword ptr [rbp - 0x210]; mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa21: call 0x4d00aa24; mov esp, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000045445c: call 0x4d05445f; mov esi, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d0bc: call 0x4d0d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bf4c: call 0x4d8d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c00c: call 0x4e0f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404f75: call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x0000000000455b9f: call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000455bc7: call 0x50410; lea rsp, [rsp + 8]; ret; 
0x00000000004509d9: call 0x50890; lea rsp, [rsp + 8]; ret; 
0x0000000000405084: call 0x5090; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb8: call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x0000000000431ec4: call 0x50e5b1; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000452b4c: call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000452c8d: call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x000000000045367a: call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x0000000000453875: call 0x535c0; xor eax, eax; pop rbx; ret; 
0x00000000004479a5: call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x0000000000453cec: call 0x53af0; pop rbx; ret; 
0x0000000000453ce3: call 0x53bc0; mov edi, eax; mov esi, ebx; call 0x53af0; pop rbx; ret; 
0x0000000000453ce2: call 0x53bc0; mov edi, eax; mov esi, ebx; call 0x53af0; pop rbx; ret; 
0x0000000000453f68: call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x00000000004546ce: call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x000000000042d7bc: call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7dc: call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x00000000004559ce: call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000455a11: call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004558c9: call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455963: call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045599d: call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455b2a: call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x0000000000452b45: call 0x56050; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x00000000004507d7: call 0x56300; lea rsp, [rsp + 8]; ret; 
0x0000000000450878: call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x0000000000456adc: call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000456b01: call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000456f6a: call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000456f87: call 0x56f10; mov edi, eax; call 0x56f50; lea rsp, [rsp + 8]; ret; 
0x0000000000456f8e: call 0x56f50; lea rsp, [rsp + 8]; ret; 
0x00000000004587f5: call 0x57540; lea rsp, [rsp + 0x18]; ret; 
0x00000000004581a5: call 0x57590; lea rsp, [rsp + 8]; ret; 
0x0000000000458395: call 0x576a0; lea rsp, [rsp + 8]; ret; 
0x00000000004583a5: call 0x576d0; lea rsp, [rsp + 8]; ret; 
0x0000000000459a86: call 0x58370; lea rsp, [rsp + 8]; ret; 
0x00000000004261f1: call 0x587a0; lea rsp, [rsp + 8]; ret; 
0x00000000004588dd: call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459de7: call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e07: call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000453d05: call 0x58ac0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045a235: call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x0000000000459061: call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000459081: call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000459097: call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000458fd7: call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000459001: call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000459021: call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000459037: call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x00000000004594c1: call 0x59320; lea rsp, [rsp + 8]; ret; 
0x0000000000459cd3: call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x0000000000459dca: call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b845: call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dc5: call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b855: call 0x59cf0; lea rsp, [rsp + 8]; ret; 
0x0000000000459efb: call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x0000000000426e97: call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x000000000045ba57: call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x000000000045bb4d: call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000045bc37: call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x0000000000417b06: call 0x5bc9ac1d; ret; 
0x0000000000446e6b: call 0x5bfd0; lea rsp, [rsp + 0x28]; ret; 
0x000000000040dabf: call 0x5c423805; pop rbx; ret; 
0x000000000040eee2: call 0x5c424c28; pop rbx; ret; 
0x000000000041960c: call 0x5c42f352; pop rbx; ret; 
0x000000000041a0db: call 0x5c42fe21; pop rbx; ret; 
0x000000000044bea1: call 0x5c461be7; pop rbx; ret; 
0x000000000044d097: call 0x5c462ddd; pop rbx; ret; 
0x000000000045761a: call 0x5c46d360; pop rbx; ret; 
0x000000000045c7f5: call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x000000000045cad7: call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x000000000040954f: call 0x5ded1e9c; ret; 
0x000000000040b7cd: call 0x5ded411a; ret; 
0x000000000041849a: call 0x5dee0de7; ret; 
0x000000000042e16e: call 0x5def6abb; ret; 
0x000000000042e16d: call 0x5def6abb; ret; 
0x000000000042e337: call 0x5def6c84; ret; 
0x000000000042fa19: call 0x5def8366; ret; 
0x00000000004304d3: call 0x5def8e20; ret; 
0x00000000004393f5: call 0x5df01d42; ret; 
0x00000000004393f4: call 0x5df01d42; ret; 
0x000000000043955a: call 0x5df01ea7; ret; 
0x000000000043b394: call 0x5df03ce1; ret; 
0x000000000043d07b: call 0x5df059c8; ret; 
0x000000000043d0ff: call 0x5df05a4c; ret; 
0x000000000043e643: call 0x5df06f90; ret; 
0x000000000043f8ce: call 0x5df0821b; ret; 
0x000000000043f8cd: call 0x5df0821b; ret; 
0x000000000043fa6b: call 0x5df083b8; ret; 
0x00000000004405ab: call 0x5df08ef8; ret; 
0x000000000044062f: call 0x5df08f7c; ret; 
0x0000000000441ed3: call 0x5df0a820; ret; 
0x000000000044334e: call 0x5df0bc9b; ret; 
0x000000000044334d: call 0x5df0bc9b; ret; 
0x00000000004434ec: call 0x5df0be39; ret; 
0x000000000044d3cc: call 0x5df15d19; ret; 
0x000000000044d51a: call 0x5df15e67; ret; 
0x000000000044d702: call 0x5df1604f; ret; 
0x000000000044dc10: call 0x5df1655d; ret; 
0x000000000044ddb8: call 0x5df16705; ret; 
0x00000000004513c6: call 0x5df19d13; ret; 
0x0000000000414324: call 0x5e42a26a; pop r13; pop r12; pop rbx; ret; 
0x00000000004501fa: call 0x5e466140; pop r13; pop r12; pop rbx; ret; 
0x0000000000453ea8: call 0x5e469dee; pop r13; pop r12; pop rbx; ret; 
0x000000000042fcc5: call 0x649044cb; and al, 8; ret; 
0x000000000043426c: call 0x64908a72; and al, 8; ret; 
0x000000000043428c: call 0x64908a92; and al, 8; ret; 
0x0000000000458b45: call 0x6492d352; and al, 0x10; pop rbx; ret; 
0x0000000000458b85: call 0x6492d392; and al, 0x10; pop rbx; ret; 
0x0000000000404eb9: call 0x6540; lea rsp, [rsp + 8]; ret; 
0x000000000044bb6d: call 0x6608a692; mov eax, ebx; and eax, 0xffff; pop rbx; ret; 
0x00000000004321e8: call 0x6770; lea rsp, [rsp + 8]; ret; 
0x0000000000432145: call 0x6790; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432135: call 0x67c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432065: call 0x6820; lea rsp, [rsp + 8]; ret; 
0x00000000004320f5: call 0x6830; lea rsp, [rsp + 8]; ret; 
0x0000000000432085: call 0x6850; lea rsp, [rsp + 8]; ret; 
0x0000000000432115: call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321c5: call 0x6880; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e78: call 0x6880; cmp eax, 6; sete al; mov rsp, rbp; pop rbp; ret; 
0x00000000004321a5: call 0x6880; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e58: call 0x6880; cmp eax, 7; sete al; mov rsp, rbp; pop rbp; ret; 
0x0000000000432185: call 0x6880; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e18: call 0x6880; cmp eax, 8; sete al; mov rsp, rbp; pop rbp; ret; 
0x0000000000432205: call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000432125: call 0x69a0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c95: call 0x6a50; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c85: call 0x6a70; lea rsp, [rsp + 8]; ret; 
0x0000000000431bb5: call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c45: call 0x6b00; lea rsp, [rsp + 8]; ret; 
0x0000000000431bd5: call 0x6b30; lea rsp, [rsp + 8]; ret; 
0x0000000000431c65: call 0x6b50; lea rsp, [rsp + 8]; ret; 
0x0000000000431bc5: call 0x6b80; lea rsp, [rsp + 8]; ret; 
0x0000000000431c55: call 0x6ba0; lea rsp, [rsp + 8]; ret; 
0x0000000000406cf2: call 0x6ba0; pop r13; pop r12; pop rbx; ret; 
0x0000000000431a4d: call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d15: call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cf5: call 0x6bd0; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd5: call 0x6bd0; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d55: call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c75: call 0x6ca0; lea rsp, [rsp + 8]; ret; 
0x00000000004318f8: call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x0000000000431855: call 0x6d40; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431845: call 0x6d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431775: call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431805: call 0x6dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431795: call 0x6df0; lea rsp, [rsp + 8]; ret; 
0x0000000000431825: call 0x6e00; lea rsp, [rsp + 8]; ret; 
0x0000000000431785: call 0x6e20; lea rsp, [rsp + 8]; ret; 
0x0000000000431815: call 0x6e30; lea rsp, [rsp + 8]; ret; 
0x0000000000406f67: call 0x6e30; pop r13; pop r12; pop rbx; ret; 
0x000000000043160d: call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004318d5: call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431895: call 0x6e50; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431915: call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x0000000000431835: call 0x6f20; lea rsp, [rsp + 8]; ret; 
0x0000000000416c43: call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416aad: call 0x7250; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000416a60: call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c03: call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004075eb: call 0x7520; lea rsp, [rsp + 8]; ret; 
0x000000000040760b: call 0x7560; lea rsp, [rsp + 8]; ret; 
0x000000000040762b: call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x000000000040a043: call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed94: call 0x81b481; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000403409: call 0x8e7f516; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000403429: call 0x8e7f536; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404879: call 0x8e80986; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404899: call 0x8e809a6; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404959: call 0x8e80a66; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404979: call 0x8e80a86; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e29: call 0x8e80f36; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e49: call 0x8e80f56; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040ae85: call 0x9560; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000410148: call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x000000000040cfdc: call 0xae80; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000413bc9: call 0xb3b0; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000040b7e9: call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x000000000040b8cb: call 0xb800; lea rsp, [rsp + 8]; ret; 
0x000000000040cca9: call 0xba80; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000456a27: call 0xba80; lea rsp, [rsp + 8]; ret; 
0x000000000040bb1d: call 0xba80; mov qword ptr [rbx], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004338cc: call 0xba80; mov rdi, rbx; call 0x19220; xor ebx, ebx; pop rbx; ret; 
0x000000000042a57a: call 0xbaf0; lea rsp, [rsp + 0x60]; pop r13; pop r12; pop rbx; ret; 
0x000000000042fc53: call 0xbaf0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a3e: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042a595: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000043391b: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004353f7: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000043995a: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453377: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7de: call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004338a4: call 0xbaf0; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042bc04: call 0xbaf0; mov rdi, rbx; call 0x2bba0; pop rbx; ret; 
0x000000000042e5f4: call 0xbaf0; mov rdi, rbx; call 0xcd10; pop rbx; ret; 
0x0000000000435416: call 0xbaf0; mov rsp, rbp; pop rbp; ret; 
0x000000000041452e: call 0xbaf0; pop rbx; ret; 
0x0000000000420702: call 0xbaf0; pop rbx; ret; 
0x0000000000450534: call 0xbaf0; pop rbx; ret; 
0x0000000000433943: call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x00000000004146a2: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004323c7: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004325b7: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004327a7: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432997: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432b86: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d56: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432f37: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433137: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433327: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433527: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b5c: call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000447f97: call 0xc590; lea rsp, [rsp + 8]; ret; 
0x0000000000450455: call 0xc590; pop r13; pop r12; pop rbx; ret; 
0x0000000000455b84: call 0xc590; pop rbx; ret; 
0x000000000042f1e8: call 0xca70; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042be2f: call 0xcd10; mov byte ptr [rax], 0x2f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042e5fc: call 0xcd10; pop rbx; ret; 
0x000000000042bdb7: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004310d2: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004344fc: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000434542: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000434584: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b253: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b2a8: call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000042a409: call 0xcd40; pop r13; pop r12; pop rbx; ret; 
0x0000000000427a1a: call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000042ee83: call 0xce80; test rax, rax; setg al; lea rsp, [rsp + 8]; ret; 
0x0000000000430317: call 0xd400; pop r13; pop r12; pop rbx; ret; 
0x000000000042be78: call 0xd400; pop rbx; ret; 
0x000000000042e61b: call 0xd670; lea rsp, [rsp + 8]; ret; 
0x000000000040d9c4: call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x0000000000434b07: call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b57: call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434ba7: call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bf7: call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434c46: call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000457bb6: call 0xd950; lea rsp, [rsp + 0x1010]; pop rbx; ret; 
0x000000000040d1ae: call 0xd950; mov rbx, qword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c57b: call 0xd950; pop r13; pop r12; pop rbx; ret; 
0x000000000040d75e: call 0xd950; pop r13; pop r12; pop rbx; ret; 
0x00000000004117b8: call 0xd950; pop rbx; ret; 
0x000000000042304e: call 0xd950; pop rbx; ret; 
0x000000000040dc81: call 0xdc00; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040f080: call 0xdca0; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e168: call 0xdca0; mov qword ptr [rbx], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041039d: call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103dc: call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041046c: call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104ac: call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410429: call 0xdde0; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000410353: call 0xdde0; mov rbx, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ba25: call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x000000000042802d: call 0xe140; lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x00000000004283b9: call 0xe140; lea rsp, [rsp + 0x60]; pop r13; pop r12; pop rbx; ret; 
0x00000000004283d5: call 0xe140; lea rsp, [rsp + 8]; ret; 
0x0000000000429814: call 0xe140; mov rdi, rbx; call 0x297b0; pop rbx; ret; 
0x00000000004208a5: call 0xe140; pop rbx; ret; 
0x0000000000429941: call 0xe180; pop rbx; ret; 
0x0000000000429a0c: call 0xe180; pop rbx; ret; 
0x0000000000410047: call 0xef70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040f125: call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x000000000044a081: call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000044a0ba: call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000044a0ff: call 0xf770; lea rsp, [rsp + 8]; ret; 
0x00000000004299b7: call 0xf770; pop r13; pop r12; pop rbx; ret; 
0x0000000000429a5c: call 0xfb70; pop rbx; ret; 
0x0000000000404e05: call 0xff730e; add byte ptr [rax], al; ret; 
0x000000000043abd9: call 0xffffffff834821df; call 0xffffffffa987bae4; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000425ceb: call 0xffffffff8351d0f1; call 0xffffffffc8866bf6; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x00000000004258d4: call 0xffffffff88e2821d; ret; 
0x0000000000441c48: call 0xffffffff894d1c4c; fistp qword ptr [rsi + 0x40]; call 0x43280; pop rbx; ret; 
0x000000000040670a: call 0xffffffff8955db14; ret 0xe283; 
0x0000000000417ae5: call 0xffffffff89d1abf5; ret 0xe2c1; 
0x00000000004463b8: call 0xffffffff89f48d09; ret 0x8948; 
0x00000000004465ea: call 0xffffffff89f48f3b; ret 0x8948; 
0x000000000040d858: call 0xffffffff8d48e348; adc eax, 0x752be; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d857: call 0xffffffff8d48e348; adc eax, 0x752be; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411588: call 0xffffffff8d492078; adc eax, 0x7159e; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411587: call 0xffffffff8d492078; adc eax, 0x7159e; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000415768: call 0xffffffff8d495773; and al, 8; ret; 
0x0000000000415788: call 0xffffffff8d495793; and al, 8; ret; 
0x00000000004157a8: call 0xffffffff8d4957b3; and al, 8; ret; 
0x0000000000459a88: call 0xffffffff8d4e9a8c; and al, 8; ret; 
0x000000000045a237: call 0xffffffff8d4ea23b; and al, 8; ret; 
0x000000000043abde: call 0xffffffffa987bae4; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000045298a: call 0xffffffffbb893890; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret 0; 
0x000000000043f1d9: call 0xffffffffc6053a1d; sar rsi, 1; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000442c59: call 0xffffffffc605749d; sar rsi, 1; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000425cf0: call 0xffffffffc8866bf6; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x0000000000432d14: call 0xffffffffdbfbb661; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432ef4: call 0xffffffffdffbb841; sub bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332e4: call 0xffffffffdffbbc31; sub bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041a6c7: call 0xffffffffe801a6cc; adc byte ptr [rsi + rdi*8 - 1], bh; pop rbx; ret; 
0x000000000045c8a5: call 0xffffffffe805c8aa; xor dl, byte ptr [rsi - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004094d7: call 0xfffffffff0562024; mov rsp, rbp; pop rbp; ret; 
0x00000000004094d6: call 0xfffffffff0562024; mov rsp, rbp; pop rbp; ret; 
0x00000000004044f7: call 0xfffffffff065d048; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4ee: call 0xfffffffff066403f; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b3: call 0xfffffffff0664104; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c75f: call 0xfffffffff06652b0; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7e6: call 0xfffffffff0667337; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e863: call 0xfffffffff06673b4; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab3: call 0xfffffffff0667604; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee65: call 0xfffffffff06679b6; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411b9c: call 0xfffffffff066a6ed; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa3c: call 0xfffffffff067858d; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6ac: call 0xfffffffff06881fd; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7fc: call 0xfffffffff068834d; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd4: call 0xfffffffff06a8925; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404479: call 0xfffffffff06dcfca; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404478: call 0xfffffffff06dcfca; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea34: call 0xfffffffff06e7585; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea33: call 0xfffffffff06e7585; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298e7: call 0xfffffffff0702438; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298e6: call 0xfffffffff0702438; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd4: call 0xfffffffff0704825; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd3: call 0xfffffffff0704825; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6a5: call 0xfffffffff07071f6; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6a4: call 0xfffffffff07071f6; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f708: call 0xfffffffff0708259; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f707: call 0xfffffffff0708259; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f85b: call 0xfffffffff07083ac; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f85a: call 0xfffffffff07083ac; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa4: call 0xfffffffff0708af5; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa3: call 0xfffffffff0708af5; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430008: call 0xfffffffff0708b59; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430007: call 0xfffffffff0708b59; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305f9: call 0xfffffffff070914a; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305f8: call 0xfffffffff070914a; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a52: call 0xfffffffff072c5a3; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a51: call 0xfffffffff072c5a3; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc2: call 0xfffffffff0734b13; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc1: call 0xfffffffff0734b13; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6e6: call 0xfffffffff0765237; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418ac2: call 0xfffffffff0771613; mov rsp, rbp; pop rbp; ret; 
0x000000000041def1: call 0xfffffffff0776a42; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e050: call 0xfffffffff0776ba1; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300a9: call 0xfffffffff0788bfa; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430567: call 0xfffffffff07890b8; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430687: call 0xfffffffff07891d8; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bb1: call 0xfffffffff078f702; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc12: call 0xfffffffff07b4763; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7b6: call 0xfffffffff0808307; mov rsp, rbp; pop rbp; ret; 
0x000000000042f9a0: call 0xfffffffff08084f1; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a5: call 0xfffffffff0809ff6; mov rsp, rbp; pop rbp; ret; 
0x000000000043155b: call 0xfffffffff080a0ac; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c4a: call 0xfffffffff080f79b; mov rsp, rbp; pop rbp; ret; 
0x0000000000402845: call 0xfffffffffdd9ea28; fstp st(1); mov rsp, rbp; pop rbp; ret; 
0x000000000040f1ad: call ptr [rbp]; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004528bd: call ptr [rdx + rax]; lea rax, [rsi + rcx]; ret; 
0x000000000041dffd: call ptr [rsi + rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000044c0cd: call ptr [rsi - 5]; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000412ff3: call qword ptr [rax + 0x10]; 
0x000000000041304c: call qword ptr [rax + 0x10]; 
0x00000000004130af: call qword ptr [rax + 0x10]; 
0x00000000004131af: call qword ptr [rax + 0x10]; 
0x000000000041427d: call qword ptr [rax + 0x10]; 
0x00000000004149c3: call qword ptr [rax + 0x10]; 
0x000000000041736a: call qword ptr [rax + 0x10]; 
0x00000000004484bc: call qword ptr [rax + 0x10]; 
0x0000000000449d34: call qword ptr [rax + 0x10]; 
0x0000000000449d44: call qword ptr [rax + 0x10]; 
0x00000000004149c3: call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x00000000004484bc: call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x00000000004130af: call qword ptr [rax + 0x10]; mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004131af: call qword ptr [rax + 0x10]; mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000412ff3: call qword ptr [rax + 0x10]; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000041304c: call qword ptr [rax + 0x10]; mov qword ptr [rbx], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044ee98: call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f028: call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f348: call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f648: call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea82: call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000041752f: call qword ptr [rax + 0x18]; 
0x00000000004484dc: call qword ptr [rax + 0x18]; 
0x00000000004484dc: call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484fe: call qword ptr [rax + 0x20]; 
0x000000000044851e: call qword ptr [rax + 0x20]; 
0x0000000000448541: call qword ptr [rax + 0x20]; 
0x0000000000448561: call qword ptr [rax + 0x20]; 
0x00000000004484fe: call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000448541: call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000044851e: call qword ptr [rax + 0x20]; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448561: call qword ptr [rax + 0x20]; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043b8ec: call qword ptr [rax + 0x28]; 
0x000000000043b8ec: call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000041fd77: call qword ptr [rax + 0x30]; 
0x000000000041ef54: call qword ptr [rax + 0x38]; 
0x00000000004342ac: call qword ptr [rax + 0x38]; 
0x000000000043b53e: call qword ptr [rax + 0x38]; 
0x000000000043b54e: call qword ptr [rax + 0x38]; 
0x00000000004342ac: call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x000000000041ef54: call qword ptr [rax + 0x38]; mov bl, 1; mov al, bl; pop rbx; ret; 
0x000000000041dae2: call qword ptr [rax + 0x40]; 
0x000000000041f622: call qword ptr [rax + 0x40]; 
0x00000000004342cc: call qword ptr [rax + 0x40]; 
0x000000000041dae2: call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f622: call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342cc: call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342ec: call qword ptr [rax + 0x48]; 
0x000000000043432c: call qword ptr [rax + 0x50]; 
0x0000000000445423: call qword ptr [rax + 0x50]; 
0x00000000004454a6: call qword ptr [rax + 0x50]; 
0x000000000043436c: call qword ptr [rax + 0x58]; 
0x000000000041369a: call qword ptr [rax + 0x60]; 
0x0000000000413738: call qword ptr [rax + 0x60]; 
0x0000000000414744: call qword ptr [rax + 0x60]; 
0x0000000000414933: call qword ptr [rax + 0x60]; 
0x00000000004343ac: call qword ptr [rax + 0x60]; 
0x000000000043c720: call qword ptr [rax + 0x60]; 
0x000000000043c899: call qword ptr [rax + 0x60]; 
0x000000000043ca7a: call qword ptr [rax + 0x60]; 
0x000000000043cbe8: call qword ptr [rax + 0x60]; 
0x000000000043cd2d: call qword ptr [rax + 0x60]; 
0x000000000043ce7f: call qword ptr [rax + 0x60]; 
0x000000000043fc50: call qword ptr [rax + 0x60]; 
0x000000000043fdc9: call qword ptr [rax + 0x60]; 
0x000000000043ffaa: call qword ptr [rax + 0x60]; 
0x0000000000440118: call qword ptr [rax + 0x60]; 
0x000000000044025d: call qword ptr [rax + 0x60]; 
0x00000000004403af: call qword ptr [rax + 0x60]; 
0x000000000044e72e: call qword ptr [rax + 0x60]; 
0x000000000044e886: call qword ptr [rax + 0x60]; 
0x000000000044ea20: call qword ptr [rax + 0x60]; 
0x000000000044ee44: call qword ptr [rax + 0x60]; 
0x000000000044efd4: call qword ptr [rax + 0x60]; 
0x000000000044f2eb: call qword ptr [rax + 0x60]; 
0x000000000044f988: call qword ptr [rax + 0x60]; 
0x000000000044fbee: call qword ptr [rax + 0x60]; 
0x0000000000451628: call qword ptr [rax + 0x60]; 
0x00000000004517e9: call qword ptr [rax + 0x60]; 
0x000000000045193b: call qword ptr [rax + 0x60]; 
0x0000000000451b0c: call qword ptr [rax + 0x60]; 
0x0000000000451c6e: call qword ptr [rax + 0x60]; 
0x0000000000451e47: call qword ptr [rax + 0x60]; 
0x0000000000451fb1: call qword ptr [rax + 0x60]; 
0x000000000045218a: call qword ptr [rax + 0x60]; 
0x000000000045259b: call qword ptr [rax + 0x60]; 
0x0000000000413738: call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x0000000000414744: call qword ptr [rax + 0x60]; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004343ec: call qword ptr [rax + 0x68]; 
0x000000000041370f: call qword ptr [rax + 0x70]; 
0x00000000004147a7: call qword ptr [rax + 0x70]; 
0x000000000043442c: call qword ptr [rax + 0x70]; 
0x000000000044f9f8: call qword ptr [rax + 0x70]; 
0x000000000044fcc1: call qword ptr [rax + 0x70]; 
0x000000000041370f: call qword ptr [rax + 0x70]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004147a7: call qword ptr [rax + 0x70]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f9f8: call qword ptr [rax + 0x70]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415187: call qword ptr [rax + 0x78]; 
0x000000000043446c: call qword ptr [rax + 0x78]; 
0x000000000043446c: call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x000000000043448c: call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x000000000040e6f8: call qword ptr [rax + 0x98]; lea rsp, [rsp + 8]; ret; 
0x0000000000411737: call qword ptr [rax + 0x98]; lea rsp, [rsp + 8]; ret; 
0x000000000044f47c: call qword ptr [rax + 0x98]; lea rsp, [rsp + 8]; ret; 
0x0000000000411789: call qword ptr [rax + 0x98]; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040de1b: call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e761: call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e518: call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040df03: call qword ptr [rax + 0xa0]; pop r13; pop r12; pop rbx; ret; 
0x000000000040feac: call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a21c: call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000040ff9c: call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a23c: call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a25e: call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a2a1: call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a27e: call qword ptr [rax + 0xb8]; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2c1: call qword ptr [rax + 0xb8]; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043e1d7: call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043e37e: call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x00000000004418e7: call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000441b9e: call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043e397: call qword ptr [rax + 0xc8]; mov rdi, rbx; call 0x3e370; pop rbx; ret; 
0x000000000043e8e7: call qword ptr [rax + 0xd8]; mov rax, rbx; pop rbx; ret; 
0x00000000004421e7: call qword ptr [rax + 0xd8]; mov rax, rbx; pop rbx; ret; 
0x000000000044c69b: call qword ptr [rax + 0xe8]; lea rsp, [rsp + 8]; ret; 
0x000000000040ec6f: call qword ptr [rax + 8]; 
0x000000000040ed72: call qword ptr [rax + 8]; 
0x000000000040f233: call qword ptr [rax + 8]; 
0x0000000000413013: call qword ptr [rax + 8]; 
0x000000000041303a: call qword ptr [rax + 8]; 
0x000000000041418d: call qword ptr [rax + 8]; 
0x000000000041431f: call qword ptr [rax + 8]; 
0x00000000004149a3: call qword ptr [rax + 8]; 
0x000000000041724e: call qword ptr [rax + 8]; 
0x000000000041fdb2: call qword ptr [rax + 8]; 
0x0000000000413013: call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x00000000004149a3: call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x0000000000417fc3: call qword ptr [rax + rdx + 0x18]; cmp qword ptr [rbx + 8], 0; ja 0x17fa0; pop rbx; ret; 
0x000000000040d744: call qword ptr [rax]; 
0x000000000040e075: call qword ptr [rax]; 
0x000000000040e0fe: call qword ptr [rax]; 
0x000000000040e63c: call qword ptr [rax]; 
0x000000000040e947: call qword ptr [rax]; 
0x000000000040ea1f: call qword ptr [rax]; 
0x0000000000410a7d: call qword ptr [rax]; 
0x0000000000410d63: call qword ptr [rax]; 
0x000000000041132b: call qword ptr [rax]; 
0x0000000000412f4c: call qword ptr [rax]; 
0x000000000041308e: call qword ptr [rax]; 
0x00000000004130e1: call qword ptr [rax]; 
0x0000000000413174: call qword ptr [rax]; 
0x0000000000413221: call qword ptr [rax]; 
0x0000000000413271: call qword ptr [rax]; 
0x000000000041330d: call qword ptr [rax]; 
0x00000000004133c1: call qword ptr [rax]; 
0x0000000000413421: call qword ptr [rax]; 
0x00000000004134cd: call qword ptr [rax]; 
0x0000000000414983: call qword ptr [rax]; 
0x0000000000414caf: call qword ptr [rax]; 
0x0000000000414dfe: call qword ptr [rax]; 
0x00000000004151ef: call qword ptr [rax]; 
0x000000000041521f: call qword ptr [rax]; 
0x000000000041524f: call qword ptr [rax]; 
0x0000000000415287: call qword ptr [rax]; 
0x00000000004169db: call qword ptr [rax]; 
0x00000000004169fb: call qword ptr [rax]; 
0x000000000041716f: call qword ptr [rax]; 
0x000000000041763a: call qword ptr [rax]; 
0x0000000000417e6c: call qword ptr [rax]; 
0x0000000000417f49: call qword ptr [rax]; 
0x00000000004182b0: call qword ptr [rax]; 
0x00000000004184c9: call qword ptr [rax]; 
0x000000000041874a: call qword ptr [rax]; 
0x0000000000418887: call qword ptr [rax]; 
0x0000000000418903: call qword ptr [rax]; 
0x0000000000418956: call qword ptr [rax]; 
0x0000000000418cc8: call qword ptr [rax]; 
0x0000000000418d0e: call qword ptr [rax]; 
0x000000000041ee94: call qword ptr [rax]; 
0x000000000042ead8: call qword ptr [rax]; 
0x000000000045052b: call qword ptr [rax]; 
0x0000000000450598: call qword ptr [rax]; 
0x00000000004508f7: call qword ptr [rax]; 
0x0000000000450b96: call qword ptr [rax]; 
0x0000000000450be2: call qword ptr [rax]; 
0x0000000000450c55: call qword ptr [rax]; 
0x00000000004527d5: call qword ptr [rax]; 
0x0000000000452830: call qword ptr [rax]; 
0x000000000045317a: call qword ptr [rax]; 
0x0000000000453342: call qword ptr [rax]; 
0x00000000004533a9: call qword ptr [rax]; 
0x000000000045651b: call qword ptr [rax]; 
0x000000000045317a: call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000412f4c: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414983: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151ef: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041521f: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041524f: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415287: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004533a9: call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004169db: call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x00000000004169fb: call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x000000000040e075: call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x0000000000417f49: call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e75d: call qword ptr [rbp + 7]; 
0x0000000000437b3d: call qword ptr [rbp - 3]; 
0x0000000000423bc9: call qword ptr [rbx + 0x28]; 
0x0000000000423bc9: call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x000000000041caae: call qword ptr [rbx + 0x30]; 
0x000000000041c9a8: call qword ptr [rbx + 0x38]; 
0x000000000041cc8b: call qword ptr [rbx + 0x38]; 
0x000000000041d276: call qword ptr [rbx + 0x38]; 
0x000000000041d3d0: call qword ptr [rbx + 0x38]; 
0x000000000041d546: call qword ptr [rbx + 0x38]; 
0x000000000041d6c0: call qword ptr [rbx + 0x38]; 
0x000000000041da89: call qword ptr [rbx + 0x38]; 
0x000000000041f132: call qword ptr [rbx + 0x38]; 
0x000000000041f6be: call qword ptr [rbx + 0x38]; 
0x000000000041f7b6: call qword ptr [rbx + 0x38]; 
0x000000000041cc8b: call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x000000000041db5c: call qword ptr [rbx + 0x40]; 
0x000000000041f663: call qword ptr [rbx + 0x40]; 
0x000000000041f6d8: call qword ptr [rbx + 0x40]; 
0x000000000041f763: call qword ptr [rbx + 0x40]; 
0x000000000041f7d0: call qword ptr [rbx + 0x40]; 
0x000000000041c9be: call qword ptr [rbx + 0x48]; 
0x000000000043746d: call qword ptr [rbx]; 
0x0000000000437481: call qword ptr [rcx]; 
0x0000000000437a85: call qword ptr [rcx]; 
0x0000000000452afd: call qword ptr [rcx]; 
0x0000000000452afd: call qword ptr [rcx]; add eax, dword ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d9f1: call qword ptr [rdi + 0x38]; 
0x00000000004135d4: call qword ptr [rdx + 0x68]; 
0x000000000041484b: call qword ptr [rdx + 0x68]; 
0x000000000043c644: call qword ptr [rdx + 0x68]; 
0x000000000043c78f: call qword ptr [rdx + 0x68]; 
0x000000000043c915: call qword ptr [rdx + 0x68]; 
0x000000000043caee: call qword ptr [rdx + 0x68]; 
0x000000000043cc4a: call qword ptr [rdx + 0x68]; 
0x000000000043cd9b: call qword ptr [rdx + 0x68]; 
0x000000000043fb74: call qword ptr [rdx + 0x68]; 
0x000000000043fcbf: call qword ptr [rdx + 0x68]; 
0x000000000043fe45: call qword ptr [rdx + 0x68]; 
0x000000000044001e: call qword ptr [rdx + 0x68]; 
0x000000000044017a: call qword ptr [rdx + 0x68]; 
0x00000000004402cb: call qword ptr [rdx + 0x68]; 
0x000000000044e644: call qword ptr [rdx + 0x68]; 
0x000000000044e79a: call qword ptr [rdx + 0x68]; 
0x000000000044e8f3: call qword ptr [rdx + 0x68]; 
0x000000000044ed64: call qword ptr [rdx + 0x68]; 
0x000000000044eef4: call qword ptr [rdx + 0x68]; 
0x000000000044f204: call qword ptr [rdx + 0x68]; 
0x000000000044f8b4: call qword ptr [rdx + 0x68]; 
0x000000000044fab4: call qword ptr [rdx + 0x68]; 
0x000000000045153b: call qword ptr [rdx + 0x68]; 
0x000000000045169d: call qword ptr [rdx + 0x68]; 
0x000000000045184b: call qword ptr [rdx + 0x68]; 
0x00000000004519bd: call qword ptr [rdx + 0x68]; 
0x0000000000451b6f: call qword ptr [rdx + 0x68]; 
0x0000000000451cf1: call qword ptr [rdx + 0x68]; 
0x0000000000451eaf: call qword ptr [rdx + 0x68]; 
0x0000000000452031: call qword ptr [rdx + 0x68]; 
0x00000000004522da: call qword ptr [rdx + 0x68]; 
0x0000000000423b45: call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b25: call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b05: call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae5: call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac5: call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423aab: call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a85: call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a65: call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a45: call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a25: call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a05: call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x000000000041a73a: call qword ptr [rip + 0x4f448]; lea rsp, [rsp + 8]; ret; 
0x0000000000419225: call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x0000000000419205: call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191c5: call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191a5: call qword ptr [rip + 0x509b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419175: call qword ptr [rip + 0x509cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000419145: call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x0000000000419125: call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x0000000000419105: call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190b5: call qword ptr [rip + 0x50a9d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190e5: call qword ptr [rip + 0x50aa5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419087: call qword ptr [rip + 0x50abb]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000423bde: call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6c5: call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a5: call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b68f: call qword ptr [rip + 0x69773]; jmp 0x1b699; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b665: call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b5: call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b595: call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af75: call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af55: call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af35: call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af15: call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aef5: call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aed5: call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb5: call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae95: call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae75: call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae55: call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae35: call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad75: call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad55: call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad35: call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad15: call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acf5: call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acd5: call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acb5: call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac95: call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac75: call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac55: call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac35: call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac15: call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abf5: call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abd5: call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abb5: call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab95: call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab75: call qword ptr [rip + 0x6a15d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab45: call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x000000000041aa45: call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416995: call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x0000000000416983: call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004169c3: call qword ptr [rip + 0x6d68f]; lea rsp, [rsp + 8]; ret; 
0x0000000000416958: call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416927: call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416900: call qword ptr [rip + 0x6d6f2]; mov rsp, rbp; pop rbp; ret; 
0x00000000004168c8: call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416898: call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416865: call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416845: call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416825: call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x0000000000416741: call qword ptr [rip + 0x6d891]; lea rsp, [rsp + 8]; ret; 
0x0000000000416722: call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x0000000000416773: call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004166f5: call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004166da: call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004166ba: call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x00000000004166a3: call qword ptr [rip + 0x6d9af]; lea rsp, [rsp + 8]; ret; 
0x00000000004165b5: call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416682: call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x0000000000416664: call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x0000000000416595: call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416636: call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x0000000000416575: call qword ptr [rip + 0x6da25]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416555: call qword ptr [rip + 0x6da35]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416614: call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x00000000004165e6: call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x0000000000416515: call qword ptr [rip + 0x6da75]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004164d5: call qword ptr [rip + 0x6dab5]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b5: call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416495: call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x0000000000416475: call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416355: call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416335: call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x0000000000416315: call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162f5: call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162d5: call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162b5: call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416295: call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416275: call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416255: call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416235: call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x0000000000416212: call qword ptr [rip + 0x6dea8]; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004161b2: call qword ptr [rip + 0x6df10]; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041613a: call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x000000000041611a: call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x0000000000416155: call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004160fa: call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x00000000004160da: call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x00000000004160ba: call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x000000000041609c: call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000416081: call qword ptr [rip + 0x6dfd9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416051: call qword ptr [rip + 0x6e009]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416021: call qword ptr [rip + 0x6e039]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415ff1: call qword ptr [rip + 0x6e069]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fc1: call qword ptr [rip + 0x6e099]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f91: call qword ptr [rip + 0x6e0c9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f5e: call qword ptr [rip + 0x6e0fc]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f31: call qword ptr [rip + 0x6e129]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e15: call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ecc: call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x0000000000415eb1: call qword ptr [rip + 0x6e1a9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415dd5: call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e81: call qword ptr [rip + 0x6e1d9]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415db5: call qword ptr [rip + 0x6e1e5]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e51: call qword ptr [rip + 0x6e209]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415d75: call qword ptr [rip + 0x6e215]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d55: call qword ptr [rip + 0x6e235]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d35: call qword ptr [rip + 0x6e255]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df5: call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d15: call qword ptr [rip + 0x6e275]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c75: call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c55: call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c35: call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b15: call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415af5: call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad5: call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab5: call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a95: call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a75: call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a55: call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a35: call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a15: call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159fa: call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004159d5: call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x00000000004159c3: call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x0000000000415998: call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415967: call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415940: call qword ptr [rip + 0x6e6b2]; mov rsp, rbp; pop rbp; ret; 
0x0000000000415908: call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d8: call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004157a5: call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x0000000000415785: call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415765: call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415691: call qword ptr [rip + 0x6e941]; lea rsp, [rsp + 8]; ret; 
0x00000000004156c3: call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415672: call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x0000000000415645: call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415625: call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415605: call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004155ea: call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155ca: call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x00000000004155b3: call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x0000000000415586: call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000415564: call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x0000000000415536: call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x00000000004154c5: call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415485: call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154e5: call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x0000000000415452: call qword ptr [rip + 0x6eb78]; pop r13; pop r12; pop rbx; ret; 
0x00000000004154a5: call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415505: call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415465: call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415424: call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x000000000041f87a: call qword ptr [rsi + 0x38]; 
0x0000000000401c05: call rax; 
0x0000000000402a0a: call rax; 
0x0000000000402a38: call rax; 
0x0000000000402c4b: call rax; 
0x0000000000402d03: call rax; 
0x00000000004032ae: call rax; 
0x00000000004032f8: call rax; 
0x00000000004050e4: call rax; 
0x000000000041147c: call rax; 
0x00000000004114e3: call rax; 
0x000000000041151b: call rax; 
0x0000000000413cd8: call rax; 
0x0000000000413e35: call rax; 
0x0000000000414a3a: call rax; 
0x0000000000414a66: call rax; 
0x0000000000414aba: call rax; 
0x0000000000414b12: call rax; 
0x0000000000414b77: call rax; 
0x0000000000414c7a: call rax; 
0x0000000000414d13: call rax; 
0x0000000000414d42: call rax; 
0x0000000000414d76: call rax; 
0x0000000000414d9c: call rax; 
0x0000000000414dc9: call rax; 
0x0000000000414e36: call rax; 
0x0000000000414e8d: call rax; 
0x0000000000414ecf: call rax; 
0x0000000000414f3a: call rax; 
0x0000000000414fc6: call rax; 
0x0000000000414ff3: call rax; 
0x0000000000415040: call rax; 
0x00000000004150aa: call rax; 
0x00000000004150d1: call rax; 
0x000000000041514d: call rax; 
0x00000000004152b5: call rax; 
0x0000000000415353: call rax; 
0x0000000000417005: call rax; 
0x0000000000417099: call rax; 
0x0000000000417d75: call rax; 
0x0000000000417dcd: call rax; 
0x0000000000417e1d: call rax; 
0x0000000000417ec4: call rax; 
0x000000000041807c: call rax; 
0x00000000004180ab: call rax; 
0x00000000004180db: call rax; 
0x000000000041810a: call rax; 
0x000000000041813a: call rax; 
0x0000000000418188: call rax; 
0x00000000004181b7: call rax; 
0x00000000004181ea: call rax; 
0x0000000000418216: call rax; 
0x0000000000418501: call rax; 
0x0000000000418d5b: call rax; 
0x0000000000418df8: call rax; 
0x0000000000418e27: call rax; 
0x0000000000418ecb: call rax; 
0x0000000000418eff: call rax; 
0x0000000000418f37: call rax; 
0x0000000000418f9e: call rax; 
0x0000000000419259: call rax; 
0x00000000004192a9: call rax; 
0x0000000000419d11: call rax; 
0x0000000000419e4a: call rax; 
0x000000000041a1c8: call rax; 
0x000000000041a46f: call rax; 
0x000000000041a632: call rax; 
0x000000000041a68f: call rax; 
0x000000000041a71a: call rax; 
0x000000000041a788: call rax; 
0x000000000041a8ee: call rax; 
0x000000000041a925: call rax; 
0x000000000041a957: call rax; 
0x000000000041a981: call rax; 
0x000000000041a9b4: call rax; 
0x000000000041aa25: call rax; 
0x000000000041afbd: call rax; 
0x000000000041b024: call rax; 
0x000000000041b05c: call rax; 
0x000000000041b3bd: call rax; 
0x000000000041b78d: call rax; 
0x000000000041b7f4: call rax; 
0x000000000041b82c: call rax; 
0x000000000041bc3a: call rax; 
0x000000000041bc7b: call rax; 
0x000000000041bccd: call rax; 
0x000000000041bd1d: call rax; 
0x000000000041bda9: call rax; 
0x000000000041be39: call rax; 
0x000000000041be94: call rax; 
0x000000000041bee0: call rax; 
0x000000000041bf34: call rax; 
0x000000000041bf91: call rax; 
0x000000000041c01d: call rax; 
0x000000000041c55a: call rax; 
0x000000000041c64e: call rax; 
0x000000000041c96c: call rax; 
0x000000000041c9f2: call rax; 
0x000000000041cac9: call rax; 
0x000000000041cb0c: call rax; 
0x000000000041cb5c: call rax; 
0x000000000041cbac: call rax; 
0x000000000041cc72: call rax; 
0x000000000041cce3: call rax; 
0x000000000041cda8: call rax; 
0x000000000041ce01: call rax; 
0x000000000041cf0c: call rax; 
0x000000000041d1d3: call rax; 
0x000000000041d21f: call rax; 
0x000000000041d2dd: call rax; 
0x000000000041d323: call rax; 
0x000000000041d36f: call rax; 
0x000000000041d45d: call rax; 
0x000000000041d4ef: call rax; 
0x000000000041d51d: call rax; 
0x000000000041d5cd: call rax; 
0x000000000041d613: call rax; 
0x000000000041d65f: call rax; 
0x000000000041d75d: call rax; 
0x000000000041d82d: call rax; 
0x000000000041d86d: call rax; 
0x000000000041d980: call rax; 
0x000000000041dba7: call rax; 
0x000000000041dbe5: call rax; 
0x000000000041dc92: call rax; 
0x000000000041dcd5: call rax; 
0x000000000041dda6: call rax; 
0x000000000041ded2: call rax; 
0x000000000041e031: call rax; 
0x000000000041e13d: call rax; 
0x000000000041e1c1: call rax; 
0x000000000041e2ea: call rax; 
0x000000000041e39a: call rax; 
0x000000000041e48e: call rax; 
0x000000000041e4fd: call rax; 
0x000000000041e57d: call rax; 
0x000000000041e5fd: call rax; 
0x000000000041e69d: call rax; 
0x000000000041e8f0: call rax; 
0x000000000041e998: call rax; 
0x000000000041ea11: call rax; 
0x000000000041ea85: call rax; 
0x000000000041eaf5: call rax; 
0x000000000041eb75: call rax; 
0x000000000041ebc1: call rax; 
0x000000000041ebef: call rax; 
0x000000000041ec75: call rax; 
0x000000000041ecc1: call rax; 
0x000000000041ecf2: call rax; 
0x000000000041ee3b: call rax; 
0x000000000041f086: call rax; 
0x000000000041f0db: call rax; 
0x000000000041f10c: call rax; 
0x000000000041f14d: call rax; 
0x0000000000420037: call rax; 
0x00000000004200d1: call rax; 
0x00000000004201a1: call rax; 
0x000000000042023c: call rax; 
0x000000000042037c: call rax; 
0x000000000042042d: call rax; 
0x0000000000420585: call rax; 
0x0000000000421034: call rax; 
0x0000000000421067: call rax; 
0x00000000004210c6: call rax; 
0x0000000000421124: call rax; 
0x0000000000421157: call rax; 
0x00000000004211bc: call rax; 
0x000000000042120c: call rax; 
0x0000000000421277: call rax; 
0x0000000000421315: call rax; 
0x000000000042146c: call rax; 
0x00000000004214c7: call rax; 
0x0000000000421565: call rax; 
0x00000000004216bb: call rax; 
0x0000000000421706: call rax; 
0x0000000000421761: call rax; 
0x00000000004217b6: call rax; 
0x000000000042181c: call rax; 
0x0000000000421863: call rax; 
0x00000000004218cc: call rax; 
0x0000000000421916: call rax; 
0x0000000000421973: call rax; 
0x00000000004219ac: call rax; 
0x0000000000421a07: call rax; 
0x0000000000421a3c: call rax; 
0x0000000000421a95: call rax; 
0x0000000000421b03: call rax; 
0x0000000000421bc8: call rax; 
0x0000000000421c21: call rax; 
0x0000000000421d2c: call rax; 
0x0000000000421dc5: call rax; 
0x00000000004222e6: call rax; 
0x0000000000422366: call rax; 
0x00000000004223c6: call rax; 
0x0000000000422446: call rax; 
0x00000000004224a5: call rax; 
0x0000000000422532: call rax; 
0x00000000004225e2: call rax; 
0x000000000042263e: call rax; 
0x00000000004227a0: call rax; 
0x0000000000422970: call rax; 
0x000000000042299e: call rax; 
0x0000000000422e75: call rax; 
0x0000000000422f25: call rax; 
0x0000000000422fd5: call rax; 
0x0000000000423135: call rax; 
0x00000000004231e5: call rax; 
0x0000000000423295: call rax; 
0x0000000000423615: call rax; 
0x00000000004236c5: call rax; 
0x0000000000423775: call rax; 
0x000000000042423d: call rax; 
0x0000000000424273: call rax; 
0x00000000004242ac: call rax; 
0x00000000004242e5: call rax; 
0x000000000042431e: call rax; 
0x0000000000424502: call rax; 
0x0000000000424568: call rax; 
0x00000000004245b0: call rax; 
0x0000000000426c7a: call rax; 
0x0000000000426cc6: call rax; 
0x0000000000427241: call rax; 
0x0000000000427270: call rax; 
0x00000000004272a4: call rax; 
0x0000000000427300: call rax; 
0x0000000000427399: call rax; 
0x00000000004273dd: call rax; 
0x0000000000427411: call rax; 
0x0000000000429c88: call rax; 
0x0000000000429d18: call rax; 
0x0000000000429da8: call rax; 
0x000000000042a5ee: call rax; 
0x000000000042a639: call rax; 
0x000000000042c088: call rax; 
0x000000000042c118: call rax; 
0x000000000042c1a8: call rax; 
0x0000000000452b03: call rax; 
0x00000000004566f2: call rax; 
0x000000000045a35c: call rax; 
0x000000000045a3e0: call rax; 
0x000000000045afab: call rax; 
0x000000000045b001: call rax; 
0x000000000045b057: call rax; 
0x000000000045c505: call rax; 
0x000000000045c658: call rax; 
0x000000000045ccc9: call rax; 
0x000000000045cd86: call rax; 
0x0000000000414a3a: call rax; jmp 0x14a45; lea rax, [rip + 0x6f513]; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004150d1: call rax; jmp 0x150dc; lea rax, [rip + 0x6ee6c]; mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041d82d: call rax; jmp 0x1d83c; lea rax, [rip + 0x65a48]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d86d: call rax; jmp 0x1d87c; lea rax, [rip + 0x65688]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x0000000000402a0a: call rax; jmp 0x2a15; lea rax, [rip + 0x81523]; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000402a38: call rax; jmp 0x2a43; lea rax, [rip + 0x814f5]; mov dword ptr [rax], ebx; pop rbx; ret; 
0x000000000040243d: call rbx; 
0x00000000004024bf: call rbx; 
0x0000000000402520: call rbx; 
0x00000000004189b9: call rbx; 
0x00000000004189b9: call rbx; pop rbx; ret; 
0x000000000041114e: call rdi; 
0x00000000004111c7: call rdi; 
0x000000000040107b: call rdx; 
0x00000000004050b2: call rdx; 
0x00000000004114b4: call rdx; 
0x0000000000415325: call rdx; 
0x0000000000417c19: call rdx; 
0x0000000000417c43: call rdx; 
0x0000000000417fed: call rdx; 
0x000000000041801d: call rdx; 
0x000000000041804c: call rdx; 
0x0000000000418d93: call rdx; 
0x0000000000418dc4: call rdx; 
0x0000000000418e5f: call rdx; 
0x0000000000418e93: call rdx; 
0x0000000000418f66: call rdx; 
0x000000000041aff5: call rdx; 
0x000000000041b7c5: call rdx; 
0x000000000041c194: call rdx; 
0x000000000041c5d8: call rdx; 
0x000000000041ca5d: call rdx; 
0x000000000041cbfc: call rdx; 
0x000000000041cc44: call rdx; 
0x000000000041ccac: call rdx; 
0x000000000041cd6d: call rdx; 
0x000000000041ced1: call rdx; 
0x000000000041cfb8: call rdx; 
0x000000000041d24d: call rdx; 
0x000000000041d39d: call rdx; 
0x000000000041d4a3: call rdx; 
0x000000000041d68d: call rdx; 
0x000000000041d94c: call rdx; 
0x000000000041db0c: call rdx; 
0x000000000041db79: call rdx; 
0x000000000041dc64: call rdx; 
0x000000000041dd78: call rdx; 
0x000000000041de04: call rdx; 
0x000000000041dea4: call rdx; 
0x000000000041df44: call rdx; 
0x000000000041e003: call rdx; 
0x000000000041e096: call rdx; 
0x000000000041e10f: call rdx; 
0x000000000041e2bc: call rdx; 
0x000000000041e460: call rdx; 
0x000000000041e75b: call rdx; 
0x000000000041e82b: call rdx; 
0x000000000041e921: call rdx; 
0x000000000041e96e: call rdx; 
0x000000000041edbe: call rdx; 
0x000000000041ee0a: call rdx; 
0x000000000041fdf8: call rdx; 
0x00000000004202ed: call rdx; 
0x00000000004204e6: call rdx; 
0x0000000000420fd6: call rdx; 
0x00000000004212e7: call rdx; 
0x0000000000421431: call rdx; 
0x0000000000421537: call rdx; 
0x0000000000421682: call rdx; 
0x0000000000421acc: call rdx; 
0x0000000000421b8d: call rdx; 
0x0000000000421cf1: call rdx; 
0x0000000000422504: call rdx; 
0x0000000000422575: call rdx; 
0x0000000000422610: call rdx; 
0x000000000042276c: call rdx; 
0x00000000004228a3: call rdx; 
0x0000000000423379: call rdx; 
0x000000000042452c: call rdx; 
0x0000000000427157: call rdx; 
0x00000000004272d1: call rdx; 
0x0000000000427334: call rdx; 
0x0000000000427361: call rdx; 
0x0000000000428403: call rdx; 
0x000000000042842e: call rdx; 
0x0000000000428465: call rdx; 
0x0000000000429c40: call rdx; 
0x0000000000429cd0: call rdx; 
0x0000000000429d60: call rdx; 
0x000000000042a5c3: call rdx; 
0x000000000042c040: call rdx; 
0x000000000042c0d0: call rdx; 
0x000000000042c160: call rdx; 
0x00000000004500d7: call rdx; 
0x0000000000452626: call rdx; 
0x0000000000452652: call rdx; 
0x000000000045abb4: call rdx; 
0x000000000045ac0a: call rdx; 
0x000000000045cd02: call rdx; 
0x000000000045cd4d: call rdx; 
0x000000000040107b: call rdx; mov eax, 0xe7; mov edi, dword ptr [rbp - 4]; syscall; 
0x0000000000411113: cdq; add byte ptr ds:[rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044e753: cdq; imul edi, esp, 0x448b48ff; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000431993: cdq; je 0x31996; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042fc83: cdq; mov ebx, 0x8d480000; and al, 8; ret; 
0x0000000000434469: clc; add al, 0; call qword ptr [rax + 0x78]; 
0x0000000000434469: clc; add al, 0; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434489: clc; add al, 0; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x000000000045603d: clc; add al, 0x74; iretd; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004315c6: clc; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043187e: clc; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a06: clc; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cbe: clc; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043216e: clc; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e41: clc; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000041c9b7: clc; add dh, byte ptr [rsi + rax + 0x48]; mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x0000000000414735: clc; add dword ptr [rbp + 0xe], esi; mov rdi, rbx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x000000000041c9b2: clc; add dword ptr [rbx + rcx - 0x7d], esi; clc; add dh, byte ptr [rsi + rax + 0x48]; mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x000000000040750c: clc; add dword ptr [rdi - 0x18], edi; ret; 
0x00000000004075cd: clc; add dword ptr [rdi - 0x19], edi; ret; 
0x0000000000407495: clc; add dword ptr [rdi - 0x21], edi; ret; 
0x00000000004074d5: clc; add dword ptr [rdi - 0x21], edi; ret; 
0x0000000000407558: clc; add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000407598: clc; add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000407668: clc; add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000405422: clc; add dword ptr [rsp + rbx + 0x31], edi; ror byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x0000000000411ac8: clc; add rax, 1; ret; 
0x0000000000411ac7: clc; add rax, 1; ret; 
0x000000000043cedc: clc; add rax, 1; ret; 
0x000000000043cedb: clc; add rax, 1; ret; 
0x000000000044040c: clc; add rax, 1; ret; 
0x000000000044040b: clc; add rax, 1; ret; 
0x000000000044fa14: clc; add rdi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x00000000004146f4: clc; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000403231: clc; and eax, 0x7f; ret; 
0x0000000000457841: clc; and eax, 0x7f; ret; 
0x00000000004178c1: clc; and eax, 0x80000000; and esi, 0x7fffffff; or eax, esi; ret; 
0x0000000000403247: clc; and eax, 0xc0214877; lea rdx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000404e12: clc; and eax, 0xf; ret; 
0x00000000004031f1: clc; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000403201: clc; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000457801: clc; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000457811: clc; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000407377: clc; and eax, 0xff; ret; 
0x00000000004073f7: clc; and eax, 0xff; ret; 
0x00000000004027af: clc; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x00000000004027ae: clc; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x000000000040340f: clc; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040487f: clc; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040495f: clc; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e4f: clc; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040342f: clc; and eax, 0xffff; ret; 
0x000000000040489f: clc; and eax, 0xffff; ret; 
0x000000000040497f: clc; and eax, 0xffff; ret; 
0x0000000000404e2f: clc; and eax, 0xffff; ret; 
0x0000000000404561: clc; and eax, 1; ret; 
0x0000000000404571: clc; and eax, 1; ret; 
0x0000000000404582: clc; and eax, 1; ret; 
0x0000000000404592: clc; and eax, 1; ret; 
0x0000000000423aa4: clc; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004237d4: clc; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x0000000000403444: clc; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403464: clc; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403484: clc; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034a4: clc; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034f4: clc; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004075e4: clc; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407604: clc; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407624: clc; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x0000000000422004: clc; and esi, 0xff; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000042e614: clc; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x0000000000432317: clc; and esi, 0xff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328e7: clc; and esi, 0xffff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000040b7e4: clc; and esi, esi; and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x0000000000432ac7: clc; and esi, esi; mov rdi, rax; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000402761: clc; bswap eax; ret; 
0x0000000000402771: clc; bswap eax; ret; 
0x0000000000402782: clc; bswap rax; ret; 
0x0000000000402792: clc; bswap rax; ret; 
0x00000000004117c4: clc; call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x00000000004115a7: clc; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115c4: clc; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d7: clc; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115f4: clc; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412f04: clc; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x0000000000414334: clc; call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x00000000004150f4: clc; call 0x14e70; mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004177f4: clc; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x0000000000417664: clc; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x0000000000417804: clc; call 0x176f0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab64: clc; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418344: clc; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418364: clc; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x0000000000456824: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456834: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456844: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456854: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456867: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456887: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568a4: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b7: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568d4: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568e4: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f7: clc; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004190a4: clc; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190d4: clc; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000419164: clc; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000419194: clc; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b6: clc; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b187: clc; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a7: clc; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b227: clc; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b0d4: clc; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0f4: clc; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b134: clc; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b094: clc; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b114: clc; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b244: clc; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b5d4: clc; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x0000000000453364: clc; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6f4: clc; call 0x1b660; lea rsp, [rsp + 8]; ret; 
0x000000000041b6e4: clc; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b864: clc; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b874: clc; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b884: clc; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b894: clc; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a7: clc; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8c4: clc; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8f4: clc; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c254: clc; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c214: clc; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x000000000045c144: clc; call 0x1c840; lea rsp, [rsp + 8]; ret; 
0x000000000045c264: clc; call 0x1c950; lea rsp, [rsp + 8]; ret; 
0x0000000000421fc4: clc; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c124: clc; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x0000000000421fd4: clc; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c114: clc; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fe4: clc; call 0x20e20; lea rsp, [rsp + 8]; ret; 
0x0000000000421ff4: clc; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e4: clc; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000422034: clc; call 0x20fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000422024: clc; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c134: clc; call 0x21a20; lea rsp, [rsp + 8]; ret; 
0x000000000045c2b4: clc; call 0x21fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2a4: clc; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c274: clc; call 0x21ff0; lea rsp, [rsp + 8]; ret; 
0x0000000000425530: clc; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425464: clc; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000425485: clc; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf7: clc; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x00000000004034c4: clc; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048b4: clc; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000404994: clc; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x00000000004048c4: clc; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004049a4: clc; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004048d4: clc; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004049b4: clc; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004048e4: clc; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004049c4: clc; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004279d4: clc; call 0x27980; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000404f84: clc; call 0x27c0; lea rsp, [rsp + 8]; ret; 
0x0000000000428e64: clc; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000429954: clc; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x0000000000429964: clc; call 0x29970; lea rsp, [rsp + 8]; ret; 
0x0000000000456054: clc; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f84: clc; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x0000000000458374: clc; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b094: clc; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x0000000000458384: clc; call 0x2b10; lea rsp, [rsp + 8]; ret; 
0x000000000042bd64: clc; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x000000000042bd74: clc; call 0x2bd80; lea rsp, [rsp + 8]; ret; 
0x000000000042fc94: clc; call 0x2e350; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004588f4: clc; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x0000000000419014: clc; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x000000000042f87c: clc; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x000000000042f87b: clc; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x00000000004243f4: clc; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edf4: clc; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ece4: clc; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000433de4: clc; call 0x33bb0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e4: clc; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x0000000000433d84: clc; call 0x33c90; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000427a04: clc; call 0x342a0; lea rsp, [rsp + 8]; ret; 
0x00000000004279f4: clc; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000434244: clc; call 0x342e0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434224: clc; call 0x34320; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed54: clc; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb4: clc; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed44: clc; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e94: clc; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433284: clc; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433074: clc; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433464: clc; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434ea4: clc; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004322e4: clc; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b4: clc; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000042edc4: clc; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa4: clc; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c94: clc; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324d4: clc; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326c4: clc; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e64: clc; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433044: clc; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433254: clc; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433434: clc; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edb4: clc; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351e4: clc; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352b4: clc; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352c4: clc; call 0x35280; lea rsp, [rsp + 8]; ret; 
0x0000000000435304: clc; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x0000000000435374: clc; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353e4: clc; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000042edd4: clc; call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed74: clc; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431654: clc; call 0x36c90; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a94: clc; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000437384: clc; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431704: clc; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b44: clc; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff4: clc; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae4: clc; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004316a4: clc; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b14: clc; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316d4: clc; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed64: clc; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433644: clc; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336c4: clc; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433754: clc; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337e4: clc; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433684: clc; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433704: clc; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433794: clc; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433824: clc; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dad4: clc; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x0000000000434264: clc; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434284: clc; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000427a34: clc; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000455b24: clc; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x000000000044b9b0: clc; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x000000000044c924: clc; call 0x4c930; lea rsp, [rsp + 8]; ret; 
0x0000000000404f74: clc; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x00000000004479a4: clc; call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x0000000000452b44: clc; call 0x56050; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000456b00: clc; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x00000000004581a4: clc; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x0000000000458394: clc; call 0x576a0; lea rsp, [rsp + 8]; ret; 
0x00000000004583a4: clc; call 0x576d0; lea rsp, [rsp + 8]; ret; 
0x0000000000453d04: clc; call 0x58ac0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045a234: clc; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b844: clc; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dc4: clc; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b854: clc; call 0x59cf0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7f4: clc; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x0000000000432134: clc; call 0x67c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432064: clc; call 0x6820; lea rsp, [rsp + 8]; ret; 
0x00000000004320f4: clc; call 0x6830; lea rsp, [rsp + 8]; ret; 
0x0000000000432084: clc; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x0000000000432114: clc; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321c4: clc; call 0x6880; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321a4: clc; call 0x6880; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432184: clc; call 0x6880; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432204: clc; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000432124: clc; call 0x69a0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c84: clc; call 0x6a70; lea rsp, [rsp + 8]; ret; 
0x0000000000431bb4: clc; call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c44: clc; call 0x6b00; lea rsp, [rsp + 8]; ret; 
0x0000000000431bd4: clc; call 0x6b30; lea rsp, [rsp + 8]; ret; 
0x0000000000431c64: clc; call 0x6b50; lea rsp, [rsp + 8]; ret; 
0x0000000000431bc4: clc; call 0x6b80; lea rsp, [rsp + 8]; ret; 
0x0000000000431c54: clc; call 0x6ba0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d14: clc; call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cf4: clc; call 0x6bd0; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd4: clc; call 0x6bd0; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d54: clc; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c74: clc; call 0x6ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000431844: clc; call 0x6d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431774: clc; call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431804: clc; call 0x6dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431794: clc; call 0x6df0; lea rsp, [rsp + 8]; ret; 
0x0000000000431824: clc; call 0x6e00; lea rsp, [rsp + 8]; ret; 
0x0000000000431784: clc; call 0x6e20; lea rsp, [rsp + 8]; ret; 
0x0000000000431814: clc; call 0x6e30; lea rsp, [rsp + 8]; ret; 
0x00000000004318d4: clc; call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431894: clc; call 0x6e50; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431914: clc; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x0000000000431834: clc; call 0x6f20; lea rsp, [rsp + 8]; ret; 
0x000000000040a042: clc; call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x000000000042a594: clc; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba24: clc; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283d4: clc; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f124: clc; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b44: clc; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b24: clc; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b04: clc; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae4: clc; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac4: clc; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a84: clc; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a64: clc; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a44: clc; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a24: clc; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a04: clc; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419224: clc; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x0000000000419204: clc; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191c4: clc; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191a4: clc; call qword ptr [rip + 0x509b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419174: clc; call qword ptr [rip + 0x509cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000419144: clc; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x0000000000419124: clc; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x0000000000419104: clc; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190b4: clc; call qword ptr [rip + 0x50a9d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190e4: clc; call qword ptr [rip + 0x50aa5]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6c4: clc; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a4: clc; call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b664: clc; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b4: clc; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b594: clc; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af74: clc; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af54: clc; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af34: clc; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af14: clc; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aef4: clc; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aed4: clc; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb4: clc; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae94: clc; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae74: clc; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae54: clc; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae34: clc; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad74: clc; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad54: clc; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad34: clc; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad14: clc; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acf4: clc; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acd4: clc; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acb4: clc; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac94: clc; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac74: clc; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac54: clc; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac34: clc; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac14: clc; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abf4: clc; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abd4: clc; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abb4: clc; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab94: clc; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab74: clc; call qword ptr [rip + 0x6a15d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab44: clc; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x0000000000416994: clc; call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x0000000000416864: clc; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416844: clc; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416824: clc; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166f4: clc; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165b4: clc; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416594: clc; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416574: clc; call qword ptr [rip + 0x6da25]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416554: clc; call qword ptr [rip + 0x6da35]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164d4: clc; call qword ptr [rip + 0x6dab5]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b4: clc; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416494: clc; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x0000000000416474: clc; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416354: clc; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416334: clc; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x0000000000416314: clc; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162f4: clc; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162d4: clc; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162b4: clc; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416294: clc; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416274: clc; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416254: clc; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416234: clc; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x0000000000416154: clc; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e14: clc; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd4: clc; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415db4: clc; call qword ptr [rip + 0x6e1e5]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d74: clc; call qword ptr [rip + 0x6e215]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d34: clc; call qword ptr [rip + 0x6e255]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df4: clc; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d14: clc; call qword ptr [rip + 0x6e275]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c74: clc; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c54: clc; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c34: clc; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b14: clc; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415af4: clc; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad4: clc; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab4: clc; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a94: clc; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a74: clc; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a54: clc; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a34: clc; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a14: clc; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159d4: clc; call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x00000000004157a4: clc; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x0000000000415784: clc; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415764: clc; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415644: clc; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415624: clc; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415604: clc; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154c4: clc; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415484: clc; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154e4: clc; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x00000000004154a4: clc; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415504: clc; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415464: clc; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x0000000000413cd7: clc; call rax; 
0x0000000000413e34: clc; call rax; 
0x0000000000417098: clc; call rax; 
0x0000000000434a1b: clc; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x0000000000434a1a: clc; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x000000000041dad7: clc; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f617: clc; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x00000000004024f9: clc; cmp rdx, rax; jbe 0x24eb; ret; 
0x000000000043b86b: clc; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b86a: clc; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b89b: clc; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b89a: clc; cmp rsi, rax; cmovl rax, rsi; ret; 
0x0000000000432d02: clc; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432ee2: clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332d2: clc; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432db2: clc; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f92: clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000433382: clc; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000432d17: clc; fild dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432ef7: clc; fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332e7: clc; fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000406762: clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000406761: clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d80: clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d7f: clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004045a1: clc; imul eax, edi; ret; 
0x00000000004045b2: clc; imul rax, rdi; ret; 
0x00000000004045c2: clc; imul rax, rdi; ret; 
0x0000000000403601: clc; ja 0x35f8; ret; 
0x0000000000403698: clc; ja 0x3690; ret; 
0x00000000004036b9: clc; ja 0x36b0; ret; 
0x0000000000403218: clc; jg 0x328f; or byte ptr [rbx + 0x3747fe7], al; mov al, 1; ret; 
0x0000000000457828: clc; jg 0x5789f; or byte ptr [rbx + 0x3747fe7], al; mov al, 1; ret; 
0x00000000004023ee: clc; jne 0x23c0; mfence; jmp 0x234b; ret; 
0x00000000004023ed: clc; jne 0x23c0; mfence; jmp 0x234b; ret; 
0x00000000004033e8: clc; ldmxcsr dword ptr [rbp - 4]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439224: clc; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c4: clc; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af4: clc; lea r8, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316b4: clc; lea r8, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004392f4: clc; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000453394: clc; lea rax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x0000000000455b94: clc; lea rax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000434874: clc; lea rax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000044a234: clc; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a214: clc; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d4: clc; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d4: clc; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b4: clc; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b4: clc; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8e4: clc; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e4: clc; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x0000000000434484: clc; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434464: clc; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434464: clc; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434424: clc; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343e4: clc; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343a4: clc; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x0000000000434364: clc; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434324: clc; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342e4: clc; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342c4: clc; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c4: clc; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a4: clc; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a4: clc; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd4: clc; lea rax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f44: clc; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f44: clc; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040ed60: clc; lea rax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ff94: clc; lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea4: clc; lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000040ec67: clc; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x000000000040e93f: clc; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x0000000000436fa4: clc; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000044fa57: clc; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa37: clc; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa77: clc; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b7: clc; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d7: clc; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x0000000000420a37: clc; lea rdi, [rax + 0x50]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004147c7: clc; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d54: clc; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d34: clc; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d14: clc; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x00000000004239e2: clc; lea rdi, [rip + 0x46306]; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b8d4: clc; lea rdi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b384: clc; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000419032: clc; lea rdi, [rip + 0x50b06]; mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b712: clc; lea rdi, [rip + 0x696d6]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a22: clc; lea rdi, [rip + 0x6d546]; mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbe2: clc; lea rdi, [rip + 0x76176]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db72: clc; lea rdi, [rip + 0x761e6]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000447524: clc; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000439a94: clc; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000437364: clc; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437324: clc; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e4: clc; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f84: clc; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431b24: clc; lea rdx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e4: clc; lea rdx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x000000000040d9d2: clc; lea rdx, [rip + 0x75146]; mov word ptr [rdx], ax; ret; 
0x000000000040d9e2: clc; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9f2: clc; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x0000000000445ec7: clc; lea rsi, [rip + 0x2fdd1]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x0000000000438e74: clc; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e14: clc; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac4: clc; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431684: clc; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x000000000040db92: clc; lea rsi, [rip + 0x761c6]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db22: clc; lea rsi, [rip + 0x76236]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000426cf4: clc; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x00000000004027ab: clc; mov ax, word ptr [rbp - 8]; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000459094: clc; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000043bab4: clc; mov dl, sil; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000426b42: clc; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x00000000004051a2: clc; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051d2: clc; mov dword ptr [rax], esi; ret; 
0x00000000004027cc: clc; mov eax, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041b0b4: clc; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004300c4: clc; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a4: clc; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f4: clc; mov ecx, 0x20; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab4: clc; mov ecx, 0x20; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000044a1d4: clc; mov ecx, 0xffffffe0; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433a54: clc; mov ecx, 0xffffffe0; lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000045c824: clc; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc4: clc; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e74: clc; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457224: clc; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457324: clc; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f7: clc; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d817: clc; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000459de4: clc; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e04: clc; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba54: clc; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x0000000000434f94: clc; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb4: clc; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160d4: clc; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x0000000000416134: clc; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f4: clc; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x0000000000416114: clc; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef64: clc; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x0000000000434594: clc; mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x00000000004160b4: clc; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004166d4: clc; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004159f4: clc; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155e4: clc; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x0000000000402642: clc; mov edx, 0xffffffff; xchg rdx, rax; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x00000000004396c4: clc; mov edx, 1; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x0000000000427a14: clc; mov edx, 1; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000044a294: clc; mov edx, 1; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448554: clc; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448534: clc; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448534: clc; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c4: clc; mov edx, 1; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000402662: clc; mov edx, 1; xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004155c4: clc; mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f54: clc; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004166b4: clc; mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x000000000045b8f2: clc; mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b912: clc; mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045bb47: clc; mov esi, dword ptr [rsi]; mov rdi, rax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x00000000004572e4: clc; mov esi, edi; mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000041d782: clc; mov qword ptr [rax + 0x28], rsi; mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000432102: clc; mov qword ptr [rax], rsi; ret; 
0x00000000004191e4: clc; mov qword ptr [rsp], rdi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000430434: clc; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x000000000043f7e4: clc; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443264: clc; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x000000000043b424: clc; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c14: clc; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f4: clc; mov r9, rsp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x00000000004115a4: clc; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d4: clc; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000456864: clc; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456884: clc; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b4: clc; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f4: clc; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b184: clc; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a4: clc; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b224: clc; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a4: clc; mov rax, rdi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041dad4: clc; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f614: clc; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000044fa54: clc; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa34: clc; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa74: clc; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b4: clc; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d4: clc; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x00000000004147c4: clc; mov rax, rdi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f4: clc; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d814: clc; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004149b4: clc; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414994: clc; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414974: clc; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433914: clc; mov rax, rdi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042e166: clc; mov rbx, qword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439628: clc; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004396b2: clc; mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450f08: clc; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x00000000004396e4: clc; mov rcx, rdx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437304: clc; mov rcx, rdx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437344: clc; mov rcx, rdx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x00000000004149b7: clc; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414997: clc; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414977: clc; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433917: clc; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000431104: clc; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431124: clc; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x0000000000432dc7: clc; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432bf7: clc; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432d77: clc; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432ba7: clc; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432d97: clc; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bc7: clc; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x00000000004149d7: clc; mov rdi, rsi; mov rsi, qword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x0000000000431297: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312b7: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x0000000000431257: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000431277: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312d7: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312f7: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x0000000000431317: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x0000000000430287: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432fa7: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433397: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x00000000004331b7: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335a7: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f57: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433347: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433157: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000433547: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432f77: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433367: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433177: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000433567: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000430457: clc; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x0000000000401eeb: clc; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401eab: clc; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e6b: clc; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000432627: clc; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004325d7: clc; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325f7: clc; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x0000000000432817: clc; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004327c7: clc; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327e7: clc; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x0000000000432437: clc; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323e7: clc; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432407: clc; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x0000000000432a07: clc; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329b7: clc; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329d7: clc; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x0000000000401e3b: clc; mov rdi, rsi; syscall; 
0x00000000004557c4: clc; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x000000000045c64c: clc; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4fc: clc; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x00000000004026b2: clc; mov rdx, 0xffffffffffffffff; xchg rdx, rax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026d2: clc; mov rdx, 1; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000045b864: clc; mov rdx, rsi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a4: clc; mov rdx, rsi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb4: clc; mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac4: clc; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x000000000045c7d7: clc; mov rsi, qword ptr [rsi]; mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000457454: clc; mov rsi, rdi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba4: clc; mov rsi, rdi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402be4: clc; mov rsi, rdi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b44: clc; mov rsi, rdi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c804: clc; mov rsi, rdi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457524: clc; mov rsi, rdi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e14: clc; mov rsi, rdi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402a54: clc; mov rsi, rdi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004532b4: clc; mov rsi, rdi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x00000000004010d1: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004027cf: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004027ce: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000403bae: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000403bad: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000403d08: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000403d07: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000404481: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004044ff: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f2f: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f5b: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4f6: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5bb: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b656: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b655: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6d3: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6d2: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b8b6: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b8b5: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6ee: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040c767: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7ee: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040e86b: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea3c: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040eabb: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee6d: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000411796: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000411795: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000411ba4: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000411bf4: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000412ef0: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000412fd2: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004161bf: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004161be: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000041621f: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000041621e: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000417daa: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000417e88: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004185d4: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000041def9: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000041e058: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa44: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004298ef: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcdc: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6ad: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6b4: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042f710: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042f804: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042f863: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffac: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000430010: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004300b1: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043056f: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000430601: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043068f: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043d685: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043d684: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfdf: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe9: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043f00f: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000440be7: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000440be6: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004416cf: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a09: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a2f: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000044fddc: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000044febe: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000044febd: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffb5: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffb4: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000045006a: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000450069: clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004531d5: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a5a: clc; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfca: clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000450874: clc; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321e4: clc; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318f4: clc; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x00000000004393f0: clc; movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x00000000004393ef: clc; movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x0000000000405184: clc; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b4: clc; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004393eb: clc; movsd xmm0, qword ptr [rbp - 8]; movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x00000000004326f7: clc; movsx esi, si; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432507: clc; movsx esi, sil; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0d4: clc; movsxd r8, r8d; xchg r10, rsp; ret; 
0x000000000045b964: clc; movsxd rdx, esi; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e4: clc; movsxd rdx, esi; mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba04: clc; movsxd rdx, esi; mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b984: clc; movsxd rdx, esi; mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee4: clc; movsxd rsi, edi; mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457364: clc; movsxd rsi, edi; mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c844: clc; movsxd rsi, edi; mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc4: clc; movsxd rsi, edi; mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa4: clc; movsxd rsi, edi; mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000453f64: clc; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x000000000040b8c4: clc; movsxd rsi, esi; movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad4: clc; movzx esi, byte ptr [rdi]; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000402169: clc; or byte ptr [rcx + riz*2 - 0xa], bh; ret 0x7407; 
0x00000000004315a3: clc; or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043189b: clc; or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004319e3: clc; or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cdb: clc; or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043218b: clc; or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e1e: clc; or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000426c94: clc; ret 0xfffd; 
0x0000000000402573: clc; ret; 
0x0000000000402698: clc; ret; 
0x000000000040270a: clc; ret; 
0x0000000000402752: clc; ret; 
0x0000000000404911: clc; ret; 
0x0000000000404921: clc; ret; 
0x0000000000404932: clc; ret; 
0x0000000000404942: clc; ret; 
0x00000000004049f1: clc; ret; 
0x0000000000404a01: clc; ret; 
0x0000000000404a12: clc; ret; 
0x0000000000404a22: clc; ret; 
0x0000000000404e69: clc; ret; 
0x0000000000404e79: clc; ret; 
0x0000000000404e8d: clc; ret; 
0x0000000000404e9d: clc; ret; 
0x0000000000406f82: clc; ret; 
0x0000000000406f92: clc; ret; 
0x0000000000411ae8: clc; ret; 
0x0000000000411ae7: clc; ret; 
0x0000000000413962: clc; ret; 
0x0000000000413eb2: clc; ret; 
0x0000000000413ec2: clc; ret; 
0x0000000000413f22: clc; ret; 
0x0000000000413f32: clc; ret; 
0x0000000000414672: clc; ret; 
0x00000000004178ee: clc; ret; 
0x0000000000426b32: clc; ret; 
0x000000000042e35b: clc; ret; 
0x000000000042e35a: clc; ret; 
0x000000000044f0ff: clc; ret; 
0x000000000044f4af: clc; ret; 
0x0000000000404e61: clc; shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e71: clc; shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e82: clc; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e92: clc; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x000000000044c0eb: clc; shl rax, 1; ret; 
0x000000000044c0ea: clc; shl rax, 1; ret; 
0x000000000040b6fd: clc; shl rdi, 1; shl r8, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x0000000000403427: clc; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404897: clc; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404977: clc; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e27: clc; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000401e0b: clc; syscall; 
0x00000000004574a4: clc; test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000413007: clc; test rdi, rdi; je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000403352: clc; test rdi, rdi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x0000000000403362: clc; test rdi, rdi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x000000000044c0e2: clc; test rdi, rdi; je 0x4c0ec; mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x000000000042e7b8: clc; test rdi, rdi; sete al; ret; 
0x000000000042f0d4: clc; xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f94: clc; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf4: clc; xor dl, dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004507d4: clc; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x000000000043bad4: clc; xor dl, dl; lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000418664: clc; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418644: clc; xor edi, edi; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab24: clc; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000045cad4: clc; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x00000000004034d4: clc; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f24: clc; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472b4: clc; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004473a4: clc; xor edx, edx; call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447f94: clc; xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x000000000044a254: clc; xor edx, edx; lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448514: clc; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f4: clc; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f4: clc; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004151b4: clc; xor edx, edx; mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004509d4: clc; xor edx, edx; xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x00000000004476b4: clc; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476d4: clc; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x0000000000447854: clc; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447874: clc; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x00000000004353f4: clc; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453374: clc; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042e404: clc; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000420864: clc; xor sil, sil; call 0x20780; lea rsp, [rsp + 8]; ret; 
0x0000000000418d0b: cld; add al, 0; call qword ptr [rax]; 
0x0000000000421700: cld; and eax, 0x3a8b0006; call rax; 
0x000000000043b73f: cld; dec dword ptr [rax + 0x63]; ret; 
0x000000000044deaf: cld; dec dword ptr [rax + 0x63]; ret; 
0x000000000044750e: cld; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044d278: cld; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044ed2b: cld; dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000448343: cld; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004483ec: cld; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004484a1: cld; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044e614: cld; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f1d4: cld; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f624: cld; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004505ec: cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004505eb: cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045068f: cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045068e: cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045085d: cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045085c: cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004504f7: cld; dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004504f6: cld; dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044961a: cld; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x000000000044b3ba: cld; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x000000000045c171: cld; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c1c7: cld; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c201: cld; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c241: cld; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447f9a: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000447f99: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a084: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a0bd: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a102: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ba28: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044bf19: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ce53: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ce7b: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa3f: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa5f: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa7f: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b45: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b65: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004522a4: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000452ed1: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004532bd: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453368: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456828: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456838: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456848: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456858: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045686b: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045688b: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568a8: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568bb: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568d8: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568e8: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568fb: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c0e8: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c0e7: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c0fe: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c0fd: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c118: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c117: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c128: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c127: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c138: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c148: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c18e: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c218: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c258: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c268: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c278: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c28e: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2a8: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2b8: cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044e8ad: cld; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000045164f: cld; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451962: cld; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c2: cld; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c95: cld; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fd8: cld; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044ea47: cld; dec dword ptr [rax - 0x75]; and al, 0x20; lea rsp, [rsp + 0xf8]; ret; 
0x000000000044ea46: cld; dec dword ptr [rax - 0x75]; and al, 0x20; lea rsp, [rsp + 0xf8]; ret; 
0x000000000044e755: cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee6b: cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044effb: cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f312: cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9af: cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc15: cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000045180f: cld; dec dword ptr [rax - 0x75]; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451b32: cld; dec dword ptr [rax - 0x75]; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451e6d: cld; dec dword ptr [rax - 0x75]; ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004521b0: cld; dec dword ptr [rax - 0x75]; ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004531f8: cld; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000045320c: cld; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000044c97b: cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000044cd91: cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000044cd90: cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000044cd8f: cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000045313d: cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000454fa8: cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000454fa7: cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000004566b4: cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000433c7d: cld; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x0000000000452f32: cld; dec dword ptr [rbx - 0x2776e3a8]; pop rbx; ret; 
0x0000000000453e3c: cld; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000453da1: cld; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000045345c: cld; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004527c3: cld; dec dword ptr [rcx + rcx*4 - 0xd]; mov rsi, r12; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000453844: cld; dec dword ptr [rdx + 0x48082444]; lea esp, [rsp + 0xf8]; ret; 
0x000000000045cd80: cld; imul eax, dword ptr [rdx], 0; mov edi, dword ptr [rdx]; call rax; 
0x00000000004451c8: cld; jmp qword ptr [rsi - 0x77]; 
0x0000000000449409: cld; jmp qword ptr [rsi - 0x77]; 
0x000000000044b1a9: cld; jmp qword ptr [rsi - 0x77]; 
0x000000000044b1a8: cld; jmp qword ptr [rsi - 0x77]; 
0x000000000040106b: cld; lea rax, [rip + 0x8198d]; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x000000000043981a: cld; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439819: cld; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043989d: cld; mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043989c: cld; mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004033ec: cld; mov rsp, rbp; pop rbp; ret; 
0x000000000044fa1c: cld; push qword ptr [rax + 0x648d4801]; and al, 8; ret; 
0x0000000000447776: cld; push rdx; movups xmm0, xmmword ptr [rsp + 0x68]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004553ac: cld; sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004480e7: cld; sub eax, 4; ret; 
0x00000000004480e6: cld; sub eax, 4; ret; 
0x000000000044bef7: cld; sub eax, 4; ret; 
0x000000000044bef6: cld; sub eax, 4; ret; 
0x0000000000401084: cld; syscall; 
0x0000000000401084: cld; syscall; jmp 0x107d; mov rsp, rbp; pop rbp; ret; 
0x00000000004028c2: cld; wait; fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x00000000004342a9: cli; add al, 0; call qword ptr [rax + 0x38]; 
0x00000000004342a9: cli; add al, 0; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x00000000004342c9: cli; add al, 0; call qword ptr [rax + 0x40]; 
0x00000000004342c9: cli; add al, 0; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342e9: cli; add al, 0; call qword ptr [rax + 0x48]; 
0x0000000000434329: cli; add al, 0; call qword ptr [rax + 0x50]; 
0x000000000040734d: cli; add dword ptr [rbp + 6], esi; mov eax, 1; ret; 
0x0000000000433854: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x12e8; 
0x0000000000433734: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x32e8; 
0x0000000000433669: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x00000000004336e9: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x0000000000433779: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x0000000000433809: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8948; 
0x00000000004336ac: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0x8a40; 
0x00000000004337c6: cli; add dword ptr [rdi], ecx; xchg esp, eax; ret 0xa0e8; 
0x000000000045672f: cli; add eax, 0x3fe9c148; add rdx, rcx; mov rax, rdx; ret; 
0x000000000040790f: cli; and byte ptr [rax], al; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x000000000045872e: cli; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000453f88: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004557cb: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000455b16: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456058: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e03: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e20: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e45: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e6f: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e96: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456eb3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457100: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045720c: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045722d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045724d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045726d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045728d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572ad: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572cf: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572ef: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457313: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045732d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045734d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457370: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457390: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573b3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573dd: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457403: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457424: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457443: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457460: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457486: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004574a6: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004574c3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004574e6: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045750d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457530: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045755f: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457585: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004575a3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457693: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576bc: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576ec: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457719: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457749: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457773: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458378: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458388: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004583bd: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045876f: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045878b: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004588f8: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458a73: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458a93: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458ab3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458ad0: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045a0a1: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b870: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b970: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b990: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9b0: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9d2: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9f0: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba10: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c7e1: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c7e0: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c810: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c82d: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c850: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c879: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8ac: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8d3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8f3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c91c: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c940: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c976: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9a8: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9d5: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9f9: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca2b: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca5b: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca89: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb00: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb28: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb43: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb63: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb83: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cba3: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cbc1: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cbe1: cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457142: cli; dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x00000000004571af: cli; dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x0000000000454b0b: cli; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000454ddf: cli; dec dword ptr [rax - 0x77]; ret; 
0x0000000000458567: cli; dec dword ptr [rax - 0x77]; ret; 
0x000000000045c519: cli; dec dword ptr [rax - 0x7d]; ret; 
0x000000000045c66c: cli; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000458b3f: cli; dec dword ptr [rbx - 0x173edbfc]; or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000458b7f: cli; dec dword ptr [rbx - 0x173edbfc]; or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004582ea: cli; inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x000000000045830a: cli; inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x0000000000456f33: cli; inc dword ptr [rbp - 0x74fb8a40]; and al, 0x10; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000045603a: cli; inc dword ptr [rbx - 0x308bfb08]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000045766f: cli; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000403aa5: cli; ja 0x3a68; xor eax, eax; ret; 
0x0000000000447c8a: cli; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x000000000040791e: cli; mov r8d, dword ptr [rax]; mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x000000000043b2a1: cli; movsxd rcx, ecx; mov rdi, rax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000403302: cli; or dword ptr [rax], ecx; add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x0000000000434ab4: cli; sbb cl, byte ptr [rdi]; xchg edx, eax; rol byte ptr [rax + rax*8 + 0x39450974], 0xc8; jg 0x34a38; ret; 
0x000000000041ab03: cli; xor r8d, r8d; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000456945: cmc; add dword ptr [rax], eax; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x000000000045c518: cmc; cli; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000416277: cmc; fadd qword ptr [rsi]; add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x0000000000415a77: cmc; in al, 6; add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000439be7: cmc; jle 0x39be7; dec dword ptr [rax - 0x77]; ret; 
0x000000000040237b: cmc; ret; 
0x000000000040369a: cmc; ret; 
0x0000000000423ef6: cmc; std; inc dword ptr [rbx + 0x634801eb]; ret; 
0x0000000000423ef5: cmc; std; inc dword ptr [rbx + 0x634801eb]; ret; 
0x0000000000424642: cmovg eax, edi; cmovle eax, esi; ret; 
0x000000000041c4c4: cmovg eax, edi; cmovle rax, rsi; ret; 
0x000000000041c4c3: cmovg rax, rdi; cmovle rax, rsi; ret; 
0x0000000000424635: cmovge eax, esi; ret; 
0x0000000000424632: cmovl eax, edi; cmovge eax, esi; ret; 
0x000000000043b870: cmovl eax, esi; ret; 
0x000000000043b8a0: cmovl eax, esi; ret; 
0x000000000043b86f: cmovl rax, rsi; ret; 
0x000000000043b89f: cmovl rax, rsi; ret; 
0x000000000041c4c8: cmovle eax, esi; ret; 
0x0000000000424645: cmovle eax, esi; ret; 
0x000000000041c4c7: cmovle rax, rsi; ret; 
0x000000000041f6cd: cmovs eax, dword ptr [rbx + 0x7400407b]; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c5: cmovs eax, dword ptr [rbx + 0x7400407b]; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x0000000000414cd3: cmovs ecx, dword ptr [rbp + 0x53bb505]; add byte ptr [rdi], cl; mov bh, 0x38; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x000000000040549b: cmovs ecx, dword ptr [rbp + 0x58f4505]; add dl, dh; subps xmm1, xmmword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x000000000041cb71: cmovs ecx, dword ptr [rcx - 0x412dce21]; mov cl, 0xd7; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x00000000004075c8: cmovs edx, ecx; out dx, al; cmp eax, 1; jg 0x75b8; ret; 
0x000000000040a1a4: cmp ah, ah; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000436f72: cmp ah, al; std; dec dword ptr [rdx - 0x76b71bbb]; in al, dx; pop rbp; ret; 
0x000000000045180e: cmp ah, bh; dec dword ptr [rax - 0x75]; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000417091: cmp al, 0x10; mov rsi, r13; mov rax, r15; call rax; 
0x00000000004479c5: cmp al, 0x17; add byte ptr [rbp - 0xa], dh; lea rax, [rdi + rdx]; ret; 
0x000000000040ab40: cmp al, 0x17; xor byte ptr [rbx + rbp*8 + 0x48], dh; mov eax, ecx; ret; 
0x0000000000446fba: cmp al, 0x24; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000447272: cmp al, 0x24; add byte ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000000415b85: cmp al, 0x24; add byte ptr [rsi + 4], dh; mov al, byte ptr [rsp + 1]; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000406a5b: cmp al, 0x24; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d4b: cmp al, 0x24; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000043a7b3: cmp al, 0x24; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x0000000000443f89: cmp al, 0x24; call 0x435d0; cvtsi2sd xmm0, eax; lea rsp, [rsp + 0x18]; ret; 
0x0000000000446d25: cmp al, 0x24; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000446e69: cmp al, 0x24; call 0x5bfd0; lea rsp, [rsp + 0x28]; ret; 
0x000000000040d05d: cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000415d7c: cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dbc: cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041653c: cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041657c: cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000040cfe2: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040ae8b: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d5c: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041651c: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed9b: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431191: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043185b: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c9b: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ea8: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ecb: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043214b: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432391: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432581: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432771: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432961: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b48: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d1b: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432efb: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004330fb: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332eb: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334eb: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c78: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404efc: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417baa: cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000407b57: cmp al, 0x24; mov eax, esi; and edx, edx; imul rax, rdx; lea rsp, [rsp + 8]; ret; 
0x0000000000453674: cmp al, 0x24; mov esi, dword ptr [rsp + 8]; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x000000000043b200: cmp al, 0x24; mov rdi, rax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x00000000004559c9: cmp al, 0x24; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416953: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416922: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168c3: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416893: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415993: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415962: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415903: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d3: cmp al, 0x24; mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004191e7: cmp al, 0x24; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000443fdf: cmp al, 0x24; mov rsi, qword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447a80: cmp al, 0x30; add byte ptr [rbp - 0x1d], dh; ret; 
0x0000000000416ffa: cmp al, 0x38; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x0000000000447c83: cmp al, 0x3e; add byte ptr [rbp + rax + 0x48], dh; cmp edx, edi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x0000000000404556: cmp al, 0x47; add byte ptr [rax], al; jne 0x4550; ret; 
0x0000000000449ba6: cmp al, 0x56; add byte ptr [rax], al; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x0000000000405c0a: cmp al, 0x94; add byte ptr [rcx + riz*8 - 0x17], dh; ret 0; 
0x0000000000401cb3: cmp al, 0xc5; cmp byte ptr [rdx], ch; add al, bpl; ret 0xfff6; 
0x0000000000456ddb: cmp al, 0xd6; jbe 0x56de5; mov eax, 1; ret; 
0x0000000000425af9: cmp al, 1; ret; 
0x000000000041f048: cmp al, 2; and byte ptr [rdi - 0x2d], dh; pop r13; pop r12; pop rbx; ret; 
0x0000000000418691: cmp al, 2; and edi, 0xffff; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000040709d: cmp al, 8; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040916b: cmp al, 8; movsx rsi, si; and edx, 0xff; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000432235: cmp al, byte ptr [eax + eax]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432236: cmp al, byte ptr [rax + rax]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000414ae0: cmp al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004151e1: cmp al, byte ptr [rax]; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x0000000000415211: cmp al, byte ptr [rax]; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415241: cmp al, byte ptr [rax]; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415279: cmp al, byte ptr [rax]; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000403164: cmp al, byte ptr [rax]; jne 0x3118; xor eax, eax; ret; 
0x00000000004025a5: cmp al, byte ptr [rdx + r8]; jne 0x25b3; inc r8; jne 0x25a0; xor eax, eax; ret; 
0x00000000004025a6: cmp al, byte ptr [rdx + rax]; jne 0x25b3; inc r8; jne 0x25a0; xor eax, eax; ret; 
0x0000000000404db1: cmp al, byte ptr [rsi + rcx]; jne 0x4dbd; cmp rdx, rcx; jg 0x4da8; mov al, 1; ret; 
0x000000000044cd8d: cmp al, ch; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000439be5: cmp al, ch; cmc; jle 0x39be7; dec dword ptr [rax - 0x77]; ret; 
0x0000000000414cdd: cmp al, ch; lea esi, [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f9: cmp al, ch; movabs eax, dword ptr [0x824648d48000196]; ret; 
0x0000000000439b82: cmp al, ch; pop rax; jg 0x39b84; dec dword ptr [rax - 0x77]; ret; 
0x000000000043391a: cmp al, ch; rol byte ptr [rcx - 0x72b70003], 1; and al, 8; ret; 
0x000000000042757c: cmp al, ch; sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000418635: cmp al, ch; xor eax, 0x48fffffd; mov esp, ebp; pop rbp; ret; 
0x0000000000409546: cmp ax, 1; jg 0x9530; mov rbx, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004034fc: cmp bh, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045164e: cmp bh, ah; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000423bdd: cmp bh, bh; adc eax, 0x6030c; lea rsp, [rsp + 8]; ret; 
0x000000000044c693: cmp bh, bh; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 0xe8]; lea rsp, [rsp + 8]; ret; 
0x00000000004032ad: cmp bh, bh; ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x00000000004032f7: cmp bh, bh; ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x0000000000417dcc: cmp bh, bh; ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x00000000004181e9: cmp bh, bh; ror byte ptr [rax - 0x77], 1; ret; 
0x0000000000417c18: cmp bh, bh; ror byte ptr [rax - 0x77], cl; ret; 
0x00000000004072fd: cmp bh, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000040cf75: cmp bh, byte ptr [rcx]; jne 0xcf7d; mov rax, rdx; ret; 
0x0000000000403153: cmp byte ptr [r9], 0x3d; jne 0x315e; lea rax, [r9 + 1]; ret; 
0x000000000043a98f: cmp byte ptr [r9], al; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x0000000000452298: cmp byte ptr [rax + 0x18], 0; je 0x522a6; mov rdi, rax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x0000000000409c99: cmp byte ptr [rax + 0x21], cl; ret 0x950f; 
0x0000000000459fc9: cmp byte ptr [rax + 0x50], 1; je 0x59fde; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x0000000000459fbb: cmp byte ptr [rax + 0x50], 2; je 0x59fde; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000040789e: cmp byte ptr [rax + 0xf], cl; mov edi, 0x26d348ca; ret; 
0x000000000040db04: cmp byte ptr [rax + 7], dl; add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x000000000043a325: cmp byte ptr [rax + rdx + 0x56], 0; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x0000000000447a7f: cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x0000000000426b85: cmp byte ptr [rax - 0x73], cl; adc eax, 0xffffffa3; mov qword ptr [rax + 0x40], rdx; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000414df6: cmp byte ptr [rax - 0x73], cl; add eax, 0x53c32; call qword ptr [rax]; 
0x0000000000414ca7: cmp byte ptr [rax - 0x73], cl; add eax, 0x53d71; call qword ptr [rax]; 
0x00000000004342ae: cmp byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043a9bb: cmp byte ptr [rax - 0x74b7eefc], cl; add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x000000000043a925: cmp byte ptr [rax - 0x74b7fdf4], cl; add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a924: cmp byte ptr [rax - 0x74b7fdf4], cl; add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416ffb: cmp byte ptr [rax - 0x75], cl; add ecx, dword ptr [rax - 0x75]; xor byte ptr [rcx + rcx*4 - 0x10], cl; call rax; 
0x0000000000414271: cmp byte ptr [rax - 0x75], cl; and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414181: cmp byte ptr [rax - 0x75], cl; and al, 0x10; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000043b540: cmp byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; out 0x48, eax; lea eax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000041da8b: cmp byte ptr [rax - 0x77], cl; fmul dword ptr [rax - 0x75]; push rax; or byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8941; 
0x00000000004122d7: cmp byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000419890: cmp byte ptr [rax - 0x77], cl; ret; 
0x00000000004245d5: cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x0000000000413805: cmp byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042f2f4: cmp byte ptr [rax], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd74: cmp byte ptr [rax], al; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000417163: cmp byte ptr [rax], al; je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000417e5c: cmp byte ptr [rax], al; je 0x17e6e; mov rsi, rbp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417f3e: cmp byte ptr [rax], al; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000418cbd: cmp byte ptr [rax], al; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x000000000041932b: cmp byte ptr [rax], al; je 0x19336; mov rdx, qword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x00000000004245d6: cmp byte ptr [rax], al; je 0x245df; call 0x24350; pop rbx; ret; 
0x000000000045051d: cmp byte ptr [rax], al; je 0x5052f; mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x000000000045058a: cmp byte ptr [rax], al; je 0x5059c; mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x000000000045316c: cmp byte ptr [rax], al; je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453334: cmp byte ptr [rax], al; je 0x53348; mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000045339e: cmp byte ptr [rax], al; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045339e: cmp byte ptr [rax], al; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045650a: cmp byte ptr [rax], al; je 0x5651f; mov rdi, rbx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004030de: cmp byte ptr [rax], al; jne 0x30e5; xor eax, eax; ret; 
0x0000000000447c8f: cmp byte ptr [rax], al; ret; 
0x0000000000456f00: cmp byte ptr [rbp - 0x7cfc8b2e], al; ret 0x8901; 
0x000000000040a360: cmp byte ptr [rbx + 0x29482444], cl; ret 0xd089; 
0x000000000041ef56: cmp byte ptr [rbx + 0x5bd88801], dh; ret; 
0x0000000000418c85: cmp byte ptr [rbx], 0; jne 0x18bef; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045bdd5: cmp byte ptr [rbx], 0; jne 0x5bd3f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000426be8: cmp byte ptr [rcx - 0x48], al; add dword ptr [rax], eax; add byte ptr [rax], al; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c28: cmp byte ptr [rcx - 0x48], al; add dword ptr [rax], eax; add byte ptr [rax], al; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000403a52: cmp byte ptr [rcx], 0; jne 0x3a38; mov rax, 0xffffffffffffffff; ret; 
0x0000000000403154: cmp byte ptr [rcx], 0x3d; jne 0x315e; lea rax, [r9 + 1]; ret; 
0x000000000044ea84: cmp byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a990: cmp byte ptr [rcx], al; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a92f: cmp byte ptr [rcx], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a92e: cmp byte ptr [rcx], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a9c5: cmp byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a9c4: cmp byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x0000000000404a4b: cmp byte ptr [rcx], al; shl byte ptr [rip + 0xff], 1; ret; 
0x000000000040a495: cmp byte ptr [rcx], bh; ret 0xa7d; 
0x000000000040a404: cmp byte ptr [rcx], bh; ret 0xc7d; 
0x0000000000426cd6: cmp byte ptr [rcx], dh; sar byte ptr [rsi + 0x4b2f], cl; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000459db0: cmp byte ptr [rdi + 2], bh; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004479c4: cmp byte ptr [rdi + rdx], 0; jne 0x479c0; lea rax, [rdi + rdx]; ret; 
0x000000000040ab3f: cmp byte ptr [rdi + rdx], 0x30; je 0xab30; mov rax, rcx; ret; 
0x0000000000403a8e: cmp byte ptr [rdi], 0; je 0x3a98; cmp byte ptr [rsi], 0; jne 0x3a9b; xor eax, eax; ret; 
0x000000000040dae0: cmp byte ptr [rdi], 0; je 0xdaeb; mov eax, 1; ret; 
0x0000000000434046: cmp byte ptr [rdi], 0; jne 0x34053; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340cf: cmp byte ptr [rdi], 0; jne 0x340dc; mov rax, 0xffffffffffffffff; ret; 
0x00000000004341e3: cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x0000000000434213: cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x000000000040aa4b: cmp byte ptr [rdi], 0; jne 0xaa5c; mov rax, rcx; ret; 
0x0000000000432360: cmp byte ptr [rdi], 0; setne al; ret; 
0x0000000000432550: cmp byte ptr [rdi], 0; setne al; ret; 
0x0000000000412d34: cmp byte ptr [rdi], 0x15; je 0x12d18; movsx eax, ax; ret; 
0x000000000041f047: cmp byte ptr [rdx + rax], 0x20; ja 0x1f020; pop r13; pop r12; pop rbx; ret; 
0x0000000000401cb5: cmp byte ptr [rdx], ch; add al, bpl; ret 0xfff6; 
0x000000000041523c: cmp byte ptr [rip + 0x3a834800], al; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x000000000041523b: cmp byte ptr [rip + 0x3a834800], al; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x000000000041520c: cmp byte ptr [rip + 0x3a834800], al; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x00000000004151dc: cmp byte ptr [rip + 0x3a834800], al; add byte ptr [rsp + rcx + 0x48], dh; mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x0000000000415274: cmp byte ptr [rip + 0x3a834800], al; add byte ptr [rsp + rcx + 0x48], dh; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x00000000004151ec: cmp byte ptr [rip + 0x4810ff00], al; lea esp, [rsp + 8]; ret; 
0x000000000041521c: cmp byte ptr [rip + 0x4810ff00], al; lea esp, [rsp + 8]; ret; 
0x000000000041524c: cmp byte ptr [rip + 0x4810ff00], al; lea esp, [rsp + 8]; ret; 
0x0000000000426c8a: cmp byte ptr [rsi + 0x4b2f], bh; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x0000000000447c82: cmp byte ptr [rsi + rdi], 0; je 0x47c8d; cmp rdx, rdi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x0000000000403a93: cmp byte ptr [rsi], 0; jne 0x3a9b; xor eax, eax; ret; 
0x0000000000439b7c: cmp byte ptr [rsp + rax + 0x388b4800], 0xe8; pop rax; jg 0x39b84; dec dword ptr [rax - 0x77]; ret; 
0x0000000000415b84: cmp byte ptr [rsp], 0; jbe 0x15b8e; mov al, byte ptr [rsp + 1]; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x000000000040424b: cmp cl, 1; jbe 0x4255; cmp cl, 6; jb 0x4259; neg rax; ret; 
0x0000000000404250: cmp cl, 6; jb 0x4259; neg rax; ret; 
0x0000000000439162: cmp cl, bl; add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000437b5d: cmp dh, 0xff; dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000405126: cmp dh, bh; ret; 
0x000000000042fddd: cmp dh, byte ptr [rcx + rax - 1]; jne 0x2fdd0; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x0000000000407346: cmp dh, byte ptr [rdi + 1]; jne 0x7357; cmp rdx, 1; jne 0x7357; mov eax, 1; ret; 
0x0000000000459265: cmp di, 0x7f; sete al; ret; 
0x0000000000448260: cmp di, 0xd800; jb 0x48271; cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x0000000000448267: cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x000000000040f934: cmp di, word ptr [rcx]; jne 0xf93d; mov rax, rdx; ret; 
0x00000000004072fc: cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000040cf74: cmp dil, byte ptr [rcx]; jne 0xcf7d; mov rax, rdx; ret; 
0x000000000044c5f2: cmp dl, byte ptr [rdx - 0x74b7fffd]; add byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000434042: cmp dl, byte ptr [rsi]; je 0x34058; cmp byte ptr [rdi], 0; jne 0x34053; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340cb: cmp dl, byte ptr [rsi]; je 0x340e1; cmp byte ptr [rdi], 0; jne 0x340dc; mov rax, 0xffffffffffffffff; ret; 
0x0000000000429c67: cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000429cf7: cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000429d87: cmp dword ptr [r12], 0x940f0000; ret; 
0x000000000042c067: cmp dword ptr [r12], 0x940f0000; ret; 
0x000000000042c0f7: cmp dword ptr [r12], 0x940f0000; ret; 
0x000000000042c187: cmp dword ptr [r12], 0x940f0000; ret; 
0x000000000041735c: cmp dword ptr [rax + 0x10], 0; je 0x1738b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x000000000041751b: cmp dword ptr [rax + 0x18], 0; je 0x17545; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000041dad9: cmp dword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041dad9: cmp dword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f619: cmp dword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f619: cmp dword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x0000000000421446: cmp dword ptr [rax + 0x63], ecx; ret; 
0x00000000004267e4: cmp dword ptr [rax + 0xc], 0; jg 0x26748; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x00000000004147e8: cmp dword ptr [rax + 8], 0; je 0x147f8; mov edi, 0xcc; call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x0000000000417241: cmp dword ptr [rax + 8], 0; je 0x17251; mov rdi, rbx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x00000000004322cf: cmp dword ptr [rax + rax], eax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000040bace: cmp dword ptr [rax - 0x10], 0; jl 0xbadd; lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcee: cmp dword ptr [rax - 0x10], 0; jl 0xdcfd; lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000044f574: cmp dword ptr [rax - 0x7d], ecx; mov byte ptr [rdx], 0x48; add ecx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x000000000044f52f: cmp dword ptr [rax - 0x7d], ecx; rol dword ptr [rcx], 0x48; add esi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000417162: cmp dword ptr [rax], 0; je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000417e5b: cmp dword ptr [rax], 0; je 0x17e6e; mov rsi, rbp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417f3d: cmp dword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000418cbc: cmp dword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x000000000041932a: cmp dword ptr [rax], 0; je 0x19336; mov rdx, qword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x000000000045051c: cmp dword ptr [rax], 0; je 0x5052f; mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x0000000000450589: cmp dword ptr [rax], 0; je 0x5059c; mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x000000000045316b: cmp dword ptr [rax], 0; je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453333: cmp dword ptr [rax], 0; je 0x53348; mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000045339d: cmp dword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045339d: cmp dword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000456509: cmp dword ptr [rax], 0; je 0x5651f; mov rdi, rbx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004030dd: cmp dword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x00000000004151db: cmp dword ptr [rax], 0x83480005; cmp al, byte ptr [rax]; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x0000000000422585: cmp dword ptr [rax], 0x850f0000; ret; 
0x0000000000402e76: cmp dword ptr [rax], eax; add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000403a53: cmp dword ptr [rax], eax; jne 0x3a38; mov rax, 0xffffffffffffffff; ret; 
0x00000000004072fe: cmp dword ptr [rbp + 4], esi; mov rax, rdx; ret; 
0x000000000040cf76: cmp dword ptr [rbp + 4], esi; mov rax, rdx; ret; 
0x000000000040f936: cmp dword ptr [rbp + 4], esi; mov rax, rdx; ret; 
0x000000000045168c: cmp dword ptr [rbp - 0x20], 1; jne 0x516a4; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519ac: cmp dword ptr [rbp - 0x20], 1; jne 0x519c4; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ce0: cmp dword ptr [rbp - 0x28], 1; jne 0x51cf8; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452020: cmp dword ptr [rbp - 0x28], 1; jne 0x52038; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041db53: cmp dword ptr [rbx + 0x40], 0; je 0x1dbbb; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f656: cmp dword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6cf: cmp dword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f756: cmp dword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c7: cmp dword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041c99c: cmp dword ptr [rbx + 4], 0xd7b2; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000417fc8: cmp dword ptr [rbx + 8], 0; ja 0x17fa0; pop rbx; ret; 
0x0000000000412fe5: cmp dword ptr [rbx], 0; je 0x12ffd; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041303e: cmp dword ptr [rbx], 0; je 0x1304f; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041b3f9: cmp dword ptr [rbx], 0; jne 0x1b3e8; pop rbx; ret; 
0x000000000041b47c: cmp dword ptr [rbx], 0; jne 0x1b450; pop r13; pop r12; pop rbx; ret; 
0x000000000042d834: cmp dword ptr [rbx], eax; add dl, dh; movups xmm0, xmmword ptr [rax]; ret; 
0x000000000042d844: cmp dword ptr [rbx], eax; add dl, dh; movups xmm0, xmmword ptr [rax]; ret; 
0x0000000000446abd: cmp dword ptr [rcx + rax], 0x1480000; ret 0x6b48; 
0x0000000000413561: cmp dword ptr [rdi + 0x10], 0; je 0x1356f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413861: cmp dword ptr [rdi + 0x10], 0; je 0x1386f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413591: cmp dword ptr [rdi + 0x18], 0; je 0x1359f; mov rax, qword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x00000000004137b7: cmp dword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x0000000000423f91: cmp dword ptr [rdi + 0xe0], 0; je 0x23fa5; mov rax, qword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000404555: cmp dword ptr [rdi + rax*2], 0xf4750000; ret; 
0x0000000000413581: cmp dword ptr [rdi], 0; je 0x1358d; mov rax, qword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x0000000000418cff: cmp dword ptr [rdi], 0; je 0x18d12; mov rdi, rax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x000000000045026c: cmp dword ptr [rdi], 0; jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000432b10: cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000432cf0: cmp dword ptr [rdi], 0; setne al; ret; 
0x0000000000432ed1: cmp dword ptr [rdi], 0; setne al; ret; 
0x00000000004330b1: cmp dword ptr [rdi], 0; setne al; ret; 
0x00000000004332c1: cmp dword ptr [rdi], 0; setne al; ret; 
0x00000000004334a1: cmp dword ptr [rdi], 0; setne al; ret; 
0x00000000004151e0: cmp dword ptr [rdx], 0; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x0000000000415210: cmp dword ptr [rdx], 0; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415240: cmp dword ptr [rdx], 0; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415278: cmp dword ptr [rdx], 0; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000403163: cmp dword ptr [rdx], 0; jne 0x3118; xor eax, eax; ret; 
0x0000000000424d9b: cmp dword ptr [rip + 0x6084b], 0x400; jl 0x24dac; call 0x24d10; lea rsp, [rsp + 8]; ret; 
0x000000000041aa3c: cmp dword ptr [rip + 0x6a335], 0; je 0x1aa4b; call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x000000000041a85f: cmp dword ptr [rip + 0x6a359], 0x940f0000; ret; 
0x000000000044a0b2: cmp dword ptr [rsi + rdx*2 - 2], 0xee760020; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x0000000000449ba5: cmp dword ptr [rsi + rdx*2], 0xec750000; mov word ptr [rax + rdx*2], 0; ret; 
0x0000000000429c68: cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000429cf8: cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000429d88: cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c068: cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c0f8: cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c188: cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000041c99b: cmp dword ptr ds:[rbx + 4], 0xd7b2; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000040790d: cmp dx, 0x20; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x0000000000403335: cmp eax, -1; setne al; lea rsp, [rsp + 0x108]; ret; 
0x0000000000455b09: cmp eax, 0x229e2; mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431f84: cmp eax, 0x24e80004; jno 0x31f8b; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000044f63c: cmp eax, 0x260ff; lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f33c: cmp eax, 0x262a7; lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f01c: cmp eax, 0x26467; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee8c: cmp eax, 0x26497; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea76: cmp eax, 0x2674d; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000045bc2f: cmp eax, 0x2824c; movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x0000000000452ec9: cmp eax, 0x32d02; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000042751c: cmp eax, 0x3741f; call 0x24dc0; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000426d57: cmp eax, 0x37bcc; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d37: cmp eax, 0x37be4; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d17: cmp eax, 0x37bf4; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000044594e: cmp eax, 0x3e52d; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458f1: cmp eax, 0x3e58a; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000444c33: cmp eax, 0x3f248; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000042240f: cmp eax, 0x41fffff2; pop rbp; pop r12; pop rbx; ret; 
0x0000000000423b69: cmp eax, 0x461e2; ret; 
0x00000000004239e5: cmp eax, 0x46306; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000043059f: cmp eax, 0x48000002; mov esp, ebp; pop rbp; ret; 
0x000000000043356f: cmp eax, 0x4800001a; lea esp, [rsp + 8]; ret; 
0x000000000043315f: cmp eax, 0x4800001d; lea esp, [rsp + 8]; ret; 
0x00000000004329df: cmp eax, 0x48000025; lea esp, [rsp + 8]; ret; 
0x0000000000423ae7: cmp eax, 0x48000462; lea esp, [rsp + 8]; ret; 
0x0000000000419207: cmp eax, 0x48000509; lea esp, [rsp + 8]; ret; 
0x000000000041acf7: cmp eax, 0x480006a0; lea esp, [rsp + 8]; ret; 
0x0000000000415c77: cmp eax, 0x480006e3; lea esp, [rsp + 8]; ret; 
0x00000000004112df: cmp eax, 0x48fffffe; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041b8d7: cmp eax, 0x4e3e4; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b387: cmp eax, 0x4e814; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000419035: cmp eax, 0x50b06; mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041d766: cmp eax, 0x65b15; add rdi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000041d5d6: cmp eax, 0x65ca5; add rdi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d466: cmp eax, 0x65e15; add rdi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d2e6: cmp eax, 0x65f95; add rdi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041b747: cmp eax, 0x696a4; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b715: cmp eax, 0x696d6; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041aa3d: cmp eax, 0x6a335; add byte ptr [rsi + rax - 1], dh; adc eax, 0x6a32d; lea rsp, [rsp + 8]; ret; 
0x000000000041a6bf: cmp eax, 0x6a3dc; xor edx, edx; mov esi, 0xe8; call 0x22e0; pop rbx; ret; 
0x000000000041a783: cmp eax, 0x6a448; call rax; 
0x000000000041a715: cmp eax, 0x6a4b6; call rax; 
0x000000000041a68a: cmp eax, 0x6a541; call rax; 
0x000000000041a62d: cmp eax, 0x6a59e; call rax; 
0x000000000041a46a: cmp eax, 0x6a761; call rax; 
0x000000000041a1c3: cmp eax, 0x6aa08; call rax; 
0x000000000041a03f: cmp eax, 0x6ab4c; call 0x1ad70; pop rbx; ret; 
0x0000000000419ffb: cmp eax, 0x6ab90; call 0x1ad70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419e45: cmp eax, 0x6ad86; call rax; 
0x0000000000419d0c: cmp eax, 0x6aebf; call rax; 
0x0000000000418143: cmp eax, 0x6b838; add rdi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x00000000004192a4: cmp eax, 0x6b927; call rax; 
0x0000000000419254: cmp eax, 0x6b977; call rax; 
0x00000000004184fc: cmp eax, 0x6ba3f; call rax; 
0x0000000000416a25: cmp eax, 0x6d546; mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000415148: cmp eax, 0x6ee03; call rax; 
0x00000000004150cc: cmp eax, 0x6ee6f; call rax; 
0x00000000004150a5: cmp eax, 0x6eea6; call rax; 
0x000000000041503b: cmp eax, 0x6ef10; call rax; 
0x0000000000414fee: cmp eax, 0x6ef5d; call rax; 
0x0000000000414fc1: cmp eax, 0x6ef7a; call rax; 
0x0000000000414f35: cmp eax, 0x6f016; call rax; 
0x0000000000414eca: cmp eax, 0x6f081; call rax; 
0x0000000000414e88: cmp eax, 0x6f0c3; call rax; 
0x0000000000414e31: cmp eax, 0x6f10a; call rax; 
0x0000000000414dc4: cmp eax, 0x6f187; call rax; 
0x0000000000414d97: cmp eax, 0x6f1a4; call rax; 
0x0000000000414d71: cmp eax, 0x6f1ea; call rax; 
0x0000000000414d3d: cmp eax, 0x6f21e; call rax; 
0x0000000000414d0e: cmp eax, 0x6f24d; call rax; 
0x0000000000414c75: cmp eax, 0x6f2d6; call rax; 
0x0000000000414b72: cmp eax, 0x6f3d9; call rax; 
0x0000000000414b0d: cmp eax, 0x6f42e; call rax; 
0x0000000000414ab5: cmp eax, 0x6f496; call rax; 
0x0000000000414a61: cmp eax, 0x6f4ea; call rax; 
0x0000000000414a35: cmp eax, 0x6f516; call rax; 
0x0000000000411289: cmp eax, 0x72bf2; call 0x11120; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040f224: cmp eax, 0x74c57; mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x000000000040dbe5: cmp eax, 0x76176; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbc7: cmp eax, 0x76194; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db75: cmp eax, 0x761e6; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db57: cmp eax, 0x76204; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000403217: cmp eax, 0x7f; je 0x3224; and edi, 0x7f; je 0x3224; mov al, 1; ret; 
0x0000000000457827: cmp eax, 0x7f; je 0x57834; and edi, 0x7f; je 0x57834; mov al, 1; ret; 
0x0000000000402cfe: cmp eax, 0x8122d; call rax; 
0x0000000000402c46: cmp eax, 0x812e5; call rax; 
0x0000000000402a33: cmp eax, 0x814f8; call rax; 
0x0000000000402a05: cmp eax, 0x81526; call rax; 
0x000000000041e0cf: cmp eax, 0x89fffe64; ret; 
0x00000000004210b2: cmp eax, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c3c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421053: cmp eax, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c9b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421020: cmp eax, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62cce; mov edi, dword ptr [rdx]; call rax; 
0x00000000004147f5: cmp eax, 0x8d480000; and al, 8; ret; 
0x000000000040ff99: cmp eax, 0x90ff0007; mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040ed65: cmp eax, 0xb70f0007; xor byte ptr [rax - 0x73], cl; add eax, 0x74fee; call qword ptr [rax + 8]; 
0x0000000000431f14: cmp eax, 0xd4e80004; insd dword ptr [rdi], dx; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000409547: cmp eax, 0xe47f0001; mov rbx, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000457205: cmp eax, 0xe8000000; shr byte ptr [rdx + rdi*8 + 0x648d48ff], cl; and al, 8; ret; 
0x00000000004403cf: cmp eax, 0xe8fffd4d; sbb byte ptr [rbp - 3], cl; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000456d85: cmp eax, 0xf; jl 0x56d78; xor eax, eax; ret; 
0x0000000000456da5: cmp eax, 0xf; jl 0x56d98; xor eax, eax; ret; 
0x000000000041c9b1: cmp eax, 1; je 0x1c9c1; cmp eax, 2; je 0x1c9c1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000407494: cmp eax, 1; jg 0x7478; ret; 
0x00000000004074d4: cmp eax, 1; jg 0x74b8; ret; 
0x000000000040750b: cmp eax, 1; jg 0x74f8; ret; 
0x0000000000407557: cmp eax, 1; jg 0x7538; ret; 
0x0000000000407597: cmp eax, 1; jg 0x7578; ret; 
0x00000000004075cc: cmp eax, 1; jg 0x75b8; ret; 
0x0000000000407667: cmp eax, 1; jg 0x7648; ret; 
0x0000000000456c55: cmp eax, 1; jl 0x56c48; xor eax, eax; ret; 
0x0000000000456c75: cmp eax, 1; jl 0x56c68; xor eax, eax; ret; 
0x0000000000414734: cmp eax, 1; jne 0x14747; mov rdi, rbx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x000000000041c9b6: cmp eax, 2; je 0x1c9c1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x00000000004315c5: cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x000000000043187d: cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a05: cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cbd: cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x000000000043216d: cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e40: cmp eax, 2; setb al; mov rsp, rbp; pop rbp; ret; 
0x000000000045603c: cmp eax, 4; je 0x56010; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000431612: cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004318da: cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a52: cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d1a: cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321ca: cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e7d: cmp eax, 6; sete al; mov rsp, rbp; pop rbp; ret; 
0x00000000004315f2: cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004318ba: cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a32: cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cfa: cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321aa: cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e5d: cmp eax, 7; sete al; mov rsp, rbp; pop rbp; ret; 
0x00000000004315a2: cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043189a: cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004319e2: cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cda: cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043218a: cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e1d: cmp eax, 8; sete al; mov rsp, rbp; pop rbp; ret; 
0x00000000004574df: cmp eax, dword ptr [rax]; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457506: cmp eax, dword ptr [rax]; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000412fe6: cmp eax, dword ptr [rax]; je 0x12ffd; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041303f: cmp eax, dword ptr [rax]; je 0x1304f; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000418c86: cmp eax, dword ptr [rax]; jne 0x18bef; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041b3fa: cmp eax, dword ptr [rax]; jne 0x1b3e8; pop rbx; ret; 
0x000000000041b47d: cmp eax, dword ptr [rax]; jne 0x1b450; pop r13; pop r12; pop rbx; ret; 
0x000000000045bdd6: cmp eax, dword ptr [rax]; jne 0x5bd3f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414cd8: cmp eax, dword ptr [rip + 0x38b70f00]; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000425ae6: cmp eax, dword ptr [rip + 0x5fb44]; je 0x25afc; mov eax, edx; lea rcx, [rip + 0x5fb09]; mov byte ptr [rcx + rax], dil; ret; 
0x000000000040390c: cmp eax, dword ptr [rsi]; jbe 0x3916; mov eax, 1; ret; 
0x0000000000403728: cmp eax, ecx; ja 0x3700; mov rax, 0xffffffffffffffff; ret; 
0x00000000004037a9: cmp eax, ecx; ja 0x3780; mov rax, 0xffffffffffffffff; ret; 
0x0000000000403a4e: cmp eax, ecx; jbe 0x3a57; cmp byte ptr [rcx], 0; jne 0x3a38; mov rax, 0xffffffffffffffff; ret; 
0x000000000042e334: cmp eax, ecx; jg 0x2e320; mov rsp, rbp; pop rbp; ret; 
0x0000000000434abe: cmp eax, ecx; jg 0x34a38; ret; 
0x0000000000404cf4: cmp eax, ecx; jg 0x4ce0; ret; 
0x0000000000404d24: cmp eax, ecx; jg 0x4d10; ret; 
0x0000000000404d54: cmp eax, ecx; jg 0x4d40; ret; 
0x0000000000404d84: cmp eax, ecx; jg 0x4d70; ret; 
0x000000000044f885: cmp eax, ecx; jg 0x4f858; ret; 
0x0000000000403600: cmp eax, edi; ja 0x35f8; ret; 
0x0000000000403697: cmp eax, edi; ja 0x3690; ret; 
0x00000000004036b8: cmp eax, edi; ja 0x36b0; ret; 
0x0000000000411362: cmp eax, edx; jg 0x11310; ret; 
0x000000000041ba8d: cmp eax, edx; jg 0x1ba70; ret; 
0x000000000043a992: cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x000000000040543e: cmp eax, edx; jg 0x5428; ret; 
0x0000000000433d03: cmp eax, edx; jle 0x33d17; and eax, 0xff; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b413: cmp eax, edx; jle 0xb427; and eax, 0xff; and r11d, 0xff; sub rax, r11; ret; 
0x000000000043cd4e: cmp ebp, -1; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd53: cmp ebp, -1; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043391d: cmp ebp, 0x648d48ff; and al, 8; ret; 
0x00000000004338ce: cmp ebp, 0xdf8948ff; call 0x19220; xor ebx, ebx; pop rbx; ret; 
0x000000000040dabc: cmp ebp, eax; jg 0xdaa8; pop r13; pop r12; pop rbx; ret; 
0x000000000045a028: cmp ebp, eax; ret 0xfa8a; 
0x000000000045c456: cmp ebp, ebx; jg 0x5c420; pop r13; pop r12; pop rbx; ret; 
0x000000000041b42d: cmp ebp, esp; jg 0x1b418; pop r13; pop r12; pop rbx; ret; 
0x000000000041b4bd: cmp ebp, esp; jg 0x1b4a8; pop r13; pop r12; pop rbx; ret; 
0x00000000004557b1: cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x0000000000459311: cmp ebx, dword ptr [rbp + 2]; add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], cl; add al, 0xd0; ret; 
0x0000000000427875: cmp ebx, esp; jg 0x27838; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427874: cmp ebx, r12d; jg 0x27838; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456db6: cmp ecx, 0x400; jl 0x56dc4; mov eax, 0xffffffff; ret; 
0x0000000000434a1c: cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x000000000040f048: cmp ecx, dword ptr [rax - 0x77]; ret 0xd148; 
0x000000000042f660: cmp ecx, dword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x000000000041ef4c: cmp ecx, dword ptr [rdx + 0x20]; jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x0000000000410763: cmp ecx, ebx; ja 0x106f8; lea rax, [r10 + 1]; pop rbx; ret; 
0x00000000004038be: cmp ecx, edi; ja 0x3890; xor eax, eax; ret; 
0x00000000004039c3: cmp ecx, edi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000420ac9: cmp edi, -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004031b6: cmp edi, 0x1000; sete al; ret; 
0x00000000004577c6: cmp edi, 0x1000; sete al; ret; 
0x0000000000403186: cmp edi, 0x2000; sete al; ret; 
0x0000000000457796: cmp edi, 0x2000; sete al; ret; 
0x0000000000448268: cmp edi, 0x377dfff; mov al, 1; ret; 
0x0000000000403176: cmp edi, 0x4000; sete al; ret; 
0x0000000000457786: cmp edi, 0x4000; sete al; ret; 
0x0000000000456cf4: cmp edi, 0x400; jl 0x56d02; mov eax, 0xffffffff; ret; 
0x0000000000456d34: cmp edi, 0x400; jl 0x56d42; mov eax, 0xffffffff; ret; 
0x0000000000403196: cmp edi, 0x6000; sete al; ret; 
0x00000000004577a6: cmp edi, 0x6000; sete al; ret; 
0x00000000004031a6: cmp edi, 0x8000; sete al; ret; 
0x00000000004577b6: cmp edi, 0x8000; sete al; ret; 
0x00000000004031c6: cmp edi, 0xa000; sete al; ret; 
0x00000000004577d6: cmp edi, 0xa000; sete al; ret; 
0x0000000000448261: cmp edi, 0xa72d800; cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x00000000004031d6: cmp edi, 0xc000; sete al; ret; 
0x00000000004577e6: cmp edi, 0xc000; sete al; ret; 
0x000000000040f935: cmp edi, dword ptr [rcx]; jne 0xf93d; mov rax, rdx; ret; 
0x000000000041500a: cmp edi, dword ptr [rsi + 1]; call 0x2950; pop rbx; ret; 
0x0000000000414661: cmp edi, esi; sete al; ret; 
0x00000000004528c6: cmp edx, 0x1e; jl 0x52898; xor eax, eax; ret; 
0x000000000040b704: cmp edx, 0x3f; jl 0xb6f0; ret; 
0x000000000040790e: cmp edx, 0x77c0020; mov dword ptr [rax], 0; ret; 
0x000000000040734c: cmp edx, 1; jne 0x7357; mov eax, 1; ret; 
0x0000000000433733: cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c5: cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433853: cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433668: cmp edx, 1; sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336e8: cmp edx, 1; sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433778: cmp edx, 1; sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433808: cmp edx, 1; sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336ab: cmp edx, 1; sete dl; mov sil, byte ptr [rax]; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000404a8d: cmp edx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404aca: cmp edx, 7; jl 0x4ab0; ret; 
0x000000000041906c: cmp edx, dword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x000000000041d26e: cmp edx, dword ptr [rax + 0x20]; jl 0x1d28b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c8: cmp edx, dword ptr [rax + 0x20]; jl 0x1d3e5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d53e: cmp edx, dword ptr [rax + 0x20]; jl 0x1d55b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d6b8: cmp edx, dword ptr [rax + 0x20]; jl 0x1d6d8; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f12a: cmp edx, dword ptr [rax + 0x20]; jl 0x1f135; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f650: cmp edx, dword ptr [rax + 0x20]; jl 0x1f66b; cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6c9: cmp edx, dword ptr [rax + 0x20]; jl 0x1f6dd; cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6b6: cmp edx, dword ptr [rax + 0x20]; jl 0x1f6dd; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f750: cmp edx, dword ptr [rax + 0x20]; jl 0x1f76b; cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c1: cmp edx, dword ptr [rax + 0x20]; jl 0x1f7d5; cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7ae: cmp edx, dword ptr [rax + 0x20]; jl 0x1f7d5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x00000000004039a8: cmp edx, dword ptr [rsi]; jbe 0x39b2; mov eax, 1; ret; 
0x0000000000402479: cmp edx, eax; jbe 0x246b; ret; 
0x00000000004024fb: cmp edx, eax; jbe 0x24eb; ret; 
0x000000000040256d: cmp edx, eax; jbe 0x255f; sar rax, 1; ret; 
0x000000000042fde4: cmp edx, eax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x0000000000425104: cmp edx, eax; jne 0x2510b; mov al, 1; ret; 
0x000000000043413f: cmp edx, eax; jne 0x34120; ret; 
0x0000000000402467: cmp edx, ecx; ja 0x2450; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e7: cmp edx, ecx; ja 0x24d0; or rax, 0xffffffffffffffff; ret; 
0x000000000040255b: cmp edx, ecx; ja 0x2530; or rax, 0xffffffffffffffff; ret; 
0x000000000044f539: cmp edx, ecx; ja 0x4f518; ret; 
0x000000000044f57e: cmp edx, ecx; ja 0x4f560; ret; 
0x00000000004250aa: cmp edx, ecx; jg 0x25020; pop rbx; ret; 
0x0000000000449bdd: cmp edx, ecx; jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x0000000000404db7: cmp edx, ecx; jg 0x4da8; mov al, 1; ret; 
0x0000000000404dea: cmp edx, ecx; jg 0x4dd8; mov al, 1; ret; 
0x0000000000403aa4: cmp edx, edi; ja 0x3a68; xor eax, eax; ret; 
0x0000000000447c89: cmp edx, edi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x00000000004341b1: cmp edx, edx; jne 0x34180; ret; 
0x00000000004043f9: cmp edx, esi; jl 0x43ff; xor eax, eax; ret; 
0x00000000004135c2: cmp esi, 1; jne 0x135dc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c632: cmp esi, 1; jne 0x3c64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb62: cmp esi, 1; jne 0x3fb7c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e632: cmp esi, 1; jne 0x4e64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed52: cmp esi, 1; jne 0x4ed6c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee2: cmp esi, 1; jne 0x4eefc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f2: cmp esi, 1; jne 0x4f20c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a2: cmp esi, 1; jne 0x4f8bc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa2: cmp esi, 1; jne 0x4fabc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043b86d: cmp esi, eax; cmovl rax, rsi; ret; 
0x000000000043b89d: cmp esi, eax; cmovl rax, rsi; ret; 
0x000000000045949a: cmp esi, eax; je 0x59460; pop r13; pop r12; pop rbx; ret; 
0x0000000000404293: cmp esi, eax; jg 0x429a; xor eax, eax; ret; 
0x0000000000405406: cmp esi, eax; jg 0x53f0; ret; 
0x0000000000424640: cmp esi, edi; cmovg eax, edi; cmovle eax, esi; ret; 
0x000000000041c4c1: cmp esi, edi; cmovg rax, rdi; cmovle rax, rsi; ret; 
0x0000000000424630: cmp esi, edi; cmovl eax, edi; cmovge eax, esi; ret; 
0x0000000000413c03: cmp esi, edi; jne 0x13be8; cmp rsi, rdi; sete al; ret; 
0x0000000000413c08: cmp esi, edi; sete al; ret; 
0x000000000040730a: cmp esi, edx; jg 0x72f8; xor eax, eax; ret; 
0x000000000040cf82: cmp esi, edx; jg 0xcf70; xor eax, eax; ret; 
0x000000000040f942: cmp esi, edx; jg 0xf930; xor eax, eax; ret; 
0x0000000000404cbe: cmp esp, eax; jg 0x4c98; pop r13; pop r12; pop rbx; ret; 
0x0000000000429802: cmp esp, ebp; jg 0x297d0; pop r13; pop r12; pop rbx; ret; 
0x000000000042bbef: cmp esp, ebp; jg 0x2bbc0; pop r13; pop r12; pop rbx; ret; 
0x0000000000453315: cmp esp, ebp; jg 0x53300; pop r13; pop r12; pop rbx; ret; 
0x0000000000403162: cmp qword ptr [r10], 0; jne 0x3118; xor eax, eax; ret; 
0x000000000041735b: cmp qword ptr [rax + 0x10], 0; je 0x1738b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x000000000041751a: cmp qword ptr [rax + 0x18], 0; je 0x17545; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000041dad8: cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041dad8: cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f618: cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f618: cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x0000000000417240: cmp qword ptr [rax + 8], 0; je 0x17251; mov rdi, rbx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x000000000040bacd: cmp qword ptr [rax - 0x10], 0; jl 0xbadd; lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dced: cmp qword ptr [rax - 0x10], 0; jl 0xdcfd; lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x0000000000417161: cmp qword ptr [rax], 0; je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000417e5a: cmp qword ptr [rax], 0; je 0x17e6e; mov rsi, rbp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417f3c: cmp qword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000418cbb: cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000419329: cmp qword ptr [rax], 0; je 0x19336; mov rdx, qword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x000000000045051b: cmp qword ptr [rax], 0; je 0x5052f; mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x0000000000450588: cmp qword ptr [rax], 0; je 0x5059c; mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x000000000045316a: cmp qword ptr [rax], 0; je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453332: cmp qword ptr [rax], 0; je 0x53348; mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000045339c: cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045339c: cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000456508: cmp qword ptr [rax], 0; je 0x5651f; mov rdi, rbx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004030dc: cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x000000000045168b: cmp qword ptr [rbp - 0x20], 1; jne 0x516a4; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519ab: cmp qword ptr [rbp - 0x20], 1; jne 0x519c4; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451cdf: cmp qword ptr [rbp - 0x28], 1; jne 0x51cf8; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045201f: cmp qword ptr [rbp - 0x28], 1; jne 0x52038; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041db52: cmp qword ptr [rbx + 0x40], 0; je 0x1dbbb; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f655: cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6ce: cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f755: cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c6: cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x0000000000417fc7: cmp qword ptr [rbx + 8], 0; ja 0x17fa0; pop rbx; ret; 
0x0000000000412fe4: cmp qword ptr [rbx], 0; je 0x12ffd; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041303d: cmp qword ptr [rbx], 0; je 0x1304f; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041b3f8: cmp qword ptr [rbx], 0; jne 0x1b3e8; pop rbx; ret; 
0x000000000041b47b: cmp qword ptr [rbx], 0; jne 0x1b450; pop r13; pop r12; pop rbx; ret; 
0x0000000000413560: cmp qword ptr [rdi + 0x10], 0; je 0x1356f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413860: cmp qword ptr [rdi + 0x10], 0; je 0x1386f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413590: cmp qword ptr [rdi + 0x18], 0; je 0x1359f; mov rax, qword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x00000000004137b6: cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x0000000000423f90: cmp qword ptr [rdi + 0xe0], 0; je 0x23fa5; mov rax, qword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000413580: cmp qword ptr [rdi], 0; je 0x1358d; mov rax, qword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x0000000000418cfe: cmp qword ptr [rdi], 0; je 0x18d12; mov rdi, rax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x000000000045026b: cmp qword ptr [rdi], 0; jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000432ed0: cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004330b0: cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004332c0: cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004334a0: cmp qword ptr [rdi], 0; setne al; ret; 
0x00000000004151df: cmp qword ptr [rdx], 0; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x000000000041520f: cmp qword ptr [rdx], 0; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x000000000041523f: cmp qword ptr [rdx], 0; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415277: cmp qword ptr [rdx], 0; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041aa3b: cmp qword ptr [rip + 0x6a335], 0; je 0x1aa4b; call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x0000000000404cbd: cmp r12, rax; jg 0x4c98; pop r13; pop r12; pop rbx; ret; 
0x0000000000429801: cmp r12d, r13d; jg 0x297d0; pop r13; pop r12; pop rbx; ret; 
0x000000000042bbee: cmp r12d, r13d; jg 0x2bbc0; pop r13; pop r12; pop rbx; ret; 
0x0000000000453314: cmp r12d, r13d; jg 0x53300; pop r13; pop r12; pop rbx; ret; 
0x000000000040dabb: cmp r13, rax; jg 0xdaa8; pop r13; pop r12; pop rbx; ret; 
0x000000000045c455: cmp r13d, ebx; jg 0x5c420; pop r13; pop r12; pop rbx; ret; 
0x000000000041b42c: cmp r13d, r12d; jg 0x1b418; pop r13; pop r12; pop rbx; ret; 
0x000000000041b4bc: cmp r13d, r12d; jg 0x1b4a8; pop r13; pop r12; pop rbx; ret; 
0x0000000000433d02: cmp r8, r10; jle 0x33d17; and eax, 0xff; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b412: cmp r8, r10; jle 0xb427; and eax, 0xff; and r11d, 0xff; sub rax, r11; ret; 
0x0000000000403727: cmp r8, rcx; ja 0x3700; mov rax, 0xffffffffffffffff; ret; 
0x00000000004037a8: cmp r8, rcx; ja 0x3780; mov rax, 0xffffffffffffffff; ret; 
0x0000000000403a4d: cmp r8, rcx; jbe 0x3a57; cmp byte ptr [rcx], 0; jne 0x3a38; mov rax, 0xffffffffffffffff; ret; 
0x000000000042e333: cmp r8, rcx; jg 0x2e320; mov rsp, rbp; pop rbp; ret; 
0x0000000000404db0: cmp r8b, byte ptr [rsi + rcx]; jne 0x4dbd; cmp rdx, rcx; jg 0x4da8; mov al, 1; ret; 
0x000000000040390b: cmp r8d, dword ptr [rsi]; jbe 0x3916; mov eax, 1; ret; 
0x0000000000434abd: cmp r8d, r9d; jg 0x34a38; ret; 
0x000000000042f65f: cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x0000000000404cf3: cmp rax, rcx; jg 0x4ce0; ret; 
0x0000000000404d23: cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404d53: cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000404d83: cmp rax, rcx; jg 0x4d70; ret; 
0x00000000004035ff: cmp rax, rdi; ja 0x35f8; ret; 
0x0000000000403696: cmp rax, rdi; ja 0x3690; ret; 
0x00000000004036b7: cmp rax, rdi; ja 0x36b0; ret; 
0x0000000000411361: cmp rax, rdx; jg 0x11310; ret; 
0x000000000040543d: cmp rax, rdx; jg 0x5428; ret; 
0x000000000041ef4b: cmp rcx, qword ptr [rdx + 0x20]; jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x0000000000410762: cmp rcx, r11; ja 0x106f8; lea rax, [r10 + 1]; pop rbx; ret; 
0x00000000004038bd: cmp rcx, rdi; ja 0x3890; xor eax, eax; ret; 
0x00000000004039c2: cmp rcx, rdi; ja 0x39a0; xor eax, eax; ret; 
0x0000000000414660: cmp rdi, rsi; sete al; ret; 
0x000000000040734b: cmp rdx, 1; jne 0x7357; mov eax, 1; ret; 
0x0000000000404a8c: cmp rdx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404ac9: cmp rdx, 7; jl 0x4ab0; ret; 
0x000000000041906b: cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x000000000041d26d: cmp rdx, qword ptr [rax + 0x20]; jl 0x1d28b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c7: cmp rdx, qword ptr [rax + 0x20]; jl 0x1d3e5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d53d: cmp rdx, qword ptr [rax + 0x20]; jl 0x1d55b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d6b7: cmp rdx, qword ptr [rax + 0x20]; jl 0x1d6d8; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f129: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f135; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f64f: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f66b; cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6c8: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f6dd; cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6b5: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f6dd; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f74f: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f76b; cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c0: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f7d5; cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7ad: cmp rdx, qword ptr [rax + 0x20]; jl 0x1f7d5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x00000000004341b0: cmp rdx, r10; jne 0x34180; ret; 
0x000000000043413e: cmp rdx, r8; jne 0x34120; ret; 
0x0000000000402478: cmp rdx, rax; jbe 0x246b; ret; 
0x00000000004024fa: cmp rdx, rax; jbe 0x24eb; ret; 
0x000000000040256c: cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x000000000042fde3: cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x0000000000425103: cmp rdx, rax; jne 0x2510b; mov al, 1; ret; 
0x0000000000402466: cmp rdx, rcx; ja 0x2450; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e6: cmp rdx, rcx; ja 0x24d0; or rax, 0xffffffffffffffff; ret; 
0x000000000040255a: cmp rdx, rcx; ja 0x2530; or rax, 0xffffffffffffffff; ret; 
0x000000000044f538: cmp rdx, rcx; ja 0x4f518; ret; 
0x000000000044f57d: cmp rdx, rcx; ja 0x4f560; ret; 
0x0000000000449bdc: cmp rdx, rcx; jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x0000000000404db6: cmp rdx, rcx; jg 0x4da8; mov al, 1; ret; 
0x0000000000404de9: cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x0000000000403aa3: cmp rdx, rdi; ja 0x3a68; xor eax, eax; ret; 
0x0000000000447c88: cmp rdx, rdi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x00000000004043f8: cmp rdx, rsi; jl 0x43ff; xor eax, eax; ret; 
0x00000000004135c1: cmp rsi, 1; jne 0x135dc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c631: cmp rsi, 1; jne 0x3c64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb61: cmp rsi, 1; jne 0x3fb7c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e631: cmp rsi, 1; jne 0x4e64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed51: cmp rsi, 1; jne 0x4ed6c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee1: cmp rsi, 1; jne 0x4eefc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f1: cmp rsi, 1; jne 0x4f20c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a1: cmp rsi, 1; jne 0x4f8bc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa1: cmp rsi, 1; jne 0x4fabc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043b86c: cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b89c: cmp rsi, rax; cmovl rax, rsi; ret; 
0x0000000000459499: cmp rsi, rax; je 0x59460; pop r13; pop r12; pop rbx; ret; 
0x0000000000404292: cmp rsi, rax; jg 0x429a; xor eax, eax; ret; 
0x0000000000405405: cmp rsi, rax; jg 0x53f0; ret; 
0x000000000041c4c0: cmp rsi, rdi; cmovg rax, rdi; cmovle rax, rsi; ret; 
0x0000000000413c02: cmp rsi, rdi; jne 0x13be8; cmp rsi, rdi; sete al; ret; 
0x0000000000413c07: cmp rsi, rdi; sete al; ret; 
0x0000000000407309: cmp rsi, rdx; jg 0x72f8; xor eax, eax; ret; 
0x000000000040cf81: cmp rsi, rdx; jg 0xcf70; xor eax, eax; ret; 
0x000000000040f941: cmp rsi, rdx; jg 0xf930; xor eax, eax; ret; 
0x000000000042fddc: cmp sil, byte ptr [rcx + rax - 1]; jne 0x2fdd0; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x0000000000407345: cmp sil, byte ptr [rdi + 1]; jne 0x7357; cmp rdx, 1; jne 0x7357; mov eax, 1; ret; 
0x0000000000404554: cmp word ptr [rdi + rax*2], 0; jne 0x4550; ret; 
0x0000000000432740: cmp word ptr [rdi], 0; setne al; ret; 
0x0000000000432930: cmp word ptr [rdi], 0; setne al; ret; 
0x000000000044a0b1: cmp word ptr [rsi + rdx*2 - 2], 0x20; jbe 0x4a0a8; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x0000000000449ba4: cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x0000000000453176: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, dword ptr es:[rax]; call qword ptr [rax]; 
0x0000000000453176: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, dword ptr es:[rax]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000457772: cmpsb byte ptr [rsi], byte ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004583bc: cmpsb byte ptr [rsi], byte ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458566: cmpsb byte ptr [rsi], byte ptr [rdi]; cli; dec dword ptr [rax - 0x77]; ret; 
0x00000000004048b6: cmpsb byte ptr [rsi], byte ptr [rdi]; fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048c6: cmpsb byte ptr [rsi], byte ptr [rdi]; fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048d6: cmpsb byte ptr [rsi], byte ptr [rdi]; fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048e6: cmpsb byte ptr [rsi], byte ptr [rdi]; fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000430d46: cmpsb byte ptr [rsi], byte ptr [rdi]; lodsd eax, dword ptr [rsi]; std; dec dword ptr [rax - 0x7d]; ret; 
0x000000000042e5e6: cmpsb byte ptr [rsi], byte ptr [rdi]; push rsi; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000441bf6: cmpsb byte ptr [rsi], byte ptr [rdi]; ret 0xfffc; 
0x0000000000433256: cmpsb byte ptr [rsi], byte ptr [rdi]; sbb eax, 0x63480000; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044ea45: cmpsd dword ptr [rsi], dword ptr [rdi]; cld; dec dword ptr [rax - 0x75]; and al, 0x20; lea rsp, [rsp + 0xf8]; ret; 
0x000000000045313c: cmpsd dword ptr [rsi], dword ptr [rdi]; cld; dec dword ptr [rax - 0x77]; ret; 
0x0000000000457692: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576eb: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457718: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457748: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458377: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458387: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045876e: cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043c745: cmpsd dword ptr [rsi], dword ptr [rdi]; mov ebp, edi; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043290e: cmpsd dword ptr [rsi], dword ptr [rdi]; std; jmp qword ptr [rsi - 0x77]; 
0x00000000004026a3: cmpxchg dword ptr [rdi], esi; ret; 
0x0000000000402715: cmpxchg dword ptr [rdi], esi; ret; 
0x0000000000402714: cmpxchg qword ptr [rdi], rsi; ret; 
0x0000000000405274: comisd xmm1, xmmword ptr [rdx]; jp 0x527c; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x0000000000405275: comiss xmm1, dword ptr [rdx]; jp 0x527c; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x000000000041ba8b: comiss xmm7, dword ptr [rcx]; sar byte ptr [rdi - 0x21], 1; ret; 
0x00000000004437d9: cvtpi2ps xmm0, mm0; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x00000000004437d8: cvtpi2ps xmm0, mm0; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x0000000000443f91: cvtpi2ps xmm0, mm0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000444048: cvtpi2ps xmm0, mm0; movsd xmm1, qword ptr [rsp + 0x10]; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000443f2f: cvtpi2ps xmm0, mm0; movsd xmm1, qword ptr [rsp]; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432374: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432424: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432564: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432614: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432754: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432804: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432944: cvtpi2ps xmm0, mm0; ret; 
0x00000000004329f4: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432b24: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432b23: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432be4: cvtpi2ps xmm0, mm0; ret; 
0x0000000000432be3: cvtpi2ps xmm0, mm0; ret; 
0x0000000000443a24: cvtpi2ps xmm0, mm2; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000443a23: cvtpi2ps xmm0, mm2; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x00000000004330ca: cvtpi2ps xmm0, qword ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004330c9: cvtpi2ps xmm0, qword ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043319a: cvtpi2ps xmm0, qword ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433199: cvtpi2ps xmm0, qword ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334ba: cvtpi2ps xmm0, qword ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334b9: cvtpi2ps xmm0, qword ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043358a: cvtpi2ps xmm0, qword ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433589: cvtpi2ps xmm0, qword ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000432d04: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000432db4: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000432ee5: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000432ee4: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000432f95: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000432f94: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x00000000004332d5: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x00000000004332d4: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000433385: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000433384: cvtpi2ps xmm0, qword ptr [rax]; ret; 
0x0000000000432d03: cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000443f90: cvtsi2sd xmm0, eax; lea rsp, [rsp + 0x18]; ret; 
0x0000000000444047: cvtsi2sd xmm0, eax; movsd xmm1, qword ptr [rsp + 0x10]; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000443f2e: cvtsi2sd xmm0, eax; movsd xmm1, qword ptr [rsp]; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432373: cvtsi2sd xmm0, eax; ret; 
0x0000000000432563: cvtsi2sd xmm0, eax; ret; 
0x0000000000432753: cvtsi2sd xmm0, eax; ret; 
0x0000000000432943: cvtsi2sd xmm0, eax; ret; 
0x00000000004330c8: cvtsi2sd xmm0, qword ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334b8: cvtsi2sd xmm0, qword ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000432ee3: cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332d3: cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004437d7: cvtsi2sd xmm0, rax; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x0000000000432b22: cvtsi2sd xmm0, rax; ret; 
0x0000000000443a22: cvtsi2sd xmm0, rdx; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000432db3: cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432423: cvtsi2ss xmm0, eax; ret; 
0x0000000000432613: cvtsi2ss xmm0, eax; ret; 
0x0000000000432803: cvtsi2ss xmm0, eax; ret; 
0x00000000004329f3: cvtsi2ss xmm0, eax; ret; 
0x0000000000433198: cvtsi2ss xmm0, qword ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433588: cvtsi2ss xmm0, qword ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000432f93: cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000433383: cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000432be2: cvtsi2ss xmm0, rax; ret; 
0x00000000004435fa: cvttps2pi mm0, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004435f9: cvttps2pi mm0, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004435f8: cvttsd2si rax, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043b69f: cwde; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000449ea2: cwde; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000044c38a: cwde; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000040e6fa: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000411739: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f47e: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043c40e: cwde; add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040de8a: cwde; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004166bc: cwde; fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042fc54: cwde; mov esi, 0x8d48fffd; and al, 8; pop r12; pop rbx; ret; 
0x000000000042de4c: cwde; mov r13, qword ptr [rbp - 0x60]; mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de4b: cwde; mov r13, qword ptr [rbp - 0x60]; mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb3: cwde; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5eb: cwde; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000044306d: cwde; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000446cb9: cwde; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000408d35: cwde; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab2f: cwde; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab2e: cwde; mov rsp, rbp; pop rbp; ret; 
0x000000000042b868: cwde; or byte ptr [rax], al; add al, ch; syscall; 
0x00000000004014b4: cwde; ret; 
0x000000000045ca4c: dec byte ptr [rax + 0x63]; retf 0x6348; sar byte ptr [rdi + 0xca], 1; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9c6: dec byte ptr [rax + 0x63]; retf 0x6348; sar byte ptr [rdi + 0xca], 1; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000044f4f7: dec byte ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000044f830: dec byte ptr [rax - 0x75]; add eax, esi; add edi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000456e5d: dec byte ptr [rax - 0x77]; ret 0xb841; 
0x0000000000456af7: dec byte ptr [rax - 0x7b]; push qword ptr [rsp + rax + 0x48]; mov esi, dword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000040a53d: dec byte ptr [rax - 0x7d]; ret 0xf30; 
0x0000000000403a3e: dec byte ptr [rcx - 0x77]; leave; sub r9, rsi; mov rax, r9; ret; 
0x000000000040f88c: dec dword ptr [r8 + 0x29]; ret 0x8949; 
0x000000000040823c: dec dword ptr [rax + 0x21]; ret 0x8948; 
0x0000000000437cca: dec dword ptr [rax + 0x29]; ret 0x6348; 
0x0000000000403ffe: dec dword ptr [rax + 0x29]; ret 0x8841; 
0x000000000040f88d: dec dword ptr [rax + 0x29]; ret 0x8949; 
0x0000000000437cd4: dec dword ptr [rax + 0x29]; ret 0x8d48; 
0x0000000000430139: dec dword ptr [rax + 0x29]; ret; 
0x0000000000430219: dec dword ptr [rax + 0x29]; ret; 
0x0000000000437d81: dec dword ptr [rax + 0x39]; ret 0x217d; 
0x000000000043b740: dec dword ptr [rax + 0x63]; ret; 
0x0000000000449f48: dec dword ptr [rax + 0x63]; ret; 
0x000000000044c430: dec dword ptr [rax + 0x63]; ret; 
0x000000000044deb0: dec dword ptr [rax + 0x63]; ret; 
0x00000000004539cc: dec dword ptr [rax + 0x63]; ret; 
0x000000000045bf3c: dec dword ptr [rax + 0x63]; ret; 
0x000000000041f9d6: dec dword ptr [rax + 0x63]; ror byte ptr [rax + 1], 0xd8; mov byte ptr [rax], 0; pop rbx; ret; 
0x00000000004243f9: dec dword ptr [rax + 0x63]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000045205f: dec dword ptr [rax + 0x63]; ror byte ptr [rax - 0x77], 1; xchg ebp, eax; push -0x7a000001; ror byte ptr [rdi], 0x85; ret; 
0x000000000042ba8b: dec dword ptr [rax + 0x63]; xchg esp, eax; and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042bac4: dec dword ptr [rax + 0x63]; xchg esp, eax; and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xc601; 
0x000000000042c766: dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c7f6: dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042e76e: dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044750f: dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042ccfe: dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042c98e: dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042cabe: dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042e836: dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000455269: dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004553ae: dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042ca3b: dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044d279: dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000455317: dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045c0d1: dec dword ptr [rax + 1]; clc; movsxd r8, r8d; xchg r10, rsp; ret; 
0x000000000043755c: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000437b60: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000402647: dec dword ptr [rax - 0x6e]; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x00000000004026b9: dec dword ptr [rax - 0x6e]; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x000000000044a1d9: dec dword ptr [rax - 0x73]; adc eax, 0x1714f; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433a59: dec dword ptr [rax - 0x73]; adc eax, 0x2d8cf; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000448242: dec dword ptr [rax - 0x73]; adc eax, 0x3bb16; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000423c6b: dec dword ptr [rax - 0x73]; adc eax, 0x5ee9d; mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000403394: dec dword ptr [rax - 0x73]; adc eax, 0x655e4; mov dword ptr [rdx], eax; call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x00000000004116ec: dec dword ptr [rax - 0x73]; adc eax, 0x7266c; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000456939: dec dword ptr [rax - 0x73]; adc eax, 0xfffffd6f; lea rax, [rip + 0x1f5b8]; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x000000000040a6eb: dec dword ptr [rax - 0x73]; add dword ptr [r8 + 0x39], ecx; ret 0x97d; 
0x000000000040a7cb: dec dword ptr [rax - 0x73]; add dword ptr [r8 + 0x39], ecx; ret 0x97d; 
0x0000000000456940: dec dword ptr [rax - 0x73]; add eax, 0x1f5b8; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x000000000044ccfa: dec dword ptr [rax - 0x73]; add eax, 0x38b2e; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc5a: dec dword ptr [rax - 0x73]; add eax, 0x38bce; mov rax, qword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c90a: dec dword ptr [rax - 0x73]; add eax, 0x38f1e; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c5ee: dec dword ptr [rax - 0x73]; add eax, 0x3923a; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000041a64e: dec dword ptr [rax - 0x73]; add eax, 0x4e46a; mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x00000000004189f7: dec dword ptr [rax - 0x73]; add eax, 0x4fe71; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000418742: dec dword ptr [rax - 0x73]; add eax, 0x50266; call qword ptr [rax]; 
0x0000000000426baf: dec dword ptr [rax - 0x73]; add eax, 0xffffff99; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000040ccad: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000040f084: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000042572f: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000427b4c: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000042e24d: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000445684: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044c06f: dec dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000417285: dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000041856d: dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000443f3b: dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000044ed2c: dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x000000000044f837: dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000456f6e: dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000430a57: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000430ed7: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000438d8d: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000439143: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x000000000043b209: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000443fc5: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000443fea: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x00000000004559d2: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000455a15: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x00000000004587f9: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x00000000004588e1: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000459eff: dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x000000000041323a: dec dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x00000000004133ee: dec dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x0000000000444055: dec dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x000000000041334a: dec dword ptr [rax - 0x73]; and al, 0x28; pop r12; pop rbx; ret; 
0x0000000000413514: dec dword ptr [rax - 0x73]; and al, 0x28; pop r12; pop rbx; ret; 
0x00000000004241ac: dec dword ptr [rax - 0x73]; and al, 0x28; pop r12; pop rbx; ret; 
0x0000000000438e06: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000438e66: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000438ec5: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000438f55: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x00000000004391b3: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000439213: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x000000000043926b: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x00000000004392db: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000446f0a: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x00000000004558cd: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000455967: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x00000000004559a1: dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x000000000042796c: dec dword ptr [rax - 0x73]; and al, 0x30; pop r13; pop r12; pop rbx; ret; 
0x000000000042461f: dec dword ptr [rax - 0x73]; and al, 0x30; pop rbx; ret; 
0x00000000004277c1: dec dword ptr [rax - 0x73]; and al, 0x30; pop rbx; ret; 
0x0000000000428031: dec dword ptr [rax - 0x73]; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x00000000004280fc: dec dword ptr [rax - 0x73]; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x00000000004282b4: dec dword ptr [rax - 0x73]; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a25e: dec dword ptr [rax - 0x73]; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a314: dec dword ptr [rax - 0x73]; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x000000000042a491: dec dword ptr [rax - 0x73]; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x00000000004283bd: dec dword ptr [rax - 0x73]; and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x000000000042a57e: dec dword ptr [rax - 0x73]; and al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x0000000000415753: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415835: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004158b5: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000415d01: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416807: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c836: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c8b6: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c937: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d096: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d116: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d197: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c16: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420c96: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420e96: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f16: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000420f97: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421ea6: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421f26: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421fa7: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004230d6: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004235b0: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000428e48: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042b078: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000433b84: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000448344: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004483ed: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004484a2: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044e615: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f1d5: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044f625: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004565aa: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004589d1: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045b641: dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000422834: dec dword ptr [rax - 0x73]; and al, 0x68; ret; 
0x00000000004228f2: dec dword ptr [rax - 0x73]; and al, 0x68; ret; 
0x00000000004229cd: dec dword ptr [rax - 0x73]; and al, 0x68; ret; 
0x000000000041c263: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041c4b3: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041fc1c: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041fe27: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000420854: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x00000000004233a8: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042d392: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042dae3: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042dbd3: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042e304: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044bfe3: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e1a9: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044f444: dec dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041c304: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000422ebf: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000422f6f: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042301f: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042317f: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042322f: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004232df: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042342c: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004234ac: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042352c: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042365f: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042370f: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004237bf: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004505ed: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000450690: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045085e: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004560e4: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000456196: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004566a0: dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000041c3fc: dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041eeda: dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004504f8: dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004562f4: dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044961b: dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x000000000044b3bb: dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x000000000040d6a2: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040df48: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040df98: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041004b: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000411292: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004112e2: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004113d3: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000411443: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041717a: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041738a: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000418c8d: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004194b6: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041bbe3: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041f71c: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041f80f: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000042232f: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000422394: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000042db10: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000042fc57: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004399de: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000439a1c: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045872f: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045bddd: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c172: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c1c8: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c202: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045c242: dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000402a61: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402a90: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402ab1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402ada: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402b07: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402b2a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402b51: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402b74: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402b94: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402bb1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402bd4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402bf1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402dd1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402e25: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402e44: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402e64: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402e7e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402ead: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402ed4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402ef1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402f14: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402f41: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402f64: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402f87: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402faa: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402fce: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402ff7: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000403020: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000403044: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000403064: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000403084: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004030a4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004030c4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040344f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040346f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040348f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004034af: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004034c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004034db: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004034ff: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040353e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404217: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048b9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048d9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048e9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404999: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004049a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004049b9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004049c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404f79: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404f89: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000407023: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004070a3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004075ef: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040760f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040762f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040768e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040917b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040b7ed: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040b8cf: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040b99e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040b9cb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040ba04: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040badc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040d9c8: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040dad9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040dcfc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004115ac: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004115c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004115dc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004115f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004117c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000412f09: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000413bb8: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000414339: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004146fd: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004147d0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004149e3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000415101: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000415126: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004151c0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417669: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004177f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417809: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417f7d: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000418369: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041839a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004185a7: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041864b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041866b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041869d: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000419019: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004190a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004190d9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000419169: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000419199: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004191f0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041958d: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041ab69: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b07c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b0a0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b0bb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b0de: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b0fe: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b13e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b18c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b1ac: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b216: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b22c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b2e6: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b390: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b3d7: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b5d9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b6e9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b6f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b84c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b869: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b879: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b889: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b899: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b8ac: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b8c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b8e0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b8f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041d2f3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041d473: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041d5e3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041d773: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042086c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000420a42: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000420acc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000421fc9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000421fd9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000421fe9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000421ff9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042200f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000422029: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000422039: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004237df: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042420b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042433e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004243a0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000424dab: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425131: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425406: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425447: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425469: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042548a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004254b5: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425535: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425612: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004262b0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426bf3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426c33: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426ce2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426cfc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426d20: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426d40: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426d60: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427218: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427581: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427a1e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004283d9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000428e69: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000429959: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042a599: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042b099: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042bd69: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042bdbb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042e61f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042ee24: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004310d6: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431779: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431789: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431799: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431809: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431819: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431829: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431839: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431849: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004318fc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431919: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bb9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bc9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bd9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c49: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c59: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c69: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c79: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c89: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d3c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d59: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432069: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432089: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004320f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432119: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432129: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432139: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004321ec: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432209: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004338fb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043391f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000433947: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000433a65: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000433ac5: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434500: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434546: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434588: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434ea9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434ec8: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434eea: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434f17: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434f3a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434f5e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434f86: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434f9e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434fbe: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004351e9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004352b9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004352c9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000435309: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000435379: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004353e9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004353fb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000436513: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000436f90: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000437311: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000437351: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000437389: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438dbe: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438e20: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438e80: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438eee: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043916e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004391d0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439230: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043929e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439300: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439332: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043935e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439581: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004395b4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004396ce: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004396f1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043979c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043995e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043aa8d: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b22e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b257: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b2ac: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043bac3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043bae2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043bdd0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043f7cb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043f7ef: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044324b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044326f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004437e0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444c01: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444c45: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444c77: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444ca0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444ceb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444d34: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004458bc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000445900: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000445925: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000445959: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000445ed6: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004470e7: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000447106: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000447127: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004472bb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004473ab: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000447f9b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000448055: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004480ca: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004494c3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a085: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a0be: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a103: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a1e5: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a205: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044b263: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044b9b5: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ba29: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044bf1a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ce54: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ce7c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa40: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa60: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa80: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004509dd: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b46: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b66: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450cbc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004522a5: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000452c91: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000452ed2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004532be: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453369: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045337b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453f89: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004557cc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000455b17: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000455b2e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000455ba3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000455bcb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456059: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456829: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456839: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456849: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456859: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045686c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045688c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568bc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568d9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568e9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004568fc: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456a2b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456ae0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456b05: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e04: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e21: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e46: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e70: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e97: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456eb4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456f92: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457101: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045720d: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045722e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045724e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045726e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045728e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572ae: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572d0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572f0: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457314: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045732e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045734e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457371: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457391: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573b4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573de: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457404: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457425: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457444: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457461: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457487: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004574a7: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004574c4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004574e7: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045750e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457531: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457560: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457586: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004575a4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457694: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576bd: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576ed: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045771a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045774a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457774: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004581a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458379: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458389: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458399: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004583a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004583be: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458770: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045878c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004588f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458a74: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458a94: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458ab4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458ad1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000459065: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000459085: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045909b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004594c5: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000459a8a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000459dce: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000459deb: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000459e0b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045a0a2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045a239: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b849: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b859: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b871: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b971: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b991: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9b1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9d3: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9f1: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba11: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba5b: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045bb51: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c0e9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c0ff: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c119: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c129: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c139: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c149: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c18f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c219: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c259: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c269: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c279: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c28f: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2b9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c7e2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c7f9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c811: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c82e: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c851: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c87a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8ad: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8d4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8f4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c91d: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c941: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c977: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9a9: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9d6: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9fa: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca2c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca5c: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca8a: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb01: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb29: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb44: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb64: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb84: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cba4: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cbc2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cbe2: dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427519: dec dword ptr [rax - 0x73]; cmp eax, 0x3741f; call 0x24dc0; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x00000000004206fb: dec dword ptr [rax - 0x73]; jnp 0x20758; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x000000000042089e: dec dword ptr [rax - 0x73]; jnp 0x208fb; xor esi, esi; call 0xe140; pop rbx; ret; 
0x0000000000420663: dec dword ptr [rax - 0x73]; pop r8; mov rdi, qword ptr [rax]; call 0x19140; pop rbx; ret; 
0x00000000004241fa: dec dword ptr [rax - 0x73]; xor eax, 0x60dbe; mov edi, 4; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x000000000040dc85: dec dword ptr [rax - 0x75]; add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004365f3: dec dword ptr [rax - 0x75]; add al, 0x24; mov rax, qword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x00000000004383b8: dec dword ptr [rax - 0x75]; add al, byte ptr [rax - 0x6bf0d2c8]; ret; 
0x0000000000423ec3: dec dword ptr [rax - 0x75]; add eax, 0x44cb5; lea rsp, [rsp + 8]; ret; 
0x0000000000427b8c: dec dword ptr [rax - 0x75]; add eax, dword ptr [rax + rcx*4 + 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f4f0: dec dword ptr [rax - 0x75]; add eax, esi; add esi, edi; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043cd55: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cea7: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440285: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403d7: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8ae: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451650: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451963: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c3: dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8c1: dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc10: dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf1: dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440140: dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c96: dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fd9: dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044ea48: dec dword ptr [rax - 0x75]; and al, 0x20; lea rsp, [rsp + 0xf8]; ret; 
0x000000000043caa2: dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd2: dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000041b579: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0x78]; ret; 
0x000000000043c748: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc78: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e756: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee6c: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044effc: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f313: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9b0: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc16: dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000451810: dec dword ptr [rax - 0x75]; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451b33: dec dword ptr [rax - 0x75]; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004188f4: dec dword ptr [rax - 0x75]; jo 0x18901; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x000000000042b85b: dec dword ptr [rax - 0x75]; mov ah, 0x24; movabs al, byte ptr [0x9824bc8d48000008]; or byte ptr [rax], al; add al, ch; syscall; 
0x0000000000411bf0: dec dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004185d0: dec dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004531d1: dec dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000410357: dec dword ptr [rax - 0x75]; popfq; call 0x4901035e; mov esp, ebp; pop rbp; ret; 
0x0000000000451e6e: dec dword ptr [rax - 0x75]; ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004521b1: dec dword ptr [rax - 0x75]; ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x0000000000456d1c: dec dword ptr [rax - 0x77]; adc al, 0xfe; xor eax, eax; ret; 
0x0000000000456d5f: dec dword ptr [rax - 0x77]; adc al, 0xfe; xor eax, eax; ret; 
0x0000000000447e5e: dec dword ptr [rax - 0x77]; fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000044bc3b: dec dword ptr [rax - 0x77]; fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000043e3ba: dec dword ptr [rax - 0x77]; fistp qword ptr [rsi + 0x40]; call 0x3f800; pop rbx; ret; 
0x0000000000441c4a: dec dword ptr [rax - 0x77]; fistp qword ptr [rsi + 0x40]; call 0x43280; pop rbx; ret; 
0x0000000000416b3d: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416bcd: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416cdd: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416d6d: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043da6b: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043db8a: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043de2d: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043e1ba: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044105a: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441978: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441c33: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041b64f: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043d70c: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043dafa: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043dcdc: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000458587: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000416e23: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043e8c4: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043eb22: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043ed24: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004411bc: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004414df: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004418cc: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004421c6: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000442484: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004426d6: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004479fd: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447e20: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000044bab0: dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041adbb: dec dword ptr [rax - 0x77]; fucompi st(0); or al, 0; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000401e27: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000401e5a: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000401e8d: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000401ed0: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000401f13: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000401f56: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000401f9a: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000403562: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000404084: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004086ff: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000409146: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040a047: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040a72b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040a80b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040a8aa: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040a923: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040a9a2: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040aa2b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040c32a: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040d1c0: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041035e: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041863a: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004187c3: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000418cde: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000418d26: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041e7cb: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041e899: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042d8f1: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042d9a1: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042dc89: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042eb89: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042ee5e: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042f211: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004309ea: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000430e67: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000431578: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000431588: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043541a: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043633b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004368cf: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000436a1e: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000436a48: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000436b1f: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000438bef: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000438d18: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000438d4b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043906b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004390a5: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004390d5: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043910b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043b119: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043b194: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043b1cb: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043bf98: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043e12e: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044181e: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000444ac6: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000444bd5: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000445782: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000445891: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000449276: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044994f: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000449ab8: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000449b7f: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044b00e: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044b6ef: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044b858: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044b91f: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000452c6d: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004531f9: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000454466: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000455e75: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000458fbc: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000458fdb: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000459005: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000459025: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000045903b: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000045ad23: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000045b1b0: dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041c675: dec dword ptr [rax - 0x77]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209cc: dec dword ptr [rax - 0x77]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a1e: dec dword ptr [rax - 0x77]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b8e: dec dword ptr [rax - 0x77]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000407942: dec dword ptr [rax - 0x77]; notrack jmp 0x794f; mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x0000000000459cc7: dec dword ptr [rax - 0x77]; out 0xe8, eax; or byte ptr [rbp - 0x76b70006], 0xc7; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x000000000042096c: dec dword ptr [rax - 0x77]; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b8c: dec dword ptr [rax - 0x77]; push rax; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x00000000004039ef: dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000042fced: dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000042fd2d: dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000044d0b2: dec dword ptr [rax - 0x77]; ret 0x894c; 
0x000000000045320d: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000457143: dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x00000000004571b0: dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x0000000000454b0c: dec dword ptr [rax - 0x77]; ret 0xf748; 
0x00000000004594e7: dec dword ptr [rax - 0x77]; ret 0xffbe; 
0x0000000000459b0e: dec dword ptr [rax - 0x77]; ret 0xffbe; 
0x000000000040ca2e: dec dword ptr [rax - 0x77]; ret; 
0x000000000040cd28: dec dword ptr [rax - 0x77]; ret; 
0x000000000040ef24: dec dword ptr [rax - 0x77]; ret; 
0x000000000040f9ae: dec dword ptr [rax - 0x77]; ret; 
0x000000000040fa3e: dec dword ptr [rax - 0x77]; ret; 
0x000000000040face: dec dword ptr [rax - 0x77]; ret; 
0x0000000000416b1c: dec dword ptr [rax - 0x77]; ret; 
0x0000000000416bac: dec dword ptr [rax - 0x77]; ret; 
0x0000000000416cbc: dec dword ptr [rax - 0x77]; ret; 
0x0000000000416d4c: dec dword ptr [rax - 0x77]; ret; 
0x0000000000416df8: dec dword ptr [rax - 0x77]; ret; 
0x0000000000417696: dec dword ptr [rax - 0x77]; ret; 
0x0000000000417716: dec dword ptr [rax - 0x77]; ret; 
0x0000000000417796: dec dword ptr [rax - 0x77]; ret; 
0x0000000000417ea1: dec dword ptr [rax - 0x77]; ret; 
0x0000000000418fed: dec dword ptr [rax - 0x77]; ret; 
0x0000000000419d7a: dec dword ptr [rax - 0x77]; ret; 
0x0000000000419f84: dec dword ptr [rax - 0x77]; ret; 
0x0000000000419fa3: dec dword ptr [rax - 0x77]; ret; 
0x000000000041a34e: dec dword ptr [rax - 0x77]; ret; 
0x000000000041a395: dec dword ptr [rax - 0x77]; ret; 
0x000000000041a4ea: dec dword ptr [rax - 0x77]; ret; 
0x000000000041a93b: dec dword ptr [rax - 0x77]; ret; 
0x000000000041b62e: dec dword ptr [rax - 0x77]; ret; 
0x000000000041b91b: dec dword ptr [rax - 0x77]; ret; 
0x000000000041b9bb: dec dword ptr [rax - 0x77]; ret; 
0x000000000041be6c: dec dword ptr [rax - 0x77]; ret; 
0x000000000041bf0c: dec dword ptr [rax - 0x77]; ret; 
0x0000000000423e3c: dec dword ptr [rax - 0x77]; ret; 
0x00000000004244e6: dec dword ptr [rax - 0x77]; ret; 
0x0000000000430aa9: dec dword ptr [rax - 0x77]; ret; 
0x0000000000430ace: dec dword ptr [rax - 0x77]; ret; 
0x0000000000430f39: dec dword ptr [rax - 0x77]; ret; 
0x0000000000430f75: dec dword ptr [rax - 0x77]; ret; 
0x00000000004314e1: dec dword ptr [rax - 0x77]; ret; 
0x0000000000439b87: dec dword ptr [rax - 0x77]; ret; 
0x0000000000439bea: dec dword ptr [rax - 0x77]; ret; 
0x0000000000441c12: dec dword ptr [rax - 0x77]; ret; 
0x000000000044c97c: dec dword ptr [rax - 0x77]; ret; 
0x000000000044cd92: dec dword ptr [rax - 0x77]; ret; 
0x000000000045313e: dec dword ptr [rax - 0x77]; ret; 
0x0000000000454de0: dec dword ptr [rax - 0x77]; ret; 
0x0000000000454fa9: dec dword ptr [rax - 0x77]; ret; 
0x00000000004566b5: dec dword ptr [rax - 0x77]; ret; 
0x0000000000458568: dec dword ptr [rax - 0x77]; ret; 
0x0000000000433c7e: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x000000000043ba4a: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x0000000000413bcd: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004279d9: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042e789: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042f1ec: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042fc99: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043b84d: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x95; ret; 
0x000000000042ee87: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x9f; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000414508: dec dword ptr [rax - 0x7b]; sal byte ptr [rbx + rbx + 0xf], 0xb6; push rax; add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x0000000000431206: dec dword ptr [rax - 0x7b]; sar byte ptr [rbx + rbp + 0x48], 0xc7; ret 0xffff; 
0x0000000000431205: dec dword ptr [rax - 0x7b]; sar byte ptr [rbx + rbp + 0x48], 0xc7; ret 0xffff; 
0x000000000040541f: dec dword ptr [rax - 0x7d]; clc; add dword ptr [rsp + rbx + 0x31], edi; ror byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x000000000040541e: dec dword ptr [rax - 0x7d]; clc; add dword ptr [rsp + rbx + 0x31], edi; ror byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x000000000041db51: dec dword ptr [rax - 0x7d]; jnp 0x1db96; add byte ptr [rdx + riz*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041139f: dec dword ptr [rax - 0x7d]; ret 0x4101; 
0x000000000041140f: dec dword ptr [rax - 0x7d]; ret 0x4101; 
0x000000000041130f: dec dword ptr [rax - 0x7d]; ret 0x4401; 
0x000000000042f563: dec dword ptr [rax - 0x7d]; ret 0x4901; 
0x000000000042f5fb: dec dword ptr [rax - 0x7d]; ret 0x4901; 
0x0000000000437757: dec dword ptr [rax - 0x7d]; ret 0x8a01; 
0x0000000000412177: dec dword ptr [rax - 0x7d]; ret; 
0x000000000041b476: dec dword ptr [rax - 0x7d]; ret; 
0x000000000042fad0: dec dword ptr [rax - 0x7d]; ret; 
0x000000000042fb38: dec dword ptr [rax - 0x7d]; ret; 
0x00000000004308e9: dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430963: dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430d49: dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430de0: dec dword ptr [rax - 0x7d]; ret; 
0x000000000045c51a: dec dword ptr [rax - 0x7d]; ret; 
0x000000000045c66d: dec dword ptr [rax - 0x7d]; ret; 
0x000000000042e5c6: dec dword ptr [rax - 0x7d]; rol byte ptr [rcx], 0x48; lea edi, [rdi + rax - 1]; call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x000000000041706f: dec dword ptr [rbp - 0x7b]; in al, 0x7c; sub ecx, dword ptr [rax - 0x39]; ret; 
0x0000000000421359: dec dword ptr [rbx + 0x3892404]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213b8: dec dword ptr [rbx + 0x3892404]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215a9: dec dword ptr [rbx + 0x3892404]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421608: dec dword ptr [rbx + 0x3892404]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435594: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000040ebbe: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecd8: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ede7: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313d7: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e28f: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e34f: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b58: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8f8: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b2: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a72: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000429ee5: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2e5: dec dword ptr [rbx + rcx*4 + 0x65]; or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0e2: dec dword ptr [rbx + rcx*4 + 0x6d]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000040e981: dec dword ptr [rbx + rcx*4 + 0x6d]; or byte ptr [rbx + rcx*4 + 0x75], 0x88; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436afc: dec dword ptr [rbx + rcx*4 + 0x6d]; or byte ptr [rbx + rcx*4 + 0x75], 0x88; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a81: dec dword ptr [rbx + rcx*4 + 0x75]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000441b81: dec dword ptr [rbx + rcx*4 + 0x75]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004535b3: dec dword ptr [rbx + rcx*4 + 0x75]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000429bd5: dec dword ptr [rbx + rcx*4 + 0x75]; or byte ptr [rbx + rcx*4 + 0x7d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfda: dec dword ptr [rbx + rcx*4 + 0x75]; or byte ptr [rbx + rcx*4 + 0x7d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000044d008: dec dword ptr [rbx + rcx*4 + 0x75]; or byte ptr [rbx + rcx*4 + 0x7d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a8d: dec dword ptr [rbx + rcx*4 + 0x7d]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000044b82d: dec dword ptr [rbx + rcx*4 + 0x7d]; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004086f8: dec dword ptr [rbx + rcx*4 - 0x43]; call 0x490086ff; mov esp, ebp; pop rbp; ret; 
0x000000000040913f: dec dword ptr [rbx + rcx*4 - 0x43]; push 0x48ffffff; mov esp, ebp; pop rbp; ret; 
0x0000000000458fb5: dec dword ptr [rbx + rcx*4 - 0x43]; push 0x48ffffff; mov esp, ebp; pop rbp; ret; 
0x000000000041e7c4: dec dword ptr [rbx + rcx*4 - 0x4b]; call 0x4901e7cb; mov esp, ebp; pop rbp; ret; 
0x000000000041e892: dec dword ptr [rbx + rcx*4 - 0x4b]; call 0x4901e899; mov esp, ebp; pop rbp; ret; 
0x000000000043bf8a: dec dword ptr [rbx + rcx*4 - 0x4b]; push 0x4cffffff; mov edi, dword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000454458: dec dword ptr [rbx + rcx*4 - 0x53]; call 0x4d05445f; mov esi, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a8a3: dec dword ptr [rbx + rcx*4 - 0x5b]; call 0x4900a8aa; mov esp, ebp; pop rbp; ret; 
0x000000000040d1b9: dec dword ptr [rbx + rcx*4 - 0x5b]; call 0x4900d1c0; mov esp, ebp; pop rbp; ret; 
0x0000000000458b40: dec dword ptr [rbx - 0x173edbfc]; or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000458b80: dec dword ptr [rbx - 0x173edbfc]; or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000452f33: dec dword ptr [rbx - 0x2776e3a8]; pop rbx; ret; 
0x000000000040c016: dec dword ptr [rbx - 0x9f7b]; jmp qword ptr [rdi - 0x73]; 
0x0000000000401e1d: dec dword ptr [rbx]; add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000041519a: dec dword ptr [rcx + 0x415d41d8]; pop rsp; pop rbx; ret; 
0x000000000045930b: dec dword ptr [rcx + 0x58b48c2]; cmp ebx, dword ptr [rbp + 2]; add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], cl; add al, 0xd0; ret; 
0x000000000043c0eb: dec dword ptr [rcx + 0x5d8b48d8]; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042c4b6: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c5c6: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c906: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042cb46: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000453e3d: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045798e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457a1e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457b4e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457cf8: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457eae: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004580fe: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045818e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045823c: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004582ce: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458453: dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c65e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e317: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e497: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c8f: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457ab6: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c56: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e16: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a82f: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8bf: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a94f: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9df: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042c53e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c6de: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c87e: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000453da2: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457d86: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457f36: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457fb6: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000458a53: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000045c3ed: dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042d797: dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045345d: dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045545c: dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004578fc: dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045806c: dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000408482: dec dword ptr [rcx + 0xf]; mov edi, 0x508d48c7; add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0x667f; 
0x000000000040bb21: dec dword ptr [rcx + rcx*4 + 0x23]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e16c: dec dword ptr [rcx + rcx*4 + 0x23]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a5d4: dec dword ptr [rcx + rcx*4 + 0x23]; mov rax, qword ptr [rbx]; pop r13; pop r12; pop rbx; ret; 
0x0000000000411c20: dec dword ptr [rcx + rcx*4 + 0x23]; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fac: dec dword ptr [rcx + rcx*4 - 0x18]; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef49: dec dword ptr [rcx + rcx*4 - 0x18]; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040cd01: dec dword ptr [rcx + rcx*4 - 0x18]; mov qword ptr [rbx], rax; pop r13; pop r12; pop rbx; ret; 
0x000000000041a0d8: dec dword ptr [rcx + rcx*4 - 0x18]; pop r13; pop r12; pop rbx; ret; 
0x000000000044be9e: dec dword ptr [rcx + rcx*4 - 0x18]; pop r13; pop r12; pop rbx; ret; 
0x00000000004197a8: dec dword ptr [rcx + rcx*4 - 0x1d]; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004338a8: dec dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000448022: dec dword ptr [rcx + rcx*4 - 0x20]; pop r13; pop r12; pop rbx; ret; 
0x00000000004527c4: dec dword ptr [rcx + rcx*4 - 0xd]; mov rsi, r12; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000431202: dec dword ptr [rcx - 0x73]; dec dword ptr [rax - 0x7b]; sar byte ptr [rbx + rbp + 0x48], 0xc7; ret 0xffff; 
0x00000000004125a6: dec dword ptr [rcx - 0x73]; push rsi; add al, byte ptr [rcx + 0xf]; mov dh, 0x46; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x000000000042dd9b: dec dword ptr [rcx - 0x74993bbb]; push rbp; ror byte ptr [rdi], 0xb7; ret 0xc189; 
0x00000000004025d0: dec dword ptr [rcx]; jmp 0x25d6; dec dword ptr [rcx]; sete al; ret; 
0x00000000004025f1: dec dword ptr [rcx]; jmp 0x25f8; dec qword ptr [rcx]; sete al; ret; 
0x000000000045b8fb: dec dword ptr [rcx]; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b91b: dec dword ptr [rcx]; mov dword ptr [rax + 8], edx; ret; 
0x00000000004025d4: dec dword ptr [rcx]; sete al; ret; 
0x00000000004025f6: dec dword ptr [rcx]; sete al; ret; 
0x000000000045cabd: dec dword ptr [rdi]; add byte ptr [rax], al; or eax, ecx; ret; 
0x00000000004080b5: dec dword ptr [rdi]; mov dh, 0x45; movabs al, byte ptr [0x2900000001bae0d1]; ret 0x8966; 
0x0000000000425b6a: dec dword ptr [rdi]; mov dh, 0xfb; call 0x25ac0; pop rbx; ret; 
0x0000000000453845: dec dword ptr [rdx + 0x48082444]; lea esp, [rsp + 0xf8]; ret; 
0x0000000000447c4d: dec dword ptr [rdx - 0x73]; add al, 0x2b; pop r13; pop r12; pop rbx; ret; 
0x0000000000436f75: dec dword ptr [rdx - 0x76b71bbb]; in al, dx; pop rbp; ret; 
0x00000000004372d3: dec dword ptr [rdx - 0x76b723bb]; in al, dx; pop rbp; ret; 
0x0000000000402079: dec eax; jne 0x2070; ret; 
0x00000000004021e7: dec eax; mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x000000000040264e: dec eax; ret; 
0x00000000004026c2: dec eax; ret; 
0x000000000043909d: dec ebx; add eax, dword ptr [rax]; call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x0000000000402378: dec edx; jne 0x2371; ret; 
0x00000000004021e1: dec edx; mov al, byte ptr [rcx + rdx]; dec r8; mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x00000000004025f0: dec qword ptr [rcx]; jmp 0x25f8; dec qword ptr [rcx]; sete al; ret; 
0x00000000004025f5: dec qword ptr [rcx]; sete al; ret; 
0x0000000000402078: dec r8; jne 0x2070; ret; 
0x00000000004021e6: dec r8; mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x00000000004026c1: dec rax; ret; 
0x0000000000402377: dec rdx; jne 0x2371; ret; 
0x00000000004021e0: dec rdx; mov al, byte ptr [rcx + rdx]; dec r8; mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x000000000043400b: div byte ptr [rbp + 0x1e]; mov eax, 1; ret; 
0x000000000043407f: div byte ptr [rbp + 0x33]; mov eax, 1; ret; 
0x0000000000403150: div byte ptr [rbp + 0xb]; cmp byte ptr [r9], 0x3d; jne 0x315e; lea rax, [r9 + 1]; ret; 
0x0000000000434110: div byte ptr [rbp + 6]; mov eax, 1; ret; 
0x0000000000434170: div byte ptr [rbp + 6]; mov eax, 1; ret; 
0x0000000000448047: div byte ptr [rbp + 7]; lea rsi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x000000000042ee16: div byte ptr [rbp + 7]; lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000423887: div byte ptr [rbp + 7]; lea rsi, [rip + 0x605ef]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423833: div byte ptr [rbp + 7]; lea rsi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000434103: div byte ptr [rbp + rdi + 0x48]; mov eax, 0xffffffff; ret; 
0x000000000044fcb8: div byte ptr [rcx + rcx + 0x4c]; mov edi, edi; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x0000000000434163: div byte ptr [rdi + rcx*2 + 0x48]; mov eax, 0xffffffff; ret; 
0x0000000000433ffe: div byte ptr [rdi + rdx*2 + 0x48]; mov eax, 0xffffffff; ret; 
0x0000000000413030: div byte ptr [rdx + rcx + 0x4c]; mov edi, esp; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000406772: div byte ptr [rsp + rax + 0x48]; mov eax, dword ptr [rdi]; ret; 
0x000000000044b9aa: div byte ptr [rsp + rax + 0x48]; mov edx, dword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x0000000000402692: div eax; xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x0000000000402702: div eax; xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x00000000004319aa: div ebx; movups xmm0, xmmword ptr [rax]; lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431dea: div edx; movups xmm0, xmmword ptr [rax]; lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004045de: div esi; mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045fe: div esi; mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045dd: div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045fd: div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x0000000000443a2f: divps xmm0, xmmword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000443a2e: divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000417d40: fadd dword ptr [rax]; add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000043e8e9: fadd dword ptr [rax]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x00000000004421e9: fadd dword ptr [rax]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x00000000004136cc: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000043c752: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000043fc82: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044e760: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044ee76: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044f006: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044f31d: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044f9ba: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000044fc20: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004330f8: fadd dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334e8: fadd dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044de65: fadd dword ptr [rbp - 0x74f88325]; fdivr dword ptr [r9]; ret; 
0x0000000000420af6: fadd dword ptr [rbx]; add al, ch; ret 0xffbc; 
0x000000000041519c: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004279bd: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000429c9c: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000429d2c: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000429dbc: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042c09c: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042c12c: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042c1bc: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042e3c3: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000433c43: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000433d73: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000433dd8: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000433e38: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000447e61: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000044bc3e: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000044bcf3: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000044bd43: fadd dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000451ce2: fadd dword ptr [rcx]; jne 0x51cf8; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452022: fadd dword ptr [rcx]; jne 0x52038; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000433944: fadd dword ptr [rdx - 0x72b70003]; and al, 8; ret; 
0x0000000000433abe: fadd dword ptr [rdx]; add al, ch; retf 0xfffe; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004166f8: fadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416725: fadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416744: fadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416828: fadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416337: fadd qword ptr [r14]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040d7d3: fadd qword ptr [rcx + 0x5f]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d843: fadd qword ptr [rcx + 0x5f]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427143: fadd qword ptr [rip + 0x108b4800]; test rdx, rdx; je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004162d8: fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004162f8: fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416318: fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416338: fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416358: fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004162b8: fadd qword ptr [rsi]; add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000416278: fadd qword ptr [rsi]; add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x0000000000416298: fadd qword ptr [rsi]; add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000041f9dc: fadd st(6); add byte ptr [rax], al; pop rbx; ret; 
0x000000000044387b: faddp st(1); fistp qword ptr [rsp + 8]; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000402846: faddp st(1); fscale; fstp st(1); mov rsp, rbp; pop rbp; ret; 
0x000000000044c00d: fbld tbyte ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041452b: fbstp tbyte ptr [rcx]; imul al; mov ebp, 0x5bffff75; ret; 
0x000000000040ea25: fbstp tbyte ptr [rcx]; imul al; ret; 
0x000000000041cb74: fbstp tbyte ptr [rcx]; sar byte ptr [rsi + 0xd7b1], cl; call 0x1ca10; pop rbx; ret; 
0x000000000041a3ab: fbstp tbyte ptr [rcx]; shr al, cl; sub eax, 0x48fffe7f; mov eax, ebx; pop rbx; ret; 
0x0000000000432b83: fbstp tbyte ptr [rcx]; shr al, cl; xor eax, 0x48fffd99; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000044826b: fbstp tbyte ptr [rdi + 3]; mov al, 1; ret; 
0x0000000000404698: fbstp tbyte ptr [rdx - 0x13]; sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d0: fbstp tbyte ptr [rdx - 0x13]; sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000044f310: fcomp qword ptr [rbp - 4]; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000439814: fdiv dword ptr [rbp + rdi*8 - 0x3ba7501]; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004500f7: fdiv dword ptr [rcx]; ret 0x8948; 
0x000000000042f25f: fdiv dword ptr [rdi - 0x1a]; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000448264: fdiv dword ptr [rdx + 0xa]; cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x00000000004372d1: fdiv st(5), st(0); dec dword ptr [rdx - 0x76b723bb]; in al, dx; pop rbp; ret; 
0x0000000000409c0e: fdiv st(7), st(0); jmp qword ptr [rsi - 0x7f]; 
0x000000000043b1fd: fdivp st(1); fstp xword ptr [rsp]; mov rdi, rax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x000000000044ce52: fdivp st(4); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ce7a: fdivp st(4); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041fafc: fdivp st(6); jmp qword ptr [rsi + 0x41]; 
0x0000000000417388: fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004048b7: fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048c7: fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048d7: fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004048e7: fdivp st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044de6b: fdivr dword ptr [r9]; ret; 
0x000000000044de6c: fdivr dword ptr [rcx]; ret; 
0x000000000041bd24: fdivr dword ptr [rdi + 6]; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x0000000000447775: fdivr st(4); push rdx; movups xmm0, xmmword ptr [rsp + 0x68]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000042f1ea: fdivr st(5); dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000404f87: fdivr st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404f86: fdivr st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004396cc: fdivr st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004396ef: fdivr st(7); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000430502: fiadd dword ptr [rdx]; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000427320: fiadd dword ptr [rip + 0x108b4800]; test rdx, rdx; je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042734d: fiadd dword ptr [rip + 0x108b4800]; test rdx, rdx; je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427577: fiadd dword ptr [rip + 0x388b4800]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004272ec: fiadd dword ptr [rip + 0x8b4800]; test rax, rax; je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427385: fiadd dword ptr [rip + 0x8b4800]; test rax, rax; je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273c9: fiadd dword ptr [rip + 0x8b4800]; test rax, rax; je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000416538: fiadd dword ptr [rsi]; add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416578: fiadd dword ptr [rsi]; add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416518: fiadd dword ptr [rsi]; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004164b8: fiadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004165e9: fiadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416617: fiadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416639: fiadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004164f8: fiadd dword ptr [rsi]; add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416558: fiadd dword ptr [rsi]; add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164d8: fiadd dword ptr [rsi]; add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416616: fiadd dword ptr ds:[rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040e066: fiadd word ptr [rcx + 0xf]; mov bh, 0xd5; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x0000000000443a2b: fiadd word ptr [rcx]; add dl, dh; divps xmm0, xmmword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x00000000004334c3: fiadd word ptr [rdx]; add dl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x000000000042720c: fiadd word ptr [rip + 0x388b4800]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000416238: fiadd word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416237: fiadd word ptr gs:[rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045c84e: ficom word ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432d7e: ficomp word ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000404718: fidiv dword ptr [rdx - 0x13]; sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000404858: fidiv dword ptr [rdx - 0x13]; sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x000000000045b9ae: fidiv word ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043020e: fidivr word ptr [rax - 0x76b30003]; imul eax; loope 0x30218; dec dword ptr [rax + 0x29]; ret; 
0x0000000000458498: fidivr word ptr [rdx + 0x1b6]; call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c3d: fidivr word ptr [rdx + 1]; call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d18: fild dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004272bd: fild dword ptr [rip + 0x108b4800]; test rdx, rdx; je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042722d: fild dword ptr [rip + 0x8b4800]; test rax, rax; je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042725c: fild dword ptr [rip + 0x8b4800]; test rax, rax; je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427290: fild dword ptr [rip + 0x8b4800]; test rax, rax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042728f: fild dword ptr [rip + 0x8b4800]; test rax, rax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000416478: fild dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416498: fild dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043238c: fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043257c: fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043276c: fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043295c: fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443878: fild dword ptr [rsp]; faddp st(1); fistp qword ptr [rsp + 8]; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040b90e: fild qword ptr [rax]; fmulp st(1); fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b947: fild qword ptr [rax]; fmulp st(1); fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000432ef8: fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332e8: fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439558: fild qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439626: fild qword ptr [rbp - 8]; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000432b43: fild qword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040b916: fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b94f: fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000043972b: fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043976e: fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443881: fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004101dd: fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x000000000040b362: fild qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040d05f: fild qword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000415d7e: fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dbe: fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041653e: fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041657e: fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004068a4: fild word ptr [rax + 0x30]; imul al; ret; 
0x0000000000456510: fild word ptr [rax + rcx*4 - 0x1a]; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x000000000043cc0d: fild word ptr [rbp + rdi*8 + 0x448b48ff]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000042246f: fild word ptr [rcx + rcx*4 - 0x12]; call 0x20fb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042238c: fild word ptr [rcx + rcx*4 - 0x1a]; call 0x20fb0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416084: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004160bd: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004160dd: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004160fd: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041611d: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041611c: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041613d: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416158: fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000412ee8: fimul dword ptr [rdx - 0x73]; add al, 0x1f; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449d39: fimul word ptr [rax - 0x77]; out 0x48, eax; lea eax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000043b543: fimul word ptr [rax - 0x77]; out 0x48, eax; lea eax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x0000000000457dd5: fimul word ptr [rax - 0x77]; out 0xe8, eax; ret 0xfb99; 
0x0000000000455400: fimul word ptr [rax - 0x77]; out 0xe8, eax; xchg edi, eax; ret; 
0x000000000044bf48: fimul word ptr [rcx + rcx*4 - 0x1e]; call 0x4d8d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c008: fimul word ptr [rcx + rcx*4 - 0x1e]; call 0x4e0f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d735: fimul word ptr [rcx + rcx*4 - 0x1f]; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x0000000000439cbe: fimul word ptr [rip - 0x76b80000]; in al, dx; pop rbp; ret; 
0x000000000045cb81: fist dword ptr [rdx - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040290c: fistp qword ptr [rbp - 0x10]; wait; mov rax, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000041927f: fistp qword ptr [rcx + 5]; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000043945a: fistp qword ptr [rdi]; mov rsp, rbp; pop rbp; ret; 
0x000000000041cb24: fistp qword ptr [rdx + 1]; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x000000000041cbc4: fistp qword ptr [rdx + 1]; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000042be6d: fistp qword ptr [rdx + 1]; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a51: fistp qword ptr [rdx + 1]; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x000000000045386f: fistp qword ptr [rsi + 0x10]; call 0x535c0; xor eax, eax; pop rbx; ret; 
0x000000000043e3bd: fistp qword ptr [rsi + 0x40]; call 0x3f800; pop rbx; ret; 
0x0000000000441c4d: fistp qword ptr [rsi + 0x40]; call 0x43280; pop rbx; ret; 
0x00000000004211d4: fistp qword ptr [rsi + 0x80]; call 0x20fb0; pop rbx; ret; 
0x0000000000421224: fistp qword ptr [rsi + 0x80]; call 0x210a0; pop rbx; ret; 
0x000000000041473b: fistp qword ptr [rsi + 1]; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x000000000040b912: fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b94b: fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000044387d: fistp qword ptr [rsp + 8]; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040d05c: fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000415d7b: fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dbb: fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041653b: fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041657b: fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043e6a0: fisttp dword ptr [rax + 0x648d48d8]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000441f33: fisttp dword ptr [rax + 0x648d48d8]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000417b23: fisttp dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x0000000000417f34: fisttp dword ptr [rax - 0x73]; add eax, 0x509a4; cmp qword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000433f6c: fisttp dword ptr [rax - 0x7b]; sal byte ptr [rbp + 6], 0x48; sub edx, ecx; mov rax, rdx; ret; 
0x0000000000410513: fisttp dword ptr [rcx - 0x39]; ret 0; 
0x0000000000422f1f: fisttp qword ptr [rip + 0x3a8b0006]; call rax; 
0x0000000000429939: fisttp word ptr [rax - 0x73]; adc eax, 0x3781f; call 0xe180; pop rbx; ret; 
0x0000000000450590: fisttp word ptr [rax - 0x73]; add eax, 0x35238; call qword ptr [rax]; 
0x0000000000450523: fisttp word ptr [rax - 0x73]; add eax, 0x35295; call qword ptr [rax]; 
0x00000000004184c1: fisttp word ptr [rax - 0x73]; add eax, 0x504f7; call qword ptr [rax]; 
0x0000000000417e64: fisttp word ptr [rax - 0x73]; add eax, 0x50b84; call qword ptr [rax]; 
0x0000000000429a04: fisttp word ptr [rax - 0x73]; xor eax, 0x37754; call 0xe180; pop rbx; ret; 
0x0000000000415183: fisttp word ptr [rax - 0x75]; add edi, edi; push rax; js 0x15114; ret; 
0x0000000000403a0b: fisttp word ptr [rcx + rcx*4 - 0x16]; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x00000000004302e1: fisttp word ptr [rcx + rcx*4 - 0x16]; call 0x302f0; pop r13; pop r12; pop rbx; ret; 
0x00000000004310b1: fisttp word ptr [rcx + rcx*4 - 0x16]; call 0x310c0; pop r13; pop r12; pop rbx; ret; 
0x0000000000430313: fisttp word ptr [rcx + rcx*4 - 0x16]; call 0xd400; pop r13; pop r12; pop rbx; ret; 
0x000000000041544e: fisttp word ptr [rcx + rcx*4 - 0x16]; call qword ptr [rip + 0x6eb78]; pop r13; pop r12; pop rbx; ret; 
0x00000000004508e9: fisttp word ptr [rcx + rcx*4 - 0x16]; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x000000000042db08: fisttp word ptr [rcx + rcx*4 - 0x1a]; call 0x2da60; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433af8: fisttp word ptr [rcx + rcx*4 - 0x1a]; call 0x342c0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000410043: fisttp word ptr [rcx + rcx*4 - 0x1a]; call 0xef70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417364: fisttp word ptr [rcx - 0x75]; and al, 0x14; call qword ptr [rax + 0x10]; 
0x0000000000417169: fisttp word ptr [rcx - 0x75]; and al, 0x14; call qword ptr [rax]; 
0x00000000004328f2: fisub dword ptr [rcx]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000404a91: fisub word ptr [rip + 0xffff]; ret; 
0x000000000040314e: fld dword ptr [rbp + 0x410b75f6]; cmp byte ptr [rcx], 0x3d; jne 0x315e; lea rax, [r9 + 1]; ret; 
0x0000000000450b63: fld dword ptr [rbp - 0x72b70004]; and al, 8; ret; 
0x00000000004273fd: fld dword ptr [rip + 0x8b4800]; test rax, rax; je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000416598: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004165b8: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416667: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416685: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166a6: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166bd: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004166dd: fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041688e: fld dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158ce: fld dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000433593: fld qword ptr [rdx]; add bl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x000000000041829f: fld qword ptr [rip - 0x74b7fffb]; xor byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000416258: fld qword ptr [rsi]; add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000041694e: fld qword ptr [rsp + 0x10]; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168be: fld qword ptr [rsp + 0x10]; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041598e: fld qword ptr [rsp + 0x10]; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158fe: fld qword ptr [rsp + 0x10]; fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404ef7: fld qword ptr [rsp + 0x18]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417ba5: fld xword ptr [rax]; fmulp st(1); fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000436cfb: fld xword ptr [rbp - 0x10]; mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fa8: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fc8: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fe8: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405008: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405028: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405048: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405068: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000406763: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d81: fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d3f: fld xword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439456: fld xword ptr [rdx]; fmulp st(1); fistp qword ptr [rdi]; mov rsp, rbp; pop rbp; ret; 
0x00000000004100d2: fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x220]; pop rbx; ret; 
0x00000000004067b1: fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a66: fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d56: fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040cfe4: fld xword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040ae8d: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d5e: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041651e: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed9d: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431193: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043185d: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c9d: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431eaa: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ecd: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043214d: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432393: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432583: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432773: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432963: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b4a: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d1d: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432efd: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004330fd: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332ed: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334ed: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c7a: fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404efe: fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417bac: fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040288c: fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x00000000004028c4: fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x00000000004028f8: fldcw word ptr [rbp - 0xc]; mov rsp, rbp; pop rbp; ret; 
0x00000000004033e6: fldcw word ptr [rbp - 8]; ldmxcsr dword ptr [rbp - 4]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f2d: fldcw word ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450b43: fldcw word ptr [rbx]; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404fa3: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fc3: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fe3: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405003: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405023: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405043: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405063: fldz; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451813: fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451b36: fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000459617: fmul dword ptr [rax + 0x63]; ret; 
0x00000000004277ec: fmul dword ptr [rax + 0x6b]; sal byte ptr [rax], 1; lea rax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x0000000000407a84: fmul dword ptr [rax + 1]; ret 0x8944; 
0x0000000000407a57: fmul dword ptr [rax + 1]; ret 0x894c; 
0x000000000041b4e6: fmul dword ptr [rax - 0x73]; adc eax, 0x698f2; mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x0000000000430f7f: fmul dword ptr [rax - 0x73]; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x00000000004363d1: fmul dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000424458: fmul dword ptr [rax - 0x73]; and al, 0x18; pop r12; pop rbx; ret; 
0x00000000004130b3: fmul dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x00000000004131b3: fmul dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x0000000000453ae0: fmul dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x0000000000416b40: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416bd0: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416ce0: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000416d70: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c4b8: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c5c8: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c768: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c7f8: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c908: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042cb48: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042e770: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043da6e: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043db8d: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043de30: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000043e1bd: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044105d: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044197b: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000441c36: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000447511: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000453e3f: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004570de: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457990: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457a20: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457b50: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457cfa: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457eb0: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458100: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458190: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045823e: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004582d0: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458455: fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040f284: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d2: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa62: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf2: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042c660: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000042cd00: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043d924: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043e768: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebb6: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef55: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000440eef: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044201a: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000442525: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000442977: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e319: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000044e499: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c91: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457ab8: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c58: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e18: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a831: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c1: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a951: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e1: fmul dword ptr [rax - 0x73]; and al, 0x70; pop r13; pop r12; pop rbx; ret; 
0x000000000041b652: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042c540: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042c6e0: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042c880: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042c990: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042cac0: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042e838: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043d70f: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043dafd: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043dcdf: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000453da4: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045526b: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004553b0: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000457d88: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000457f38: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000457fb8: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045858a: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000458a55: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045c3ef: fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000040c828: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000040ca5a: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000416e26: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042ca3d: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042d799: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043e8c7: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043eb25: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000043ed27: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004411bf: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004414e2: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004418cf: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004421c9: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000442487: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004426d9: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044d27b: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045345f: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000455319: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045545e: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004578fe: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045806e: fmul dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004197ae: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000419fa9: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041a257: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041a2f7: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000430ad4: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000043e6a2: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000441f35: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447a00: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447a52: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447e23: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004480a2: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000044b989: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000044bab3: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000044dfd2: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000045325d: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000453353: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000458c0e: fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415b66: fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004163a6: fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000412fce: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000417e84: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfdb: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe5: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043f00b: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004416cb: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a05: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a2b: fmul dword ptr [rax - 0x75]; pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043c0ed: fmul dword ptr [rax - 0x75]; pop rbp; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041da8e: fmul dword ptr [rax - 0x75]; push rax; or byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8941; 
0x000000000042f934: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042fb5e: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000436d05: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043c0f1: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043d241: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043e594: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000440774: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000441e27: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000450f0c: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451814: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451b37: fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000040cc11: fmul dword ptr [rax - 0x77]; ret 0xc148; 
0x000000000044bc1b: fmul dword ptr [rax - 0x77]; ret 0xc148; 
0x0000000000402d42: fmul dword ptr [rbx + 0x63481850]; or byte ptr [rax + 0x39], cl; ret 0x2e7c; 
0x000000000045c42e: fmul dword ptr [rbx + rcx*4 + 0x24]; ret 0x19eb; 
0x0000000000408891: fmul dword ptr [rcx + 0xf]; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000040595a: fmul dword ptr [rcx - 0x7b7473fc]; and al, 0x48; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000415b46: fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000416386: fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000436d04: fmul dword ptr gs:[rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004372d5: fmul qword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x000000000041829b: fmul qword ptr [rax - 0x73]; add eax, 0x505dd; mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000043a32b: fmul qword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004372d6: fmul qword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043d67a: fmul qword ptr [rcx + rcx*4 - 0x20]; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440bdc: fmul qword ptr [rcx + rcx*4 - 0x20]; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439458: fmulp st(1); fistp qword ptr [rdi]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b910: fmulp st(1); fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b949: fmulp st(1); fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040d05a: fmulp st(1); fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000417ba7: fmulp st(1); fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040288a: fnclex; fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f2b: fnclex; fldcw word ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fcbf: fnsave dword ptr [rsi - 0x7cb80000]; call 0x649044cb; and al, 8; ret; 
0x0000000000433fdb: fnstcw word ptr [rbp - 0x36]; test rax, rax; jne 0x33fe9; sub rdx, rcx; mov rax, rdx; ret; 
0x00000000004027a9: fnstcw word ptr [rbp - 8]; mov ax, word ptr [rbp - 8]; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x000000000042d833: fnstcw word ptr [rcx]; add eax, dword ptr [rax]; movsd xmm0, qword ptr [rax]; ret; 
0x0000000000410764: fnstenv [rdi - 0x6f]; lea rax, [r10 + 1]; pop rbx; ret; 
0x000000000045c457: fnstsw word ptr [rdi - 0x3a]; pop r13; pop r12; pop rbx; ret; 
0x00000000004028c1: frndint; wait; fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402848: fscale; fstp st(1); mov rsp, rbp; pop rbp; ret; 
0x000000000044fc13: fst dword ptr [rsp + rdi*8 - 1]; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000415d1b: fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164db: fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042edda: fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431150: fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431637: fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043165a: fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad77: fstp qword ptr [rdi - 0x72b7fffa]; and al, 8; ret; 
0x0000000000415d3b: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d9b: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164fb: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041655b: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed7a: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431170: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a77: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a9a: fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000402888: fstp st(1); fnclex; fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x000000000040284a: fstp st(1); mov rsp, rbp; pop rbp; ret; 
0x0000000000404fa5: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fc5: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fe5: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405005: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405025: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405045: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405065: fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d3c: fstp xword ptr [rbp - 0x20]; fld xword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044de67: fstp xword ptr [rdi + rax - 0x75]; fdivr dword ptr [r9]; ret; 
0x000000000044f0d3: fstp xword ptr [rsi + 8]; movsxd rdx, ebx; call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x00000000004067ad: fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a62: fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d52: fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a5a: fstp xword ptr [rsp]; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d4a: fstp xword ptr [rsp]; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040cfe1: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040ae8a: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d5b: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041651b: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed9a: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431190: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043185a: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c9a: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ea7: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431eca: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043214a: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432390: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432580: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432770: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432960: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b47: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d1a: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432efa: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004330fa: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332ea: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334ea: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c77: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404efb: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417ba9: fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x000000000043b1ff: fstp xword ptr [rsp]; mov rdi, rax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416952: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416921: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168c2: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416892: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415992: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415961: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415902: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d2: fstp xword ptr [rsp]; mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044bb73: fsub dword ptr [rip + 0xffff]; pop rbx; ret; 
0x00000000004032c2: fsub dword ptr [rsi - 0x77]; add ah, byte ptr [rip + 0xffff]; pop rbx; ret; 
0x000000000040330c: fsub dword ptr [rsi - 0x77]; add ah, byte ptr [rip + 0xffff]; pop rbx; ret; 
0x000000000040bc83: fsub dword ptr [rsi - 0x77]; ret 0x2d66; 
0x000000000041a6c0: fsub qword ptr [rbx - 0x2dcefffa]; mov esi, 0xe8; call 0x22e0; pop rbx; ret; 
0x000000000044b97a: fsubp st(0); push rax; sti; jmp qword ptr [rsi + 0x42]; 
0x0000000000429c60: fucompi st(0); mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x000000000041adbe: fucompi st(0); or al, 0; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041394b: fucompi st(0); out dx, eax; push rdi; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004017fb: fucompi st(0); out dx, eax; ret 1; 
0x0000000000401799: fucompi st(0); push rcx; ret; 
0x0000000000429cf0: fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x0000000000429cf0: fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000040182c: fucompi st(0); sahf; ret 1; 
0x000000000042c060: fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c060: fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000441f61: fucompi st(0); sbb dword ptr [rbx], edx; add byte ptr [rax], al; pop rbx; ret; 
0x000000000042c0f0: fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0f0: fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000043e6d1: fucompi st(0); sub dword ptr [rcx], edx; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000406cf1: fucompi st(0); test eax, 0x41fffffe; pop rbp; pop r12; pop rbx; ret; 
0x0000000000417175: fucompi st(0); xor eax, 0x48ffffe0; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a734: hlt; add al, 0; add byte ptr [rsi + rax - 1], dh; adc eax, 0x4f448; lea rsp, [rsp + 8]; ret; 
0x000000000041a73d: hlt; add al, 0; lea rsp, [rsp + 8]; ret; 
0x000000000041a73c: hlt; add al, 0; lea rsp, [rsp + 8]; ret; 
0x000000000045c1c3: hlt; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1fd: hlt; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c23d: hlt; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f2f2: hlt; call 0x2f330; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd72: hlt; call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x0000000000434468: hlt; clc; add al, 0; call qword ptr [rax + 0x78]; 
0x0000000000434468: hlt; clc; add al, 0; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000447f98: hlt; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c66b: hlt; cli; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000436fa8: hlt; in al, dx; add eax, dword ptr [rax]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000041b918: hlt; mov edi, esi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000401088: hlt; mov rsp, rbp; pop rbp; ret; 
0x00000000004028fa: hlt; mov rsp, rbp; pop rbp; ret; 
0x00000000004323c8: hlt; movabs al, byte ptr [0x10024a48d48fffd]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000043bdc8: hlt; push rdi; add al, byte ptr [rax]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x0000000000403603: hlt; ret; 
0x00000000004036bb: hlt; ret; 
0x000000000040455b: hlt; ret; 
0x0000000000434368: hlt; stc; add al, 0; call qword ptr [rax + 0x58]; 
0x00000000004353f8: hlt; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041302d: hlt; test rsi, rsi; je 0x1303d; mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x000000000044b3b8: hlt; wait; cld; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x0000000000443fc3: idiv bh; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000444053: idiv bh; dec dword ptr [rax - 0x73]; and al, 0x20; pop rbx; ret; 
0x00000000004158b3: idiv bh; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000417794: idiv bh; dec dword ptr [rax - 0x77]; ret; 
0x0000000000414506: idiv bh; dec dword ptr [rax - 0x7b]; sal byte ptr [rbx + rbx + 0xf], 0xb6; push rax; add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x0000000000443f8d: idiv bh; push rdx; cvtpi2ps xmm0, mm0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004586f9: idiv bl; jmp qword ptr [rsi + 0x41]; 
0x0000000000426e91: idiv byte ptr [rdi + 1]; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x0000000000404222: idiv byte ptr [rdi + 3]; xor eax, eax; ret; 
0x000000000042461d: idiv ch; dec dword ptr [rax - 0x73]; and al, 0x30; pop rbx; ret; 
0x000000000041e22d: idiv dh; jmp qword ptr [rsi - 0x77]; 
0x000000000041e22d: idiv dh; jmp qword ptr [rsi - 0x77]; ret 0x2d66; 
0x00000000004117c6: idiv di; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000443fc2: idiv dil; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000443f8c: idiv dil; push rdx; cvtpi2ps xmm0, mm0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000402ee7: idiv dword ptr [rdi + 0x20]; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402f0a: idiv dword ptr [rdi + 0x21]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e8d: idiv dword ptr [rdi + 0x26]; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574ba: idiv dword ptr [rdi + 0x48]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045747d: idiv dword ptr [rdi + 0x48]; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045749d: idiv dword ptr [rdi + 0x48]; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e3a: idiv dword ptr [rdi + 0x4d]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040309a: idiv dword ptr [rdi + 0x61]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457367: idiv dword ptr [rdi + 0x7c]; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004030ba: idiv dword ptr [rdi + 0xa0]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c847: idiv dword ptr [rdi + 0xd5]; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045cb9a: idiv dword ptr [rdi + 0xe3]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb7a: idiv dword ptr [rdi + 0xe4]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc7: idiv dword ptr [rdi + 0xe7]; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045cb3a: idiv dword ptr [rdi + 0xff]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa7: idiv dword ptr [rdi + 3]; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402e5a: idiv dword ptr [rdi + 5]; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004250a0: idiv dword ptr [rsi + 7]; mov byte ptr [rip + 0x5ffd6], 0xff; cmp edx, ecx; jg 0x25020; pop rbx; ret; 
0x0000000000443f61: idiv ecx; lea rax, [rdx + 1]; test eax, eax; jg 0x43f6e; add eax, 7; ret; 
0x0000000000444165: idiv ecx; test rdx, rdx; jne 0x4416f; mov al, 1; ret; 
0x0000000000419086: idiv edi; adc eax, 0x50abb; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000443f39: idiv edi; dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000415833: idiv edi; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004117c7: idiv edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417694: idiv edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000417714: idiv edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000454b0a: idiv edx; dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000443f60: idiv rcx; lea rax, [rdx + 1]; test eax, eax; jg 0x43f6e; add eax, 7; ret; 
0x0000000000444164: idiv rcx; test rdx, rdx; jne 0x4416f; mov al, 1; ret; 
0x0000000000418ae6: imul al; adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045bc36: imul al; adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004476b6: imul al; adc al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e37a: imul al; adc byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e597: imul al; adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000453f67: imul al; adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000434c45: imul al; add eax, 0x48fffd8d; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004353f6: imul al; hlt; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000447856: imul al; je 0x4785a; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000453376: imul al; je 0x53301; sti; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000420701: imul al; jmp 0x5c0205bb; ret; 
0x0000000000420a3d: imul al; lodsd eax, dword ptr [rsi]; mov al, 0xfe; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041452d: imul al; mov ebp, 0x5bffff75; ret; 
0x000000000042e3ea: imul al; movabs al, byte ptr [0x824648d48000000]; ret; 
0x00000000004068a7: imul al; ret; 
0x000000000040ea27: imul al; ret; 
0x0000000000447876: imul al; xchg esp, eax; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004476d6: imul al; xor al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040a19f: imul eax, dword ptr [rax], 0; add al, ch; cmp ah, ah; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040e66b: imul eax, dword ptr [rax], 0x648d4800; and al, 0x70; pop rbx; ret; 
0x000000000040e66a: imul eax, dword ptr [rax], 0x648d4800; and al, 0x70; pop rbx; ret; 
0x000000000040af63: imul eax, dword ptr [rax], 0x89480000; ret; 
0x000000000040b540: imul eax, dword ptr [rax], 0xc7480000; ret; 
0x0000000000401225: imul eax, dword ptr [rcx], 0; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ee21: imul eax, dword ptr [rdi - 0x72b70001], 0x64; and al, 8; ret; 
0x000000000045cd81: imul eax, dword ptr [rdx], 0; mov edi, dword ptr [rdx]; call rax; 
0x000000000042cb43: imul eax, dword ptr [rsi + rdi*8 + 0x48d889ff], 0x6824648d; pop r12; pop rbx; ret; 
0x000000000041d1ce: imul eax, dword ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e44c: imul eax, dword ptr [rsi], 0x108b4800; test rdx, rdx; je 0x1e464; lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e47a: imul eax, dword ptr [rsi], 0x8b4800; test rax, rax; je 0x1e492; lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000443e8e: imul eax, dword ptr [rsi], 1; add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004012e1: imul eax, ebp, 1; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000417088: imul eax, ebx; mov rdx, qword ptr [rsp]; lea rdi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x0000000000453960: imul eax, ecx, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045bed0: imul eax, ecx, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x00000000004016e1: imul eax, ecx, 1; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004045a2: imul eax, edi; ret; 
0x00000000004045b4: imul eax, edi; ret; 
0x00000000004045c4: imul eax, edi; ret; 
0x000000000040b804: imul eax, edi; ret; 
0x0000000000407b5e: imul eax, edx; lea rsp, [rsp + 8]; ret; 
0x000000000045395f: imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045becf: imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000041e0cd: imul eax; cmp eax, 0x89fffe64; ret; 
0x0000000000430214: imul eax; loope 0x30218; dec dword ptr [rax + 0x29]; ret; 
0x00000000004441f1: imul ebx, dword ptr [rsi], 0; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042c073: imul ecx, dword ptr [rbp - 0x74b7fffb], 0xc0854800; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a001: imul ecx, dword ptr [rip - 0x72b80000], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x00000000004528b7: imul ecx, ecx, 0x18; lea rsi, [rip + 0x25cff]; lea rax, [rsi + rcx]; ret; 
0x0000000000448341: imul ecx, esp, -4; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000418173: imul ecx, esp, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bb7a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004395b1: imul edi, ebx, -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ba7f: imul edi, ebx, 0xe0d148ff; add rax, rbx; pop rbx; ret; 
0x000000000040bada: imul edi, edi, -1; lea rsp, [rsp + 8]; ret; 
0x000000000044e754: imul edi, esp, 0x448b48ff; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e613: imul edi, esp, 0x648d48ff; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044e74f: imul edi, esp, 0x6999e8ff; cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000040bad9: imul edi, r15d, -1; lea rsp, [rsp + 8]; ret; 
0x000000000045c8f1: imul edx, dword ptr [rbp - 6], -1; lea rsp, [rsp + 8]; ret; 
0x00000000004277ee: imul edx, eax, 0x30; lea rax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x0000000000417713: imul esi, edi, 0x8948ffff; ret; 
0x0000000000415ff3: imul esp, eax, 0x8d480006; and al, 8; pop r12; pop rbx; ret; 
0x0000000000417087: imul rax, rbx; mov rdx, qword ptr [rsp]; lea rdi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x00000000004045b3: imul rax, rdi; ret; 
0x00000000004045c3: imul rax, rdi; ret; 
0x000000000040b803: imul rax, rdi; ret; 
0x0000000000407b5d: imul rax, rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004528b6: imul rcx, rcx, 0x18; lea rsi, [rip + 0x25cff]; lea rax, [rsi + rcx]; ret; 
0x00000000004277ed: imul rdx, rax, 0x30; lea rax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x000000000040a1a5: in al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045cb7c: in al, 0; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000434878: in al, 0x42; add eax, dword ptr [rax]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000043cf23: in al, 0x42; movzx eax, byte ptr [rax + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431730: in al, 0x42; movzx eax, byte ptr [rbx + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b70: in al, 0x42; movzx eax, byte ptr [rbx + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432020: in al, 0x42; movzx eax, byte ptr [rbx + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000440453: in al, 0x42; movzx eax, word ptr [rax + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431760: in al, 0x42; movzx eax, word ptr [rbx + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431ba0: in al, 0x42; movzx eax, word ptr [rbx + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432050: in al, 0x42; movzx eax, word ptr [rbx + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d2ac: in al, 0x44; mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004316b8: in al, 0x45; add al, 0; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004317c3: in al, 0x46; mov byte ptr [rax + riz], ch; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c03: in al, 0x46; mov byte ptr [rax + riz], ch; pop r13; pop r12; pop rbx; ret; 
0x00000000004320b3: in al, 0x46; mov byte ptr [rax + riz], ch; pop r13; pop r12; pop rbx; ret; 
0x000000000040954b: in al, 0x48; mov ebx, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436f78: in al, 0x48; mov esp, ebp; pop rbp; ret; 
0x0000000000436f77: in al, 0x48; mov esp, ebp; pop rbp; ret; 
0x0000000000426e98: in al, 0x49; add eax, dword ptr [rax]; lea rsp, [rsp + 0x88]; ret; 
0x000000000041dac0: in al, 0x4c; add dword ptr [rbx + 0x18], esp; pop r13; pop r12; pop rbx; ret; 
0x0000000000421092: in al, 0x4c; mov dword ptr [rbx + 8], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421187: in al, 0x4c; mov dword ptr [rbx + 8], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004317f4: in al, 0x66; mov dword ptr [rax + r12*2], r13d; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c34: in al, 0x66; mov dword ptr [rax + r12*2], r13d; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e4: in al, 0x66; mov dword ptr [rax + r12*2], r13d; pop r13; pop r12; pop rbx; ret; 
0x0000000000415178: in al, 0x74; adc ecx, dword ptr [rcx + rcx*4 - 0x16]; mov rsi, r12; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x0000000000447dbd: in al, 0x74; sbb byte ptr [rdx - 0x7bf7dbbc], cl; sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x000000000044bdad: in al, 0x74; sbb byte ptr [rdx - 0x7bf7dbbc], cl; sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x0000000000426d38: in al, 0x7b; add eax, dword ptr [rax]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000417072: in al, 0x7c; sub ecx, dword ptr [rax - 0x39]; ret; 
0x000000000040d730: in al, 0x7e; adc eax, 0x4cde8948; mov ecx, esp; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x0000000000430318: in al, 0xd0; std; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000041b8d8: in al, 0xe3; add al, 0; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x0000000000438ec3: in al, 0xff; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000438f53: in al, 0xff; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x000000000045b847: in al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b846: in al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b857: in al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000408b68: in al, 0xff; jmp qword ptr [rsi + 0x41]; 
0x00000000004238b8: in al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a98: in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415ab8: in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415ad8: in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415af8: in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415b18: in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415a78: in al, 6; add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000436fa9: in al, dx; add eax, dword ptr [rax]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000429803: in al, dx; jg 0x297d0; pop r13; pop r12; pop rbx; ret; 
0x000000000042bbf0: in al, dx; jg 0x2bbc0; pop r13; pop r12; pop rbx; ret; 
0x0000000000453316: in al, dx; jg 0x53300; pop r13; pop r12; pop rbx; ret; 
0x000000000043b40b: in al, dx; lea rsp, [rsp + 0x28]; ret; 
0x00000000004532a3: in al, dx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045325b: in al, dx; mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040288e: in al, dx; mov rsp, rbp; pop rbp; ret; 
0x00000000004028c6: in al, dx; mov rsp, rbp; pop rbp; ret; 
0x0000000000449bab: in al, dx; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000041da7e: in al, dx; movsxd rax, r13d; add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000043453b: in al, dx; movsxd rcx, ecx; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000040108b: in al, dx; pop rbp; ret; 
0x00000000004010d4: in al, dx; pop rbp; ret; 
0x000000000040122e: in al, dx; pop rbp; ret; 
0x0000000000401379: in al, dx; pop rbp; ret; 
0x0000000000401402: in al, dx; pop rbp; ret; 
0x0000000000401504: in al, dx; pop rbp; ret; 
0x0000000000401649: in al, dx; pop rbp; ret; 
0x0000000000401df7: in al, dx; pop rbp; ret; 
0x0000000000401e2a: in al, dx; pop rbp; ret; 
0x0000000000401e5d: in al, dx; pop rbp; ret; 
0x0000000000401e90: in al, dx; pop rbp; ret; 
0x0000000000401ed3: in al, dx; pop rbp; ret; 
0x0000000000401f16: in al, dx; pop rbp; ret; 
0x0000000000401f59: in al, dx; pop rbp; ret; 
0x0000000000401f9d: in al, dx; pop rbp; ret; 
0x00000000004027b7: in al, dx; pop rbp; ret; 
0x00000000004027d2: in al, dx; pop rbp; ret; 
0x000000000040284e: in al, dx; pop rbp; ret; 
0x0000000000402891: in al, dx; pop rbp; ret; 
0x00000000004028c9: in al, dx; pop rbp; ret; 
0x00000000004028fd: in al, dx; pop rbp; ret; 
0x0000000000402916: in al, dx; pop rbp; ret; 
0x00000000004033ef: in al, dx; pop rbp; ret; 
0x0000000000403565: in al, dx; pop rbp; ret; 
0x0000000000403bb1: in al, dx; pop rbp; ret; 
0x0000000000403c78: in al, dx; pop rbp; ret; 
0x0000000000403d0b: in al, dx; pop rbp; ret; 
0x0000000000404087: in al, dx; pop rbp; ret; 
0x0000000000404484: in al, dx; pop rbp; ret; 
0x0000000000404502: in al, dx; pop rbp; ret; 
0x0000000000404f32: in al, dx; pop rbp; ret; 
0x0000000000404f5e: in al, dx; pop rbp; ret; 
0x0000000000404fad: in al, dx; pop rbp; ret; 
0x0000000000404fcd: in al, dx; pop rbp; ret; 
0x0000000000404fed: in al, dx; pop rbp; ret; 
0x000000000040500d: in al, dx; pop rbp; ret; 
0x000000000040502d: in al, dx; pop rbp; ret; 
0x000000000040504d: in al, dx; pop rbp; ret; 
0x000000000040506d: in al, dx; pop rbp; ret; 
0x0000000000405178: in al, dx; pop rbp; ret; 
0x0000000000406768: in al, dx; pop rbp; ret; 
0x0000000000408702: in al, dx; pop rbp; ret; 
0x0000000000408d38: in al, dx; pop rbp; ret; 
0x0000000000409149: in al, dx; pop rbp; ret; 
0x00000000004094de: in al, dx; pop rbp; ret; 
0x0000000000409552: in al, dx; pop rbp; ret; 
0x000000000040a04a: in al, dx; pop rbp; ret; 
0x000000000040a72e: in al, dx; pop rbp; ret; 
0x000000000040a80e: in al, dx; pop rbp; ret; 
0x000000000040a8ad: in al, dx; pop rbp; ret; 
0x000000000040a926: in al, dx; pop rbp; ret; 
0x000000000040a9a5: in al, dx; pop rbp; ret; 
0x000000000040aa2e: in al, dx; pop rbp; ret; 
0x000000000040b4f9: in al, dx; pop rbp; ret; 
0x000000000040b5be: in al, dx; pop rbp; ret; 
0x000000000040b659: in al, dx; pop rbp; ret; 
0x000000000040b6d6: in al, dx; pop rbp; ret; 
0x000000000040b7d0: in al, dx; pop rbp; ret; 
0x000000000040b8b9: in al, dx; pop rbp; ret; 
0x000000000040c32d: in al, dx; pop rbp; ret; 
0x000000000040c6f1: in al, dx; pop rbp; ret; 
0x000000000040c76a: in al, dx; pop rbp; ret; 
0x000000000040cb6f: in al, dx; pop rbp; ret; 
0x000000000040d1c3: in al, dx; pop rbp; ret; 
0x000000000040dc1b: in al, dx; pop rbp; ret; 
0x000000000040e458: in al, dx; pop rbp; ret; 
0x000000000040e7f1: in al, dx; pop rbp; ret; 
0x000000000040e86e: in al, dx; pop rbp; ret; 
0x000000000040e990: in al, dx; pop rbp; ret; 
0x000000000040ea3f: in al, dx; pop rbp; ret; 
0x000000000040eabe: in al, dx; pop rbp; ret; 
0x000000000040ebcd: in al, dx; pop rbp; ret; 
0x000000000040ece7: in al, dx; pop rbp; ret; 
0x000000000040edf6: in al, dx; pop rbp; ret; 
0x000000000040ee70: in al, dx; pop rbp; ret; 
0x000000000040ef5f: in al, dx; pop rbp; ret; 
0x0000000000410361: in al, dx; pop rbp; ret; 
0x0000000000411549: in al, dx; pop rbp; ret; 
0x0000000000411799: in al, dx; pop rbp; ret; 
0x00000000004119bd: in al, dx; pop rbp; ret; 
0x0000000000411a7d: in al, dx; pop rbp; ret; 
0x0000000000411aae: in al, dx; pop rbp; ret; 
0x0000000000411ba7: in al, dx; pop rbp; ret; 
0x0000000000411bf7: in al, dx; pop rbp; ret; 
0x0000000000412050: in al, dx; pop rbp; ret; 
0x0000000000412b04: in al, dx; pop rbp; ret; 
0x0000000000412ef3: in al, dx; pop rbp; ret; 
0x0000000000412f34: in al, dx; pop rbp; ret; 
0x0000000000412fd5: in al, dx; pop rbp; ret; 
0x0000000000414c56: in al, dx; pop rbp; ret; 
0x0000000000415948: in al, dx; pop rbp; ret; 
0x00000000004161c2: in al, dx; pop rbp; ret; 
0x0000000000416222: in al, dx; pop rbp; ret; 
0x0000000000416908: in al, dx; pop rbp; ret; 
0x0000000000417cab: in al, dx; pop rbp; ret; 
0x0000000000417ccb: in al, dx; pop rbp; ret; 
0x0000000000417ceb: in al, dx; pop rbp; ret; 
0x0000000000417d0b: in al, dx; pop rbp; ret; 
0x0000000000417d2b: in al, dx; pop rbp; ret; 
0x0000000000417d4b: in al, dx; pop rbp; ret; 
0x0000000000417dad: in al, dx; pop rbp; ret; 
0x0000000000417e8b: in al, dx; pop rbp; ret; 
0x000000000041849d: in al, dx; pop rbp; ret; 
0x00000000004185d7: in al, dx; pop rbp; ret; 
0x000000000041863d: in al, dx; pop rbp; ret; 
0x00000000004187c6: in al, dx; pop rbp; ret; 
0x0000000000418ac9: in al, dx; pop rbp; ret; 
0x0000000000418ce1: in al, dx; pop rbp; ret; 
0x0000000000418d29: in al, dx; pop rbp; ret; 
0x000000000041defc: in al, dx; pop rbp; ret; 
0x000000000041e05b: in al, dx; pop rbp; ret; 
0x000000000041e7ce: in al, dx; pop rbp; ret; 
0x000000000041e89c: in al, dx; pop rbp; ret; 
0x000000000041fa47: in al, dx; pop rbp; ret; 
0x0000000000426e08: in al, dx; pop rbp; ret; 
0x00000000004298f2: in al, dx; pop rbp; ret; 
0x0000000000429be0: in al, dx; pop rbp; ret; 
0x0000000000429ef0: in al, dx; pop rbp; ret; 
0x000000000042bcdf: in al, dx; pop rbp; ret; 
0x000000000042bfe5: in al, dx; pop rbp; ret; 
0x000000000042c2f0: in al, dx; pop rbp; ret; 
0x000000000042d8f4: in al, dx; pop rbp; ret; 
0x000000000042d9a4: in al, dx; pop rbp; ret; 
0x000000000042dc8c: in al, dx; pop rbp; ret; 
0x000000000042de57: in al, dx; pop rbp; ret; 
0x000000000042df6a: in al, dx; pop rbp; ret; 
0x000000000042e07a: in al, dx; pop rbp; ret; 
0x000000000042e0fe: in al, dx; pop rbp; ret; 
0x000000000042e171: in al, dx; pop rbp; ret; 
0x000000000042e33a: in al, dx; pop rbp; ret; 
0x000000000042e647: in al, dx; pop rbp; ret; 
0x000000000042e6b0: in al, dx; pop rbp; ret; 
0x000000000042e7ab: in al, dx; pop rbp; ret; 
0x000000000042eb8c: in al, dx; pop rbp; ret; 
0x000000000042eba8: in al, dx; pop rbp; ret; 
0x000000000042ecdb: in al, dx; pop rbp; ret; 
0x000000000042ed37: in al, dx; pop rbp; ret; 
0x000000000042ee61: in al, dx; pop rbp; ret; 
0x000000000042f214: in al, dx; pop rbp; ret; 
0x000000000042f6b7: in al, dx; pop rbp; ret; 
0x000000000042f713: in al, dx; pop rbp; ret; 
0x000000000042f7bd: in al, dx; pop rbp; ret; 
0x000000000042f807: in al, dx; pop rbp; ret; 
0x000000000042f866: in al, dx; pop rbp; ret; 
0x000000000042f884: in al, dx; pop rbp; ret; 
0x000000000042f937: in al, dx; pop rbp; ret; 
0x000000000042f9a7: in al, dx; pop rbp; ret; 
0x000000000042fa1c: in al, dx; pop rbp; ret; 
0x000000000042fb61: in al, dx; pop rbp; ret; 
0x000000000042fc24: in al, dx; pop rbp; ret; 
0x000000000042ffaf: in al, dx; pop rbp; ret; 
0x0000000000430013: in al, dx; pop rbp; ret; 
0x00000000004300b4: in al, dx; pop rbp; ret; 
0x00000000004304d6: in al, dx; pop rbp; ret; 
0x0000000000430508: in al, dx; pop rbp; ret; 
0x0000000000430572: in al, dx; pop rbp; ret; 
0x00000000004305a5: in al, dx; pop rbp; ret; 
0x0000000000430604: in al, dx; pop rbp; ret; 
0x000000000043061e: in al, dx; pop rbp; ret; 
0x0000000000430692: in al, dx; pop rbp; ret; 
0x00000000004306c5: in al, dx; pop rbp; ret; 
0x00000000004306e6: in al, dx; pop rbp; ret; 
0x000000000043071b: in al, dx; pop rbp; ret; 
0x0000000000430797: in al, dx; pop rbp; ret; 
0x00000000004307d4: in al, dx; pop rbp; ret; 
0x00000000004309ed: in al, dx; pop rbp; ret; 
0x0000000000430af6: in al, dx; pop rbp; ret; 
0x0000000000430b78: in al, dx; pop rbp; ret; 
0x0000000000430bf7: in al, dx; pop rbp; ret; 
0x0000000000430c34: in al, dx; pop rbp; ret; 
0x0000000000430e6a: in al, dx; pop rbp; ret; 
0x00000000004313e6: in al, dx; pop rbp; ret; 
0x00000000004314ac: in al, dx; pop rbp; ret; 
0x0000000000431562: in al, dx; pop rbp; ret; 
0x000000000043157b: in al, dx; pop rbp; ret; 
0x000000000043158b: in al, dx; pop rbp; ret; 
0x0000000000431e25: in al, dx; pop rbp; ret; 
0x0000000000431e48: in al, dx; pop rbp; ret; 
0x0000000000431e65: in al, dx; pop rbp; ret; 
0x0000000000431e85: in al, dx; pop rbp; ret; 
0x0000000000431f1e: in al, dx; pop rbp; ret; 
0x0000000000431f57: in al, dx; pop rbp; ret; 
0x0000000000431f8e: in al, dx; pop rbp; ret; 
0x0000000000431fc7: in al, dx; pop rbp; ret; 
0x0000000000435089: in al, dx; pop rbp; ret; 
0x0000000000435119: in al, dx; pop rbp; ret; 
0x00000000004351d1: in al, dx; pop rbp; ret; 
0x0000000000435271: in al, dx; pop rbp; ret; 
0x000000000043541d: in al, dx; pop rbp; ret; 
0x000000000043559b: in al, dx; pop rbp; ret; 
0x000000000043633e: in al, dx; pop rbp; ret; 
0x00000000004368d2: in al, dx; pop rbp; ret; 
0x0000000000436a21: in al, dx; pop rbp; ret; 
0x0000000000436a4b: in al, dx; pop rbp; ret; 
0x0000000000436b0b: in al, dx; pop rbp; ret; 
0x0000000000436b22: in al, dx; pop rbp; ret; 
0x0000000000436b42: in al, dx; pop rbp; ret; 
0x0000000000436bb8: in al, dx; pop rbp; ret; 
0x0000000000436bd2: in al, dx; pop rbp; ret; 
0x0000000000436c51: in al, dx; pop rbp; ret; 
0x0000000000436d08: in al, dx; pop rbp; ret; 
0x0000000000436d44: in al, dx; pop rbp; ret; 
0x0000000000436d86: in al, dx; pop rbp; ret; 
0x0000000000436f7b: in al, dx; pop rbp; ret; 
0x00000000004372d9: in al, dx; pop rbp; ret; 
0x0000000000438bf2: in al, dx; pop rbp; ret; 
0x0000000000438d1b: in al, dx; pop rbp; ret; 
0x0000000000438d4e: in al, dx; pop rbp; ret; 
0x000000000043906e: in al, dx; pop rbp; ret; 
0x00000000004390a8: in al, dx; pop rbp; ret; 
0x00000000004390d8: in al, dx; pop rbp; ret; 
0x000000000043910e: in al, dx; pop rbp; ret; 
0x00000000004393f8: in al, dx; pop rbp; ret; 
0x000000000043945e: in al, dx; pop rbp; ret; 
0x000000000043955d: in al, dx; pop rbp; ret; 
0x000000000043962f: in al, dx; pop rbp; ret; 
0x00000000004396bd: in al, dx; pop rbp; ret; 
0x0000000000439821: in al, dx; pop rbp; ret; 
0x00000000004398a8: in al, dx; pop rbp; ret; 
0x0000000000439cc4: in al, dx; pop rbp; ret; 
0x000000000043a6f2: in al, dx; pop rbp; ret; 
0x000000000043ab32: in al, dx; pop rbp; ret; 
0x000000000043b11c: in al, dx; pop rbp; ret; 
0x000000000043b197: in al, dx; pop rbp; ret; 
0x000000000043b1ce: in al, dx; pop rbp; ret; 
0x000000000043b397: in al, dx; pop rbp; ret; 
0x000000000043bf9b: in al, dx; pop rbp; ret; 
0x000000000043c0f4: in al, dx; pop rbp; ret; 
0x000000000043d07e: in al, dx; pop rbp; ret; 
0x000000000043d102: in al, dx; pop rbp; ret; 
0x000000000043d244: in al, dx; pop rbp; ret; 
0x000000000043d354: in al, dx; pop rbp; ret; 
0x000000000043d56a: in al, dx; pop rbp; ret; 
0x000000000043d688: in al, dx; pop rbp; ret; 
0x000000000043dfe2: in al, dx; pop rbp; ret; 
0x000000000043e131: in al, dx; pop rbp; ret; 
0x000000000043e29e: in al, dx; pop rbp; ret; 
0x000000000043e35e: in al, dx; pop rbp; ret; 
0x000000000043e597: in al, dx; pop rbp; ret; 
0x000000000043e646: in al, dx; pop rbp; ret; 
0x000000000043efec: in al, dx; pop rbp; ret; 
0x000000000043f012: in al, dx; pop rbp; ret; 
0x000000000043f395: in al, dx; pop rbp; ret; 
0x000000000043f5f2: in al, dx; pop rbp; ret; 
0x000000000043f7a5: in al, dx; pop rbp; ret; 
0x000000000043f8d1: in al, dx; pop rbp; ret; 
0x000000000043fa6e: in al, dx; pop rbp; ret; 
0x00000000004405ae: in al, dx; pop rbp; ret; 
0x0000000000440632: in al, dx; pop rbp; ret; 
0x0000000000440777: in al, dx; pop rbp; ret; 
0x000000000044088a: in al, dx; pop rbp; ret; 
0x0000000000440aa0: in al, dx; pop rbp; ret; 
0x0000000000440bea: in al, dx; pop rbp; ret; 
0x00000000004416d2: in al, dx; pop rbp; ret; 
0x0000000000441821: in al, dx; pop rbp; ret; 
0x0000000000441a88: in al, dx; pop rbp; ret; 
0x0000000000441b88: in al, dx; pop rbp; ret; 
0x0000000000441e2a: in al, dx; pop rbp; ret; 
0x0000000000441ed6: in al, dx; pop rbp; ret; 
0x0000000000442a0c: in al, dx; pop rbp; ret; 
0x0000000000442a32: in al, dx; pop rbp; ret; 
0x0000000000442e18: in al, dx; pop rbp; ret; 
0x0000000000443074: in al, dx; pop rbp; ret; 
0x0000000000443229: in al, dx; pop rbp; ret; 
0x0000000000443351: in al, dx; pop rbp; ret; 
0x00000000004434ef: in al, dx; pop rbp; ret; 
0x0000000000443aeb: in al, dx; pop rbp; ret; 
0x0000000000443bba: in al, dx; pop rbp; ret; 
0x0000000000444ac9: in al, dx; pop rbp; ret; 
0x0000000000444bd8: in al, dx; pop rbp; ret; 
0x0000000000445785: in al, dx; pop rbp; ret; 
0x0000000000445894: in al, dx; pop rbp; ret; 
0x0000000000446cc0: in al, dx; pop rbp; ret; 
0x0000000000449279: in al, dx; pop rbp; ret; 
0x0000000000449952: in al, dx; pop rbp; ret; 
0x0000000000449a94: in al, dx; pop rbp; ret; 
0x0000000000449abb: in al, dx; pop rbp; ret; 
0x0000000000449b67: in al, dx; pop rbp; ret; 
0x0000000000449b82: in al, dx; pop rbp; ret; 
0x000000000044b011: in al, dx; pop rbp; ret; 
0x000000000044b6f2: in al, dx; pop rbp; ret; 
0x000000000044b834: in al, dx; pop rbp; ret; 
0x000000000044b85b: in al, dx; pop rbp; ret; 
0x000000000044b907: in al, dx; pop rbp; ret; 
0x000000000044b922: in al, dx; pop rbp; ret; 
0x000000000044d013: in al, dx; pop rbp; ret; 
0x000000000044d3cf: in al, dx; pop rbp; ret; 
0x000000000044d51d: in al, dx; pop rbp; ret; 
0x000000000044d705: in al, dx; pop rbp; ret; 
0x000000000044d8cd: in al, dx; pop rbp; ret; 
0x000000000044db1b: in al, dx; pop rbp; ret; 
0x000000000044dc13: in al, dx; pop rbp; ret; 
0x000000000044ddbb: in al, dx; pop rbp; ret; 
0x000000000044def5: in al, dx; pop rbp; ret; 
0x000000000044e0e9: in al, dx; pop rbp; ret; 
0x000000000044fddf: in al, dx; pop rbp; ret; 
0x000000000044fec1: in al, dx; pop rbp; ret; 
0x000000000044ffb8: in al, dx; pop rbp; ret; 
0x000000000045006d: in al, dx; pop rbp; ret; 
0x0000000000450f0f: in al, dx; pop rbp; ret; 
0x00000000004513c9: in al, dx; pop rbp; ret; 
0x0000000000451817: in al, dx; pop rbp; ret; 
0x0000000000451b3a: in al, dx; pop rbp; ret; 
0x0000000000451e75: in al, dx; pop rbp; ret; 
0x00000000004521b8: in al, dx; pop rbp; ret; 
0x0000000000452c70: in al, dx; pop rbp; ret; 
0x00000000004531d8: in al, dx; pop rbp; ret; 
0x00000000004531fc: in al, dx; pop rbp; ret; 
0x00000000004535ba: in al, dx; pop rbp; ret; 
0x0000000000453a5d: in al, dx; pop rbp; ret; 
0x0000000000454469: in al, dx; pop rbp; ret; 
0x0000000000455895: in al, dx; pop rbp; ret; 
0x0000000000455e78: in al, dx; pop rbp; ret; 
0x0000000000455fc5: in al, dx; pop rbp; ret; 
0x0000000000458fbf: in al, dx; pop rbp; ret; 
0x0000000000458fde: in al, dx; pop rbp; ret; 
0x0000000000459008: in al, dx; pop rbp; ret; 
0x0000000000459028: in al, dx; pop rbp; ret; 
0x000000000045903e: in al, dx; pop rbp; ret; 
0x000000000045ad26: in al, dx; pop rbp; ret; 
0x000000000045b1b3: in al, dx; pop rbp; ret; 
0x000000000045bc19: in al, dx; pop rbp; ret; 
0x000000000045bfcd: in al, dx; pop rbp; ret; 
0x00000000004024fe: in al, dx; ret; 
0x0000000000452f30: in al, dx; sbb bh, ah; dec dword ptr [rbx - 0x2776e3a8]; pop rbx; ret; 
0x0000000000402c47: in eax, 0x12; or byte ptr [rax], al; call rax; 
0x0000000000459033: in eax, 0x41; mov al, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fd3: in eax, 0x45; xor al, al; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430613: in eax, 0x45; xor ecx, ecx; call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cb3: in eax, 0x48; lea eax, [rip + 0x4fd15]; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000401e63: in eax, 0x48; lea esp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e33: in eax, 0x48; lea esp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e03: in eax, 0x48; lea esp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x000000000040246a: in eax, 0x48; or eax, 0xffffffff; ret; 
0x00000000004024ea: in eax, 0x48; or eax, 0xffffffff; ret; 
0x000000000044ba63: in eax, 0x4a; lea eax, [rbx + rbp]; pop r13; pop r12; pop rbx; ret; 
0x000000000044b913: in eax, 0x4c; lea eax, [rip + 0x2a385]; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e3: in eax, 0x4c; lea eax, [rip + 0x2a5b5]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b73: in eax, 0x4c; lea eax, [rip + 0x2c125]; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b33: in eax, 0x4c; lea eax, [rip + 0x3f165]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b13: in eax, 0x4c; lea eax, [rip + 0x3f185]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c3: in eax, 0x4c; lea eax, [rip + 0x3f3d5]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bc3: in eax, 0x4c; lea ecx, [rip + 0x3f0d5]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x000000000045c9f7: in eax, 0x54; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000413267: in eax, 0x57; add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000423a07: in eax, 0x62; add al, 0; lea rsp, [rsp + 8]; ret; 
0x000000000041b42e: in eax, 0x7f; out 0x41, eax; pop rbp; pop r12; pop rbx; ret; 
0x000000000041b4be: in eax, 0x7f; out 0x41, eax; pop rbp; pop r12; pop rbx; ret; 
0x0000000000405173: in eax, 0xb0; add dword ptr [rax - 0x77], ecx; in al, dx; pop rbp; ret; 
0x00000000004480c7: in eax, 0xf; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000403d83: in eax, 0xff; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000438e04: in eax, 0xff; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000438e64: in eax, 0xff; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000415198: in eax, 0xff; dec dword ptr [rcx + 0x415d41d8]; pop rsp; pop rbx; ret; 
0x0000000000403a11: in eax, 0xff; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004089f2: in eax, 0xff; jmp qword ptr [rsi + 0x41]; 
0x00000000004159fd: in eax, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415a38: in eax, 6; add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x0000000000415a18: in eax, 6; add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000415a58: in eax, 6; add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000045c1ff: in eax, dx; adc eax, 0x8d48fffc; and al, 8; pop r12; pop rbx; ret; 
0x000000000040d75f: in eax, dx; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000436f89: in eax, dx; add eax, dword ptr [rax]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000401042: in eax, dx; call 0x23bc0; ret; 
0x000000000042fde2: in eax, dx; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x000000000043d1ff: in eax, dx; jp 0x3d1ff; jmp qword ptr [rdi + 0x43]; 
0x0000000000404dba: in eax, dx; mov al, 1; ret; 
0x000000000044d094: in eax, dx; mov al, r13b; pop r13; pop r12; pop rbx; ret; 
0x000000000043cf7c: in eax, dx; mov byte ptr [rax + r13], r12b; pop r13; pop r12; pop rbx; ret; 
0x0000000000419609: in eax, dx; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x00000000004404ad: in eax, dx; mov word ptr [rax + r13*2], r12w; pop r13; pop r12; pop rbx; ret; 
0x0000000000453fff: in eax, dx; setge al; pop r13; pop r12; pop rbx; ret; 
0x000000000040469a: in eax, dx; sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d2: in eax, dx; sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040471a: in eax, dx; sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040485a: in eax, dx; sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x00000000004189fc: inc byte ptr [rax + rax]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004189a6: inc byte ptr [rax + rax]; mov rdx, qword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004135c3: inc byte ptr [rcx]; jne 0x135dc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c633: inc byte ptr [rcx]; jne 0x3c64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb63: inc byte ptr [rcx]; jne 0x3fb7c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e633: inc byte ptr [rcx]; jne 0x4e64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed53: inc byte ptr [rcx]; jne 0x4ed6c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee3: inc byte ptr [rcx]; jne 0x4eefc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f3: inc byte ptr [rcx]; jne 0x4f20c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a3: inc byte ptr [rcx]; jne 0x4f8bc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa3: inc byte ptr [rcx]; jne 0x4fabc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000443b2f: inc dword ptr [rax + rax*8 - 0x48f0908b]; ret; 
0x0000000000443a73: inc dword ptr [rax + rax*8 - 0x48f09f8b]; ret; 
0x0000000000403d3c: inc dword ptr [rax + rcx*4 + 0x23]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000449370: inc dword ptr [rax + rcx*4 - 0x18]; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044b110: inc dword ptr [rax + rcx*4 - 0x18]; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000423f61: inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000042a028: inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042c428: inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004238b4: inc dword ptr [rax]; add al, ch; in al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042d255: inc dword ptr [rax]; add al, ch; ret; 
0x0000000000423870: inc dword ptr [rax]; add al, ch; sub byte ptr [rdx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000423aa8: inc dword ptr [rax]; add bh, bh; adc eax, 0x46267; lea rsp, [rsp + 8]; ret; 
0x0000000000415a5d: inc dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041629d: inc dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000417de9: inc dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004328bc: inc dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004027b2: inc dword ptr [rax]; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004031a7: inc dword ptr [rax]; add byte ptr [rax], 0; sete al; ret; 
0x00000000004577b7: inc dword ptr [rax]; add byte ptr [rax], 0; sete al; ret; 
0x000000000040b9f9: inc dword ptr [rax]; add byte ptr [rax], al; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000407018: inc dword ptr [rax]; add byte ptr [rax], al; add rdi, rcx; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000433d08: inc dword ptr [rax]; add byte ptr [rax], al; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b418: inc dword ptr [rax]; add byte ptr [rax], al; and r11d, 0xff; sub rax, r11; ret; 
0x0000000000447d51: inc dword ptr [rax]; add byte ptr [rax], al; and r8d, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000449bf9: inc dword ptr [rax]; add byte ptr [rax], al; bt dword ptr [rsi], edi; jae 0x49c05; mov al, 1; ret; 
0x0000000000427ba2: inc dword ptr [rax]; add byte ptr [rax], al; bt dword ptr [rsi], edi; setb al; ret; 
0x000000000045cb3c: inc dword ptr [rax]; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403536: inc dword ptr [rax]; add byte ptr [rax], al; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000422007: inc dword ptr [rax]; add byte ptr [rax], al; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000045c0f7: inc dword ptr [rax]; add byte ptr [rax], al; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x0000000000403447: inc dword ptr [rax]; add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403467: inc dword ptr [rax]; add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403487: inc dword ptr [rax]; add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004237d7: inc dword ptr [rax]; add byte ptr [rax], al; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x00000000004034a7: inc dword ptr [rax]; add byte ptr [rax], al; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x0000000000430710: inc dword ptr [rax]; add byte ptr [rax], al; call 0x30720; mov rsp, rbp; pop rbp; ret; 
0x00000000004307c9: inc dword ptr [rax]; add byte ptr [rax], al; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430c29: inc dword ptr [rax]; add byte ptr [rax], al; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x00000000004302b0: inc dword ptr [rax]; add byte ptr [rax], al; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000409173: inc dword ptr [rax]; add byte ptr [rax], al; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x00000000004034f7: inc dword ptr [rax]; add byte ptr [rax], al; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x0000000000424617: inc dword ptr [rax]; add byte ptr [rax], al; call 0x3d10; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004183d2: inc dword ptr [rax]; add byte ptr [rax], al; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000459538: inc dword ptr [rax]; add byte ptr [rax], al; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000040420f: inc dword ptr [rax]; add byte ptr [rax], al; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x00000000004458b4: inc dword ptr [rax]; add byte ptr [rax], al; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458f8: inc dword ptr [rax]; add byte ptr [rax], al; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000427a67: inc dword ptr [rax]; add byte ptr [rax], al; call 0x47a90; lea rsp, [rsp + 8]; ret; 
0x0000000000427a47: inc dword ptr [rax]; add byte ptr [rax], al; call 0x47b50; lea rsp, [rsp + 8]; ret; 
0x00000000004075e7: inc dword ptr [rax]; add byte ptr [rax], al; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407607: inc dword ptr [rax]; add byte ptr [rax], al; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407627: inc dword ptr [rax]; add byte ptr [rax], al; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x000000000042e617: inc dword ptr [rax]; add byte ptr [rax], al; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x0000000000406fa6: inc dword ptr [rax]; add byte ptr [rax], al; jle 0x6fb1; mov edx, 0xff; mov byte ptr [rax], dl; ret; 
0x0000000000433972: inc dword ptr [rax]; add byte ptr [rax], al; lea rax, [rip + 0x42533]; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433952: inc dword ptr [rax]; add byte ptr [rax], al; lea rax, [rip + 0x42553]; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000407097: inc dword ptr [rax]; add byte ptr [rax], al; lea rdi, [rax + rcx]; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004385e9: inc dword ptr [rax]; add byte ptr [rax], al; lea rdx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dce: inc dword ptr [rax]; add byte ptr [rax], al; lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000415b8f: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 0x108]; ret; 
0x00000000004163d3: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415a1c: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041625c: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000424ecd: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000425bb4: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004322eb: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043a81a: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004512f4: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000459a4f: inc dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000406fad: inc dword ptr [rax]; add byte ptr [rax], al; mov byte ptr [rax], dl; ret; 
0x000000000043231a: inc dword ptr [rax]; add byte ptr [rax], al; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000444bf6: inc dword ptr [rax]; add byte ptr [rax], al; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c3a: inc dword ptr [rax]; add byte ptr [rax], al; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000439791: inc dword ptr [rax]; add byte ptr [rax], al; mov rsi, rsp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x000000000042552a: inc dword ptr [rax]; add byte ptr [rax], al; movzx edi, al; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000415b61: inc dword ptr [rax]; add byte ptr [rax], al; neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004163a1: inc dword ptr [rax]; add byte ptr [rax], al; neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004253fc: inc dword ptr [rax]; add byte ptr [rax], al; or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000455503: inc dword ptr [rax]; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000404a4f: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000404e08: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000407379: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004073f9: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000425854: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000425874: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000425b4d: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000432486: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004324a4: inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000403177: inc dword ptr [rax]; add byte ptr [rax], al; sete al; ret; 
0x0000000000457787: inc dword ptr [rax]; add byte ptr [rax], al; sete al; ret; 
0x0000000000406e0d: inc dword ptr [rax]; add byte ptr [rax], al; shl esi, 0x1f; or edx, esi; mov dword ptr [rax], edx; ret; 
0x000000000040686e: inc dword ptr [rax]; add byte ptr [rax], al; shl esi, 0xf; or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x0000000000406de0: inc dword ptr [rax]; add byte ptr [rax], al; shl rsi, 0x17; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406b65: inc dword ptr [rax]; add byte ptr [rax], al; shl rsi, 0x3f; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000433d0f: inc dword ptr [rax]; add byte ptr [rax], al; sub eax, r11d; ret; 
0x000000000040b41f: inc dword ptr [rax]; add byte ptr [rax], al; sub rax, r11; ret; 
0x0000000000447d58: inc dword ptr [rax]; add byte ptr [rax], al; sub rcx, r8; mov rax, rcx; ret; 
0x000000000043f7c1: inc dword ptr [rax]; add byte ptr [rax], al; xor ecx, ecx; call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x0000000000450096: inc dword ptr [rax]; add byte ptr [rcx + 0x4e8c1d0], cl; xor eax, edx; and eax, 0xf; ret; 
0x000000000044bb3e: inc dword ptr [rax]; add byte ptr [rcx + rbp - 0x3f], cl; mov rax, rcx; ret; 
0x000000000040ec5b: inc dword ptr [rax]; add byte ptr [rcx + rcx*4 - 0x11], cl; mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000443242: inc dword ptr [rax]; add byte ptr [rcx], dh; leave; call 0x43080; lea rsp, [rsp + 8]; ret; 
0x000000000042380a: inc dword ptr [rax]; add cl, al; out 0xa, al; or eax, esi; and eax, 0xffff; ret; 
0x0000000000459263: inc dword ptr [rax]; cmp di, 0x7f; sete al; ret; 
0x0000000000448262: inc dword ptr [rax]; fdiv dword ptr [rdx + 0xa]; cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x0000000000415b42: inc dword ptr [rax]; neg ax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416382: inc dword ptr [rax]; neg ax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004031d7: inc dword ptr [rax]; rol byte ptr [rax], 0; sete al; ret; 
0x00000000004577e7: inc dword ptr [rax]; rol byte ptr [rax], 0; sete al; ret; 
0x000000000041da7b: inc dword ptr [rbp + 0x29]; in al, dx; movsxd rax, r13d; add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000433d89: inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x0000000000433de9: inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x00000000004582eb: inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x000000000045830b: inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x0000000000456f34: inc dword ptr [rbp - 0x74fb8a40]; and al, 0x10; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000426dff: inc dword ptr [rbx + 0x458930c8]; sbb byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000423ef8: inc dword ptr [rbx + 0x634801eb]; ret; 
0x0000000000414733: inc dword ptr [rbx + 0xe7501f8]; mov rdi, rbx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x0000000000456da4: inc dword ptr [rbx - 0x1183f008]; xor eax, eax; ret; 
0x0000000000456c74: inc dword ptr [rbx - 0x1183fe08]; xor eax, eax; ret; 
0x000000000045603b: inc dword ptr [rbx - 0x308bfb08]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004315a1: inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431899: inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004319e1: inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cd9: inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432189: inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e1c: inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004315f1: inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318b9: inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a31: inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cf9: inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321a9: inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e5c: inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431611: inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318d9: inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a51: inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431d19: inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321c9: inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e7c: inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004315c1: inc dword ptr [rbx - 0x77cf918]; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431879: inc dword ptr [rbx - 0x77cf918]; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a01: inc dword ptr [rbx - 0x77cf918]; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cb9: inc dword ptr [rbx - 0x77cf918]; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432169: inc dword ptr [rbx - 0x77cf918]; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e3c: inc dword ptr [rbx - 0x77cf918]; add cl, byte ptr [rdi]; xchg edx, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000403a13: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000406cf6: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000406f6b: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040b3a3: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040dffe: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040f2b9: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040f4a9: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040fff2: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000414e0c: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000041852d: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000418fbe: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000041eac3: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000041eb3d: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000420d59: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000422412: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000422477: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000424dfb: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004299bb: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042a40d: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042d2f6: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000043031b: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000044c0d0: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000450459: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000457670: inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000404b70: inc dword ptr [rcx + 0x5f]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043485b: inc dword ptr [rcx + 0x5f]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044ec14: inc dword ptr [rcx + 0x5f]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f5de: inc dword ptr [rcx + 0xf]; xchg esp, eax; ret 0x8349; 
0x000000000040680e: inc dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406ac5: inc dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406db3: inc dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d5f2: inc dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045867c: inc dword ptr [rcx - 0x77]; add al, 0x24; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040c4ac: inc dword ptr [rcx - 0x78]; sbb al, 0x24; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403d80: inc dword ptr [rcx - 0x7f]; in eax, 0xff; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000402610: inc dword ptr [rcx]; jmp 0x2616; inc dword ptr [rcx]; ret; 
0x0000000000402631: inc dword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x0000000000402614: inc dword ptr [rcx]; ret; 
0x0000000000402636: inc dword ptr [rcx]; ret; 
0x0000000000408eab: inc dword ptr [rcx]; ror byte ptr [rdi], 1; mov edi, 0xffff7895; inc dword ptr [rcx]; shl byte ptr [rsi - 0x77], 1; ret 0x8166; 
0x0000000000408eb4: inc dword ptr [rcx]; shl byte ptr [rsi - 0x77], 1; ret 0x8166; 
0x0000000000433a9d: inc dword ptr [rdi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406b16: inc dword ptr [rdi]; add byte ptr [rax], al; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x00000000004250a6: inc dword ptr [rip - 0x35c60100]; jg 0x25020; pop rbx; ret; 
0x0000000000425127: inc dword ptr [rip - 0x3876b800]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000042511c: inc dword ptr [rip - 0x7ced7500]; ret 0x8801; 
0x0000000000414e7c: inc dword ptr [rsi]; add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx - 0x75], 0x3d; ret; 
0x00000000004025ac: inc eax; jne 0x25a0; xor eax, eax; ret; 
0x000000000040266e: inc eax; ret; 
0x00000000004026e2: inc eax; ret; 
0x0000000000402375: inc ecx; dec rdx; jne 0x2371; ret; 
0x0000000000420d75: inc edi; add al, 0xb0; xlatb; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000402076: inc edx; dec r8; jne 0x2070; ret; 
0x000000000042be33: inc esi; add byte ptr [rdi], ch; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000402630: inc qword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x0000000000402635: inc qword ptr [rcx]; ret; 
0x00000000004025ab: inc r8; jne 0x25a0; xor eax, eax; ret; 
0x00000000004026e1: inc rax; ret; 
0x0000000000402374: inc rcx; dec rdx; jne 0x2371; ret; 
0x0000000000402075: inc rdx; dec r8; jne 0x2070; ret; 
0x000000000042e8bf: insb byte ptr [rdi], dx; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045ccfd: insb byte ptr [rdi], dx; add al, byte ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd48: insb byte ptr [rdi], dx; add al, byte ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccc4: insb byte ptr [rdi], dx; add al, byte ptr [rax]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004010cb: insb byte ptr [rdi], dx; add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000432b44: insb byte ptr [rdi], dx; and al, 0x10; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004100d3: insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x220]; pop rbx; ret; 
0x00000000004067b2: insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a67: insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d57: insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b917: insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b950: insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000043972c: insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000043976f: insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443882: insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x00000000004101de: insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x00000000004165e8: insb byte ptr [rdi], dx; fiadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044a100: insb byte ptr [rdi], dx; push rsi; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431f19: insd dword ptr [rdi], dx; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431f52: insd dword ptr [rdi], dx; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000439559: insd dword ptr [rdi], dx; call 0x5df01ea7; ret; 
0x000000000043d0fe: insd dword ptr [rdi], dx; call 0x5df05a4c; ret; 
0x000000000044062e: insd dword ptr [rdi], dx; call 0x5df08f7c; ret; 
0x000000000040c6e5: insd dword ptr [rdi], dx; call 0xfffffffff0765237; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418ac1: insd dword ptr [rdi], dx; call 0xfffffffff0771613; mov rsp, rbp; pop rbp; ret; 
0x000000000041def0: insd dword ptr [rdi], dx; call 0xfffffffff0776a42; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e04f: insd dword ptr [rdi], dx; call 0xfffffffff0776ba1; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300a8: insd dword ptr [rdi], dx; call 0xfffffffff0788bfa; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430566: insd dword ptr [rdi], dx; call 0xfffffffff07890b8; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430686: insd dword ptr [rdi], dx; call 0xfffffffff07891d8; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bb0: insd dword ptr [rdi], dx; call 0xfffffffff078f702; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc11: insd dword ptr [rdi], dx; call 0xfffffffff07b4763; mov rsp, rbp; pop rbp; ret; 
0x00000000004033e7: insd dword ptr [rdi], dx; clc; ldmxcsr dword ptr [rbp - 4]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439627: insd dword ptr [rdi], dx; clc; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044fe: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f2e: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4f5: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5ba: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040c766: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7ed: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040e86a: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040eaba: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee6c: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000411ba3: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa43: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6b3: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000042f803: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000044fddb: insd dword ptr [rdi], dx; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb2: insd dword ptr [rdi], dx; cwde; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x00000000004028f9: insd dword ptr [rdi], dx; hlt; mov rsp, rbp; pop rbp; ret; 
0x0000000000415b17: insd dword ptr [rdi], dx; in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040288d: insd dword ptr [rdi], dx; in al, dx; mov rsp, rbp; pop rbp; ret; 
0x00000000004028c5: insd dword ptr [rdi], dx; in al, dx; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae7: insd dword ptr [rdi], dx; mov al, 0x48; mov esp, ebp; pop rbp; ret; 
0x000000000042e072: insd dword ptr [rdi], dx; mov al, 0x4c; mov esi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b9: insd dword ptr [rdi], dx; mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000411a79: insd dword ptr [rdi], dx; mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000429eec: insd dword ptr [rdi], dx; mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042c2ec: insd dword ptr [rdi], dx; mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000040ebc5: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecdf: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040edee: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x00000000004313de: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000043e296: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000043e356: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b5f: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8ff: insd dword ptr [rdi], dx; mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000412af8: insd dword ptr [rdi], dx; mov eax, 0xc0758b4c; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455889: insd dword ptr [rdi], dx; mov eax, 0xc0758b4c; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fb9: insd dword ptr [rdi], dx; mov eax, 0xc0758b4c; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de4f: insd dword ptr [rdi], dx; movabs al, byte ptr [0x5dec8948a8758b4c]; ret; 
0x000000000044e0e5: insd dword ptr [rdi], dx; or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000040e984: insd dword ptr [rdi], dx; or byte ptr [rbx + rcx*4 + 0x75], 0x88; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436aff: insd dword ptr [rdi], dx; or byte ptr [rbx + rcx*4 + 0x75], 0x88; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e5af: insd dword ptr [rdi], dx; push -0x72b80000; jl 0xe5db; or al, ch; ret; 
0x0000000000438baf: insd dword ptr [rdi], dx; ret 0xfffd; 
0x000000000042fc18: insd dword ptr [rdi], dx; ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d55e: insd dword ptr [rdi], dx; ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a94: insd dword ptr [rdi], dx; ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c1: insd dword ptr [rdi], dx; ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db0f: insd dword ptr [rdi], dx; ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dee9: insd dword ptr [rdi], dx; ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000432faf: insd dword ptr [rdi], dx; sbb eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004323ef: insd dword ptr [rdi], dx; sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004326ff: int 0x23; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042bbf2: int 0x41; pop rbp; pop r12; pop rbx; ret; 
0x0000000000423a27: int 0x62; add al, 0; lea rsp, [rsp + 8]; ret; 
0x000000000045823a: int 0xfb; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041b84a: int 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438f09: int 3; add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438ee3: int 3; add byte ptr [rax - 0x75], cl; xor al, 0x24; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x000000000041819f: int 6; add eax, 0x188b4800; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x0000000000419177: int 9; add eax, 0x648d4800; and al, 8; ret; 
0x0000000000436b18: int1; add eax, dword ptr [rax]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b38: int1; add eax, dword ptr [rax]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b37: int1; add eax, dword ptr [rax]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000430acb: int1; jmp 0x30acd; dec dword ptr [rax - 0x77]; ret; 
0x000000000040ec63: int1; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000403a44: int1; mov rax, r9; ret; 
0x0000000000417edb: int1; or dword ptr [rip + 0x100c600], eax; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x000000000040371a: int1; sar r9, 2; mov rax, r9; ret; 
0x000000000040379b: int1; sar r9, 3; mov rax, r9; ret; 
0x00000000004324bc: int1; shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x00000000004326ac: int1; shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x000000000043289c: int1; shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432a8c: int1; shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432c7c: int1; shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432e4c: int1; shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432c3c: int1; shl eax, cl; not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e0c: int1; shl eax, cl; not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432c1c: int1; shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432dec: int1; shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x000000000043264f: int1; shl eax, cl; or edx, eax; mov byte ptr [rdi], dl; movsx eax, dl; ret; 
0x000000000043245f: int1; shl eax, cl; or edx, eax; mov byte ptr [rdi], dl; movzx eax, dl; ret; 
0x000000000043283f: int1; shl eax, cl; or edx, eax; mov word ptr [rdi], dx; movsx eax, dx; ret; 
0x0000000000432a2f: int1; shl eax, cl; or edx, eax; mov word ptr [rdi], dx; movzx eax, dx; ret; 
0x000000000043249c: int1; shl eax, cl; xor al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x000000000043268c: int1; shl eax, cl; xor al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000432a6c: int1; shl eax, cl; xor ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043287c: int1; shl eax, cl; xor ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000432c5c: int1; shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e2c: int1; shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x000000000042cabb: int1; test dh, bh; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000438d44: iretd; add eax, dword ptr [rax]; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x000000000040701e: iretd; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000456040: iretd; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004023f0: iretd; mfence; jmp 0x234b; ret; 
0x000000000044fa5d: iretd; mov dl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044cb17: iretd; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044bcf0: iretd; mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bd40: iretd; mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000041b480: iretd; pop r13; pop r12; pop rbx; ret; 
0x000000000044f888: iretd; ret; 
0x0000000000457fb4: iretd; sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000410765: ja 0x106f8; lea rax, [r10 + 1]; pop rbx; ret; 
0x0000000000413bcb: ja 0x13bcc; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000417cc5: ja 0x17ccf; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000417f33: ja 0x17f10; lea rax, [rip + 0x509a4]; cmp qword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417fcc: ja 0x17fa0; pop rbx; ret; 
0x000000000041d7fb: ja 0x1d807; lea rcx, [rip + 0x6531c]; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x000000000041f04b: ja 0x1f020; pop r13; pop r12; pop rbx; ret; 
0x0000000000402469: ja 0x2450; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e9: ja 0x24d0; or rax, 0xffffffffffffffff; ret; 
0x000000000040255d: ja 0x2530; or rax, 0xffffffffffffffff; ret; 
0x0000000000425481: ja 0x25483; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000402969: ja 0x298b; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402969: ja 0x298b; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x000000000042f260: ja 0x2f248; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043168e: ja 0x31690; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004316a7: ja 0x316a9; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000403249: ja 0x3293; and eax, eax; lea rdx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000403602: ja 0x35f8; ret; 
0x0000000000403699: ja 0x3690; ret; 
0x00000000004036ba: ja 0x36b0; ret; 
0x000000000040372a: ja 0x3700; mov rax, 0xffffffffffffffff; ret; 
0x00000000004037ab: ja 0x3780; mov rax, 0xffffffffffffffff; ret; 
0x00000000004038c0: ja 0x3890; xor eax, eax; ret; 
0x00000000004039c5: ja 0x39a0; xor eax, eax; ret; 
0x0000000000403aa6: ja 0x3a68; xor eax, eax; ret; 
0x000000000043fc75: ja 0x3fccb; std; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044826c: ja 0x48271; mov al, 1; ret; 
0x0000000000449bf5: ja 0x49c05; and edi, 0xff; bt dword ptr [rsi], edi; jae 0x49c05; mov al, 1; ret; 
0x000000000044f53b: ja 0x4f518; ret; 
0x000000000044f580: ja 0x4f560; ret; 
0x000000000040527a: ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x000000000045b86f: ja 0x5b86b; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000407347: ja 0x734a; jne 0x7357; cmp rdx, 1; jne 0x7357; mov eax, 1; ret; 
0x000000000040b968: ja 0xb974; lea rdx, [rip + 0x771af]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000041ba84: jae 0x1ba8d; movzx ecx, dl; mov byte ptr [rdi + rcx], 0x2f; cmp eax, edx; jg 0x1ba70; ret; 
0x000000000041f9a9: jae 0x1f9ac; mov rdi, rax; call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x00000000004022c4: jae 0x2234; mfence; jmp 0x21a8; ret; 
0x000000000042bead: jae 0x2beb2; mov al, 1; ret; 
0x000000000042d7be: jae 0x2d7c2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d7de: jae 0x2d7e2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d7dd: jae 0x2d7e2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042dc87: jae 0x2dc87; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042dc86: jae 0x2dc87; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000431d7f: jae 0x31d81; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431dab: jae 0x31dad; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004330cd: jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043319d: jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334bd: jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043358d: jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x000000000043b40a: jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x0000000000449c00: jae 0x49c05; mov al, 1; ret; 
0x0000000000449bff: jae 0x49c05; mov al, 1; ret; 
0x000000000041b533: jb 0x1b533; jmp qword ptr [rsi - 0x77]; 
0x000000000043196a: jb 0x319e4; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431ace: jb 0x31ad0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431ae7: jb 0x31ae9; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043223a: jb 0x322aa; add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004338f2: jb 0x338f5; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000043453a: jb 0x34528; movsxd rcx, ecx; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043dcda: jb 0x3dcd9; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000404253: jb 0x4259; neg rax; ret; 
0x0000000000404699: jb 0x4688; sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000404719: jb 0x4708; sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d1: jb 0x47c0; sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000448265: jb 0x48271; cmp di, 0xdfff; ja 0x48271; mov al, 1; ret; 
0x0000000000404859: jb 0x4848; sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000415b88: jbe 0x15b8e; mov al, byte ptr [rsp + 1]; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000418734: jbe 0x18736; add byte ptr [rax], al; mov rsi, qword ptr [rbp - 0x18]; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x000000000041a939: jbe 0x1a939; dec dword ptr [rax - 0x77]; ret; 
0x000000000041bbe1: jbe 0x1bbe1; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000040247b: jbe 0x246b; ret; 
0x00000000004024fd: jbe 0x24eb; ret; 
0x000000000040256f: jbe 0x255f; sar rax, 1; ret; 
0x000000000042d8ef: jbe 0x2d8ef; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042d99f: jbe 0x2d99f; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042ed56: jbe 0x2edb5; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004318d6: jbe 0x3192d; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431afe: jbe 0x31b00; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b17: jbe 0x31b19; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b16: jbe 0x31b19; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431d56: jbe 0x31da6; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432126: jbe 0x32170; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432206: jbe 0x3224e; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040390e: jbe 0x3916; mov eax, 1; ret; 
0x00000000004039aa: jbe 0x39b2; mov eax, 1; ret; 
0x0000000000403a50: jbe 0x3a57; cmp byte ptr [rcx], 0; jne 0x3a38; mov rax, 0xffffffffffffffff; ret; 
0x000000000043a7b6: jbe 0x3a7b8; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000404148: jbe 0x4151; mov eax, 0xffffffff; jmp 0x4153; xor eax, eax; pop rbx; ret; 
0x000000000040424e: jbe 0x4255; cmp cl, 6; jb 0x4259; neg rax; ret; 
0x000000000044a078: jbe 0x4a068; lea rcx, [rax + 1]; sub rcx, rdx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000044a0b8: jbe 0x4a0a8; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x00000000004554f9: jbe 0x55502; mov byte ptr [rip + 0x233ee], 4; and eax, 0xff; pop rbx; ret; 
0x0000000000456836: jbe 0x5685c; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456aff: jbe 0x56af9; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000456ddd: jbe 0x56de5; mov eax, 1; ret; 
0x0000000000458376: jbe 0x5831f; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b96f: jbe 0x5b96b; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c276: jbe 0x5c2d5; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb26: jbe 0x5cb7b; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000410140: je 0x10166; or byte ptr [rdi + 4], bh; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000401079: je 0x107d; call rdx; 
0x0000000000401079: je 0x107d; call rdx; mov eax, 0xe7; mov edi, dword ptr [rbp - 4]; syscall; 
0x0000000000410e1e: je 0x10e25; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f1a: je 0x10f21; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041100c: je 0x11013; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041108e: je 0x11095; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411110: je 0x11117; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411471: je 0x11483; lea rdx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114a9: je 0x114bb; lea rax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004114d8: je 0x114ea; lea rdx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411510: je 0x11522; lea rdx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411553: je 0x1155b; mov ax, word ptr [rdi - 0x16]; jmp 0x1155f; mov ax, 2; and eax, 0xffff; ret; 
0x0000000000411573: je 0x1157a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x000000000041183c: je 0x11843; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411ac3: je 0x11ace; mov rax, qword ptr [rdi - 8]; add rax, 1; ret; 
0x0000000000411ae3: je 0x11aea; mov rax, qword ptr [rdi - 8]; ret; 
0x0000000000412d37: je 0x12d18; movsx eax, ax; ret; 
0x0000000000412d32: je 0x12d39; cmp byte ptr [rdi], 0x15; je 0x12d18; movsx eax, ax; ret; 
0x0000000000412f7f: je 0x12f85; mov al, 1; jmp 0x12f87; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000412fe8: je 0x12ffd; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041300b: je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041300b: je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x0000000000413031: je 0x1303d; mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000413041: je 0x1304f; mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004130a0: je 0x130b2; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004130cf: je 0x130fe; mov rdx, rsp; lea rsi, [rip + 0x55975]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004131a0: je 0x131b2; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131d5: je 0x131db; mov al, 1; jmp 0x131dd; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000413211: je 0x13231; lea rdx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041325f: je 0x13290; mov rdx, rsp; lea rsi, [rip + 0x557e5]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413374: je 0x1337c; mov rax, qword ptr [rsp]; jmp 0x1337e; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041340f: je 0x1344a; mov rdx, rsp; lea rsi, [rip + 0x55635]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413565: je 0x1356f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413584: je 0x1358d; mov rax, qword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x0000000000413595: je 0x1359f; mov rax, qword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x0000000000413707: je 0x13712; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000413702: je 0x13712; test r12, r12; je 0x13712; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000041372b: je 0x1373b; mov rdi, rax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004137b4: je 0x137bd; cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x0000000000413865: je 0x1386f; mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413c00: je 0x13c07; cmp rsi, rdi; jne 0x13be8; cmp rsi, rdi; sete al; ret; 
0x0000000000413ccf: je 0x13cf5; or byte ptr [rcx + rcx*4 - 9], cl; mov rax, r15; call rax; 
0x0000000000414312: je 0x14316; jne 0x14322; mov rdi, qword ptr [r15]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x00000000004146d9: je 0x146df; xor eax, eax; jmp 0x146e4; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x000000000041479f: je 0x147aa; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000041479a: je 0x147aa; test r12, r12; je 0x147aa; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x00000000004147ec: je 0x147f8; mov edi, 0xcc; call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x000000000041480d: je 0x14816; mov dword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000414950: je 0x14957; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000414a09: je 0x14a0f; xor eax, eax; jmp 0x14a14; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a32: je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000414a5e: je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414ab2: je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414b0a: je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414b6f: je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414c72: je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414d0b: je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414d3a: je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d6e: je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d94: je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414dc1: je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414e2e: je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414e85: je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414ec7: je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414f32: je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414fbe: je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414feb: je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000415038: je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x00000000004150a2: je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x00000000004150c9: je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415145: je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x0000000000415179: je 0x1518e; mov rdx, r13; mov rsi, r12; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x00000000004151e3: je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e3: je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415213: je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415213: je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415243: je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415243: je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041527b: je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041527b: je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004152aa: je 0x152b9; lea rdx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041531a: je 0x15329; lea rax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415348: je 0x15357; lea rdx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041574d: je 0x15754; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041582f: je 0x15836; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415cfb: je 0x15d02; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416801: je 0x16808; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041715f: je 0x1717b; cmp qword ptr [rax], 0; je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000417165: je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x000000000041723e: je 0x17251; cmp qword ptr [rax + 8], 0; je 0x17251; mov rdi, rbx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x0000000000417245: je 0x17251; mov rdi, rbx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x0000000000417359: je 0x1738b; cmp qword ptr [rax + 0x10], 0; je 0x1738b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x0000000000417360: je 0x1738b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x000000000041751f: je 0x17545; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000041762b: je 0x17651; sbb byte ptr [rax - 0x75], cl; jl 0x17656; adc byte ptr [rax - 0x73], cl; add eax, 0x51446; call qword ptr [rax]; 
0x0000000000417c0e: je 0x17c20; lea rax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c38: je 0x17c47; lea rax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c76: je 0x17c7f; mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rcx + 8]; mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x0000000000417d6a: je 0x17d79; lea rdx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc2: je 0x17dd4; lea rdx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e12: je 0x17e21; lea rdx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e5e: je 0x17e6e; mov rsi, rbp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417eb9: je 0x17ec8; lea rdx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417f40: je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417fe2: je 0x17ff1; lea rax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418012: je 0x18024; lea rax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418041: je 0x18050; lea rax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418071: je 0x18083; lea rdx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180a0: je 0x180af; lea rdx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180d0: je 0x180e2; lea rdx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180ff: je 0x1810e; lea rdx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041812f: je 0x18141; lea rdx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041817d: je 0x1818c; lea rdx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181df: je 0x181f1; lea rdx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041820b: je 0x1821a; lea rdx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004184b8: je 0x184cb; mov rdx, r13; mov rsi, r12; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x00000000004184f9: je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x000000000041859b: je 0x185a1; mov rsi, qword ptr [rcx + 8]; mov edi, eax; call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x0000000000418732: je 0x187ae; mov rsi, qword ptr [rbp - 0x18]; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x00000000004187bd: je 0x187c4; call 0x150f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000418875: je 0x1883b; sbb byte ptr [rax - 0x73], cl; mov esp, 0x87824; add byte ptr [rax - 0x73], cl; add eax, 0x50129; call qword ptr [rax]; 
0x00000000004188bb: je 0x188c2; call 0x150f0; lea rsp, [rsp + 0x980]; pop rbx; ret; 
0x0000000000418949: je 0x18910; add byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004188ea: je 0x18972; call 0x14a20; mov rsi, qword ptr [rax + 8]; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x0000000000418cbf: je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000418d02: je 0x18d12; mov rdi, rax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x0000000000418d50: je 0x18d62; lea rdx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d88: je 0x18d9a; lea rax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db9: je 0x18dcb; lea rax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418ded: je 0x18dff; lea rdx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e1c: je 0x18e2e; lea rdx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e54: je 0x18e66; lea rax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e88: je 0x18e9a; lea rax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418ec0: je 0x18ed2; lea rdx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef4: je 0x18f06; lea rdx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f2c: je 0x18f3e; lea rdx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f5b: je 0x18f6d; lea rax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f93: je 0x18fa5; lea rdx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041906f: je 0x19074; mov al, 1; ret; 
0x0000000000419251: je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x00000000004192a1: je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x000000000041932d: je 0x19336; mov rdx, qword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x000000000041935e: je 0x19370; mov rdx, rax; mov rcx, qword ptr [rdx + 0x10]; mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000041939e: je 0x193b0; mov rdx, rax; mov rcx, qword ptr [rdx + 0x20]; mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x000000000041968c: je 0x19695; mov rcx, qword ptr [rax]; mov qword ptr [rcx + 0x20], r8; mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x0000000000419d09: je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419e42: je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x000000000041a1c0: je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x000000000041a467: je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x000000000041a62a: je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a687: je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a712: je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a738: je 0x1a740; call qword ptr [rip + 0x4f448]; lea rsp, [rsp + 8]; ret; 
0x000000000041a780: je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a8e3: je 0x1a8f2; lea rdx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a91a: je 0x1a929; lea rdx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a94c: je 0x1a95b; lea rdx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a976: je 0x1a985; lea rdx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a9: je 0x1a9b8; lea rdx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa1a: je 0x1aa29; lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa43: je 0x1aa4b; call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x000000000041afb2: je 0x1afc4; lea rdx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afea: je 0x1affc; lea rax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b019: je 0x1b02b; lea rdx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b051: je 0x1b063; lea rdx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3b2: je 0x1b3c1; lea rdx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b573: je 0x1b57a; call 0x14fb0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x78]; ret; 
0x000000000041b649: je 0x1b650; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041b68d: je 0x1b697; call qword ptr [rip + 0x69773]; jmp 0x1b699; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b782: je 0x1b794; lea rdx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7ba: je 0x1b7cc; lea rax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7e9: je 0x1b7fb; lea rdx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b821: je 0x1b833; lea rdx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc2f: je 0x1bc3e; lea rdx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc70: je 0x1bc7f; lea rdx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc2: je 0x1bcd1; lea rdx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd12: je 0x1bd21; lea rdx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd9e: je 0x1bdad; lea rdx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be2e: je 0x1be3d; lea rdx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be89: je 0x1be98; lea rdx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed5: je 0x1bee4; lea rdx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf29: je 0x1bf38; lea rdx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf86: je 0x1bf95; lea rdx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c012: je 0x1c021; lea rdx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000401bfc: je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x000000000041c189: je 0x1c198; lea rax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c2fe: je 0x1c305; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c3f6: je 0x1c3fd; call 0x14fb0; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041c54f: je 0x1c55e; lea rdx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c5cd: je 0x1c5dc; lea rax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c643: je 0x1c652; lea rdx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c830: je 0x1c837; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c931: je 0x1c938; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c961: je 0x1c970; lea rdx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9b4: je 0x1c9c1; cmp eax, 2; je 0x1c9c1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000041c9b9: je 0x1c9c1; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x000000000041c9e7: je 0x1c9f6; lea rdx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ca52: je 0x1ca61; lea rax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041caa7: je 0x1caac; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x000000000041cabe: je 0x1cacd; lea rdx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb01: je 0x1cb10; lea rdx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb51: je 0x1cb60; lea rdx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cba1: je 0x1cbb0; lea rdx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cbf1: je 0x1cc00; lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc39: je 0x1cc48; lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc67: je 0x1cc76; lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cca1: je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ccd8: je 0x1cce7; lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd62: je 0x1cd71; lea rax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd9d: je 0x1cdac; lea rdx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf6: je 0x1ce05; lea rdx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cec6: je 0x1ced5; lea rax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cf01: je 0x1cf10; lea rdx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cfad: je 0x1cfbc; lea rax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d090: je 0x1d097; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d191: je 0x1d198; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d1c8: je 0x1d1d7; lea rdx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d214: je 0x1d223; lea rdx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d242: je 0x1d251; lea rax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d2d2: je 0x1d2e4; lea rdx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d318: je 0x1d327; lea rdx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d364: je 0x1d373; lea rdx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d392: je 0x1d3a1; lea rax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d452: je 0x1d464; lea rdx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d498: je 0x1d4a7; lea rax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d4e4: je 0x1d4f3; lea rdx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d512: je 0x1d521; lea rdx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c2: je 0x1d5d4; lea rdx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d608: je 0x1d617; lea rdx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d654: je 0x1d663; lea rdx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d682: je 0x1d691; lea rax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d752: je 0x1d764; lea rdx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d7e3: je 0x1d7e8; add byte ptr [rax], al; ret; 
0x000000000041d80a: je 0x1d80f; add byte ptr [rax], al; ret; 
0x000000000041d822: je 0x1d831; lea rdx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d862: je 0x1d871; lea rdx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d941: je 0x1d950; lea rax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d975: je 0x1d984; lea rdx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dadd: je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041dadd: je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041db01: je 0x1db10; lea rax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db6e: je 0x1db7d; lea rax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db9c: je 0x1dbab; lea rdx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db57: je 0x1dbbb; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041dbda: je 0x1dbe9; lea rdx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc59: je 0x1dc68; lea rax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc87: je 0x1dc96; lea rdx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcca: je 0x1dcd9; lea rdx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd6d: je 0x1dd7c; lea rax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd9b: je 0x1ddaa; lea rdx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ddf9: je 0x1de08; lea rax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de99: je 0x1dea8; lea rax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dec7: je 0x1ded6; lea rdx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041df39: je 0x1df48; lea rax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff8: je 0x1e007; lea rax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e026: je 0x1e035; lea rdx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e08b: je 0x1e09a; lea rax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e104: je 0x1e113; lea rax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e132: je 0x1e141; lea rdx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b6: je 0x1e1c5; lea rdx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2b1: je 0x1e2c0; lea rax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2df: je 0x1e2ee; lea rdx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e38f: je 0x1e39e; lea rdx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e455: je 0x1e464; lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e483: je 0x1e492; lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4f2: je 0x1e501; lea rdx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e572: je 0x1e581; lea rdx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5f2: je 0x1e601; lea rdx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e692: je 0x1e6a1; lea rdx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e750: je 0x1e75f; lea rax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e820: je 0x1e82f; lea rax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e8e5: je 0x1e8f4; lea rdx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e916: je 0x1e925; lea rax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e963: je 0x1e972; lea rax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e98d: je 0x1e99c; lea rdx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea06: je 0x1ea15; lea rdx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea7a: je 0x1ea89; lea rdx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eaea: je 0x1eaf9; lea rdx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb6a: je 0x1eb79; lea rdx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb6: je 0x1ebc5; lea rdx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe4: je 0x1ebf3; lea rdx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec6a: je 0x1ec79; lea rdx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb6: je 0x1ecc5; lea rdx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece7: je 0x1ecf6; lea rdx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041edb3: je 0x1edc2; lea rax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edff: je 0x1ee0e; lea rax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ee30: je 0x1ee3f; lea rdx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee85: je 0x1eeab; or byte ptr [rcx + 1], bh; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000041eed4: je 0x1eedb; call 0x14fb0; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041f07b: je 0x1f08a; lea rdx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0d0: je 0x1f0df; lea rdx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f101: je 0x1f110; lea rdx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f142: je 0x1f151; lea rdx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f61d: je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f61d: je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f65a: je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6d3: je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f75a: je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7cb: je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041fd9f: je 0x1fda4; add byte ptr [rax], al; lea rdi, [rsp + 8]; mov rdx, rsp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x000000000041fded: je 0x1fdfc; lea rax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042002c: je 0x2003b; lea rdx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c6: je 0x200d5; lea rdx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420196: je 0x201a5; lea rdx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420231: je 0x20240; lea rdx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004202e2: je 0x202f1; lea rax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420371: je 0x20380; lea rdx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420422: je 0x20431; lea rdx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004204db: je 0x204ea; lea rax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042057a: je 0x20589; lea rdx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004208fe: je 0x20903; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420abf: je 0x20ac5; mov rdx, qword ptr [rdx - 8]; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x0000000000420c10: je 0x20c17; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c90: je 0x20c97; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420e90: je 0x20e97; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f10: je 0x20f17; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f91: je 0x20f98; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420fcb: je 0x20fda; lea rax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421029: je 0x21038; lea rdx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042105c: je 0x2106b; lea rdx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210bb: je 0x210ca; lea rdx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421119: je 0x21128; lea rdx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042114c: je 0x2115b; lea rdx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211b1: je 0x211c0; lea rdx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421201: je 0x21210; lea rdx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042126c: je 0x2127b; lea rdx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004212dc: je 0x212eb; lea rax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042130a: je 0x21319; lea rdx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421426: je 0x21435; lea rax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421461: je 0x21470; lea rdx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214bc: je 0x214cb; lea rdx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042152c: je 0x2153b; lea rax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042155a: je 0x21569; lea rdx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421677: je 0x21686; lea rax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004216b0: je 0x216bf; lea rdx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216fb: je 0x2170a; lea rdx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421756: je 0x21765; lea rdx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217ab: je 0x217ba; lea rdx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421811: je 0x21820; lea rdx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421858: je 0x21867; lea rdx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218c1: je 0x218d0; lea rdx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042190b: je 0x2191a; lea rdx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421968: je 0x21977; lea rdx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219a1: je 0x219b0; lea rdx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219fc: je 0x21a0b; lea rdx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a31: je 0x21a40; lea rdx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a8a: je 0x21a99; lea rdx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421ac1: je 0x21ad0; lea rax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421af8: je 0x21b07; lea rdx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421b82: je 0x21b91; lea rax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421bbd: je 0x21bcc; lea rdx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c16: je 0x21c25; lea rdx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421ce6: je 0x21cf5; lea rax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421d21: je 0x21d30; lea rdx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421dba: je 0x21dc9; lea rdx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421ea0: je 0x21ea7; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421f20: je 0x21f27; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421fa1: je 0x21fa8; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004222db: je 0x222ea; lea rdx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042235b: je 0x2236a; lea rdx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223bb: je 0x223ca; lea rdx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042243b: je 0x2244a; lea rdx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042249a: je 0x224a9; lea rdx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004224f9: je 0x22508; lea rax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422527: je 0x22536; lea rdx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042256a: je 0x22579; lea rax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004225d7: je 0x225e6; lea rdx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422605: je 0x22614; lea rax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422633: je 0x22642; lea rdx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422761: je 0x22770; lea rax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422795: je 0x227a4; lea rdx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042282e: je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422898: je 0x228a7; lea rax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004228ec: je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422965: je 0x22974; lea rdx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422993: je 0x229a2; lea rdx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004229c7: je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422e6a: je 0x22e79; lea rdx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422eb9: je 0x22ec0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422f1a: je 0x22f29; lea rdx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f69: je 0x22f70; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422fca: je 0x22fd9; lea rdx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423019: je 0x23020; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004230d0: je 0x230d7; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042312a: je 0x23139; lea rdx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423179: je 0x23180; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004231da: je 0x231e9; lea rdx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423229: je 0x23230; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042328a: je 0x23299; lea rdx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004232d9: je 0x232e0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042336e: je 0x2337d; lea rax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000423426: je 0x2342d; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004234a6: je 0x234ad; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423526: je 0x2352d; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004235aa: je 0x235b1; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042360a: je 0x23619; lea rdx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423659: je 0x23660; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004236ba: je 0x236c9; lea rdx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423709: je 0x23710; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042376a: je 0x23779; lea rdx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004237b9: je 0x237c0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423f98: je 0x23fa5; mov rax, qword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000424232: je 0x24244; lea rdx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424268: je 0x2427a; lea rdx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242a1: je 0x242b3; lea rdx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242da: je 0x242ec; lea rdx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424313: je 0x24325; lea rdx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f7: je 0x24506; lea rdx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424521: je 0x24530; lea rax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042455d: je 0x2456c; lea rdx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a5: je 0x245b4; lea rdx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245d8: je 0x245df; call 0x24350; pop rbx; ret; 
0x0000000000424d61: je 0x24d68; call 0x24d10; mov al, bl; pop rbx; ret; 
0x0000000000424df5: je 0x24dfc; call 0x24d10; pop r13; pop r12; pop rbx; ret; 
0x0000000000425aec: je 0x25afc; mov eax, edx; lea rcx, [rip + 0x5fb09]; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000425c2a: je 0x25c30; mov al, 1; jmp 0x25c32; xor al, al; lea rsp, [rsp + 8]; ret; 
0x00000000004025cd: je 0x25d4; lock dec dword ptr [rcx]; jmp 0x25d6; dec dword ptr [rcx]; sete al; ret; 
0x00000000004025ed: je 0x25f5; lock dec qword ptr [rcx]; jmp 0x25f8; dec qword ptr [rcx]; sete al; ret; 
0x000000000040260d: je 0x2614; lock inc dword ptr [rcx]; jmp 0x2616; inc dword ptr [rcx]; ret; 
0x000000000040262d: je 0x2635; lock inc qword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x0000000000426c6f: je 0x26c7e; lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cbb: je 0x26cca; lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426db2: je 0x26dbc; mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x000000000042714c: je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427236: je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427265: je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427299: je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272c6: je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272f5: je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427329: je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427356: je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042738e: je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273d2: je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427406: je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004283f8: je 0x28407; lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428423: je 0x28432; lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042845a: je 0x28469; lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428e42: je 0x28e49; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000429aa3: je 0x29aa9; mov al, 1; jmp 0x29aab; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429c35: je 0x29c47; lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c7d: je 0x29c8c; lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429cc5: je 0x29cd7; lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d0d: je 0x29d1c; lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d55: je 0x29d67; lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d9d: je 0x29dac; lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402a02: je 0x2a0e; mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000402a30: je 0x2a3c; mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x000000000042a5b8: je 0x2a5c7; lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5e3: je 0x2a5f2; lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a62e: je 0x2a63d; lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042b072: je 0x2b079; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c035: je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c07d: je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c0c5: je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c10d: je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c155: je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c19d: je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c43: je 0x2c4f; mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x000000000042c538: je 0x2c53f; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c6d8: je 0x2c6df; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c878: je 0x2c87f; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c988: je 0x2c98f; call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042cab8: je 0x2cabf; call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000402cfb: je 0x2d07; mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x000000000042d8eb: je 0x2d8f2; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042d99b: je 0x2d9a2; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042dc83: je 0x2dc8a; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e356: je 0x2e35c; mov rax, qword ptr [rax - 8]; ret; 
0x000000000042e7b3: je 0x2e7b9; mov rdi, qword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x000000000042e830: je 0x2e837; call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042ecf8: je 0x2eca6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042f659: je 0x2f665; mov rdx, qword ptr [rsp]; cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x000000000042fdde: je 0x2fde1; push qword ptr [rbp - 0x13]; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x00000000004030d3: je 0x30e2; lea rax, [rip + 0x80d94]; cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x0000000000431994: je 0x31996; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004319b8: je 0x319ba; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431b28: je 0x31b6b; add al, 0; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x000000000040321a: je 0x3224; and edi, 0x7f; je 0x3224; mov al, 1; ret; 
0x000000000040321f: je 0x3224; mov al, 1; ret; 
0x00000000004032a3: je 0x32b5; lea rdx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032ed: je 0x32ff; lea rdx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000403356: je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x0000000000403366: je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x0000000000433b7e: je 0x33b85; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000434044: je 0x34058; cmp byte ptr [rdi], 0; jne 0x34053; mov rax, 0xffffffffffffffff; ret; 
0x0000000000433fff: je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340cd: je 0x340e1; cmp byte ptr [rdi], 0; jne 0x340dc; mov rax, 0xffffffffffffffff; ret; 
0x000000000043406f: je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434104: je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434164: je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x00000000004342e8: je 0x342e4; add al, 0; call qword ptr [rax + 0x48]; 
0x00000000004343e8: je 0x343e3; add al, 0; call qword ptr [rax + 0x68]; 
0x0000000000434a16: je 0x34a1c; mov rcx, qword ptr [rcx - 8]; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x0000000000434abb: je 0x34ac6; cmp r8d, r9d; jg 0x34a38; ret; 
0x00000000004368a3: je 0x368aa; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000436f6f: je 0x36f76; call 0x14fb0; mov al, byte ptr [rbp - 0x1c]; mov rsp, rbp; pop rbp; ret; 
0x00000000004372cd: je 0x372d4; call 0x14fb0; mov al, byte ptr [rbp - 0x24]; mov rsp, rbp; pop rbp; ret; 
0x0000000000437328: je 0x37313; add eax, dword ptr [rax]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000403801: je 0x3816; test r8, r8; jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x00000000004038a0: je 0x38b5; test r8, r8; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x0000000000403906: je 0x391e; mov r8d, dword ptr [rdi]; cmp r8d, dword ptr [rsi]; jbe 0x3916; mov eax, 1; ret; 
0x0000000000439228: je 0x391f4; add eax, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000439551: je 0x39558; call 0x14fb0; fild qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004039a4: je 0x39ba; mov edx, dword ptr [rdi]; cmp edx, dword ptr [rsi]; jbe 0x39b2; mov eax, 1; ret; 
0x0000000000403a91: je 0x3a98; cmp byte ptr [rsi], 0; jne 0x3a9b; xor eax, eax; ret; 
0x000000000043b52b: je 0x3b553; mov rsi, qword ptr [rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000043b52f: je 0x3b555; js 0x3b57b; lea edi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000043b866: je 0x3b86c; mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b8e8: je 0x3b86e; add al, 0; call qword ptr [rax + 0x28]; 
0x000000000043b8e8: je 0x3b86e; add al, 0; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043b896: je 0x3b89c; mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043c28f: je 0x3c296; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043c603: je 0x3c60a; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000043c73d: je 0x3c744; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c8b6: je 0x3c8bd; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ca97: je 0x3ca9e; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x000000000043cc05: je 0x3cc0c; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd4a: je 0x3cd51; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ce9c: je 0x3cea3; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ced7: je 0x3cee1; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x000000000043d706: je 0x3d70d; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043daf8: je 0x3daf7; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043dcd6: je 0x3dcdd; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043fc6d: je 0x3fc74; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fde6: je 0x3fded; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043ffc7: je 0x3ffce; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000440135: je 0x4013c; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044027a: je 0x40281; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403cc: je 0x403d3; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440407: je 0x40411; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000440c88: je 0x40c8f; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441106: je 0x4110d; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441348: je 0x4134f; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000404290: je 0x429e; cmp rsi, rax; jg 0x429a; xor eax, eax; ret; 
0x0000000000446d20: je 0x46d46; or dword ptr [rax - 0x75], ecx; cmp al, 0x24; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000447528: je 0x47511; add al, byte ptr [rax]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000447858: je 0x4785a; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000447c86: je 0x47c8d; cmp rdx, rdi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x00000000004480e3: je 0x480ec; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044833e: je 0x48345; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000449615: je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x0000000000449924: je 0x4992b; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000449bda: je 0x49be1; cmp rdx, rcx; jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x000000000044b3b5: je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b6c4: je 0x4b6cb; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044b9ab: je 0x4b9b1; mov rdx, qword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x000000000044bef3: je 0x4befc; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044c0e6: je 0x4c0ec; mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x000000000044ce0a: je 0x4ce11; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044e60f: je 0x4e616; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044e74b: je 0x4e752; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e8a3: je 0x4e8aa; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044ea3d: je 0x4ea44; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x20]; lea rsp, [rsp + 0xf8]; ret; 
0x000000000044ee61: je 0x4ee68; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044eff1: je 0x4eff8; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f308: je 0x4f30f; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9a5: je 0x4f9ac; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9f0: je 0x4f9fb; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9eb: je 0x4f9fb; test r12, r12; je 0x4f9fb; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044fc0b: je 0x4fc12; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fcb9: je 0x4fcc4; mov rdi, r15; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x000000000044fcb4: je 0x4fcc4; test r14, r14; je 0x4fcc4; mov rdi, r15; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x00000000004500cc: je 0x500db; lea rax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045051f: je 0x5052f; mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x000000000045058c: je 0x5059c; mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x00000000004505e7: je 0x505ee; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045068a: je 0x50691; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450858: je 0x5085f; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004508e5: je 0x508fe; mov rdi, rbx; mov rdx, r13; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x00000000004050a7: je 0x50b9; lea rax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000450b84: je 0x50bb3; mov rdx, r12; lea rsi, [rip + 0x17ec0]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bd7: je 0x50bec; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450ca1: je 0x50ca7; mov al, 1; jmp 0x50ca9; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e25: je 0x50e2b; mov al, 1; jmp 0x50e2d; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e64: je 0x50e6a; mov al, 1; jmp 0x50e6c; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004050d9: je 0x50e8; lea rdx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000450e92: je 0x50e98; mov al, 1; jmp 0x50e9a; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000451645: je 0x5164c; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004517d8: je 0x517ec; mov rsi, qword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451958: je 0x5195f; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451afb: je 0x51b0f; mov rsi, qword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c8b: je 0x51c92; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451e36: je 0x51e4a; mov rsi, qword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fce: je 0x51fd5; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000405270: je 0x5203; add eax, 0x2f0f6600; or bh, byte ptr [rdx + 2]; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x0000000000452179: je 0x5218d; mov rsi, qword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045229c: je 0x522a6; mov rdi, rax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x00000000004525b8: je 0x525bf; call 0x15110; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000045261b: je 0x5262a; lea rax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452647: je 0x52656; lea rax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452af8: je 0x52b07; lea rdx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452c89: je 0x52c92; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x000000000045316e: je 0x5317c; mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453378: je 0x53301; sti; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453336: je 0x53348; mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x00000000004533a0: je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x00000000004533a0: je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045383f: je 0x53846; call 0x14fb0; mov al, byte ptr [rsp + 8]; lea rsp, [rsp + 0xf8]; ret; 
0x0000000000453cc7: je 0x53ccd; mov al, 1; jmp 0x53ccf; xor al, al; lea rsp, [rsp + 0x98]; ret; 
0x0000000000453d9c: je 0x53da3; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000453fb8: je 0x53fa0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004540be: je 0x540c5; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004551c7: je 0x551ce; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455263: je 0x5526a; call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004553a8: je 0x553af; call 0x14fb0; mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045562c: je 0x55633; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x000000000045575c: je 0x55763; call 0x14fb0; mov rax, rbx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x000000000045603f: je 0x56010; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456190: je 0x56197; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045650c: je 0x5651f; mov rdi, rbx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004565a4: je 0x565ab; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045669a: je 0x566a1; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004566e7: je 0x566f9; lea rdx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000456afb: je 0x56b01; mov rsi, qword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000456f03: je 0x56f08; add edx, 1; mov eax, edx; lea rsp, [rsp + 0x48]; ret; 
0x000000000045706a: je 0x57090; adc byte ptr [rax - 0x77], cl; out 0xe8, eax; mov ebx, 0x89fffabf; ret; 
0x000000000045782a: je 0x57834; and edi, 0x7f; je 0x57834; mov al, 1; ret; 
0x000000000045782f: je 0x57834; mov al, 1; ret; 
0x0000000000457d80: je 0x57d87; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457f30: je 0x57f37; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458a4d: je 0x58a54; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045949c: je 0x59460; pop r13; pop r12; pop rbx; ret; 
0x0000000000459fbf: je 0x59fde; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x0000000000459fcd: je 0x59fde; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x000000000045a351: je 0x5a363; lea rdx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d5: je 0x5a3e7; lea rdx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aba9: je 0x5abbb; lea rax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abff: je 0x5ac11; lea rax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045afa0: je 0x5afb2; lea rdx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff6: je 0x5b008; lea rdx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b04c: je 0x5b05e; lea rdx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b220: je 0x5b246; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045c3e7: je 0x5c3ee; call 0x14fb0; mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045ccbe: je 0x5ccd0; lea rdx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccf7: je 0x5cd09; lea rax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd42: je 0x5cd54; lea rax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd7b: je 0x5cd8d; lea rdx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000406773: je 0x6779; mov rax, qword ptr [rdi]; ret; 
0x0000000000408747: je 0x874d; add ax, 1; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000040a19c: je 0xa1a8; mov edi, 0x6b; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000040ab43: je 0xab30; mov rax, rcx; ret; 
0x000000000040ab75: je 0xab9b; add al, 0xe8; ret; 
0x000000000040af5c: je 0xaf82; or byte ptr [rax - 0x77], cl; out 0xe8, eax; imul eax, dword ptr [rax], 0x89480000; ret; 
0x000000000040baa7: je 0xbab1; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x000000000040bd63: je 0xbd89; or byte ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000040d873: je 0xd87b; mov ax, word ptr [rdi - 0x16]; jmp 0xd87f; mov ax, 1; and eax, 0xffff; ret; 
0x000000000040d893: je 0xd89a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x000000000040dae3: je 0xdaeb; mov eax, 1; ret; 
0x000000000040dcc7: je 0xdcd1; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x000000000040e62d: je 0xe653; or byte ptr [rcx + 1], bh; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e667: je 0xe66e; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040f1aa: je 0xf1b1; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f468: je 0xf46f; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f6e8: je 0xf6ef; call 0x14fb0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411364: jg 0x11310; ret; 
0x0000000000413562: jg 0x13574; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413592: jg 0x135ac; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x00000000004137b8: jg 0x1380a; add byte ptr [rbp - 0x55], dh; ret; 
0x0000000000413862: jg 0x13874; add byte ptr [rax + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413bc7: jg 0x13be1; call 0xb3b0; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004178e8: jg 0x178f3; not ecx; out dx, eax; xor eax, edi; ret; 
0x000000000041b42f: jg 0x1b418; pop r13; pop r12; pop rbx; ret; 
0x000000000041b4bf: jg 0x1b4a8; pop r13; pop r12; pop rbx; ret; 
0x000000000041ba8f: jg 0x1ba70; ret; 
0x000000000041bd25: jg 0x1bd2d; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041d094: jg 0x1d095; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004250ac: jg 0x25020; pop rbx; ret; 
0x00000000004267e8: jg 0x26748; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000427877: jg 0x27838; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427967: jg 0x278d0; lea rsp, [rsp + 0x30]; pop r13; pop r12; pop rbx; ret; 
0x0000000000429804: jg 0x297d0; pop r13; pop r12; pop rbx; ret; 
0x000000000040296d: jg 0x2997; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000040296d: jg 0x2997; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x000000000042bbf1: jg 0x2bbc0; pop r13; pop r12; pop rbx; ret; 
0x000000000042e336: jg 0x2e320; mov rsp, rbp; pop rbp; ret; 
0x000000000042e7b7: jg 0x2e7b1; test rdi, rdi; sete al; ret; 
0x0000000000431afd: jg 0x31b75; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000403219: jg 0x328f; or byte ptr [rbx + 0x3747fe7], al; mov al, 1; ret; 
0x0000000000434ac0: jg 0x34a38; ret; 
0x0000000000439b85: jg 0x39b84; dec dword ptr [rax - 0x77]; ret; 
0x000000000043a994: jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404223: jg 0x4228; xor eax, eax; ret; 
0x0000000000404295: jg 0x429a; xor eax, eax; ret; 
0x0000000000443f69: jg 0x43f6e; add eax, 7; ret; 
0x0000000000447c8b: jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x0000000000447d4d: jg 0x47d30; and ecx, 0xff; and r8d, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000449bdf: jg 0x49bc8; mov word ptr [rax + rcx*2], 0; ret; 
0x000000000044bf4d: jg 0x4bf68; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404cc0: jg 0x4c98; pop r13; pop r12; pop rbx; ret; 
0x0000000000404cf6: jg 0x4ce0; ret; 
0x0000000000404d26: jg 0x4d10; ret; 
0x0000000000404d56: jg 0x4d40; ret; 
0x0000000000404d86: jg 0x4d70; ret; 
0x0000000000404db9: jg 0x4da8; mov al, 1; ret; 
0x0000000000404dec: jg 0x4dd8; mov al, 1; ret; 
0x000000000044f887: jg 0x4f858; ret; 
0x0000000000453317: jg 0x53300; pop r13; pop r12; pop rbx; ret; 
0x0000000000405408: jg 0x53f0; ret; 
0x0000000000405440: jg 0x5428; ret; 
0x0000000000456e19: jg 0x56e1b; add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457829: jg 0x5789f; or byte ptr [rbx + 0x3747fe7], al; mov al, 1; ret; 
0x0000000000459268: jg 0x5926a; sete al; ret; 
0x000000000045c458: jg 0x5c420; pop r13; pop r12; pop rbx; ret; 
0x0000000000406785: jg 0x67cf; and edx, ecx; mov rax, rdx; ret; 
0x0000000000406841: jg 0x6843; add byte ptr [rax + 9], cl; mov word ptr [rax + 8], dx; ret; 
0x0000000000406aec: jg 0x6b36; and eax, edx; shr rax, 0x34; ret; 
0x0000000000406e25: jg 0x6e27; ret; 
0x0000000000406e42: jg 0x6e44; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x000000000040730c: jg 0x72f8; xor eax, eax; ret; 
0x0000000000407497: jg 0x7478; ret; 
0x00000000004074d7: jg 0x74b8; ret; 
0x000000000040750e: jg 0x74f8; ret; 
0x000000000040755a: jg 0x7538; ret; 
0x000000000040759a: jg 0x7578; ret; 
0x00000000004075cf: jg 0x75b8; ret; 
0x000000000040766a: jg 0x7648; ret; 
0x0000000000409481: jg 0x9438; movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x000000000040954a: jg 0x9530; mov rbx, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000040cf84: jg 0xcf70; xor eax, eax; ret; 
0x000000000040dabe: jg 0xdaa8; pop r13; pop r12; pop rbx; ret; 
0x000000000040f944: jg 0xf930; xor eax, eax; ret; 
0x000000000040106a: jge 0x1068; lea rax, [rip + 0x8198d]; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x0000000000401083: jge 0x1081; syscall; 
0x0000000000401083: jge 0x1081; syscall; jmp 0x107d; mov rsp, rbp; pop rbp; ret; 
0x000000000041204c: jge 0x12006; mov rsp, rbp; pop rbp; ret; 
0x0000000000412b00: jge 0x12aca; mov rsp, rbp; pop rbp; ret; 
0x00000000004013c8: jge 0x13cb; add al, ch; add ah, 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041b06f: jge 0x1b09b; add byte ptr [rax], al; mov edi, 0xe8; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041def8: jge 0x1def2; mov rsp, rbp; pop rbp; ret; 
0x000000000041e057: jge 0x1e051; mov rsp, rbp; pop rbp; ret; 
0x00000000004027aa: jge 0x27a4; mov ax, word ptr [rbp - 8]; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x000000000040290d: jge 0x28ff; wait; mov rax, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bdc: jge 0x29b66; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfe1: jge 0x2bf6b; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd7: jge 0x2ec91; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7b9: jge 0x2f7ab; mov rsp, rbp; pop rbp; ret; 
0x000000000042f933: jge 0x2f90d; mov rsp, rbp; pop rbp; ret; 
0x000000000042f9a3: jge 0x2f995; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa18: jge 0x2fa02; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb5d: jge 0x2fb37; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc20: jge 0x2fbf2; mov rsp, rbp; pop rbp; ret; 
0x00000000004300b0: jge 0x300aa; mov rsp, rbp; pop rbp; ret; 
0x000000000043056e: jge 0x30568; mov rsp, rbp; pop rbp; ret; 
0x000000000043068e: jge 0x30688; mov rsp, rbp; pop rbp; ret; 
0x00000000004306bf: jge 0x306c6; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430793: jge 0x30775; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b74: jge 0x30b56; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bf3: jge 0x30bd5; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a8: jge 0x3149a; mov rsp, rbp; pop rbp; ret; 
0x000000000043155e: jge 0x31550; mov rsp, rbp; pop rbp; ret; 
0x00000000004325df: jge 0x32607; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043339f: jge 0x333b8; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433b93: jge 0x33b9b; mov eax, 0xffffffff; ret; 
0x0000000000433f6b: jge 0x33f48; test rax, rax; jne 0x33f78; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433fdc: jge 0x33fa8; test rax, rax; jne 0x33fe9; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000434a1f: jge 0x34a24; xor al, al; ret; 
0x0000000000434ddc: jge 0x34ddb; jmp qword ptr [rdi + 0x44]; 
0x0000000000435325: jge 0x35324; jmp qword ptr [rsi - 0x75]; 
0x000000000043534d: jge 0x3534c; jmp qword ptr [rsi - 0x75]; 
0x0000000000435396: jge 0x35395; jmp qword ptr [rsi - 0x75]; 
0x0000000000436b07: jge 0x36a99; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c4d: jge 0x36c3f; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d3d: jge 0x36d1f; fld xword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403806: jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x00000000004038a5: jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x000000000043a320: jge 0x3a32c; movsxd rdx, edx; cmp byte ptr [rax + rdx + 0x56], 0; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x000000000043a5b3: jge 0x3a5c3; mov rax, qword ptr [rsp]; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x000000000043a6ee: jge 0x3a6d0; mov rsp, rbp; pop rbp; ret; 
0x0000000000403a79: jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x000000000043b393: jge 0x3b37d; mov rsp, rbp; pop rbp; ret; 
0x000000000043d240: jge 0x3d21a; mov rsp, rbp; pop rbp; ret; 
0x000000000043d350: jge 0x3d332; mov rsp, rbp; pop rbp; ret; 
0x000000000043d566: jge 0x3d538; mov rsp, rbp; pop rbp; ret; 
0x000000000043e593: jge 0x3e56d; mov rsp, rbp; pop rbp; ret; 
0x000000000043f391: jge 0x3f373; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5ee: jge 0x3f590; mov rsp, rbp; pop rbp; ret; 
0x000000000043f7a1: jge 0x3f763; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa6a: jge 0x3fa54; mov rsp, rbp; pop rbp; ret; 
0x0000000000440773: jge 0x4074d; mov rsp, rbp; pop rbp; ret; 
0x0000000000440886: jge 0x40868; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a9c: jge 0x40a6e; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e26: jge 0x41e00; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e14: jge 0x42df6; mov rsp, rbp; pop rbp; ret; 
0x0000000000443070: jge 0x43012; mov rsp, rbp; pop rbp; ret; 
0x0000000000443225: jge 0x431e7; mov rsp, rbp; pop rbp; ret; 
0x00000000004434eb: jge 0x434d5; mov rsp, rbp; pop rbp; ret; 
0x0000000000443d57: jge 0x43d59; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000446cbc: jge 0x46c5e; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a90: jge 0x49a12; mov rsp, rbp; pop rbp; ret; 
0x000000000044b830: jge 0x4b7b2; mov rsp, rbp; pop rbp; ret; 
0x000000000044d00f: jge 0x4cf99; mov rsp, rbp; pop rbp; ret; 
0x000000000044d277: jge 0x4d275; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044d276: jge 0x4d275; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044d3cb: jge 0x4d3b5; mov rsp, rbp; pop rbp; ret; 
0x000000000044d519: jge 0x4d503; mov rsp, rbp; pop rbp; ret; 
0x000000000044d701: jge 0x4d6eb; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c9: jge 0x4d89b; mov rsp, rbp; pop rbp; ret; 
0x000000000044db17: jge 0x4dae9; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc0f: jge 0x4dbf9; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb7: jge 0x4dda1; mov rsp, rbp; pop rbp; ret; 
0x000000000044def1: jge 0x4dec3; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fa6: jge 0x4f98; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fc6: jge 0x4fb8; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fe6: jge 0x4fd8; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405006: jge 0x4ff8; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405026: jge 0x5018; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405046: jge 0x5038; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405066: jge 0x5058; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045168d: jge 0x5166f; add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004517e0: jge 0x517ba; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004519ad: jge 0x5198f; add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b03: jge 0x51add; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451ce1: jge 0x51cbb; add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e3e: jge 0x51e10; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452021: jge 0x51ffb; add dword ptr [rbp + 0x12], esi; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452181: jge 0x52153; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004550f2: jge 0x550fb; mov eax, 0xffffffff; jmp 0x550ff; mov eax, dword ptr [rsp + 0x58]; lea rsp, [rsp + 0x98]; ret; 
0x0000000000455891: jge 0x5585b; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fc1: jge 0x55f8b; mov rsp, rbp; pop rbp; ret; 
0x000000000045c8cc: jge 0x5c8ce; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cbdf: jge 0x5cc33; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000408d34: jge 0x8cce; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7cc: jge 0xb7b6; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6ed: jge 0xc6e7; mov rsp, rbp; pop rbp; ret; 
0x000000000040e454: jge 0xe436; mov rsp, rbp; pop rbp; ret; 
0x000000000040e98c: jge 0xe91e; mov rsp, rbp; pop rbp; ret; 
0x00000000004130a4: jl 0x130ca; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413169: jl 0x1318f; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004131a4: jl 0x131ca; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413302: jl 0x13328; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c2: jl 0x134e8; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041368f: jl 0x136b5; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000414928: jl 0x1494e; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000417630: jl 0x17656; adc byte ptr [rax - 0x73], cl; add eax, 0x51446; call qword ptr [rax]; 
0x0000000000417924: jl 0x178f8; mov dword ptr [rip + 0x521f0], 0x270; ret; 
0x000000000041d271: jl 0x1d28b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d3cb: jl 0x1d3e5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d541: jl 0x1d55b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d6bb: jl 0x1d6d8; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041ef4f: jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x000000000041f12d: jl 0x1f135; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f653: jl 0x1f66b; cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6cc: jl 0x1f6dd; cmp qword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6b9: jl 0x1f6dd; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f753: jl 0x1f76b; cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c4: jl 0x1f7d5; cmp qword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7b1: jl 0x1f7d5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041fd6d: jl 0x1fd93; or byte ptr [rax - 0x73], cl; add eax, 0x63fe9; call qword ptr [rax + 0x30]; 
0x0000000000424da5: jl 0x24dac; call 0x24d10; lea rsp, [rsp + 8]; ret; 
0x00000000004287a6: jl 0x287cc; or al, ch; ret 0xfe67; 
0x000000000042d200: jl 0x2d212; jmp qword ptr [rdx]; 
0x00000000004353be: jl 0x353bd; jmp qword ptr [rsi - 0x75]; 
0x00000000004376cd: jl 0x376d1; jmp ptr [rip + 0x63480875]; ret; 
0x000000000043a326: jl 0x3a338; push rsi; add byte ptr [rbp - 0x24], dh; lea rsp, [rsp + 8]; ret; 
0x000000000043b534: jl 0x3b55a; or byte ptr [rax - 0x73], cl; add eax, 0x48822; call qword ptr [rax + 0x38]; 
0x000000000043bfec: jl 0x3bff6; jmp qword ptr [rax]; 
0x000000000043c162: jl 0x3c168; mov al, 1; jmp 0x3c16a; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x000000000043c1ee: jl 0x3c200; jmp qword ptr [rax]; 
0x000000000043c25f: jl 0x3c269; jmp qword ptr [rax]; 
0x000000000043c336: jl 0x3c340; jmp qword ptr [rax]; 
0x000000000043c4a6: jl 0x3c4b8; jmp qword ptr [rax]; 
0x000000000043c715: jl 0x3c73b; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c88e: jl 0x3c8b4; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca6f: jl 0x3ca95; sub byte ptr [rax - 0x75], cl; and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbdd: jl 0x3cc03; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd22: jl 0x3cd48; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce74: jl 0x3ce9a; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cfdb: jl 0x3cfc8; mov dword ptr [rbx + 0x10], r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043fc45: jl 0x3fc6b; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdbe: jl 0x3fde4; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ff9f: jl 0x3ffc5; sub byte ptr [rax - 0x75], cl; and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044010d: jl 0x40133; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440252: jl 0x40278; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a4: jl 0x403ca; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044050b: jl 0x404f8; mov dword ptr [rbx + 0x10], r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044387e: jl 0x438a4; or bh, bl; insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443fbe: jl 0x43fe4; or al, ch; idiv dil; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x00000000004043fb: jl 0x43ff; xor eax, eax; ret; 
0x00000000004475bd: jl 0x475c2; jmp qword ptr [rax]; 
0x0000000000449d2a: jl 0x49d50; or byte ptr [rax - 0x73], cl; add eax, 0x3a02c; call qword ptr [rax + 0x10]; 
0x0000000000449f41: jl 0x49f67; jo 0x49f2d; xchg dword ptr [rax + 0x6348fffb], eax; ret; 
0x000000000044a0af: jl 0x4a0ba; cmp word ptr [rsi + rdx*2 - 2], 0x20; jbe 0x4a0a8; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x0000000000404a90: jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404acd: jl 0x4ab0; ret; 
0x000000000044e723: jl 0x4e749; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e87b: jl 0x4e8a1; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea15: jl 0x4ea3b; and byte ptr [rax - 0x75], cl; and al, 0x20; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee39: jl 0x4ee5f; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efc9: jl 0x4efef; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e0: jl 0x4f306; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f97d: jl 0x4f9a3; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe3: jl 0x4fc09; or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c4a: jl 0x50c70; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000045161d: jl 0x51643; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451930: jl 0x51956; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c63: jl 0x51c89; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa6: jl 0x51fcc; sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452590: jl 0x525b6; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004528c9: jl 0x52898; xor eax, eax; ret; 
0x00000000004557b4: jl 0x55778; pop rbx; ret; 
0x0000000000456c58: jl 0x56c48; xor eax, eax; ret; 
0x0000000000456c78: jl 0x56c68; xor eax, eax; ret; 
0x0000000000456cf2: jl 0x56cfc; cmp edi, 0x400; jl 0x56d02; mov eax, 0xffffffff; ret; 
0x0000000000456cfa: jl 0x56d02; mov eax, 0xffffffff; ret; 
0x0000000000456d32: jl 0x56d3c; cmp edi, 0x400; jl 0x56d42; mov eax, 0xffffffff; ret; 
0x0000000000456d3a: jl 0x56d42; mov eax, 0xffffffff; ret; 
0x0000000000456d88: jl 0x56d78; xor eax, eax; ret; 
0x0000000000456da8: jl 0x56d98; xor eax, eax; ret; 
0x0000000000456db4: jl 0x56dbe; cmp ecx, 0x400; jl 0x56dc4; mov eax, 0xffffffff; ret; 
0x0000000000456dbc: jl 0x56dc4; mov eax, 0xffffffff; ret; 
0x0000000000457369: jl 0x5736b; add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004067ae: jl 0x67d4; adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a63: jl 0x6a89; adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d53: jl 0x6d79; adc bl, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x0000000000407912: jl 0x791b; mov dword ptr [rax], 0; ret; 
0x000000000040921d: jl 0x925d; jmp qword ptr [rsi - 0x7f]; 
0x000000000040b707: jl 0xb6f0; ret; 
0x000000000040b913: jl 0xb939; adc bh, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b94c: jl 0xb972; adc bh, bl; insb byte ptr [rdi], dx; and al, 0x10; lea rsp, [rsp + 0x28]; ret; 
0x000000000040bad2: jl 0xbadd; lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf2: jl 0xdcfd; lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040e5b5: jl 0xe5db; or al, ch; ret; 
0x000000000041bee8: jle 0x1bef0; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041d114: jle 0x1d115; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041d195: jle 0x1d196; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040236f: jle 0x237c; mov byte ptr [rcx], r8b; inc rcx; dec rdx; jne 0x2371; ret; 
0x00000000004250a1: jle 0x250aa; mov byte ptr [rip + 0x5ffd6], 0xff; cmp edx, ecx; jg 0x25020; pop rbx; ret; 
0x000000000042ed77: jle 0x2ed79; add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed97: jle 0x2ed99; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042edd7: jle 0x2edd9; add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042f663: jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x000000000042fde6: jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x0000000000431a4e: jle 0x31aa1; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433b9e: jle 0x33ba6; mov eax, 1; ret; 
0x0000000000433d05: jle 0x33d17; and eax, 0xff; and r11d, 0xff; sub eax, r11d; ret; 
0x0000000000433d29: jle 0x33d32; mov ecx, 1; jmp 0x33d34; xor ecx, ecx; mov eax, ecx; ret; 
0x0000000000434301: jle 0x3430a; mov eax, 1; jmp 0x3430c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434341: jle 0x3434a; mov eax, 1; jmp 0x3434c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434381: jle 0x3438a; mov eax, 1; jmp 0x3438c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343c1: jle 0x343ca; mov eax, 1; jmp 0x343cc; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434401: jle 0x3440a; mov eax, 1; jmp 0x3440c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434441: jle 0x3444a; mov eax, 1; jmp 0x3444c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434cbc: jle 0x34cbb; jmp qword ptr [rdi + 0x44]; 
0x0000000000439be8: jle 0x39be7; dec dword ptr [rax - 0x77]; ret; 
0x0000000000403a86: jle 0x3a8e; mov eax, 1; ret; 
0x0000000000403d8e: jle 0x3d94; mov byte ptr [r12], bl; pop r13; pop r12; pop rbx; ret; 
0x000000000044f0d4: jle 0x4f0de; movsxd rdx, ebx; call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x000000000045ba0e: jle 0x5ba85; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8ec: jle 0x5c8ee; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000406faa: jle 0x6fb1; mov edx, 0xff; mov byte ptr [rax], dl; ret; 
0x000000000040732c: jle 0x7336; mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x000000000040ab3a: jle 0xab45; movzx edx, cl; cmp byte ptr [rdi + rdx], 0x30; je 0xab30; mov rax, rcx; ret; 
0x000000000040b415: jle 0xb427; and eax, 0xff; and r11d, 0xff; sub rax, r11; ret; 
0x000000000040d731: jle 0xd748; mov rsi, rbx; mov rcx, r12; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000040105a: jmp 0x1000; ret; 
0x00000000004104ec: jmp 0x104f0; xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x000000000041079c: jmp 0x107a0; xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000401087: jmp 0x107d; mov rsp, rbp; pop rbp; ret; 
0x0000000000411356: jmp 0x1135d; mov word ptr [rsi], 0x3f; add rsi, 2; cmp rax, rdx; jg 0x11310; ret; 
0x0000000000411559: jmp 0x1155f; mov ax, 2; and eax, 0xffff; ret; 
0x0000000000411589: jmp 0x11595; lea rdx, [rip + 0x7159e]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000412f07: jmp 0x12f08; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000412f83: jmp 0x12f87; xor al, al; lea rsp, [rsp + 8]; ret; 
0x00000000004130fc: jmp 0x13100; xor al, al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004131d9: jmp 0x131dd; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041328e: jmp 0x13292; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041337a: jmp 0x1337e; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000413448: jmp 0x1344c; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041354c: jmp 0x13550; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000413f97: jmp 0x13f9b; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000414527: jmp 0x14533; mov rdi, rbx; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x00000000004146dd: jmp 0x146e4; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a0d: jmp 0x14a14; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a3c: jmp 0x14a45; lea rax, [rip + 0x6f513]; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414a80: jmp 0x14a8c; mov edi, 0xe7; call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x0000000000414cd2: jmp 0x14ce3; lea rax, [rip + 0x53bb5]; movzx edi, word ptr [rax]; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000414e54: jmp 0x14e60; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax + 8]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000415075: jmp 0x1507b; mov rax, qword ptr [r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004150d3: jmp 0x150dc; lea rax, [rip + 0x6ee6c]; mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000415455: jmp 0x1545d; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000415468: jmp 0x15470; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415488: jmp 0x15490; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004154a8: jmp 0x154b0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004154e8: jmp 0x154f0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004154e7: jmp 0x154f0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415508: jmp 0x15510; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004163ce: jmp 0x163d2; xor al, al; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000401de7: jmp 0x16e0; call 0x18340; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000041727c: jmp 0x17286; mov rdi, rbx; call 0x151d0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417627: jmp 0x17645; mov rsi, qword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x0000000000417e1f: jmp 0x17e2c; lea rax, [rip + 0x6ad48]; add rax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041813f: jmp 0x1814c; lea rdi, [rip + 0x6b838]; add rdi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x000000000041838b: jmp 0x18396; lea rdx, [rip + 0x6a76c]; mov dword ptr [rdx], eax; call 0x18340; lea rsp, [rsp + 8]; ret; 
0x0000000000402981: jmp 0x184a0; ret; 
0x0000000000418ff9: jmp 0x19002; xor edi, edi; call 0x2a20; mov rax, rbx; pop rbx; ret; 
0x00000000004195c9: jmp 0x195b0; ret; 
0x000000000041a9b6: jmp 0x1a9c3; lea rax, [rip + 0x681b1]; add rax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x000000000041b1d6: jmp 0x1b1e2; lea rax, [rip + 0x4d6e1]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b206: jmp 0x1b212; lea rax, [rip + 0x4d6b1]; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b276: jmp 0x1b282; lea rax, [rip + 0x4d641]; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b2a6: jmp 0x1b2b2; lea rax, [rip + 0x4d611]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b2d6: jmp 0x1b2e2; lea rax, [rip + 0x4d5e1]; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b306: jmp 0x1b312; lea rax, [rip + 0x4d5b1]; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b336: jmp 0x1b342; lea rax, [rip + 0x4d581]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b366: jmp 0x1b372; lea rax, [rip + 0x4d551]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b695: jmp 0x1b699; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041bccf: jmp 0x1bcdc; lea rax, [rip + 0x68028]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bd1f: jmp 0x1bd2c; lea rax, [rip + 0x67fd8]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bee2: jmp 0x1beef; lea rax, [rip + 0x67e15]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041c9f4: jmp 0x1ca01; lea rax, [rip + 0x67303]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041cc86: jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc86: jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x000000000041ccf7: jmp 0x1cd05; lea rdi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x000000000041d2e2: jmp 0x1d2ef; lea rdi, [rip + 0x65f95]; add rdi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041d428: jmp 0x1d3c0; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d462: jmp 0x1d46f; lea rdi, [rip + 0x65e15]; add rdi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d5d2: jmp 0x1d5df; lea rdi, [rip + 0x65ca5]; add rdi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d724: jmp 0x1d6b0; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d762: jmp 0x1d76f; lea rdi, [rip + 0x65b15]; add rdi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000041d82f: jmp 0x1d83c; lea rax, [rip + 0x65a48]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d86f: jmp 0x1d87c; lea rax, [rip + 0x65688]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d982: jmp 0x1d98f; lea rax, [rip + 0x66375]; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x000000000041dba9: jmp 0x1dbb6; lea rax, [rip + 0x6614e]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041f718: jmp 0x1f690; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f716: jmp 0x1f71d; jmp 0x1f690; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f80b: jmp 0x1f788; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f809: jmp 0x1f810; jmp 0x1f788; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421a09: jmp 0x21a16; lea rax, [rip + 0x622ee]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x00000000004022cd: jmp 0x21a8; ret; 
0x0000000000421a97: jmp 0x21aa4; lea rax, [rip + 0x62260]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421b17: jmp 0x21b25; lea rdi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000422475: jmp 0x22476; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042269e: jmp 0x226a4; mov byte ptr [rbx + 0x10], 1; pop rbx; ret; 
0x00000000004227a2: jmp 0x227af; lea rax, [rip + 0x61555]; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004023f4: jmp 0x234b; ret; 
0x0000000000423c52: jmp 0x23c57; mov byte ptr [rbx], 0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000423f85: jmp 0x23f8a; xor ax, ax; and eax, 0xffff; ret; 
0x00000000004243f7: jmp 0x243f6; dec dword ptr [rax + 0x63]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000424454: jmp 0x24459; mov rax, rbx; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000425b48: jmp 0x25b4c; xor al, al; and eax, 0xff; ret; 
0x0000000000425baf: jmp 0x25bb3; xor al, al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000425c2e: jmp 0x25c32; xor al, al; lea rsp, [rsp + 8]; ret; 
0x00000000004025d2: jmp 0x25d6; dec dword ptr [rcx]; sete al; ret; 
0x00000000004025f3: jmp 0x25f8; dec qword ptr [rcx]; sete al; ret; 
0x0000000000402612: jmp 0x2616; inc dword ptr [rcx]; ret; 
0x0000000000402633: jmp 0x2638; inc qword ptr [rcx]; ret; 
0x00000000004275d9: jmp 0x275e0; sbb rax, rax; or al, 1; ret; 
0x0000000000429aa7: jmp 0x29aab; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429f2c: jmp 0x29f30; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000402a0c: jmp 0x2a15; lea rax, [rip + 0x81523]; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000402a3a: jmp 0x2a43; lea rax, [rip + 0x814f5]; mov dword ptr [rax], ebx; pop rbx; ret; 
0x000000000042c328: jmp 0x2c32c; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed31: jmp 0x2ecd2; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430acc: jmp 0x30acd; dec dword ptr [rax - 0x77]; ret; 
0x0000000000431fc1: jmp 0x32033; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000433d30: jmp 0x33d34; xor ecx, ecx; mov eax, ecx; ret; 
0x0000000000434308: jmp 0x3430c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434348: jmp 0x3434c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434388: jmp 0x3438c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343c8: jmp 0x343cc; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434408: jmp 0x3440c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434448: jmp 0x3444c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004363cc: jmp 0x363d0; mov bl, 1; mov al, bl; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000436552: jmp 0x3655f; mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000040368e: jmp 0x3696; mov dword ptr [rdi], edx; add rdi, 4; cmp rax, rdi; ja 0x3690; ret; 
0x0000000000415320: jmp 0x388c532b; call rdx; 
0x000000000043a371: jmp 0x3a375; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000043a815: jmp 0x3a819; mov al, 0x30; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041534e: jmp 0x3a8c5359; call rax; 
0x000000000042fcfe: jmp 0x3a9eb; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042fd3d: jmp 0x3bb2a; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043c0e7: jmp 0x3bfc9; mov eax, ebx; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043c166: jmp 0x3c16a; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x000000000043cfdc: jmp 0x3d022; mov dword ptr [rbx + 0x10], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043e3b8: jmp 0x3e3b9; dec dword ptr [rax - 0x77]; fistp qword ptr [rsi + 0x40]; call 0x3f800; pop rbx; ret; 
0x000000000044050c: jmp 0x40552; mov dword ptr [rbx + 0x10], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040414f: jmp 0x4153; xor eax, eax; pop rbx; ret; 
0x000000000042d2f3: jmp 0x4202d2f5; pop rbp; pop r12; pop rbx; ret; 
0x00000000004435fd: jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000444271: jmp 0x44290; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040452b: jmp 0x452f; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000040454c: jmp 0x4554; nop; add rax, 1; cmp word ptr [rdi + rax*2], 0; jne 0x4550; ret; 
0x0000000000446e8a: jmp 0x46e8c; add byte ptr [rdi], cl; mov bh, 4; and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x0000000000423b63: jmp 0x48023fc9; mov dword ptr [rip + 0x461e2], edi; ret; 
0x0000000000456729: jmp 0x48cf6876; sar edx, 5; shr rcx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x0000000000443343: jmp 0x49043030; mov ebx, dword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000447103: jmp 0x49047106; lea esp, [rsp + 8]; ret; 
0x0000000000449504: jmp 0x49511; mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2a4: jmp 0x4b2b1; mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b6ed: jmp 0x4b6ee; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000044bb6f: jmp 0x4bb74; mov ax, bx; and eax, 0xffff; pop rbx; ret; 
0x000000000044cb16: jmp 0x4cae7; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000407906: jmp 0x4cc88258; mov dword ptr [rsi], eax; cmp dx, 0x20; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x000000000045052d: jmp 0x50539; mov rdi, rbx; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x0000000000450bb1: jmp 0x50bb5; xor al, al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450bea: jmp 0x50bee; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450c75: jmp 0x50c79; xor al, al; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000450ca5: jmp 0x50ca9; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e29: jmp 0x50e2d; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e68: jmp 0x50e6c; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450e96: jmp 0x50e9a; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000451340: jmp 0x51344; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000452eed: jmp 0x52ef7; call 0x14a20; mov rbx, qword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000452f0d: jmp 0x52f18; call 0x14a20; mov rbx, qword ptr [rax + 8]; mov rax, rbx; pop rbx; ret; 
0x0000000000452f2d: jmp 0x52f37; call 0x14a20; mov ebx, dword ptr [rax + 0x1c]; mov eax, ebx; pop rbx; ret; 
0x0000000000452f4d: jmp 0x52f58; call 0x14a20; mov rbx, qword ptr [rax + 0x20]; mov rax, rbx; pop rbx; ret; 
0x0000000000453670: jmp 0x5367f; mov rdi, qword ptr [rsp]; mov esi, dword ptr [rsp + 8]; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x0000000000453ccb: jmp 0x53ccf; xor al, al; lea rsp, [rsp + 0x98]; ret; 
0x0000000000453f87: jmp 0x53f83; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453f86: jmp 0x53f83; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040549a: jmp 0x54ab; lea rax, [rip + 0x58f45]; subsd xmm1, qword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x00000000004550f9: jmp 0x550ff; mov eax, dword ptr [rsp + 0x58]; lea rsp, [rsp + 0x98]; ret; 
0x0000000000456cd7: jmp 0x56cdb; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000457771: jmp 0x57719; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458360: jmp 0x58367; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000458a71: jmp 0x58a06; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba3b: jmp 0x5ba3f; xor eax, eax; lea rsp, [rsp + 0x48]; ret; 
0x0000000000420703: jmp 0x5c0205bb; ret; 
0x0000000000447ace: jmp 0x5d463b04; pop r12; pop rbx; ret; 
0x0000000000407373: jmp 0x7378; mov al, dil; and eax, 0xff; ret; 
0x00000000004073f3: jmp 0x73f8; mov al, dil; and eax, 0xff; ret; 
0x0000000000407839: jmp 0x783f; mov ecx, dword ptr [rsi]; mov dword ptr [rax], ecx; mov qword ptr [rsi], 0; ret; 
0x0000000000407946: jmp 0x794f; mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x000000000040ab44: jmp 0xab8e; mov eax, ecx; ret; 
0x000000000040d859: jmp 0xd865; lea rdx, [rip + 0x752be]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d879: jmp 0xd87f; mov ax, 1; and eax, 0xffff; ret; 
0x000000000040d9bc: jmp 0xd9c9; and esi, 0xffff; call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x000000000040daff: jmp 0xdb0b; lea rdx, [rip + 0x75038]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040dc7f: jmp 0xdc86; call 0xdc00; mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004372e9: jmp 0xfeb72f1; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000437329: jmp 0xfeb7331; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000437369: jmp 0xfeb7371; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041535b: jmp 0xffffffff83495366; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x0000000000433c7c: jmp 0xffffffff854c3c7d; ror byte ptr [rdi], 0x94; ret; 
0x000000000040fb5e: jmp 0xffffffff8949cd94; ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x0000000000430f73: jmp 0xffffffff894c0f77; ret; 
0x000000000042c5c3: jmp 0xffffffff8a02c451; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042b859: jmp 0xffffffff8b4bb85d; mov ah, 0x24; movabs al, byte ptr [0x9824bc8d48000008]; or byte ptr [rax], al; add al, ch; syscall; 
0x00000000004155ed: jmp 0xffffffff8d4955f8; and al, 8; ret; 
0x0000000000415608: jmp 0xffffffff8d495613; and al, 8; ret; 
0x0000000000415628: jmp 0xffffffff8d495633; and al, 8; ret; 
0x0000000000415648: jmp 0xffffffff8d495653; and al, 8; ret; 
0x0000000000415675: jmp 0xffffffff8d495680; and al, 8; ret; 
0x0000000000415694: jmp 0xffffffff8d49569f; and al, 8; ret; 
0x0000000000415693: jmp 0xffffffff8d49569f; and al, 8; ret; 
0x0000000000426cfa: jmp 0xffffffff8d4b6cfe; and al, 8; ret; 
0x000000000045669e: jmp 0xffffffff8d4e669e; and al, 0x70; pop rbx; ret; 
0x000000000042bdad: jmp 0xffffffffc96605b3; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000453ad5: jmp 0xffffffffca068319; lea rbx, [rsi + rdx]; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456733: jmp 0xffffffffca06af77; mov rax, rdx; ret; 
0x0000000000431ea3: jmp 0xffffffffdb031ef5; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004586f3: jmp 0xffffffffe905833c; push rsp; idiv bl; jmp qword ptr [rsi + 0x41]; 
0x0000000000407ef8: jmp ptr [rcx]; ret 0x8966; 
0x0000000000408e86: jmp ptr [rcx]; ret 0x8966; 
0x000000000042bd50: jmp ptr [rdi]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004376cf: jmp ptr [rip + 0x63480875]; ret; 
0x0000000000401c4d: jmp qword ptr [rax + 1]; 
0x000000000044f63d: jmp qword ptr [rax + 2]; 
0x000000000044f63d: jmp qword ptr [rax + 2]; add byte ptr [rax - 0x73], cl; add eax, 0x260f8; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000041ecdd: jmp qword ptr [rax + 6]; 
0x000000000043bfee: jmp qword ptr [rax]; 
0x000000000043c1f0: jmp qword ptr [rax]; 
0x000000000043c261: jmp qword ptr [rax]; 
0x000000000043c338: jmp qword ptr [rax]; 
0x000000000043c4a8: jmp qword ptr [rax]; 
0x00000000004475bf: jmp qword ptr [rax]; 
0x000000000042c71d: jmp qword ptr [rcx - 3]; 
0x0000000000404af0: jmp qword ptr [rcx]; 
0x0000000000406e3a: jmp qword ptr [rcx]; 
0x0000000000407a10: jmp qword ptr [rcx]; 
0x0000000000417b1e: jmp qword ptr [rcx]; 
0x0000000000421afd: jmp qword ptr [rcx]; 
0x0000000000427d0a: jmp qword ptr [rcx]; 
0x0000000000436b9c: jmp qword ptr [rcx]; 
0x0000000000436c30: jmp qword ptr [rcx]; 
0x000000000043b174: jmp qword ptr [rcx]; 
0x0000000000456f1f: jmp qword ptr [rcx]; 
0x0000000000404af0: jmp qword ptr [rcx]; ror byte ptr [rcx + rax - 0x20], 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000402973: jmp qword ptr [rdi + 0x38]; 
0x0000000000402973: jmp qword ptr [rdi + 0x38]; ret; 
0x0000000000405540: jmp qword ptr [rdi + 0x41]; 
0x000000000042060a: jmp qword ptr [rdi + 0x41]; 
0x0000000000403e8b: jmp qword ptr [rdi + 0x43]; 
0x000000000043d202: jmp qword ptr [rdi + 0x43]; 
0x0000000000440732: jmp qword ptr [rdi + 0x43]; 
0x000000000040c0af: jmp qword ptr [rdi + 0x44]; 
0x000000000040c19e: jmp qword ptr [rdi + 0x44]; 
0x000000000040c270: jmp qword ptr [rdi + 0x44]; 
0x0000000000434cbe: jmp qword ptr [rdi + 0x44]; 
0x0000000000434dde: jmp qword ptr [rdi + 0x44]; 
0x000000000043f2c5: jmp qword ptr [rdi + 0x47]; 
0x0000000000442d45: jmp qword ptr [rdi + 0x47]; 
0x000000000040c01c: jmp qword ptr [rdi - 0x73]; 
0x000000000042d202: jmp qword ptr [rdx]; 
0x00000000004253fa: jmp qword ptr [rip + 0xff]; or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000040bfcb: jmp qword ptr [rsi + 0x2d]; 
0x000000000040865b: jmp qword ptr [rsi + 0x3b]; 
0x0000000000454705: jmp qword ptr [rsi + 0x3d]; 
0x00000000004089f4: jmp qword ptr [rsi + 0x41]; 
0x0000000000408a1d: jmp qword ptr [rsi + 0x41]; 
0x0000000000408b6a: jmp qword ptr [rsi + 0x41]; 
0x0000000000408b96: jmp qword ptr [rsi + 0x41]; 
0x0000000000408c73: jmp qword ptr [rsi + 0x41]; 
0x0000000000408ce1: jmp qword ptr [rsi + 0x41]; 
0x0000000000408f1b: jmp qword ptr [rsi + 0x41]; 
0x0000000000408f4a: jmp qword ptr [rsi + 0x41]; 
0x000000000040bef0: jmp qword ptr [rsi + 0x41]; 
0x000000000040bf51: jmp qword ptr [rsi + 0x41]; 
0x000000000041f1eb: jmp qword ptr [rsi + 0x41]; 
0x000000000041fafe: jmp qword ptr [rsi + 0x41]; 
0x0000000000429c65: jmp qword ptr [rsi + 0x41]; 
0x0000000000429cf5: jmp qword ptr [rsi + 0x41]; 
0x0000000000429d85: jmp qword ptr [rsi + 0x41]; 
0x000000000042c065: jmp qword ptr [rsi + 0x41]; 
0x000000000042c0f5: jmp qword ptr [rsi + 0x41]; 
0x000000000042c185: jmp qword ptr [rsi + 0x41]; 
0x000000000044bb9a: jmp qword ptr [rsi + 0x41]; 
0x000000000044bba8: jmp qword ptr [rsi + 0x41]; 
0x000000000044bbc9: jmp qword ptr [rsi + 0x41]; 
0x000000000044bbd7: jmp qword ptr [rsi + 0x41]; 
0x000000000044e048: jmp qword ptr [rsi + 0x41]; 
0x00000000004586fb: jmp qword ptr [rsi + 0x41]; 
0x0000000000458e82: jmp qword ptr [rsi + 0x41]; 
0x0000000000458ec3: jmp qword ptr [rsi + 0x41]; 
0x0000000000429c65: jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000429cf5: jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000429d85: jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c065: jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c0f5: jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000042c185: jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000040f25e: jmp qword ptr [rsi + 0x42]; 
0x000000000044b97f: jmp qword ptr [rsi + 0x42]; 
0x0000000000407ec2: jmp qword ptr [rsi + 0x44]; 
0x0000000000409025: jmp qword ptr [rsi + 0x44]; 
0x0000000000409077: jmp qword ptr [rsi + 0x44]; 
0x00000000004097d7: jmp qword ptr [rsi + 0x45]; 
0x0000000000424124: jmp qword ptr [rsi + 0x45]; 
0x000000000044bc66: jmp qword ptr [rsi + 0x45]; 
0x0000000000404a69: jmp qword ptr [rsi + 0xf]; 
0x0000000000404c91: jmp qword ptr [rsi + 0xf]; 
0x0000000000404da1: jmp qword ptr [rsi + 0xf]; 
0x0000000000404dd1: jmp qword ptr [rsi + 0xf]; 
0x000000000040951e: jmp qword ptr [rsi + 0xf]; 
0x0000000000413821: jmp qword ptr [rsi + 0xf]; 
0x00000000004221a7: jmp qword ptr [rsi + 0xf]; 
0x000000000042b991: jmp qword ptr [rsi + 0xf]; 
0x0000000000437729: jmp qword ptr [rsi + 0xf]; 
0x000000000043ef91: jmp qword ptr [rsi + 0xf]; 
0x00000000004429b1: jmp qword ptr [rsi + 0xf]; 
0x000000000044cd59: jmp qword ptr [rsi + 0xf]; 
0x000000000044cda1: jmp qword ptr [rsi + 0xf]; 
0x000000000044ce29: jmp qword ptr [rsi + 0xf]; 
0x0000000000455a29: jmp qword ptr [rsi + 0xf]; 
0x00000000004598e1: jmp qword ptr [rsi + 0xf]; 
0x0000000000408078: jmp qword ptr [rsi - 0x39]; 
0x0000000000408e47: jmp qword ptr [rsi - 0x39]; 
0x0000000000427da3: jmp qword ptr [rsi - 0x39]; 
0x0000000000403f2d: jmp qword ptr [rsi - 0x70]; 
0x0000000000403fbd: jmp qword ptr [rsi - 0x70]; 
0x0000000000405625: jmp qword ptr [rsi - 0x70]; 
0x0000000000408cf5: jmp qword ptr [rsi - 0x70]; 
0x000000000040c275: jmp qword ptr [rsi - 0x70]; 
0x0000000000412725: jmp qword ptr [rsi - 0x70]; 
0x0000000000418a6d: jmp qword ptr [rsi - 0x70]; 
0x000000000042f8dd: jmp qword ptr [rsi - 0x70]; 
0x000000000043b2ed: jmp qword ptr [rsi - 0x70]; 
0x000000000044d035: jmp qword ptr [rsi - 0x70]; 
0x000000000045bbbd: jmp qword ptr [rsi - 0x70]; 
0x0000000000405777: jmp qword ptr [rsi - 0x75]; 
0x0000000000405e29: jmp qword ptr [rsi - 0x75]; 
0x0000000000407f33: jmp qword ptr [rsi - 0x75]; 
0x000000000040902d: jmp qword ptr [rsi - 0x75]; 
0x000000000040bfc4: jmp qword ptr [rsi - 0x75]; 
0x000000000042138c: jmp qword ptr [rsi - 0x75]; 
0x00000000004213ec: jmp qword ptr [rsi - 0x75]; 
0x00000000004215dc: jmp qword ptr [rsi - 0x75]; 
0x000000000042163c: jmp qword ptr [rsi - 0x75]; 
0x0000000000435327: jmp qword ptr [rsi - 0x75]; 
0x000000000043534f: jmp qword ptr [rsi - 0x75]; 
0x0000000000435398: jmp qword ptr [rsi - 0x75]; 
0x00000000004353c0: jmp qword ptr [rsi - 0x75]; 
0x00000000004375b6: jmp qword ptr [rsi - 0x75]; 
0x0000000000437bba: jmp qword ptr [rsi - 0x75]; 
0x0000000000437f30: jmp qword ptr [rsi - 0x75]; 
0x0000000000438113: jmp qword ptr [rsi - 0x75]; 
0x000000000043838f: jmp qword ptr [rsi - 0x75]; 
0x000000000042138c: jmp qword ptr [rsi - 0x75]; add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213ec: jmp qword ptr [rsi - 0x75]; add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215dc: jmp qword ptr [rsi - 0x75]; add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042163c: jmp qword ptr [rsi - 0x75]; add al, 0x24; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004032dc: jmp qword ptr [rsi - 0x77]; 
0x0000000000407e2e: jmp qword ptr [rsi - 0x77]; 
0x0000000000407e35: jmp qword ptr [rsi - 0x77]; 
0x0000000000407fc0: jmp qword ptr [rsi - 0x77]; 
0x0000000000407fcc: jmp qword ptr [rsi - 0x77]; 
0x000000000040800a: jmp qword ptr [rsi - 0x77]; 
0x0000000000408016: jmp qword ptr [rsi - 0x77]; 
0x0000000000408022: jmp qword ptr [rsi - 0x77]; 
0x0000000000408608: jmp qword ptr [rsi - 0x77]; 
0x0000000000408614: jmp qword ptr [rsi - 0x77]; 
0x0000000000408689: jmp qword ptr [rsi - 0x77]; 
0x0000000000408695: jmp qword ptr [rsi - 0x77]; 
0x00000000004086a1: jmp qword ptr [rsi - 0x77]; 
0x000000000040c141: jmp qword ptr [rsi - 0x77]; 
0x000000000040decd: jmp qword ptr [rsi - 0x77]; 
0x000000000040ec44: jmp qword ptr [rsi - 0x77]; 
0x0000000000411897: jmp qword ptr [rsi - 0x77]; 
0x000000000041b535: jmp qword ptr [rsi - 0x77]; 
0x000000000041cf41: jmp qword ptr [rsi - 0x77]; 
0x000000000041e22f: jmp qword ptr [rsi - 0x77]; 
0x0000000000432728: jmp qword ptr [rsi - 0x77]; 
0x0000000000432910: jmp qword ptr [rsi - 0x77]; 
0x00000000004451c9: jmp qword ptr [rsi - 0x77]; 
0x000000000044940a: jmp qword ptr [rsi - 0x77]; 
0x000000000044b1aa: jmp qword ptr [rsi - 0x77]; 
0x000000000041cf41: jmp qword ptr [rsi - 0x77]; ret 0x2d66; 
0x000000000041e22f: jmp qword ptr [rsi - 0x77]; ret 0x2d66; 
0x00000000004032dc: jmp qword ptr [rsi - 0x77]; ret; 
0x0000000000411897: jmp qword ptr [rsi - 0x77]; ret; 
0x00000000004118a8: jmp qword ptr [rsi - 0x7b]; 
0x0000000000411966: jmp qword ptr [rsi - 0x7b]; 
0x0000000000411a26: jmp qword ptr [rsi - 0x7b]; 
0x0000000000407e4c: jmp qword ptr [rsi - 0x7f]; 
0x0000000000407f01: jmp qword ptr [rsi - 0x7f]; 
0x00000000004081d7: jmp qword ptr [rsi - 0x7f]; 
0x0000000000408326: jmp qword ptr [rsi - 0x7f]; 
0x00000000004083fe: jmp qword ptr [rsi - 0x7f]; 
0x000000000040921f: jmp qword ptr [rsi - 0x7f]; 
0x0000000000409c10: jmp qword ptr [rsi - 0x7f]; 
0x0000000000443e8b: jmp qword ptr [rsi - 0x7f]; 
0x0000000000443e8b: jmp qword ptr [rsi - 0x7f]; imul eax, dword ptr [rsi], 1; add byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x00000000004083fe: jmp qword ptr [rsi - 0x7f]; ret; 
0x000000000040325b: jmp rax; 
0x0000000000425de0: jmp rax; 
0x000000000042e93e: jmp rax; 
0x00000000004385fb: jmp rax; 
0x00000000004350ed: jmp rcx; 
0x000000000044a8ad: jmp rdi; 
0x000000000045411d: jmp rdi; 
0x00000000004566dd: jmp rsi; 
0x0000000000412048: jne 0x11ffa; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412afc: jne 0x12abe; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x00000000004130d7: jne 0x13132; add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004135c5: jne 0x135dc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004137bb: jne 0x13768; ret; 
0x0000000000413c05: jne 0x13be8; cmp rsi, rdi; sete al; ret; 
0x0000000000413f16: jne 0x13ee0; pop r13; pop r12; pop rbx; ret; 
0x0000000000413f93: jne 0x13f99; mov al, 1; jmp 0x13f9b; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000414314: jne 0x14322; mov rdi, qword ptr [r15]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414737: jne 0x14747; mov rdi, rbx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x000000000041483c: jne 0x14853; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000414c52: jne 0x14c34; mov rsp, rbp; pop rbp; ret; 
0x0000000000418499: jne 0x18483; mov rsp, rbp; pop rbp; ret; 
0x000000000041873a: jne 0x18724; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x0000000000418ac5: jne 0x18ab7; mov rsp, rbp; pop rbp; ret; 
0x0000000000418c88: jne 0x18bef; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419062: jne 0x19071; lea rdx, [rip + 0x1125]; cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x00000000004195bc: jne 0x195cb; mov rdx, qword ptr [rax + 0x10]; and rdx, 0xffffffffffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x0000000000419761: jne 0x1976a; call 0x196a0; mov bl, 1; mov al, bl; pop rbx; ret; 
0x000000000041a256: jne 0x1a230; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2f6: jne 0x1a2d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a36b: jne 0x1a376; and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x000000000041b3fc: jne 0x1b3e8; pop rbx; ret; 
0x000000000041b47f: jne 0x1b450; pop r13; pop r12; pop rbx; ret; 
0x000000000041c9a3: jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041c99a: jne 0x1c9da; cmp dword ptr [rbx + 4], 0xd7b2; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041def4: jne 0x1dee6; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e053: jne 0x1e045; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041ff53: jne 0x1ff5a; mov byte ptr [r12], 0x20; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040207b: jne 0x2070; ret; 
0x00000000004211d0: jne 0x211df; mov rdi, rbx; mov esi, 0x80; call 0x20fb0; pop rbx; ret; 
0x0000000000421220: jne 0x2122f; mov rdi, rbx; mov esi, 0x80; call 0x210a0; pop rbx; ret; 
0x00000000004021eb: jne 0x21e0; ret; 
0x000000000040237a: jne 0x2371; ret; 
0x0000000000423834: jne 0x2383d; lea rsi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423888: jne 0x23891; lea rsi, [rip + 0x605ef]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x00000000004238d8: jne 0x238e1; lea rdx, [rip + 0x6059f]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x00000000004023ef: jne 0x23c0; mfence; jmp 0x234b; ret; 
0x0000000000423ebd: jne 0x23ec4; call 0x23c80; mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x00000000004243df: jne 0x243e7; mov byte ptr [rip + 0x60a49], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402464: jne 0x2470; cmp rdx, rcx; ja 0x2450; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e4: jne 0x24f0; cmp rdx, rcx; ja 0x24d0; or rax, 0xffffffffffffffff; ret; 
0x0000000000425106: jne 0x2510b; mov al, 1; ret; 
0x0000000000402558: jne 0x2564; cmp rdx, rcx; ja 0x2530; or rax, 0xffffffffffffffff; ret; 
0x00000000004025ae: jne 0x25a0; xor eax, eax; ret; 
0x00000000004025a9: jne 0x25b3; inc r8; jne 0x25a0; xor eax, eax; ret; 
0x0000000000426dad: jne 0x26dbc; and edx, 0x30; je 0x26dbc; mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x00000000004275d4: jne 0x275a0; xor rax, rax; jmp 0x275e0; sbb rax, rax; or al, 1; ret; 
0x00000000004298ee: jne 0x298e8; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bd8: jne 0x29b5a; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429f28: jne 0x29f2e; mov al, 1; jmp 0x29f30; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000042bcdb: jne 0x2bcd5; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfdd: jne 0x2bf5f; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c324: jne 0x2c32a; mov al, 1; jmp 0x2c32c; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000042de53: jne 0x2ddfd; mov rsp, rbp; pop rbp; ret; 
0x000000000042e076: jne 0x2e030; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6ac: jne 0x2e6a6; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd3: jne 0x2ec85; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ee17: jne 0x2ee20; lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x000000000042f70f: jne 0x2f709; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7b5: jne 0x2f79f; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f862: jne 0x2f85c; mov rsp, rbp; pop rbp; ret; 
0x000000000042f92f: jne 0x2f901; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f99f: jne 0x2f989; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa14: jne 0x2f9f6; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb59: jne 0x2fb2b; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc1c: jne 0x2fbe6; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fde1: jne 0x2fdd0; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x000000000042ffab: jne 0x2ffa5; mov rsp, rbp; pop rbp; ret; 
0x000000000043000f: jne 0x30009; mov rsp, rbp; pop rbp; ret; 
0x00000000004300ac: jne 0x3009e; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304d2: jne 0x304bc; mov rsp, rbp; pop rbp; ret; 
0x000000000043056a: jne 0x3055c; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430600: jne 0x305fa; mov rsp, rbp; pop rbp; ret; 
0x000000000043068a: jne 0x3067c; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043078f: jne 0x30769; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b70: jne 0x30b4a; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bef: jne 0x30bc9; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004030e0: jne 0x30e5; xor eax, eax; ret; 
0x0000000000403166: jne 0x3118; xor eax, eax; ret; 
0x00000000004313e2: jne 0x31374; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a4: jne 0x3148e; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043155a: jne 0x31544; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403151: jne 0x315e; cmp byte ptr [r9], 0x3d; jne 0x315e; lea rax, [r9 + 1]; ret; 
0x0000000000403157: jne 0x315e; lea rax, [r9 + 1]; ret; 
0x00000000004319b7: jne 0x31a2d; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000433f70: jne 0x33f78; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433fe1: jne 0x33fe9; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433ffa: jne 0x34009; test rsi, rsi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x000000000043400c: jne 0x3402c; mov eax, 1; ret; 
0x0000000000434049: jne 0x34053; mov rax, 0xffffffffffffffff; ret; 
0x000000000043406a: jne 0x3407d; test rsi, rsi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434080: jne 0x340b5; mov eax, 1; ret; 
0x00000000004340d2: jne 0x340dc; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340ff: jne 0x3410e; test rsi, rsi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434111: jne 0x34119; mov eax, 1; ret; 
0x0000000000434141: jne 0x34120; ret; 
0x000000000043413c: jne 0x34143; cmp rdx, r8; jne 0x34120; ret; 
0x000000000043415f: jne 0x3416e; test rsi, rsi; je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434171: jne 0x34179; mov eax, 1; ret; 
0x00000000004341b3: jne 0x34180; ret; 
0x00000000004341ae: jne 0x341b5; cmp rdx, r10; jne 0x34180; ret; 
0x00000000004341e6: jne 0x341d0; ret; 
0x0000000000434216: jne 0x34200; ret; 
0x0000000000436b03: jne 0x36a8d; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bb4: jne 0x36ba6; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c49: jne 0x36c33; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004390cc: jne 0x390de; xor r9d, r9d; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x0000000000439720: jne 0x3972b; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439763: jne 0x3976e; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439a49: jne 0x39a4e; mov byte ptr [rsp], bl; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a79: jne 0x39a7e; mov byte ptr [rsp], bl; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043a32a: jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x000000000043a36d: jne 0x3a373; mov al, 1; jmp 0x3a375; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000403a55: jne 0x3a38; mov rax, 0xffffffffffffffff; ret; 
0x0000000000403a3a: jne 0x3a49; mov rsi, rdi; mov r9, rcx; sub r9, rsi; mov rax, r9; ret; 
0x000000000043a6ea: jne 0x3a6c4; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403a96: jne 0x3a9b; xor eax, eax; ret; 
0x000000000043b111: jne 0x3b123; xor edx, edx; call 0x3ab40; mov rsp, rbp; pop rbp; ret; 
0x000000000043b38f: jne 0x3b371; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043c635: jne 0x3c64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c780: jne 0x3c797; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c906: jne 0x3c91d; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cadf: jne 0x3caf6; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc3b: jne 0x3cc52; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd8c: jne 0x3cda3; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043d07a: jne 0x3d064; mov rsp, rbp; pop rbp; ret; 
0x000000000043d23c: jne 0x3d20e; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d34c: jne 0x3d326; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d562: jne 0x3d52c; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e29a: jne 0x3e22c; mov rsp, rbp; pop rbp; ret; 
0x000000000043e35a: jne 0x3e2ec; mov rsp, rbp; pop rbp; ret; 
0x000000000043e58f: jne 0x3e561; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e642: jne 0x3e62c; mov rsp, rbp; pop rbp; ret; 
0x000000000043f38d: jne 0x3f367; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5ea: jne 0x3f584; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f79d: jne 0x3f757; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa66: jne 0x3fa48; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fb65: jne 0x3fb7c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb0: jne 0x3fcc7; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe36: jne 0x3fe4d; mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044000f: jne 0x40026; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044016b: jne 0x40182; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402bc: jne 0x402d3; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004405aa: jne 0x40594; mov rsp, rbp; pop rbp; ret; 
0x000000000044076f: jne 0x40741; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440882: jne 0x4085c; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a98: jne 0x40a62; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a84: jne 0x41a06; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b84: jne 0x41b06; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e22: jne 0x41df4; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ed2: jne 0x41ebc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e10: jne 0x42dea; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044306c: jne 0x43006; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443221: jne 0x431db; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434e7: jne 0x434c9; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb6: jne 0x43b58; mov rsp, rbp; pop rbp; ret; 
0x00000000004043f2: jne 0x43ff; lea rdx, [rax + 2]; cmp rdx, rsi; jl 0x43ff; xor eax, eax; ret; 
0x000000000044416a: jne 0x4416f; mov al, 1; ret; 
0x0000000000404480: jne 0x447a; mov rsp, rbp; pop rbp; ret; 
0x000000000040455a: jne 0x4550; ret; 
0x00000000004458ed: jne 0x458f6; lea rdi, [rip + 0x3e58a]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000044594a: jne 0x45953; lea rdi, [rip + 0x3e52d]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000446cb8: jne 0x46c52; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x00000000004477ae: jne 0x477bb; movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f4: jne 0x47801; movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447834: jne 0x47841; movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ab: jne 0x478b8; movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ef: jne 0x478fc; movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044792f: jne 0x4793c; movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004479c8: jne 0x479c0; lea rax, [rdi + rdx]; ret; 
0x00000000004479ba: jne 0x479c4; xor eax, eax; ret; 
0x0000000000447a4e: jne 0x47a20; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a83: jne 0x47a68; ret; 
0x0000000000447acd: jne 0x47ab8; xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000447d2a: jne 0x47d2f; xor eax, eax; ret; 
0x0000000000448048: jne 0x48051; lea rsi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x000000000044823a: jne 0x48251; lea rax, [rip - 0x14053]; lea rdx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000449b63: jne 0x49af5; mov rsp, rbp; pop rbp; ret; 
0x0000000000449baa: jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000044b903: jne 0x4b895; mov rsp, rbp; pop rbp; ret; 
0x000000000044ba08: jne 0x4b9f0; xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x000000000044bae1: jne 0x4bac8; and eax, 0xffff; and edx, 0xffff; sub rax, rdx; ret; 
0x000000000044bb03: jne 0x4bb08; xor eax, eax; ret; 
0x000000000044bb32: jne 0x4bb10; and ecx, 0xffff; and r8d, 0xffff; sub rcx, r8; mov rax, rcx; ret; 
0x000000000044bcef: jne 0x4bcc0; mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bd3f: jne 0x4bd10; mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000044d00b: jne 0x4cf8d; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3c7: jne 0x4d3a9; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d515: jne 0x4d4f7; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d6fd: jne 0x4d6df; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c5: jne 0x4d88f; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db13: jne 0x4dadd; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404db4: jne 0x4dbd; cmp rdx, rcx; jg 0x4da8; mov al, 1; ret; 
0x000000000044dc0b: jne 0x4dbed; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb3: jne 0x4dd95; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044deed: jne 0x4deb7; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404de7: jne 0x4df0; cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x000000000044e635: jne 0x4e64c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e78b: jne 0x4e7a2; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8e4: jne 0x4e8fb; mov rax, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed55: jne 0x4ed6c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee5: jne 0x4eefc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f5: jne 0x4f20c; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a5: jne 0x4f8bc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa5: jne 0x4fabc; mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045026f: jne 0x50260; mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000450be6: jne 0x50bec; mov al, 1; jmp 0x50bee; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x000000000045133c: jne 0x51342; mov al, 1; jmp 0x51344; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x00000000004513c5: jne 0x513af; mov rsp, rbp; pop rbp; ret; 
0x000000000045152c: jne 0x51543; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451690: jne 0x516a4; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004517dc: jne 0x517ae; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045183c: jne 0x51853; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519b0: jne 0x519c4; mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451aff: jne 0x51ad1; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b60: jne 0x51b77; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ce4: jne 0x51cf8; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e3a: jne 0x51e04; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451ea0: jne 0x51eb7; mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452024: jne 0x52038; mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045217d: jne 0x52147; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004522cb: jne 0x522e2; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004528b2: jne 0x528c6; mov ecx, edx; imul rcx, rcx, 0x18; lea rsi, [rip + 0x25cff]; lea rax, [rsi + rcx]; ret; 
0x000000000045325a: jne 0x53248; mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004532a2: jne 0x53290; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004535b6: jne 0x53538; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a59: jne 0x53a53; mov rsp, rbp; pop rbp; ret; 
0x000000000045588d: jne 0x5584f; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fbd: jne 0x55f7f; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000456f37: jne 0x56f3d; mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000045b98f: jne 0x5b98b; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9af: jne 0x5b9ab; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9d1: jne 0x5b9cd; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045b9ef: jne 0x5b9eb; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba0f: jne 0x5ba0b; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ba34: jne 0x5ba3d; mov eax, 1; jmp 0x5ba3f; xor eax, eax; lea rsp, [rsp + 0x48]; ret; 
0x000000000045bc15: jne 0x5bc07; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc2b: jne 0x5bc34; lea rdi, [rip + 0x2824c]; movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x000000000045bdd8: jne 0x5bd3f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045bfc9: jne 0x5bfc3; mov rsp, rbp; pop rbp; ret; 
0x00000000004072ff: jne 0x7305; mov rax, rdx; ret; 
0x0000000000407327: jne 0x7336; test rcx, rcx; jle 0x7336; mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x0000000000407349: jne 0x7357; cmp rdx, 1; jne 0x7357; mov eax, 1; ret; 
0x000000000040734f: jne 0x7357; mov eax, 1; ret; 
0x0000000000408d30: jne 0x8cc2; mov r15, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa4e: jne 0xaa5c; mov rax, rcx; ret; 
0x000000000040b7c8: jne 0xb7aa; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6e9: jne 0xc6db; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040cf77: jne 0xcf7d; mov rax, rdx; ret; 
0x000000000040e450: jne 0xe42a; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e988: jne 0xe912; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e93e: jne 0xe938; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040ea3b: jne 0xea35; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc9: jne 0xeb5b; mov rsp, rbp; pop rbp; ret; 
0x000000000040ece3: jne 0xec75; mov rsp, rbp; pop rbp; ret; 
0x000000000040edf2: jne 0xed84; mov rsp, rbp; pop rbp; ret; 
0x000000000040f220: jne 0xf229; lea rdi, [rip + 0x74c57]; mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x000000000040f937: jne 0xf93d; mov rax, rdx; ret; 
0x00000000004151eb: jno 0x15225; add eax, 0x4810ff00; lea esp, [rsp + 8]; ret; 
0x000000000041859f: jno 0x185a9; mov edi, eax; call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x00000000004189fb: jno 0x189fb; add al, 0; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000042ee5b: jno 0x2ee8e; std; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000431f89: jno 0x31f8b; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004532bb: jno 0x532ba; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004566b3: jno 0x566b1; dec dword ptr [rax - 0x77]; ret; 
0x000000000045728b: jno 0x57238; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040b96e: jno 0xb977; add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x0000000000417fc9: jnp 0x17fd3; add byte ptr [rdi - 0x2e], dh; pop rbx; ret; 
0x000000000041c99d: jnp 0x1c9a3; mov dl, 0xd7; add byte ptr [rax], al; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041ccfb: jnp 0x1cd6d; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x000000000041db54: jnp 0x1db96; add byte ptr [rdx + riz*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f657: jnp 0x1f699; add byte ptr [rdi], cl; test byte ptr [rbp + 0x48000000], bh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f6d0: jnp 0x1f712; add byte ptr [rax + rcx*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f757: jnp 0x1f799; add byte ptr [rdi], cl; test byte ptr [rax + 0x48000000], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c8: jnp 0x1f80a; add byte ptr [rbx + rax*2 + 0x48], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x00000000004206fe: jnp 0x20758; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x00000000004208a1: jnp 0x208fb; xor esi, esi; call 0xe140; pop rbx; ret; 
0x0000000000421b1b: jnp 0x21b8d; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x00000000004316be: jnp 0x316c0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004316d7: jnp 0x316d9; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000456b1b: jnp 0x56b2d; call 0x19140; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x0000000000457f33: jns 0x57f05; sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004118f4: jo 0x11937; pop rbp; pop r12; pop rbx; ret; 
0x0000000000413711: jo 0x1375b; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004147a9: jo 0x147f3; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004149dd: jo 0x149e7; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x0000000000414ca3: jo 0x14cad; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000414df2: jo 0x14dfc; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000415c21: jo 0x15c7e; ret; 
0x0000000000416466: jo 0x164c3; ret; 
0x000000000041792c: jo 0x17930; add byte ptr [rax], al; ret; 
0x00000000004188f7: jo 0x18901; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x000000000041b657: jo 0x1b6b4; ret; 
0x000000000041c268: jo 0x1c2ab; pop rbp; pop r12; pop rbx; ret; 
0x000000000041c309: jo 0x1c366; ret; 
0x000000000041c4b8: jo 0x1c4fb; pop rbp; pop r12; pop rbx; ret; 
0x000000000041cc7a: jo 0x1cc82; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x6eb0067; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041ccfc: jo 0x1cd3e; xor dh, dh; call 0x1c270; pop rbx; ret; 
0x000000000041d785: jo 0x1d7af; mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x000000000041fc21: jo 0x1fc64; pop rbp; pop r12; pop rbx; ret; 
0x000000000041fd69: jo 0x1fd6c; lea rdi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x000000000041fe2c: jo 0x1fe6f; pop rbp; pop r12; pop rbx; ret; 
0x0000000000420859: jo 0x2089c; pop rbp; pop r12; pop rbx; ret; 
0x0000000000421b1c: jo 0x21b5e; xor dh, dh; call 0x1c270; pop rbx; ret; 
0x00000000004226b3: jo 0x226b7; add byte ptr [rax], al; ret; 
0x0000000000422e10: jo 0x22e1c; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000422ec4: jo 0x22f21; ret; 
0x0000000000422f74: jo 0x22fd1; ret; 
0x0000000000423024: jo 0x23081; ret; 
0x0000000000423184: jo 0x231e1; ret; 
0x0000000000423234: jo 0x23291; ret; 
0x00000000004232e4: jo 0x23341; ret; 
0x00000000004233ad: jo 0x233f0; pop rbp; pop r12; pop rbx; ret; 
0x0000000000423431: jo 0x2348e; ret; 
0x00000000004234b1: jo 0x2350e; ret; 
0x0000000000423531: jo 0x2358e; ret; 
0x0000000000423664: jo 0x236c1; ret; 
0x0000000000423714: jo 0x23771; ret; 
0x00000000004237c4: jo 0x23821; ret; 
0x00000000004262a1: jo 0x262a4; lea rax, [rip + 0x5ed86]; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x000000000042c545: jo 0x2c5a2; ret; 
0x000000000042c665: jo 0x2c6a8; pop rbp; pop r12; pop rbx; ret; 
0x000000000042c6e5: jo 0x2c742; ret; 
0x000000000042c885: jo 0x2c8e2; ret; 
0x000000000042c995: jo 0x2c9f2; ret; 
0x000000000042cac5: jo 0x2cb22; ret; 
0x000000000042cd05: jo 0x2cd48; pop rbp; pop r12; pop rbx; ret; 
0x000000000042d397: jo 0x2d3da; pop rbp; pop r12; pop rbx; ret; 
0x000000000042dae8: jo 0x2db2b; pop rbp; pop r12; pop rbx; ret; 
0x000000000042dbd8: jo 0x2dc1b; pop rbp; pop r12; pop rbx; ret; 
0x000000000042e309: jo 0x2e34c; pop rbp; pop r12; pop rbx; ret; 
0x000000000042e83d: jo 0x2e89a; ret; 
0x000000000042ef51: jo 0x2ef94; pop rbp; pop r12; pop rbx; ret; 
0x0000000000431fc2: jo 0x31fc4; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000043a229: jo 0x3a22c; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043d714: jo 0x3d771; ret; 
0x000000000043d929: jo 0x3d96c; pop rbp; pop r12; pop rbx; ret; 
0x000000000043db02: jo 0x3db5f; ret; 
0x000000000043dce4: jo 0x3dd41; ret; 
0x000000000043e76d: jo 0x3e7b0; pop rbp; pop r12; pop rbx; ret; 
0x000000000043e836: jo 0x3e839; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043e9bb: jo 0x3e9be; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043ea8a: jo 0x3ea8d; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebbb: jo 0x3ebfe; pop rbp; pop r12; pop rbx; ret; 
0x000000000043ec8a: jo 0x3ec8d; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043edf6: jo 0x3edf9; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043eebb: jo 0x3eebe; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef5a: jo 0x3ef9d; pop rbp; pop r12; pop rbx; ret; 
0x000000000043f0d6: jo 0x3f0d9; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043f196: jo 0x3f199; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000440ef4: jo 0x40f37; pop rbp; pop r12; pop rbx; ret; 
0x000000000044201f: jo 0x42062; pop rbp; pop r12; pop rbx; ret; 
0x0000000000442108: jo 0x4210b; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004422dd: jo 0x422e0; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004423cc: jo 0x423cf; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044252a: jo 0x4256d; pop rbp; pop r12; pop rbx; ret; 
0x000000000044261c: jo 0x4261f; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004427c8: jo 0x427cb; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004428bd: jo 0x428c0; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044297c: jo 0x429bf; pop rbp; pop r12; pop rbx; ret; 
0x0000000000442b18: jo 0x42b1b; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000442c08: jo 0x42c0b; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044549b: jo 0x4549e; add byte ptr [rax], al; lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x0000000000406b0e: jo 0x48ca8c5c; and esi, 0x7ff; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000449378: jo 0x493bb; pop rbp; pop r12; pop rbx; ret; 
0x0000000000449f43: jo 0x49f2d; xchg dword ptr [rax + 0x6348fffb], eax; ret; 
0x000000000044b118: jo 0x4b15b; pop rbp; pop r12; pop rbx; ret; 
0x000000000044bfe8: jo 0x4c02b; pop rbp; pop r12; pop rbx; ret; 
0x000000000044c42b: jo 0x4c415; lahf; pop rbx; sti; dec dword ptr [rax + 0x63]; ret; 
0x000000000044e1ae: jo 0x4e1f1; pop rbp; pop r12; pop rbx; ret; 
0x000000000044e31e: jo 0x4e361; pop rbp; pop r12; pop rbx; ret; 
0x000000000044e49e: jo 0x4e4e1; pop rbp; pop r12; pop rbx; ret; 
0x000000000044f449: jo 0x4f48c; pop rbp; pop r12; pop rbx; ret; 
0x000000000044f9fa: jo 0x4fa44; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004505f2: jo 0x5064f; ret; 
0x0000000000450695: jo 0x506f2; ret; 
0x0000000000450863: jo 0x508c0; ret; 
0x00000000004051a4: jo 0x51aa; ret; 
0x0000000000453c96: jo 0x53cd9; pop rbp; pop r12; pop rbx; ret; 
0x0000000000453da9: jo 0x53e06; ret; 
0x0000000000455270: jo 0x552cd; ret; 
0x00000000004553b5: jo 0x55412; ret; 
0x0000000000455a0c: jo 0x55a10; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004560e9: jo 0x56146; ret; 
0x000000000045619b: jo 0x561f8; ret; 
0x00000000004566a5: jo 0x56702; ret; 
0x0000000000457abd: jo 0x57b00; pop rbp; pop r12; pop rbx; ret; 
0x0000000000457c5d: jo 0x57ca0; pop rbp; pop r12; pop rbx; ret; 
0x0000000000457d8d: jo 0x57dea; ret; 
0x0000000000457e1d: jo 0x57e60; pop rbp; pop r12; pop rbx; ret; 
0x0000000000457f3d: jo 0x57f9a; ret; 
0x0000000000457fbd: jo 0x5801a; ret; 
0x000000000045858f: jo 0x585ec; ret; 
0x0000000000458a5a: jo 0x58ab7; ret; 
0x000000000045a836: jo 0x5a879; pop rbp; pop r12; pop rbx; ret; 
0x000000000045a8c6: jo 0x5a909; pop rbp; pop r12; pop rbx; ret; 
0x000000000045a956: jo 0x5a999; pop rbp; pop r12; pop rbx; ret; 
0x000000000045a9e6: jo 0x5aa29; pop rbp; pop r12; pop rbx; ret; 
0x000000000045c28c: jo 0x5c2eb; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c3f4: jo 0x5c451; ret; 
0x000000000045c654: jo 0x5c657; add byte ptr [rax], al; call rax; 
0x0000000000407333: jo 0x7336; ret; 
0x000000000040d93a: jo 0xd97d; pop rbp; pop r12; pop rbx; ret; 
0x000000000040d9ba: jo 0xd9a4; jmp 0xd9c9; and esi, 0xffff; call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x000000000040ddcb: jo 0xde0e; pop rbp; pop r12; pop rbx; ret; 
0x000000000040e12f: jo 0xe172; pop rbp; pop r12; pop rbx; ret; 
0x000000000040e4ec: jo 0xe549; ret; 
0x000000000040e5d3: jo 0xe630; ret; 
0x000000000040e672: jo 0xe6cf; ret; 
0x000000000040f289: jo 0xf2cc; pop rbp; pop r12; pop rbx; ret; 
0x000000000040f349: jo 0xf38c; pop rbp; pop r12; pop rbx; ret; 
0x000000000040f3db: jo 0xf41e; pop rbp; pop r12; pop rbx; ret; 
0x000000000040f539: jo 0xf57c; pop rbp; pop r12; pop rbx; ret; 
0x000000000040f5cb: jo 0xf60e; pop rbp; pop r12; pop rbx; ret; 
0x000000000040f9d7: jo 0xfa1a; pop rbp; pop r12; pop rbx; ret; 
0x000000000040fa67: jo 0xfaaa; pop rbp; pop r12; pop rbx; ret; 
0x000000000040faf7: jo 0xfb3a; pop rbp; pop r12; pop rbx; ret; 
0x0000000000417f72: jp 0x17f7d; add eax, 0x100c600; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000419334: jp 0x19356; mov qword ptr [rax], rdi; ret; 
0x00000000004336f2: jp 0x33756; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043b222: jp 0x3b1ce; add eax, dword ptr [rax]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000043d200: jp 0x3d1ff; jmp qword ptr [rdi + 0x43]; 
0x0000000000405278: jp 0x527c; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x0000000000457422: jp 0x573ce; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c427: jp 0x5c42b; add byte ptr [rax - 0x75], cl; adc byte ptr [rcx + 0x248b4cd8], cl; ret 0x19eb; 
0x0000000000408745: jp 0x8749; je 0x874d; add ax, 1; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000401044: js 0x1071; add al, byte ptr [rax]; ret; 
0x0000000000412f28: js 0x12f3b; mov rdx, rbp; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000041464b: js 0x1464f; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004147ca: js 0x147d4; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000041497a: js 0x14984; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041497a: js 0x14984; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041499a: js 0x149a4; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x00000000004149ba: js 0x149c4; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000415189: js 0x15114; ret; 
0x00000000004153fb: js 0x1543e; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000416e2b: js 0x16e6e; pop rsp; pop rbx; ret; 
0x0000000000417242: js 0x1724c; add byte ptr [rdx + rcx + 0x48], dh; mov edi, ebx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x000000000041735d: js 0x1736f; add byte ptr [rcx + rbp + 0x48], dh; mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x000000000041751c: js 0x17536; add byte ptr [rsp + 0x48], dh; mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000041887c: js 0x18886; add byte ptr [rax], al; lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x000000000041c401: js 0x1c444; pop rsp; pop rbx; ret; 
0x000000000041dada: js 0x1db1c; add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041dada: js 0x1db1c; add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041eedf: js 0x1ef22; pop rsp; pop rbx; ret; 
0x000000000041f61a: js 0x1f65c; add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041f61a: js 0x1f65c; add byte ptr [rsi + rax + 0x48], dh; mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x0000000000420a3a: js 0x20a8c; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000420d57: js 0x20d58; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000042a030: js 0x2a073; pop rsp; pop rbx; ret; 
0x000000000042c430: js 0x2c473; pop rsp; pop rbx; ret; 
0x000000000042ca42: js 0x2ca85; pop rsp; pop rbx; ret; 
0x000000000042cf10: js 0x2cf53; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042cff0: js 0x2d033; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b5: js 0x2d2f8; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6f0: js 0x2d733; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042d795: js 0x2d795; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000042d79e: js 0x2d7e1; pop rsp; pop rbx; ret; 
0x000000000042d7ba: js 0x2d7e4; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7da: js 0x2d804; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042f0c6: js 0x2f109; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000430a47: js 0x30a19; lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ec7: js 0x30e99; lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000043193f: js 0x31941; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043196b: js 0x3196d; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043446e: js 0x344b8; lea esp, [rsp + 8]; ret; 
0x000000000040355c: js 0x355f; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x000000000043b531: js 0x3b57b; lea edi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000043c25d: js 0x3c1df; jl 0x3c269; jmp qword ptr [rax]; 
0x000000000043d70a: js 0x3d709; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043e8cc: js 0x3e90f; pop rsp; pop rbx; ret; 
0x000000000043eb2a: js 0x3eb6d; pop rsp; pop rbx; ret; 
0x000000000043ed2c: js 0x3ed6f; pop rsp; pop rbx; ret; 
0x0000000000440b80: js 0x40b83; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000440e30: js 0x40e33; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000440fd4: js 0x40fd7; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004411c4: js 0x41207; pop rsp; pop rbx; ret; 
0x00000000004412a4: js 0x412a7; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000441430: js 0x41433; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004414e7: js 0x4152a; pop rsp; pop rbx; ret; 
0x00000000004415c5: js 0x415c8; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004416a0: js 0x416a3; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004418d4: js 0x41917; pop rsp; pop rbx; ret; 
0x00000000004421ce: js 0x42211; pop rsp; pop rbx; ret; 
0x000000000044248c: js 0x424cf; pop rsp; pop rbx; ret; 
0x00000000004426de: js 0x42721; pop rsp; pop rbx; ret; 
0x0000000000444bf2: js 0x44bf5; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004458b0: js 0x458b3; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000044591d: js 0x45920; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000445f63: js 0x45fa6; pop rsp; pop rbx; ret; 
0x000000000044d280: js 0x4d2c3; pop rsp; pop rbx; ret; 
0x000000000044f7f6: js 0x4f839; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044fa3a: js 0x4fa54; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa5a: js 0x4fa74; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa7a: js 0x4fa94; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x00000000004504fd: js 0x50540; pop rsp; pop rbx; ret; 
0x0000000000450d63: js 0x50da6; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000450e03: js 0x50e46; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000452299: js 0x522b3; add byte ptr [rax + rcx + 0x48], dh; mov edi, eax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x0000000000453464: js 0x534a7; pop rsp; pop rbx; ret; 
0x000000000045531e: js 0x55361; pop rsp; pop rbx; ret; 
0x0000000000455463: js 0x554a6; pop rsp; pop rbx; ret; 
0x00000000004562f9: js 0x5633c; pop rsp; pop rbx; ret; 
0x0000000000457903: js 0x57946; pop rsp; pop rbx; ret; 
0x0000000000458073: js 0x580b6; pop rsp; pop rbx; ret; 
0x0000000000458db0: js 0x58df3; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000459fbc: js 0x5a00e; add dh, byte ptr [rbp + rbx - 0x39]; add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fca: js 0x5a01c; add dword ptr [rdi + rcx - 0x39], esi; add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000407683: js 0x7686; mov edx, 0x20; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000040bacf: js 0xbac1; add byte ptr [rcx + rcx + 0x48], bh; lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040bad6: js 0xbac8; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040bc13: js 0xbc56; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040c82d: js 0xc870; pop rsp; pop rbx; ret; 
0x000000000040ca5f: js 0xcaa2; pop rsp; pop rbx; ret; 
0x000000000040dcef: js 0xdce1; add byte ptr [rcx + rcx + 0x48], bh; lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf6: js 0xdce8; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040fe9a: js 0xfedd; pop rsp; pop rbx; ret; 
0x000000000040ff8a: js 0xffcd; pop rsp; pop rbx; ret; 
0x000000000042ed32: lahf; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004238dd: lahf; add eax, 0x9ae80006; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045164d: lahf; cmp bh, ah; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000409c0d: lahf; fdiv st(7), st(0); jmp qword ptr [rsi - 0x7f]; 
0x000000000043168d: lahf; ja 0x31690; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044c42d: lahf; pop rbx; sti; dec dword ptr [rax + 0x63]; ret; 
0x0000000000431fdd: lahf; push rbx; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000425bfc: lahf; ret; 
0x000000000042ee8c: lahf; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004033e9: ldmxcsr dword ptr [rbp - 4]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f58: ldmxcsr dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044eeb0: lea eax, [esi + esi*2]; add eax, 2; ret; 
0x000000000044f040: lea eax, [esi + esi*2]; ret; 
0x0000000000459319: lea eax, [rax + rdx*8]; ret; 
0x0000000000420665: lea eax, [rbx + 0x58]; mov rdi, qword ptr [rax]; call 0x19140; pop rbx; ret; 
0x0000000000447c4f: lea eax, [rbx + rbp]; pop r13; pop r12; pop rbx; ret; 
0x000000000044ba65: lea eax, [rbx + rbp]; pop r13; pop r12; pop rbx; ret; 
0x000000000040315a: lea eax, [rcx + 1]; ret; 
0x0000000000402474: lea eax, [rcx + rax - 0x10]; cmp rdx, rax; jbe 0x246b; ret; 
0x0000000000402568: lea eax, [rcx + rax - 0x10]; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x00000000004024f6: lea eax, [rcx + rax - 8]; cmp rdx, rax; jbe 0x24eb; ret; 
0x0000000000416e70: lea eax, [rcx + rdx]; ret; 
0x00000000004226b1: lea eax, [rdi + 0x270]; ret; 
0x0000000000412eea: lea eax, [rdi + rbx]; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004479cb: lea eax, [rdi + rdx]; ret; 
0x0000000000417bca: lea eax, [rdi + rsi]; ret; 
0x000000000042e330: lea eax, [rdx + 1]; cmp r8, rcx; jg 0x2e320; mov rsp, rbp; pop rbp; ret; 
0x0000000000410768: lea eax, [rdx + 1]; pop rbx; ret; 
0x0000000000443f64: lea eax, [rdx + 1]; test eax, eax; jg 0x43f6e; add eax, 7; ret; 
0x000000000042c02c: lea eax, [rip + 0x108b4800]; test rdx, rdx; je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0bc: lea eax, [rip + 0x108b4800]; test rdx, rdx; je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045282a: lea eax, [rip + 0x16180]; call qword ptr [rax]; 
0x00000000004527cf: lea eax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000456942: lea eax, [rip + 0x1f5b8]; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004533a3: lea eax, [rip + 0x22b57]; call qword ptr [rax]; 
0x00000000004533a3: lea eax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000453396: lea eax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045333c: lea eax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000044f642: lea eax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f342: lea eax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f022: lea eax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee92: lea eax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea7c: lea eax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000045cd45: lea eax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccfa: lea eax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000401033: lea eax, [rip + 0x27]; mov qword ptr [r10 + 0x60], rax; mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000045ac02: lea eax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abac: lea eax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000044b915: lea eax, [rip + 0x2a385]; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e5: lea eax, [rip + 0x2a5b5]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b75: lea eax, [rip + 0x2c125]; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449aaa: lea eax, [rip + 0x2c1f0]; mov qword ptr [rsp], rax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x0000000000433590: lea eax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334c0: lea eax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004331a0: lea eax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004330d0: lea eax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000455bbe: lea eax, [rip + 0x2e2ac]; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x0000000000455b96: lea eax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000447119: lea eax, [rip + 0x2eb81]; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004470d9: lea eax, [rip + 0x2ebc1]; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x0000000000456515: lea eax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x000000000045264a: lea eax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000444cdd: lea eax, [rip + 0x30fbd]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c69: lea eax, [rip + 0x31031]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000045261e: lea eax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000453174: lea eax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453174: lea eax, [rip + 0x326a6]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004500cf: lea eax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042d841: lea eax, [rip + 0x339c9]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d831: lea eax, [rip + 0x339d9]; movsd xmm0, qword ptr [rax]; ret; 
0x0000000000434876: lea eax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x00000000004508f1: lea eax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x0000000000450592: lea eax, [rip + 0x35238]; call qword ptr [rax]; 
0x0000000000450525: lea eax, [rip + 0x35295]; call qword ptr [rax]; 
0x000000000044ccfc: lea eax, [rip + 0x38b2e]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc5c: lea eax, [rip + 0x38bce]; mov rax, qword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c90c: lea eax, [rip + 0x38f1e]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c5f0: lea eax, [rip + 0x3923a]; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044a29b: lea eax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a258: lea eax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a236: lea eax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a216: lea eax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000449d3e: lea eax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x0000000000449d2e: lea eax, [rip + 0x3a02c]; call qword ptr [rax + 0x10]; 
0x000000000042376f: lea eax, [rip + 0x3a8b0006]; call rax; 
0x000000000044855b: lea eax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x000000000044853b: lea eax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x000000000044853b: lea eax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000448518: lea eax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f8: lea eax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f8: lea eax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d6: lea eax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d6: lea eax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b6: lea eax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b6: lea eax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x0000000000439350: lea eax, [rip + 0x3c94a]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000439226: lea eax, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c6: lea eax, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043909b: lea eax, [rip + 0x3cbff]; call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x00000000004454a0: lea eax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x000000000044541d: lea eax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000436b35: lea eax, [rip + 0x3f165]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b15: lea eax, [rip + 0x3f185]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a3a: lea eax, [rip + 0x3f260]; mov qword ptr [rsp], rax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c5: lea eax, [rip + 0x3f3d5]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000433977: lea eax, [rip + 0x42533]; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433957: lea eax, [rip + 0x42553]; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000432233: lea eax, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f81: lea eax, [rip + 0x43d19]; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431d77: lea eax, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af6: lea eax, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004245cf: lea eax, [rip + 0x4434b]; cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x0000000000431937: lea eax, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316b6: lea eax, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000043b8e6: lea eax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e6: lea eax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043b548: lea eax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000043b538: lea eax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000042543a: lea eax, [rip + 0x4c4f0]; movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x00000000004250fa: lea eax, [rip + 0x4c860]; movsxd rax, dword ptr [rax]; cmp rdx, rax; jne 0x2510b; mov al, 1; ret; 
0x000000000041b369: lea eax, [rip + 0x4d551]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b339: lea eax, [rip + 0x4d581]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b309: lea eax, [rip + 0x4d5b1]; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b2d9: lea eax, [rip + 0x4d5e1]; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2a9: lea eax, [rip + 0x4d611]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b279: lea eax, [rip + 0x4d641]; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b209: lea eax, [rip + 0x4d6b1]; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b1d9: lea eax, [rip + 0x4d6e1]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041a650: lea eax, [rip + 0x4e46a]; mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x0000000000434486: lea eax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434466: lea eax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434466: lea eax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434426: lea eax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343e6: lea eax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343a6: lea eax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x0000000000434366: lea eax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434326: lea eax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342e6: lea eax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342c6: lea eax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c6: lea eax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a6: lea eax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a6: lea eax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000418d08: lea eax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x0000000000418cc2: lea eax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000418cb5: lea eax, [rip + 0x4fd15]; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x00000000004189f9: lea eax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004189a3: lea eax, [rip + 0x4fec7]; mov rdx, qword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x0000000000418950: lea eax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004188fd: lea eax, [rip + 0x500ad]; call qword ptr [rax]; 
0x0000000000418881: lea eax, [rip + 0x50129]; call qword ptr [rax]; 
0x000000000041862d: lea eax, [rip + 0x5025d]; movzx edi, word ptr [rax]; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000418744: lea eax, [rip + 0x50266]; call qword ptr [rax]; 
0x00000000004184c3: lea eax, [rip + 0x504f7]; call qword ptr [rax]; 
0x000000000041829d: lea eax, [rip + 0x505dd]; mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x00000000004181a7: lea eax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x000000000041819d: lea eax, [rip + 0x506cd]; mov rbx, qword ptr [rax]; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x00000000004182aa: lea eax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000417f70: lea eax, [rip + 0x5097a]; mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000417f43: lea eax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417f43: lea eax, [rip + 0x50997]; call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x0000000000417f36: lea eax, [rip + 0x509a4]; cmp qword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417ed9: lea eax, [rip + 0x509f1]; mov byte ptr [rax], 1; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x0000000000417e66: lea eax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417634: lea eax, [rip + 0x51446]; call qword ptr [rax]; 
0x00000000004169f5: lea eax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169f5: lea eax, [rip + 0x52065]; call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x00000000004169d5: lea eax, [rip + 0x52085]; call qword ptr [rax]; 
0x00000000004169d5: lea eax, [rip + 0x52085]; call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x0000000000415281: lea eax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000415281: lea eax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415249: lea eax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415249: lea eax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415219: lea eax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415219: lea eax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151e9: lea eax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e9: lea eax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414cd5: lea eax, [rip + 0x53bb5]; movzx edi, word ptr [rax]; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000414df8: lea eax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca9: lea eax, [rip + 0x53d71]; call qword ptr [rax]; 
0x000000000042c158: lea eax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c8: lea eax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c038: lea eax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040549d: lea eax, [rip + 0x58f45]; subsd xmm1, qword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x000000000042a5bb: lea eax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d58: lea eax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc8: lea eax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c38: lea eax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042845d: lea eax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428426: lea eax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283fb: lea eax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427359: lea eax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042714f: lea eax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042732c: lea eax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c9: lea eax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427574: lea eax, [rip + 0x5daf6]; mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000427209: lea eax, [rip + 0x5de61]; mov rdi, qword ptr [rax]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004277f2: lea eax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x0000000000426c21: lea eax, [rip + 0x5e409]; mov edi, dword ptr [rax]; mov r8d, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000426be1: lea eax, [rip + 0x5e449]; mov edi, dword ptr [rax]; mov r8d, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x00000000004262a4: lea eax, [rip + 0x5ed86]; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd6: lea eax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000424524: lea eax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000423043: lea eax, [rip + 0x5fb07]; movzx esi, word ptr [rax]; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000423bf1: lea eax, [rip + 0x60259]; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x0000000000423371: lea eax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042289b: lea eax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004227a5: lea eax, [rip + 0x61555]; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x0000000000422764: lea eax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422608: lea eax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042256d: lea eax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224fc: lea eax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce9: lea eax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b85: lea eax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ac4: lea eax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421a9a: lea eax, [rip + 0x62260]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a0c: lea eax, [rip + 0x622ee]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x00000000004216c0: lea eax, [rip + 0x6263a]; add rax, 8; mov word ptr [rax], 0x64; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042167a: lea eax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042152f: lea eax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421429: lea eax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212df: lea eax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fce: lea eax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204de: lea eax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202e5: lea eax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdf0: lea eax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdac: lea eax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x000000000041fd71: lea eax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x000000000041ee8e: lea eax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000041ee02: lea eax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edb6: lea eax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e966: lea eax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e919: lea eax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e823: lea eax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e753: lea eax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d872: lea eax, [rip + 0x65688]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041e458: lea eax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2b4: lea eax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d832: lea eax, [rip + 0x65a48]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041e107: lea eax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e08e: lea eax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dffb: lea eax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df3c: lea eax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de9c: lea eax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddfc: lea eax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd70: lea eax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc5c: lea eax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dbac: lea eax, [rip + 0x6614e]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041db71: lea eax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db04: lea eax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d985: lea eax, [rip + 0x66375]; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x000000000041d944: lea eax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d685: lea eax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d49b: lea eax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d395: lea eax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d245: lea eax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfb0: lea eax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec9: lea eax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd65: lea eax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cca4: lea eax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc77: lea eax, [rip + 0x67083]; add rax, 8; mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc3c: lea eax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbf4: lea eax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca55: lea eax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c9f7: lea eax, [rip + 0x67303]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041c5d0: lea eax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c55f: lea eax, [rip + 0x6779b]; add rax, 8; mov word ptr [rax], 0x65; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041c18c: lea eax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041bf39: lea eax, [rip + 0x67dc1]; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bee5: lea eax, [rip + 0x67e15]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041be99: lea eax, [rip + 0x67e61]; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bd22: lea eax, [rip + 0x67fd8]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bcd2: lea eax, [rip + 0x68028]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bc80: lea eax, [rip + 0x6807a]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041a9b9: lea eax, [rip + 0x681b1]; add rax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x000000000041b7bd: lea eax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afed: lea eax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041a774: lea eax, [rip + 0x6a666]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a706: lea eax, [rip + 0x6a6d4]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a67b: lea eax, [rip + 0x6a75f]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a61e: lea eax, [rip + 0x6a7bc]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a45b: lea eax, [rip + 0x6a97f]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x0000000000418f5e: lea eax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e8b: lea eax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e57: lea eax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418044: lea eax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418dbc: lea eax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d8b: lea eax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041a1b4: lea eax, [rip + 0x6ac26]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x0000000000417e22: lea eax, [rip + 0x6ad48]; add rax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000418015: lea eax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fe5: lea eax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000419e36: lea eax, [rip + 0x6afa4]; mov rax, qword ptr [rax]; test rax, rax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x0000000000419cfd: lea eax, [rip + 0x6b0dd]; mov rax, qword ptr [rax]; test rax, rax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419295: lea eax, [rip + 0x6bb45]; mov rax, qword ptr [rax]; test rax, rax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419245: lea eax, [rip + 0x6bb95]; mov rax, qword ptr [rax]; test rax, rax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x0000000000417c3b: lea eax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c11: lea eax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004184ed: lea eax, [rip + 0x6c8ed]; mov rax, qword ptr [rax]; test rax, rax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x000000000041531d: lea eax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004150d6: lea eax, [rip + 0x6ee6c]; mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000414a3f: lea eax, [rip + 0x6f513]; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415139: lea eax, [rip + 0x6fca1]; mov rax, qword ptr [rax]; test rax, rax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004150bd: lea eax, [rip + 0x6fd1d]; mov rax, qword ptr [rax]; test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415096: lea eax, [rip + 0x6fd44]; mov rax, qword ptr [rax]; test rax, rax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x000000000041502c: lea eax, [rip + 0x6fdae]; mov rax, qword ptr [rax]; test rax, rax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x0000000000414fdf: lea eax, [rip + 0x6fdfb]; mov rax, qword ptr [rax]; test rax, rax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000414fb2: lea eax, [rip + 0x6fe28]; mov rax, qword ptr [rax]; test rax, rax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414f26: lea eax, [rip + 0x6feb4]; mov rax, qword ptr [rax]; test rax, rax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414ebb: lea eax, [rip + 0x6ff1f]; mov rax, qword ptr [rax]; test rax, rax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414e79: lea eax, [rip + 0x6ff61]; mov rax, qword ptr [rax]; test rax, rax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414e22: lea eax, [rip + 0x6ffb8]; mov rax, qword ptr [rax]; test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414db5: lea eax, [rip + 0x70025]; mov rax, qword ptr [rax]; test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414d88: lea eax, [rip + 0x70052]; mov rax, qword ptr [rax]; test rax, rax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414d62: lea eax, [rip + 0x70078]; mov rax, qword ptr [rax]; test rax, rax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d2e: lea eax, [rip + 0x700ac]; mov rax, qword ptr [rax]; test rax, rax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414cff: lea eax, [rip + 0x700db]; mov rax, qword ptr [rax]; test rax, rax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414c66: lea eax, [rip + 0x70174]; mov rax, qword ptr [rax]; test rax, rax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414b63: lea eax, [rip + 0x70277]; mov rax, qword ptr [rax]; test rax, rax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414afe: lea eax, [rip + 0x702dc]; mov rax, qword ptr [rax]; test rax, rax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414aa6: lea eax, [rip + 0x70334]; mov rax, qword ptr [rax]; test rax, rax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414a52: lea eax, [rip + 0x70388]; mov rax, qword ptr [rax]; test rax, rax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414a26: lea eax, [rip + 0x703b4]; mov rax, qword ptr [rax]; test rax, rax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000412f46: lea eax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f46: lea eax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004114ac: lea eax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040ed62: lea eax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ff96: lea eax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea6: lea eax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000040e933: lea eax, [rip + 0x741e7]; movzx edx, word ptr [rax]; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e622: lea eax, [rip + 0x744f8]; movzx edx, word ptr [rax]; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040f22d: lea eax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x000000000040ed6c: lea eax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ec69: lea eax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x000000000040ea19: lea eax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040e941: lea eax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e636: lea eax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e512: lea eax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040e0f8: lea eax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000040e06f: lea eax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000040e06f: lea eax, [rip + 0x75ceb]; call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x000000000040defd: lea eax, [rip + 0x75e5d]; call qword ptr [rax + 0xa0]; pop r13; pop r12; pop rbx; ret; 
0x000000000040de15: lea eax, [rip + 0x75f45]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d73e: lea eax, [rip + 0x7661c]; call qword ptr [rax]; 
0x00000000004050aa: lea eax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004030d6: lea eax, [rip + 0x80d94]; cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x0000000000402a3d: lea eax, [rip + 0x814f5]; mov dword ptr [rax], ebx; pop rbx; ret; 
0x0000000000402a0f: lea eax, [rip + 0x81523]; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040106d: lea eax, [rip + 0x8198d]; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x0000000000401051: lea eax, [rip + 0x819a9]; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x000000000042c074: lea eax, [rip + 0x8b4800]; test rax, rax; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000044823d: lea eax, [rip - 0x14053]; lea rdx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x000000000041c670: lea eax, [rip - 0x156]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b89: lea eax, [rip - 0x15f]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a19: lea eax, [rip - 0x19f]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209c7: lea eax, [rip - 0x2ed]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420967: lea eax, [rip - 0x32d]; mov qword ptr [rbx + 0x40], rax; pop r13; pop r12; pop rbx; ret; 
0x00000000004116e7: lea eax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000426bb1: lea eax, [rip - 0x67]; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000042e344: lea eax, [rsi + 1]; movzx eax, byte ptr [rdx + rax - 1]; ret; 
0x00000000004528c2: lea eax, [rsi + rcx]; ret; 
0x000000000044eeb1: lea eax, [rsi + rsi*2]; add eax, 2; ret; 
0x000000000044f041: lea eax, [rsi + rsi*2]; ret; 
0x0000000000455994: lea eax, [rsp + 0x14]; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000402938: lea eax, [rsp + 8]; mov qword ptr [rdi + 0x30], rax; mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x00000000004040c9: lea eax, [rsp + rbp]; mov byte ptr [rbx], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040106f: lea ebx, [rcx]; or byte ptr [rax], al; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x0000000000453adb: lea ebx, [rsi + rdx]; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000044a07b: lea ecx, [rax + 1]; sub rcx, rdx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000042f87a: lea ecx, [rbp - 8]; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x000000000041afef: lea ecx, [rcx + 0x388b0006]; call rdx; 
0x0000000000416e68: lea ecx, [rdx + 2]; movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x0000000000419107: lea ecx, [rdx]; add eax, 0x648d4800; and al, 8; ret; 
0x000000000043b220: lea ecx, [rip + 0x3aa7a]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x00000000004392f6: lea ecx, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000439290: lea ecx, [rip + 0x3ca0a]; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439160: lea ecx, [rip + 0x3cb3a]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa6: lea ecx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000436bc5: lea ecx, [rip + 0x3f0d5]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x0000000000425af1: lea ecx, [rip + 0x5fb09]; mov byte ptr [rcx + rax], dil; ret; 
0x000000000041d7fe: lea ecx, [rip + 0x6531c]; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x0000000000459531: lea ecx, [rip + 0x8b31]; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455999: lea ecx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045598f: lea ecx, [rsp + 0x18]; lea r8, [rsp + 0x14]; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000430a4a: lea ecx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430eca: lea ecx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000045005f: lea ecx, [rsp + rdi*8 - 1]; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fa59: lea edi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa39: lea edi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa79: lea edi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b9: lea edi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d9: lea edi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x0000000000420a39: lea edi, [rax + 0x50]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000444bf1: lea edi, [rax + 1]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004458af: lea edi, [rax + 1]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000040355b: lea edi, [rax + 1]; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000407682: lea edi, [rax + 1]; mov edx, 0x20; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000044591c: lea edi, [rax + 1]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004147c9: lea edi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000040709c: lea edi, [rax + rcx]; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000040916a: lea edi, [rax + rcx]; movsx rsi, si; and edx, 0xff; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000416ff9: lea edi, [rax + rdi]; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x0000000000417090: lea edi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x000000000040bad5: lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf5: lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000041873d: lea edi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x00000000004206fd: lea edi, [rbx + 0x58]; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x00000000004208a0: lea edi, [rbx + 0x58]; xor esi, esi; call 0xe140; pop rbx; ret; 
0x000000000041ccfa: lea edi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000421b1a: lea edi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000417d6f: lea edi, [rdi + 0x3a8b0006]; call rax; 
0x000000000042e5cc: lea edi, [rdi + rax - 1]; call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x0000000000455b08: lea edi, [rip + 0x229e2]; mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000044f63b: lea edi, [rip + 0x260ff]; lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f33b: lea edi, [rip + 0x262a7]; lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f01b: lea edi, [rip + 0x26467]; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee8b: lea edi, [rip + 0x26497]; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea75: lea edi, [rip + 0x2674d]; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000045bc2e: lea edi, [rip + 0x2824c]; movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x000000000042751b: lea edi, [rip + 0x3741f]; call 0x24dc0; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000426d56: lea edi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d36: lea edi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d16: lea edi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000044594d: lea edi, [rip + 0x3e52d]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458f0: lea edi, [rip + 0x3e58a]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000444c32: lea edi, [rip + 0x3f248]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004239e4: lea edi, [rip + 0x46306]; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b8d6: lea edi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b386: lea edi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000419034: lea edi, [rip + 0x50b06]; mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041d765: lea edi, [rip + 0x65b15]; add rdi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000041d5d5: lea edi, [rip + 0x65ca5]; add rdi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d465: lea edi, [rip + 0x65e15]; add rdi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d2e5: lea edi, [rip + 0x65f95]; add rdi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041b746: lea edi, [rip + 0x696a4]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b714: lea edi, [rip + 0x696d6]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041a6be: lea edi, [rip + 0x6a3dc]; xor edx, edx; mov esi, 0xe8; call 0x22e0; pop rbx; ret; 
0x000000000041a03e: lea edi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x0000000000419ffa: lea edi, [rip + 0x6ab90]; call 0x1ad70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418142: lea edi, [rip + 0x6b838]; add rdi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x0000000000416a24: lea edi, [rip + 0x6d546]; mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000411288: lea edi, [rip + 0x72bf2]; call 0x11120; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040f223: lea edi, [rip + 0x74c57]; mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x000000000040dbe4: lea edi, [rip + 0x76176]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbc6: lea edi, [rip + 0x76194]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db74: lea edi, [rip + 0x761e6]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db56: lea edi, [rip + 0x76204]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004558c5: lea edi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045595f: lea edi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000418879: lea edi, [rsp + 0x878]; lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x0000000000458627: lea edi, [rsp + 1]; call 0x2b80; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004585d0: lea edi, [rsp + 1]; call 0x2c00; lea rsp, [rsp + 0x108]; ret; 
0x0000000000456b60: lea edi, [rsp + 1]; call 0x30d0; lea rsp, [rsp + 0x108]; ret; 
0x0000000000449d29: lea edi, [rsp + 8]; lea rax, [rip + 0x3a02c]; call qword ptr [rax + 0x10]; 
0x000000000043b533: lea edi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000041fd6c: lea edi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x000000000041fda4: lea edi, [rsp + 8]; mov rdx, rsp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x00000000004043f5: lea edx, [rax + 2]; cmp rdx, rsi; jl 0x43ff; xor eax, eax; ret; 
0x000000000040ed5e: lea edx, [rbp - 8]; lea rax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ec65: lea edx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000417021: lea edx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax + 0xc]; ret; 
0x0000000000416e31: lea edx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000416e41: lea edx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; movsxd rax, dword ptr [rax + 8]; ret; 
0x0000000000419065: lea edx, [rip + 0x1125]; cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x000000000044a1db: lea edx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a1fb: lea edx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000443a28: lea edx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x000000000043bdc6: lea edx, [rip + 0x257f4]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x000000000045cd7e: lea edx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccc1: lea edx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff9: lea edx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045afa3: lea edx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b04f: lea edx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d8: lea edx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a354: lea edx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566ea: lea edx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000433abb: lea edx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433a5b: lea edx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000447526: lea edx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x00000000004557a2: lea edx, [rip + 0x30438]; mov qword ptr [rdx + rax*8 - 0x20], 0; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x0000000000452afb: lea edx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042993b: lea edx, [rip + 0x3781f]; call 0xe180; pop rbx; ret; 
0x00000000004385ee: lea edx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043b1c1: lea edx, [rip + 0x3aad9]; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x0000000000448244: lea edx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000439a96: lea edx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042bea4: lea edx, [rip + 0x3cc46]; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x0000000000438ee0: lea edx, [rip + 0x3cdba]; mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000438db0: lea edx, [rip + 0x3ceea]; mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000437366: lea edx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437326: lea edx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e6: lea edx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f86: lea edx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x000000000042e931: lea edx, [rip + 0x43209]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000431b26: lea edx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e6: lea edx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004183cb: lea edx, [rip + 0x46207]; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000425dd3: lea edx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000415271: lea edx, [rip + 0x53809]; cmp qword ptr [rdx], 0; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000415239: lea edx, [rip + 0x53841]; cmp qword ptr [rdx], 0; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415209: lea edx, [rip + 0x53861]; cmp qword ptr [rdx], 0; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x00000000004151d9: lea edx, [rip + 0x53881]; cmp qword ptr [rdx], 0; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x000000000042c1a0: lea edx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c110: lea edx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c080: lea edx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000040526e: lea edx, [rip + 0x59174]; comisd xmm1, xmmword ptr [rdx]; jp 0x527c; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x000000000042a631: lea edx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5e6: lea edx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429da0: lea edx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d10: lea edx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c80: lea edx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273d5: lea edx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042729c: lea edx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427268: lea edx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427239: lea edx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427409: lea edx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427391: lea edx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f8: lea edx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cbe: lea edx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c72: lea edx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242a4: lea edx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042426b: lea edx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423c6d: lea edx, [rip + 0x5ee9d]; mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000424235: lea edx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242dd: lea edx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424316: lea edx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a8: lea edx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424560: lea edx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000425848: lea edx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000425868: lea edx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x00000000004244fa: lea edx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042376d: lea edx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004238db: lea edx, [rip + 0x6059f]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x00000000004236bd: lea edx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042360d: lea edx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042328d: lea edx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231dd: lea edx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042312d: lea edx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fcd: lea edx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f1d: lea edx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e6d: lea edx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422996: lea edx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422968: lea edx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422798: lea edx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422636: lea edx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225da: lea edx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042252a: lea edx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042249d: lea edx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042243e: lea edx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223be: lea edx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042235e: lea edx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222de: lea edx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421dbd: lea edx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d24: lea edx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c19: lea edx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bc0: lea edx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421afb: lea edx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a8d: lea edx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a34: lea edx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219ff: lea edx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219a4: lea edx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042196b: lea edx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042190e: lea edx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218c4: lea edx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042185b: lea edx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421814: lea edx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217ae: lea edx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421759: lea edx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216fe: lea edx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216b3: lea edx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042155d: lea edx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214bf: lea edx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421464: lea edx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042130d: lea edx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042126f: lea edx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421204: lea edx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211b4: lea edx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042114f: lea edx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042111c: lea edx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210be: lea edx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042105f: lea edx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042102c: lea edx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042057d: lea edx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420425: lea edx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420374: lea edx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420234: lea edx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420199: lea edx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c9: lea edx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042002f: lea edx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f145: lea edx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f104: lea edx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0d3: lea edx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f07e: lea edx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee33: lea edx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000040324e: lea edx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000041ecea: lea edx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb9: lea edx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec6d: lea edx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe7: lea edx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb9: lea edx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb6d: lea edx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eaed: lea edx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea7d: lea edx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea09: lea edx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e990: lea edx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e8: lea edx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000403396: lea edx, [rip + 0x655e4]; mov dword ptr [rdx], eax; call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x000000000041e695: lea edx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d865: lea edx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5f5: lea edx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e575: lea edx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4f5: lea edx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e486: lea edx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e392: lea edx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2e2: lea edx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d825: lea edx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d755: lea edx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b9: lea edx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e135: lea edx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c5: lea edx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e029: lea edx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d455: lea edx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041deca: lea edx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd9e: lea edx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2d5: lea edx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dccd: lea edx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc8a: lea edx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbdd: lea edx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db9f: lea edx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d978: lea edx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d657: lea edx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d60b: lea edx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d515: lea edx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e7: lea edx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d367: lea edx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d31b: lea edx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d217: lea edx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1cb: lea edx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cf04: lea edx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf9: lea edx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cda0: lea edx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccdb: lea edx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc6a: lea edx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cba4: lea edx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb54: lea edx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb04: lea edx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cac1: lea edx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9ea: lea edx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c964: lea edx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c646: lea edx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c552: lea edx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3b5: lea edx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c015: lea edx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf89: lea edx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf2c: lea edx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed8: lea edx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be8c: lea edx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be31: lea edx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bda1: lea edx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd15: lea edx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc5: lea edx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc73: lea edx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc32: lea edx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa1d: lea edx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b824: lea edx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7ec: lea edx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9ac: lea edx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b785: lea edx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b054: lea edx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b01c: lea edx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afb5: lea edx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a979: lea edx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a94f: lea edx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a91d: lea edx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8e6: lea edx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b4e8: lea edx, [rip + 0x698f2]; mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x000000000041838e: lea edx, [rip + 0x6a76c]; mov dword ptr [rdx], eax; call 0x18340; lea rsp, [rsp + 8]; ret; 
0x0000000000418f96: lea edx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f2f: lea edx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef7: lea edx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ec3: lea edx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418074: lea edx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e1f: lea edx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418df0: lea edx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d53: lea edx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e15: lea edx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041820e: lea edx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180d3: lea edx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180a3: lea edx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181e2: lea edx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418132: lea edx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418102: lea edx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418180: lea edx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417ebc: lea edx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc5: lea edx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d6d: lea edx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041534b: lea edx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004152ad: lea edx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041158c: lea edx, [rip + 0x7159e]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411513: lea edx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114db: lea edx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411474: lea edx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004116ee: lea edx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x00000000004116dc: lea edx, [rip + 0x7267e]; mov qword ptr [rdx + 0x30], rax; lea rax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000040db02: lea edx, [rip + 0x75038]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d9d4: lea edx, [rip + 0x75146]; mov word ptr [rdx], ax; ret; 
0x000000000040d9e4: lea edx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9f4: lea edx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d85c: lea edx, [rip + 0x752be]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040b96b: lea edx, [rip + 0x771af]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x00000000004050dc: lea edx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032f0: lea edx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032a6: lea edx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045693b: lea edx, [rip - 0x291]; lea rax, [rip + 0x1f5b8]; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x0000000000426b92: lea edx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000426b87: lea edx, [rip - 0x5d]; mov qword ptr [rax + 0x40], rdx; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x00000000004189f2: lea edx, [rip - 0x68]; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000413081: lea edx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413214: lea edx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b4: lea edx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000042629f: lea esi, [eax + 1]; lea rax, [rip + 0x5ed86]; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004262a0: lea esi, [rax + 1]; lea rax, [rip + 0x5ed86]; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x000000000041fd68: lea esi, [rax + 1]; lea rdi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x0000000000455a0b: lea esi, [rax + 2]; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043b110: lea esi, [rbp + 0x10]; xor edx, edx; call 0x3ab40; mov rsp, rbp; pop rbp; ret; 
0x00000000004390cb: lea esi, [rbp + 0x10]; xor r9d, r9d; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000041034d: lea esi, [rbp - 0x110]; call 0xdde0; mov rbx, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e93d: lea esi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000041f9a8: lea esi, [rbx + 1]; mov rdi, rax; call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x00000000004338f1: lea esi, [rdx + 1]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000042ee54: lea esi, [rdx + rax]; mov rdi, rax; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000450b8a: lea esi, [rip + 0x17ec0]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000444224: lea esi, [rip + 0x1d7c6]; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441a4: lea esi, [rip + 0x1d826]; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043e375: lea esi, [rip + 0x23245]; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043bad8: lea esi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bab9: lea esi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x00000000004528bb: lea esi, [rip + 0x25cff]; lea rax, [rsi + rcx]; ret; 
0x0000000000445ec9: lea esi, [rip + 0x2fdd1]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x0000000000429a06: lea esi, [rip + 0x37754]; call 0xe180; pop rbx; ret; 
0x000000000044804b: lea esi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000438e76: lea esi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e16: lea esi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004322cc: lea esi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f11: lea esi, [rip + 0x43d89]; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431df0: lea esi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac6: lea esi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319b0: lea esi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431686: lea esi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004239d1: lea esi, [rip + 0x46319]; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419021: lea esi, [rip + 0x50b19]; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000042ee1a: lea esi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000413415: lea esi, [rip + 0x55635]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413265: lea esi, [rip + 0x557e5]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130d5: lea esi, [rip + 0x55975]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000042388b: lea esi, [rip + 0x605ef]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423837: lea esi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x000000000042438f: lea esi, [rip + 0x60c2b]; xor edx, edx; mov edi, 4; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x00000000004241fc: lea esi, [rip + 0x60dbe]; mov edi, 4; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x000000000041b701: lea esi, [rip + 0x696e9]; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad91: lea esi, [rip + 0x69f29]; mov ecx, 0x23; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000416a11: lea esi, [rip + 0x6d559]; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db94: lea esi, [rip + 0x761c6]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db24: lea esi, [rip + 0x76236]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000414cdf: lea esi, [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043925d: lea esi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392cd: lea esi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000045b1de: lea esi, [rsp + 0x145]; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x00000000004558c0: lea esi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045595a: lea esi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045b21f: lea esi, [rsp + 0x41]; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000410425: lea esi, [rsp + 8]; call 0xdde0; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041ee84: lea esi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e62c: lea esi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000041013f: lea esi, [rsp + 8]; mov edi, 4; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000446d1f: lea esi, [rsp + 9]; mov rdi, qword ptr [rsp]; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004327cf: lea esp, [rax + rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004312bf: lea esp, [rdi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041fcd5: lea esp, [rdx + rax]; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043243f: lea esp, [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004103a3: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103e2: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410472: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104b2: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004146a8: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416a66: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c09: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c49: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004183dc: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041d7d1: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041d8b0: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004226e0: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000424fde: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000425828: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004323cd: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004325bd: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004327ad: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043299d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432b8c: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d5c: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432f3d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043313d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043332d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043352d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b0d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b5d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bad: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bfd: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434c4c: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045317d: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004540c8: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004551d1: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b62: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004584a4: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000458631: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000459542: lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000457bbc: lea esp, [rsp + 0x1010]; pop rbx; ret; 
0x000000000040d0c0: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d219: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d278: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d2c9: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d335: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d388: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d3e8: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041832e: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041effe: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000042004c: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004200e6: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004201b6: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420251: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420302: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420391: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004204fb: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000042059a: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000424f79: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004584f7: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000045c327: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000045cda3: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000045d40a: lea esp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040333c: lea esp, [rsp + 0x108]; ret; 
0x00000000004156ca: lea esp, [rsp + 0x108]; ret; 
0x0000000000415b94: lea esp, [rsp + 0x108]; ret; 
0x00000000004163d8: lea esp, [rsp + 0x108]; ret; 
0x000000000041677a: lea esp, [rsp + 0x108]; ret; 
0x000000000043caa9: lea esp, [rsp + 0x108]; ret; 
0x000000000043ffd9: lea esp, [rsp + 0x108]; ret; 
0x0000000000456b6a: lea esp, [rsp + 0x108]; ret; 
0x00000000004585da: lea esp, [rsp + 0x108]; ret; 
0x0000000000459cd9: lea esp, [rsp + 0x108]; ret; 
0x000000000040ae70: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040b366: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040ccaf: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f086: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000411243: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x00000000004140ab: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fb1: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000425731: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000427b4e: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000042e24f: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000430f81: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000444318: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000445686: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000445fae: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000446055: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044c071: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044c669: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d5aa: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d956: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044dcaa: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a9e: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000456ac2: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a185: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a217: lea esp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc8b: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413101: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413293: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041344d: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417287: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041856f: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421360: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421395: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213bf: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213f5: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421481: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215b0: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215e5: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042160f: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421645: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004216d0: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000423ea2: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043234c: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432544: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432735: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043291d: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432afc: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ce4: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ec5: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043309d: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332b5: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043348d: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434ff6: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435147: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043529e: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352ef: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435333: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043535b: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004353a5: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004353cd: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004363d3: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043646f: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a52: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a82: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443e93: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443f3d: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441b0: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000444230: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446da8: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e09: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447999: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447fd5: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044942a: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044b1ca: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044bee3: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044ed2e: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f0a0: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f4f9: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f839: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000454ace: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000454b1d: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000456f70: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b48: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b88: lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040cfe8: lea esp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040d063: lea esp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041042f: lea esp, [rsp + 0x110]; pop rbx; ret; 
0x00000000004267ef: lea esp, [rsp + 0x110]; pop rbx; ret; 
0x000000000045cc87: lea esp, [rsp + 0x128]; pop r12; pop rbx; ret; 
0x000000000043d61b: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043d7cc: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043d88b: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043d9df: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043dc4f: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043dd9b: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043def0: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043dfab: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x0000000000440d4c: lea esp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x0000000000440b7d: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x0000000000440e2d: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x0000000000440fd1: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x00000000004412a1: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x000000000044142d: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x00000000004415c2: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x000000000044169d: lea esp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x0000000000452276: lea esp, [rsp + 0x188]; pop r12; pop rbx; ret; 
0x0000000000423f66: lea esp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000042445a: lea esp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000044d186: lea esp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000450c7a: lea esp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000040c95f: lea esp, [rsp + 0x18]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e09: lea esp, [rsp + 0x18]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b26: lea esp, [rsp + 0x18]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004053d5: lea esp, [rsp + 0x18]; ret; 
0x000000000040663e: lea esp, [rsp + 0x18]; ret; 
0x000000000040ae91: lea esp, [rsp + 0x18]; ret; 
0x00000000004158df: lea esp, [rsp + 0x18]; ret; 
0x000000000041590f: lea esp, [rsp + 0x18]; ret; 
0x000000000041596e: lea esp, [rsp + 0x18]; ret; 
0x000000000041599f: lea esp, [rsp + 0x18]; ret; 
0x0000000000415d62: lea esp, [rsp + 0x18]; ret; 
0x0000000000416522: lea esp, [rsp + 0x18]; ret; 
0x000000000041689f: lea esp, [rsp + 0x18]; ret; 
0x00000000004168cf: lea esp, [rsp + 0x18]; ret; 
0x000000000041692e: lea esp, [rsp + 0x18]; ret; 
0x000000000041695f: lea esp, [rsp + 0x18]; ret; 
0x000000000042de8a: lea esp, [rsp + 0x18]; ret; 
0x000000000042deb7: lea esp, [rsp + 0x18]; ret; 
0x000000000042df8d: lea esp, [rsp + 0x18]; ret; 
0x000000000042e197: lea esp, [rsp + 0x18]; ret; 
0x000000000042eda1: lea esp, [rsp + 0x18]; ret; 
0x0000000000430a59: lea esp, [rsp + 0x18]; ret; 
0x0000000000430ed9: lea esp, [rsp + 0x18]; ret; 
0x0000000000431197: lea esp, [rsp + 0x18]; ret; 
0x0000000000431861: lea esp, [rsp + 0x18]; ret; 
0x0000000000431ca1: lea esp, [rsp + 0x18]; ret; 
0x0000000000431eae: lea esp, [rsp + 0x18]; ret; 
0x0000000000431ed1: lea esp, [rsp + 0x18]; ret; 
0x0000000000432151: lea esp, [rsp + 0x18]; ret; 
0x000000000043223f: lea esp, [rsp + 0x18]; ret; 
0x000000000043227b: lea esp, [rsp + 0x18]; ret; 
0x00000000004322a4: lea esp, [rsp + 0x18]; ret; 
0x00000000004322d8: lea esp, [rsp + 0x18]; ret; 
0x0000000000432397: lea esp, [rsp + 0x18]; ret; 
0x0000000000432587: lea esp, [rsp + 0x18]; ret; 
0x0000000000432777: lea esp, [rsp + 0x18]; ret; 
0x0000000000432967: lea esp, [rsp + 0x18]; ret; 
0x0000000000432b4e: lea esp, [rsp + 0x18]; ret; 
0x0000000000432d21: lea esp, [rsp + 0x18]; ret; 
0x0000000000432f01: lea esp, [rsp + 0x18]; ret; 
0x0000000000433101: lea esp, [rsp + 0x18]; ret; 
0x00000000004332f1: lea esp, [rsp + 0x18]; ret; 
0x00000000004334f1: lea esp, [rsp + 0x18]; ret; 
0x0000000000436c7e: lea esp, [rsp + 0x18]; ret; 
0x0000000000438d8f: lea esp, [rsp + 0x18]; ret; 
0x0000000000439145: lea esp, [rsp + 0x18]; ret; 
0x0000000000439730: lea esp, [rsp + 0x18]; ret; 
0x0000000000439773: lea esp, [rsp + 0x18]; ret; 
0x000000000043a932: lea esp, [rsp + 0x18]; ret; 
0x000000000043a997: lea esp, [rsp + 0x18]; ret; 
0x000000000043b20b: lea esp, [rsp + 0x18]; ret; 
0x000000000043c16b: lea esp, [rsp + 0x18]; ret; 
0x0000000000443886: lea esp, [rsp + 0x18]; ret; 
0x0000000000443f95: lea esp, [rsp + 0x18]; ret; 
0x0000000000443fc7: lea esp, [rsp + 0x18]; ret; 
0x0000000000443fec: lea esp, [rsp + 0x18]; ret; 
0x0000000000446e92: lea esp, [rsp + 0x18]; ret; 
0x00000000004477c1: lea esp, [rsp + 0x18]; ret; 
0x0000000000447807: lea esp, [rsp + 0x18]; ret; 
0x0000000000447847: lea esp, [rsp + 0x18]; ret; 
0x00000000004478be: lea esp, [rsp + 0x18]; ret; 
0x0000000000447902: lea esp, [rsp + 0x18]; ret; 
0x0000000000447942: lea esp, [rsp + 0x18]; ret; 
0x0000000000450bef: lea esp, [rsp + 0x18]; ret; 
0x0000000000450e6d: lea esp, [rsp + 0x18]; ret; 
0x00000000004546d4: lea esp, [rsp + 0x18]; ret; 
0x00000000004559d4: lea esp, [rsp + 0x18]; ret; 
0x0000000000455a17: lea esp, [rsp + 0x18]; ret; 
0x00000000004587fb: lea esp, [rsp + 0x18]; ret; 
0x00000000004588e3: lea esp, [rsp + 0x18]; ret; 
0x0000000000459f01: lea esp, [rsp + 0x18]; ret; 
0x000000000045b1ee: lea esp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045b22c: lea esp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000444f1f: lea esp, [rsp + 0x1b0]; pop rbx; ret; 
0x00000000004461a9: lea esp, [rsp + 0x1b8]; pop r12; pop rbx; ret; 
0x0000000000416ab3: lea esp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000427527: lea esp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000410264: lea esp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x000000000041c762: lea esp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x000000000041c7b2: lea esp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000420dc2: lea esp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000420e12: lea esp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000407ded: lea esp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d5a: lea esp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000451245: lea esp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a0a: lea esp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x00000000004130b5: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004131b5: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041323c: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004133f0: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042dcd4: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000444057: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000453ae2: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000455928: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456042: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456f3e: lea esp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041014e: lea esp, [rsp + 0x210]; pop rbx; ret; 
0x00000000004101e2: lea esp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000424bc8: lea esp, [rsp + 0x210]; pop rbx; ret; 
0x00000000004100d7: lea esp, [rsp + 0x220]; pop rbx; ret; 
0x000000000041ce58: lea esp, [rsp + 0x268]; pop r12; pop rbx; ret; 
0x0000000000421c78: lea esp, [rsp + 0x268]; pop r12; pop rbx; ret; 
0x0000000000414648: lea esp, [rsp + 0x278]; pop r12; pop rbx; ret; 
0x000000000045bb35: lea esp, [rsp + 0x288]; pop r12; pop rbx; ret; 
0x000000000041334c: lea esp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x0000000000413516: lea esp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x00000000004241ae: lea esp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x000000000042f613: lea esp, [rsp + 0x28]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000404f02: lea esp, [rsp + 0x28]; ret; 
0x00000000004054ac: lea esp, [rsp + 0x28]; ret; 
0x00000000004067b6: lea esp, [rsp + 0x28]; ret; 
0x0000000000406a6b: lea esp, [rsp + 0x28]; ret; 
0x0000000000406d5b: lea esp, [rsp + 0x28]; ret; 
0x000000000040a016: lea esp, [rsp + 0x28]; ret; 
0x000000000040b91b: lea esp, [rsp + 0x28]; ret; 
0x000000000040b954: lea esp, [rsp + 0x28]; ret; 
0x0000000000413f9c: lea esp, [rsp + 0x28]; ret; 
0x0000000000417bb0: lea esp, [rsp + 0x28]; ret; 
0x0000000000438e08: lea esp, [rsp + 0x28]; ret; 
0x0000000000438e68: lea esp, [rsp + 0x28]; ret; 
0x0000000000438ec7: lea esp, [rsp + 0x28]; ret; 
0x0000000000438f57: lea esp, [rsp + 0x28]; ret; 
0x00000000004391b5: lea esp, [rsp + 0x28]; ret; 
0x0000000000439215: lea esp, [rsp + 0x28]; ret; 
0x000000000043926d: lea esp, [rsp + 0x28]; ret; 
0x00000000004392dd: lea esp, [rsp + 0x28]; ret; 
0x000000000043b40d: lea esp, [rsp + 0x28]; ret; 
0x0000000000443858: lea esp, [rsp + 0x28]; ret; 
0x0000000000446d2d: lea esp, [rsp + 0x28]; ret; 
0x0000000000446e71: lea esp, [rsp + 0x28]; ret; 
0x0000000000446f0c: lea esp, [rsp + 0x28]; ret; 
0x0000000000451345: lea esp, [rsp + 0x28]; ret; 
0x00000000004558cf: lea esp, [rsp + 0x28]; ret; 
0x0000000000455969: lea esp, [rsp + 0x28]; ret; 
0x00000000004559a3: lea esp, [rsp + 0x28]; ret; 
0x000000000042796e: lea esp, [rsp + 0x30]; pop r13; pop r12; pop rbx; ret; 
0x00000000004046a2: lea esp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000404722: lea esp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047da: lea esp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000424621: lea esp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004277c3: lea esp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004222ab: lea esp, [rsp + 0x320]; pop rbx; ret; 
0x0000000000443707: lea esp, [rsp + 0x38]; ret; 
0x0000000000409fcd: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x0000000000428033: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x00000000004280fe: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x00000000004282b6: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a260: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a316: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a493: lea esp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x0000000000406532: lea esp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000456f0b: lea esp, [rsp + 0x48]; ret; 
0x000000000045ba40: lea esp, [rsp + 0x48]; ret; 
0x0000000000404862: lea esp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000458368: lea esp, [rsp + 0x50]; pop rbx; ret; 
0x00000000004283bf: lea esp, [rsp + 0x60]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a580: lea esp, [rsp + 0x60]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f112: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f1b2: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f470: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f65e: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f6f0: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410e26: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f22: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411014: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411096: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411118: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411844: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415755: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415837: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004158b7: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415d03: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416809: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416b42: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416bd2: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416ce2: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416d72: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c838: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c8b8: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c939: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d098: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d118: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d199: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c18: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c98: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420e98: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f18: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f99: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421ea8: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421f28: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421fa9: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004230d8: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004235b2: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000428e4a: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042b07a: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c4ba: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c5ca: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c76a: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c7fa: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c90a: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042cb4a: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042e772: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000433b86: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043da70: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043db8f: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043de32: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043e1bf: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044105f: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044197d: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000441c38: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000447513: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000448346: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004483ef: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004484a4: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044e617: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044f1d7: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044f627: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000453e41: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004565ac: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004570e0: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457992: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457a22: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457b52: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457cfc: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457eb2: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458102: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458192: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458240: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004582d2: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458457: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004589d3: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045b643: lea esp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040c462: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fdba: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e31b: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e4bf: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f3cc: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f47b: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000430188: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000430268: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447297: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044cf30: lea esp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000422836: lea esp, [rsp + 0x68]; ret; 
0x00000000004228f4: lea esp, [rsp + 0x68]; ret; 
0x00000000004229cf: lea esp, [rsp + 0x68]; ret; 
0x000000000044c5fe: lea esp, [rsp + 0x68]; ret; 
0x000000000044c870: lea esp, [rsp + 0x68]; ret; 
0x000000000044c91b: lea esp, [rsp + 0x68]; ret; 
0x000000000044cbcb: lea esp, [rsp + 0x68]; ret; 
0x000000000044cc6b: lea esp, [rsp + 0x68]; ret; 
0x000000000044cd0b: lea esp, [rsp + 0x68]; ret; 
0x000000000040d937: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040ddc8: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e12c: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f286: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f346: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f3d8: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f536: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f5c8: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d4: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa64: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf4: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x00000000004118f1: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041c265: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041c4b5: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041fc1e: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041fe29: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000420856: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x00000000004233aa: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042c662: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042cd02: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042d394: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042dae5: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042dbd5: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042e306: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef4e: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043d926: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043e76a: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebb8: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef57: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000440ef1: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044201c: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442527: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442979: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000449375: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044b115: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044bfe5: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e1ab: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e31b: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e49b: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044f446: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c93: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457aba: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c5a: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e1a: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a833: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c3: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a953: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e3: lea esp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e4e9: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040e5d0: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040e66f: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000415c1e: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000416463: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041b654: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c306: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422ec1: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422f71: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423021: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423181: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423231: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004232e1: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042342e: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004234ae: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042352e: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423661: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423711: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004237c1: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c542: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c6e2: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c882: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c992: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042cac2: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042e83a: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043d711: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043daff: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dce1: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004505ef: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450692: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450860: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000453da6: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045526d: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004553b2: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004560e6: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000456198: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004566a2: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457d8a: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457f3a: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457fba: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045858c: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458a57: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045c3f1: lea esp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040c82a: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ca5c: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040fe97: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ff87: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000416e28: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041c3fe: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041eedc: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042a02d: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042c42d: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042ca3f: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042d79b: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043e8c9: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043eb27: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043ed29: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004411c1: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004414e4: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004418d1: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004421cb: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000442489: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004426db: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000445f60: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000044d27d: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004504fa: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000453461: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045531b: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000455460: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004562f6: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000457900: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000458070: lea esp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040bc10: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004153f8: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cf0d: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cfed: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b2: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6ed: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c3: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f3: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450d60: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450e00: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000458dad: lea esp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b580: lea esp, [rsp + 0x78]; ret; 
0x000000000044961d: lea esp, [rsp + 0x78]; ret; 
0x000000000044b3bd: lea esp, [rsp + 0x78]; ret; 
0x0000000000425c01: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004368ab: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043c299: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000440c93: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441111: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441353: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044777f: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044992c: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044b6cc: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044cb1d: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044ce12: lea esp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004449a8: lea esp, [rsp + 0x88]; pop r12; pop rbx; ret; 
0x0000000000426e9d: lea esp, [rsp + 0x88]; ret; 
0x0000000000453680: lea esp, [rsp + 0x88]; ret; 
0x000000000041bc90: lea esp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bfa9: lea esp, [rsp + 0x90]; pop rbx; ret; 
0x000000000043c60d: lea esp, [rsp + 0x90]; pop rbx; ret; 
0x00000000004188c3: lea esp, [rsp + 0x980]; pop rbx; ret; 
0x000000000043c40b: lea esp, [rsp + 0x98]; pop r12; pop rbx; ret; 
0x0000000000453cd0: lea esp, [rsp + 0x98]; ret; 
0x0000000000455100: lea esp, [rsp + 0x98]; ret; 
0x00000000004514fc: lea esp, [rsp + 0xc0]; pop rbx; ret; 
0x00000000004136c9: lea esp, [rsp + 0xd8]; ret; 
0x000000000043c74f: lea esp, [rsp + 0xd8]; ret; 
0x000000000043fc7f: lea esp, [rsp + 0xd8]; ret; 
0x000000000044e75d: lea esp, [rsp + 0xd8]; ret; 
0x000000000044ee73: lea esp, [rsp + 0xd8]; ret; 
0x000000000044f003: lea esp, [rsp + 0xd8]; ret; 
0x000000000044f31a: lea esp, [rsp + 0xd8]; ret; 
0x000000000044f9b7: lea esp, [rsp + 0xd8]; ret; 
0x000000000044fc1d: lea esp, [rsp + 0xd8]; ret; 
0x0000000000455637: lea esp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000455767: lea esp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000414962: lea esp, [rsp + 0xe8]; ret; 
0x000000000043c8c8: lea esp, [rsp + 0xe8]; ret; 
0x000000000043cc17: lea esp, [rsp + 0xe8]; ret; 
0x000000000043cd5c: lea esp, [rsp + 0xe8]; ret; 
0x000000000043ceae: lea esp, [rsp + 0xe8]; ret; 
0x000000000043fdf8: lea esp, [rsp + 0xe8]; ret; 
0x0000000000440147: lea esp, [rsp + 0xe8]; ret; 
0x000000000044028c: lea esp, [rsp + 0xe8]; ret; 
0x00000000004403de: lea esp, [rsp + 0xe8]; ret; 
0x000000000044e8b5: lea esp, [rsp + 0xe8]; ret; 
0x0000000000451657: lea esp, [rsp + 0xe8]; ret; 
0x000000000045196a: lea esp, [rsp + 0xe8]; ret; 
0x0000000000451c9d: lea esp, [rsp + 0xe8]; ret; 
0x0000000000451fe0: lea esp, [rsp + 0xe8]; ret; 
0x00000000004525ca: lea esp, [rsp + 0xe8]; ret; 
0x000000000044ea4f: lea esp, [rsp + 0xf8]; ret; 
0x000000000045384b: lea esp, [rsp + 0xf8]; ret; 
0x0000000000402d28: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403d41: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404af7: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404bbb: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c10: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c63: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000405162: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406813: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406991: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406a42: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406aca: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c8d: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406d33: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406db8: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f0d: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040bb26: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040c4b2: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d6a4: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040de22: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df4a: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df9a: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e171: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e6a9: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e768: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040fb65: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041004d: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411294: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004112e4: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004113d5: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411445: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413053: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413713: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041474b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004147ab: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f0b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041507c: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e58: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e88: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415eb8: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f08: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f38: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f65: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f98: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fc8: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415ff8: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416028: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416058: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416088: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041717c: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041738c: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417b76: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418c8f: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004194b8: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419530: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419732: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004197b0: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419fab: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a006: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a259: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2b1: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2f9: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ae1f: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041bbe5: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041c67b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041cae7: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d2b1: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d42e: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d599: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d72a: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f169: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f71e: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f811: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fc7b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fcdc: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ff5b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420903: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209d2: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a24: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420aa2: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b3e: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b94: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421098: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042118d: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421779: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421834: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421988: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000422331: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000422396: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000423c58: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427790: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042787a: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427b94: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042bd53: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042be38: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d5f7: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db12: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db42: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f266: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f298: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f2c7: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042fc59: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000430ad6: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004311c7: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431737: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431767: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b77: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431ba7: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432027: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432057: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004338ad: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433aa2: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433b02: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433c07: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004399e0: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000439a1e: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cf2a: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cfe2: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043e6a4: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044045a: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000440512: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000441f37: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000443da3: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004441f6: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444276: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004442c0: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a02: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a54: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447b9b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447e25: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004480a4: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044b98b: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bab5: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bc9c: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bf52: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c012: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044d0c2: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044dfd4: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f9fc: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450bb6: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045325f: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004532a5: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000453355: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000453fbb: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456bd6: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456c38: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456cdc: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458682: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458731: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458b04: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458c10: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f4d: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f98: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a042: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a088: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045bddf: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c174: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1ca: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c204: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c244: lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000402da7: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b1b: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f3: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040723c: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004073c7: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407447: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c51e: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c616: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb30: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a3: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d6ff: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040da6a: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f75d: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc29: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412db6: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413850: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041392c: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f3c: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a179: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a20d: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1a9: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e152: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f39a: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5f5: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042062e: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042076d: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042132a: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042157a: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d02: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b1f: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042772d: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042821a: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5a6: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000431238: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea4: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f14: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043d15b: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044068e: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004439ab: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e3c: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445fff: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b3f: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c14: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f03: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f83: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044be63: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453efc: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f4c: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004599fd: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e3: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c740: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7be: lea esp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004029dd: lea esp, [rsp + 8]; ret; 
0x0000000000402a18: lea esp, [rsp + 8]; ret; 
0x0000000000402a63: lea esp, [rsp + 8]; ret; 
0x0000000000402a92: lea esp, [rsp + 8]; ret; 
0x0000000000402ab3: lea esp, [rsp + 8]; ret; 
0x0000000000402adc: lea esp, [rsp + 8]; ret; 
0x0000000000402b09: lea esp, [rsp + 8]; ret; 
0x0000000000402b2c: lea esp, [rsp + 8]; ret; 
0x0000000000402b53: lea esp, [rsp + 8]; ret; 
0x0000000000402b76: lea esp, [rsp + 8]; ret; 
0x0000000000402b96: lea esp, [rsp + 8]; ret; 
0x0000000000402bb3: lea esp, [rsp + 8]; ret; 
0x0000000000402bd6: lea esp, [rsp + 8]; ret; 
0x0000000000402bf3: lea esp, [rsp + 8]; ret; 
0x0000000000402dd3: lea esp, [rsp + 8]; ret; 
0x0000000000402e27: lea esp, [rsp + 8]; ret; 
0x0000000000402e46: lea esp, [rsp + 8]; ret; 
0x0000000000402e66: lea esp, [rsp + 8]; ret; 
0x0000000000402e80: lea esp, [rsp + 8]; ret; 
0x0000000000402eaf: lea esp, [rsp + 8]; ret; 
0x0000000000402ed6: lea esp, [rsp + 8]; ret; 
0x0000000000402ef3: lea esp, [rsp + 8]; ret; 
0x0000000000402f16: lea esp, [rsp + 8]; ret; 
0x0000000000402f43: lea esp, [rsp + 8]; ret; 
0x0000000000402f66: lea esp, [rsp + 8]; ret; 
0x0000000000402f89: lea esp, [rsp + 8]; ret; 
0x0000000000402fac: lea esp, [rsp + 8]; ret; 
0x0000000000402fd0: lea esp, [rsp + 8]; ret; 
0x0000000000402ff9: lea esp, [rsp + 8]; ret; 
0x0000000000403022: lea esp, [rsp + 8]; ret; 
0x0000000000403046: lea esp, [rsp + 8]; ret; 
0x0000000000403066: lea esp, [rsp + 8]; ret; 
0x0000000000403086: lea esp, [rsp + 8]; ret; 
0x00000000004030a6: lea esp, [rsp + 8]; ret; 
0x00000000004030c6: lea esp, [rsp + 8]; ret; 
0x00000000004033a4: lea esp, [rsp + 8]; ret; 
0x0000000000403451: lea esp, [rsp + 8]; ret; 
0x0000000000403471: lea esp, [rsp + 8]; ret; 
0x0000000000403491: lea esp, [rsp + 8]; ret; 
0x00000000004034b1: lea esp, [rsp + 8]; ret; 
0x00000000004034cb: lea esp, [rsp + 8]; ret; 
0x00000000004034dd: lea esp, [rsp + 8]; ret; 
0x0000000000403501: lea esp, [rsp + 8]; ret; 
0x0000000000403540: lea esp, [rsp + 8]; ret; 
0x0000000000404219: lea esp, [rsp + 8]; ret; 
0x0000000000404530: lea esp, [rsp + 8]; ret; 
0x00000000004048bb: lea esp, [rsp + 8]; ret; 
0x00000000004048cb: lea esp, [rsp + 8]; ret; 
0x00000000004048db: lea esp, [rsp + 8]; ret; 
0x00000000004048eb: lea esp, [rsp + 8]; ret; 
0x000000000040499b: lea esp, [rsp + 8]; ret; 
0x00000000004049ab: lea esp, [rsp + 8]; ret; 
0x00000000004049bb: lea esp, [rsp + 8]; ret; 
0x00000000004049cb: lea esp, [rsp + 8]; ret; 
0x0000000000404ebf: lea esp, [rsp + 8]; ret; 
0x0000000000404f7b: lea esp, [rsp + 8]; ret; 
0x0000000000404f8b: lea esp, [rsp + 8]; ret; 
0x000000000040508a: lea esp, [rsp + 8]; ret; 
0x000000000040518f: lea esp, [rsp + 8]; ret; 
0x00000000004051be: lea esp, [rsp + 8]; ret; 
0x0000000000407025: lea esp, [rsp + 8]; ret; 
0x00000000004070a5: lea esp, [rsp + 8]; ret; 
0x00000000004075f1: lea esp, [rsp + 8]; ret; 
0x0000000000407611: lea esp, [rsp + 8]; ret; 
0x0000000000407631: lea esp, [rsp + 8]; ret; 
0x0000000000407690: lea esp, [rsp + 8]; ret; 
0x0000000000407b62: lea esp, [rsp + 8]; ret; 
0x0000000000408751: lea esp, [rsp + 8]; ret; 
0x00000000004087b9: lea esp, [rsp + 8]; ret; 
0x00000000004087e0: lea esp, [rsp + 8]; ret; 
0x000000000040917d: lea esp, [rsp + 8]; ret; 
0x0000000000409295: lea esp, [rsp + 8]; ret; 
0x0000000000409488: lea esp, [rsp + 8]; ret; 
0x0000000000409e20: lea esp, [rsp + 8]; ret; 
0x0000000000409e4e: lea esp, [rsp + 8]; ret; 
0x0000000000409ec3: lea esp, [rsp + 8]; ret; 
0x000000000040a1a9: lea esp, [rsp + 8]; ret; 
0x000000000040b04e: lea esp, [rsp + 8]; ret; 
0x000000000040b7ef: lea esp, [rsp + 8]; ret; 
0x000000000040b8d1: lea esp, [rsp + 8]; ret; 
0x000000000040b9a0: lea esp, [rsp + 8]; ret; 
0x000000000040b9cd: lea esp, [rsp + 8]; ret; 
0x000000000040ba06: lea esp, [rsp + 8]; ret; 
0x000000000040ba6c: lea esp, [rsp + 8]; ret; 
0x000000000040bade: lea esp, [rsp + 8]; ret; 
0x000000000040d9ca: lea esp, [rsp + 8]; ret; 
0x000000000040dadb: lea esp, [rsp + 8]; ret; 
0x000000000040dcfe: lea esp, [rsp + 8]; ret; 
0x000000000040e51f: lea esp, [rsp + 8]; ret; 
0x000000000040e6ff: lea esp, [rsp + 8]; ret; 
0x000000000040f12b: lea esp, [rsp + 8]; ret; 
0x000000000040feb3: lea esp, [rsp + 8]; ret; 
0x000000000040ffa3: lea esp, [rsp + 8]; ret; 
0x00000000004115ae: lea esp, [rsp + 8]; ret; 
0x00000000004115cb: lea esp, [rsp + 8]; ret; 
0x00000000004115de: lea esp, [rsp + 8]; ret; 
0x00000000004115fb: lea esp, [rsp + 8]; ret; 
0x000000000041173e: lea esp, [rsp + 8]; ret; 
0x00000000004117cb: lea esp, [rsp + 8]; ret; 
0x0000000000412f0b: lea esp, [rsp + 8]; ret; 
0x0000000000412f4f: lea esp, [rsp + 8]; ret; 
0x0000000000412f88: lea esp, [rsp + 8]; ret; 
0x0000000000413017: lea esp, [rsp + 8]; ret; 
0x00000000004131de: lea esp, [rsp + 8]; ret; 
0x000000000041337f: lea esp, [rsp + 8]; ret; 
0x0000000000413551: lea esp, [rsp + 8]; ret; 
0x000000000041373c: lea esp, [rsp + 8]; ret; 
0x0000000000413bba: lea esp, [rsp + 8]; ret; 
0x0000000000413bd5: lea esp, [rsp + 8]; ret; 
0x000000000041433b: lea esp, [rsp + 8]; ret; 
0x00000000004146e5: lea esp, [rsp + 8]; ret; 
0x00000000004146ff: lea esp, [rsp + 8]; ret; 
0x00000000004147d2: lea esp, [rsp + 8]; ret; 
0x00000000004147f9: lea esp, [rsp + 8]; ret; 
0x0000000000414817: lea esp, [rsp + 8]; ret; 
0x0000000000414986: lea esp, [rsp + 8]; ret; 
0x00000000004149a7: lea esp, [rsp + 8]; ret; 
0x00000000004149c7: lea esp, [rsp + 8]; ret; 
0x00000000004149e5: lea esp, [rsp + 8]; ret; 
0x0000000000414a15: lea esp, [rsp + 8]; ret; 
0x0000000000414a49: lea esp, [rsp + 8]; ret; 
0x0000000000414ae4: lea esp, [rsp + 8]; ret; 
0x0000000000414ce4: lea esp, [rsp + 8]; ret; 
0x00000000004150e4: lea esp, [rsp + 8]; ret; 
0x0000000000415103: lea esp, [rsp + 8]; ret; 
0x0000000000415128: lea esp, [rsp + 8]; ret; 
0x00000000004151c2: lea esp, [rsp + 8]; ret; 
0x00000000004151f2: lea esp, [rsp + 8]; ret; 
0x0000000000415222: lea esp, [rsp + 8]; ret; 
0x0000000000415252: lea esp, [rsp + 8]; ret; 
0x000000000041528a: lea esp, [rsp + 8]; ret; 
0x000000000041542b: lea esp, [rsp + 8]; ret; 
0x000000000041546c: lea esp, [rsp + 8]; ret; 
0x000000000041548c: lea esp, [rsp + 8]; ret; 
0x00000000004154ac: lea esp, [rsp + 8]; ret; 
0x00000000004154cc: lea esp, [rsp + 8]; ret; 
0x00000000004154ec: lea esp, [rsp + 8]; ret; 
0x000000000041550c: lea esp, [rsp + 8]; ret; 
0x000000000041553d: lea esp, [rsp + 8]; ret; 
0x000000000041556b: lea esp, [rsp + 8]; ret; 
0x000000000041558d: lea esp, [rsp + 8]; ret; 
0x00000000004155ba: lea esp, [rsp + 8]; ret; 
0x00000000004155d1: lea esp, [rsp + 8]; ret; 
0x00000000004155f1: lea esp, [rsp + 8]; ret; 
0x000000000041560c: lea esp, [rsp + 8]; ret; 
0x000000000041562c: lea esp, [rsp + 8]; ret; 
0x000000000041564c: lea esp, [rsp + 8]; ret; 
0x0000000000415679: lea esp, [rsp + 8]; ret; 
0x0000000000415698: lea esp, [rsp + 8]; ret; 
0x000000000041576c: lea esp, [rsp + 8]; ret; 
0x000000000041578c: lea esp, [rsp + 8]; ret; 
0x00000000004157ac: lea esp, [rsp + 8]; ret; 
0x00000000004159ca: lea esp, [rsp + 8]; ret; 
0x00000000004159dc: lea esp, [rsp + 8]; ret; 
0x0000000000415a01: lea esp, [rsp + 8]; ret; 
0x0000000000415a21: lea esp, [rsp + 8]; ret; 
0x0000000000415a3f: lea esp, [rsp + 8]; ret; 
0x0000000000415a61: lea esp, [rsp + 8]; ret; 
0x0000000000415a7f: lea esp, [rsp + 8]; ret; 
0x0000000000415a9c: lea esp, [rsp + 8]; ret; 
0x0000000000415abc: lea esp, [rsp + 8]; ret; 
0x0000000000415adc: lea esp, [rsp + 8]; ret; 
0x0000000000415afc: lea esp, [rsp + 8]; ret; 
0x0000000000415b1c: lea esp, [rsp + 8]; ret; 
0x0000000000415b4b: lea esp, [rsp + 8]; ret; 
0x0000000000415b68: lea esp, [rsp + 8]; ret; 
0x0000000000415c3c: lea esp, [rsp + 8]; ret; 
0x0000000000415c5c: lea esp, [rsp + 8]; ret; 
0x0000000000415c7c: lea esp, [rsp + 8]; ret; 
0x0000000000415d24: lea esp, [rsp + 8]; ret; 
0x0000000000415d44: lea esp, [rsp + 8]; ret; 
0x0000000000415d82: lea esp, [rsp + 8]; ret; 
0x0000000000415da4: lea esp, [rsp + 8]; ret; 
0x0000000000415dc2: lea esp, [rsp + 8]; ret; 
0x0000000000415ddc: lea esp, [rsp + 8]; ret; 
0x0000000000415dfc: lea esp, [rsp + 8]; ret; 
0x0000000000415e1c: lea esp, [rsp + 8]; ret; 
0x00000000004160c1: lea esp, [rsp + 8]; ret; 
0x00000000004160e1: lea esp, [rsp + 8]; ret; 
0x0000000000416101: lea esp, [rsp + 8]; ret; 
0x0000000000416121: lea esp, [rsp + 8]; ret; 
0x0000000000416141: lea esp, [rsp + 8]; ret; 
0x000000000041615c: lea esp, [rsp + 8]; ret; 
0x000000000041623c: lea esp, [rsp + 8]; ret; 
0x0000000000416261: lea esp, [rsp + 8]; ret; 
0x000000000041627f: lea esp, [rsp + 8]; ret; 
0x00000000004162a1: lea esp, [rsp + 8]; ret; 
0x00000000004162bf: lea esp, [rsp + 8]; ret; 
0x00000000004162dc: lea esp, [rsp + 8]; ret; 
0x00000000004162fc: lea esp, [rsp + 8]; ret; 
0x000000000041631c: lea esp, [rsp + 8]; ret; 
0x000000000041633c: lea esp, [rsp + 8]; ret; 
0x000000000041635c: lea esp, [rsp + 8]; ret; 
0x000000000041638b: lea esp, [rsp + 8]; ret; 
0x00000000004163a8: lea esp, [rsp + 8]; ret; 
0x000000000041647c: lea esp, [rsp + 8]; ret; 
0x000000000041649c: lea esp, [rsp + 8]; ret; 
0x00000000004164bc: lea esp, [rsp + 8]; ret; 
0x00000000004164e4: lea esp, [rsp + 8]; ret; 
0x0000000000416504: lea esp, [rsp + 8]; ret; 
0x0000000000416542: lea esp, [rsp + 8]; ret; 
0x0000000000416564: lea esp, [rsp + 8]; ret; 
0x0000000000416582: lea esp, [rsp + 8]; ret; 
0x000000000041659c: lea esp, [rsp + 8]; ret; 
0x00000000004165bc: lea esp, [rsp + 8]; ret; 
0x00000000004165ed: lea esp, [rsp + 8]; ret; 
0x000000000041661b: lea esp, [rsp + 8]; ret; 
0x000000000041663d: lea esp, [rsp + 8]; ret; 
0x000000000041666b: lea esp, [rsp + 8]; ret; 
0x0000000000416689: lea esp, [rsp + 8]; ret; 
0x00000000004166aa: lea esp, [rsp + 8]; ret; 
0x00000000004166c1: lea esp, [rsp + 8]; ret; 
0x00000000004166e1: lea esp, [rsp + 8]; ret; 
0x00000000004166fc: lea esp, [rsp + 8]; ret; 
0x0000000000416729: lea esp, [rsp + 8]; ret; 
0x0000000000416748: lea esp, [rsp + 8]; ret; 
0x000000000041682c: lea esp, [rsp + 8]; ret; 
0x000000000041684c: lea esp, [rsp + 8]; ret; 
0x000000000041686c: lea esp, [rsp + 8]; ret; 
0x000000000041698a: lea esp, [rsp + 8]; ret; 
0x000000000041699c: lea esp, [rsp + 8]; ret; 
0x00000000004169ca: lea esp, [rsp + 8]; ret; 
0x000000000041766b: lea esp, [rsp + 8]; ret; 
0x00000000004177fb: lea esp, [rsp + 8]; ret; 
0x000000000041780b: lea esp, [rsp + 8]; ret; 
0x0000000000417ded: lea esp, [rsp + 8]; ret; 
0x0000000000417e30: lea esp, [rsp + 8]; ret; 
0x0000000000417f7f: lea esp, [rsp + 8]; ret; 
0x0000000000418152: lea esp, [rsp + 8]; ret; 
0x0000000000418350: lea esp, [rsp + 8]; ret; 
0x000000000041836b: lea esp, [rsp + 8]; ret; 
0x000000000041839c: lea esp, [rsp + 8]; ret; 
0x00000000004185a9: lea esp, [rsp + 8]; ret; 
0x000000000041864d: lea esp, [rsp + 8]; ret; 
0x000000000041866d: lea esp, [rsp + 8]; ret; 
0x000000000041869f: lea esp, [rsp + 8]; ret; 
0x0000000000418aed: lea esp, [rsp + 8]; ret; 
0x000000000041901b: lea esp, [rsp + 8]; ret; 
0x00000000004190ab: lea esp, [rsp + 8]; ret; 
0x00000000004190bc: lea esp, [rsp + 8]; ret; 
0x00000000004190db: lea esp, [rsp + 8]; ret; 
0x00000000004190ec: lea esp, [rsp + 8]; ret; 
0x000000000041910c: lea esp, [rsp + 8]; ret; 
0x000000000041912c: lea esp, [rsp + 8]; ret; 
0x000000000041914c: lea esp, [rsp + 8]; ret; 
0x000000000041916b: lea esp, [rsp + 8]; ret; 
0x000000000041917c: lea esp, [rsp + 8]; ret; 
0x000000000041919b: lea esp, [rsp + 8]; ret; 
0x00000000004191ac: lea esp, [rsp + 8]; ret; 
0x00000000004191cc: lea esp, [rsp + 8]; ret; 
0x00000000004191f2: lea esp, [rsp + 8]; ret; 
0x000000000041920c: lea esp, [rsp + 8]; ret; 
0x000000000041922c: lea esp, [rsp + 8]; ret; 
0x000000000041958f: lea esp, [rsp + 8]; ret; 
0x000000000041a741: lea esp, [rsp + 8]; ret; 
0x000000000041aa4c: lea esp, [rsp + 8]; ret; 
0x000000000041aa7d: lea esp, [rsp + 8]; ret; 
0x000000000041aaae: lea esp, [rsp + 8]; ret; 
0x000000000041aade: lea esp, [rsp + 8]; ret; 
0x000000000041ab0f: lea esp, [rsp + 8]; ret; 
0x000000000041ab2d: lea esp, [rsp + 8]; ret; 
0x000000000041ab4c: lea esp, [rsp + 8]; ret; 
0x000000000041ab6b: lea esp, [rsp + 8]; ret; 
0x000000000041ab7c: lea esp, [rsp + 8]; ret; 
0x000000000041ab9c: lea esp, [rsp + 8]; ret; 
0x000000000041abbc: lea esp, [rsp + 8]; ret; 
0x000000000041abdc: lea esp, [rsp + 8]; ret; 
0x000000000041abfc: lea esp, [rsp + 8]; ret; 
0x000000000041ac1c: lea esp, [rsp + 8]; ret; 
0x000000000041ac3c: lea esp, [rsp + 8]; ret; 
0x000000000041ac5c: lea esp, [rsp + 8]; ret; 
0x000000000041ac7c: lea esp, [rsp + 8]; ret; 
0x000000000041ac9c: lea esp, [rsp + 8]; ret; 
0x000000000041acbc: lea esp, [rsp + 8]; ret; 
0x000000000041acdc: lea esp, [rsp + 8]; ret; 
0x000000000041acfc: lea esp, [rsp + 8]; ret; 
0x000000000041ad1c: lea esp, [rsp + 8]; ret; 
0x000000000041ad3c: lea esp, [rsp + 8]; ret; 
0x000000000041ad5c: lea esp, [rsp + 8]; ret; 
0x000000000041ad7c: lea esp, [rsp + 8]; ret; 
0x000000000041ae3c: lea esp, [rsp + 8]; ret; 
0x000000000041ae5c: lea esp, [rsp + 8]; ret; 
0x000000000041ae7c: lea esp, [rsp + 8]; ret; 
0x000000000041ae9c: lea esp, [rsp + 8]; ret; 
0x000000000041aebc: lea esp, [rsp + 8]; ret; 
0x000000000041aedc: lea esp, [rsp + 8]; ret; 
0x000000000041aefc: lea esp, [rsp + 8]; ret; 
0x000000000041af1c: lea esp, [rsp + 8]; ret; 
0x000000000041af3c: lea esp, [rsp + 8]; ret; 
0x000000000041af5c: lea esp, [rsp + 8]; ret; 
0x000000000041af7c: lea esp, [rsp + 8]; ret; 
0x000000000041b07e: lea esp, [rsp + 8]; ret; 
0x000000000041b0a2: lea esp, [rsp + 8]; ret; 
0x000000000041b0bd: lea esp, [rsp + 8]; ret; 
0x000000000041b0e0: lea esp, [rsp + 8]; ret; 
0x000000000041b100: lea esp, [rsp + 8]; ret; 
0x000000000041b11d: lea esp, [rsp + 8]; ret; 
0x000000000041b140: lea esp, [rsp + 8]; ret; 
0x000000000041b178: lea esp, [rsp + 8]; ret; 
0x000000000041b18e: lea esp, [rsp + 8]; ret; 
0x000000000041b1ae: lea esp, [rsp + 8]; ret; 
0x000000000041b1e3: lea esp, [rsp + 8]; ret; 
0x000000000041b218: lea esp, [rsp + 8]; ret; 
0x000000000041b22e: lea esp, [rsp + 8]; ret; 
0x000000000041b24d: lea esp, [rsp + 8]; ret; 
0x000000000041b285: lea esp, [rsp + 8]; ret; 
0x000000000041b2b3: lea esp, [rsp + 8]; ret; 
0x000000000041b2e8: lea esp, [rsp + 8]; ret; 
0x000000000041b315: lea esp, [rsp + 8]; ret; 
0x000000000041b343: lea esp, [rsp + 8]; ret; 
0x000000000041b373: lea esp, [rsp + 8]; ret; 
0x000000000041b392: lea esp, [rsp + 8]; ret; 
0x000000000041b3d9: lea esp, [rsp + 8]; ret; 
0x000000000041b59c: lea esp, [rsp + 8]; ret; 
0x000000000041b5bc: lea esp, [rsp + 8]; ret; 
0x000000000041b5db: lea esp, [rsp + 8]; ret; 
0x000000000041b66c: lea esp, [rsp + 8]; ret; 
0x000000000041b69a: lea esp, [rsp + 8]; ret; 
0x000000000041b6ac: lea esp, [rsp + 8]; ret; 
0x000000000041b6cc: lea esp, [rsp + 8]; ret; 
0x000000000041b6eb: lea esp, [rsp + 8]; ret; 
0x000000000041b6fb: lea esp, [rsp + 8]; ret; 
0x000000000041b84e: lea esp, [rsp + 8]; ret; 
0x000000000041b86b: lea esp, [rsp + 8]; ret; 
0x000000000041b87b: lea esp, [rsp + 8]; ret; 
0x000000000041b88b: lea esp, [rsp + 8]; ret; 
0x000000000041b89b: lea esp, [rsp + 8]; ret; 
0x000000000041b8ae: lea esp, [rsp + 8]; ret; 
0x000000000041b8cb: lea esp, [rsp + 8]; ret; 
0x000000000041b8e2: lea esp, [rsp + 8]; ret; 
0x000000000041b8fb: lea esp, [rsp + 8]; ret; 
0x000000000041bce2: lea esp, [rsp + 8]; ret; 
0x000000000041bd32: lea esp, [rsp + 8]; ret; 
0x000000000041bef5: lea esp, [rsp + 8]; ret; 
0x000000000041d2f5: lea esp, [rsp + 8]; ret; 
0x000000000041d475: lea esp, [rsp + 8]; ret; 
0x000000000041d5e5: lea esp, [rsp + 8]; ret; 
0x000000000041d775: lea esp, [rsp + 8]; ret; 
0x000000000041d83d: lea esp, [rsp + 8]; ret; 
0x000000000041d87d: lea esp, [rsp + 8]; ret; 
0x000000000041dae6: lea esp, [rsp + 8]; ret; 
0x000000000041f626: lea esp, [rsp + 8]; ret; 
0x000000000042086e: lea esp, [rsp + 8]; ret; 
0x0000000000420a44: lea esp, [rsp + 8]; ret; 
0x0000000000420ace: lea esp, [rsp + 8]; ret; 
0x0000000000421fcb: lea esp, [rsp + 8]; ret; 
0x0000000000421fdb: lea esp, [rsp + 8]; ret; 
0x0000000000421feb: lea esp, [rsp + 8]; ret; 
0x0000000000421ffb: lea esp, [rsp + 8]; ret; 
0x0000000000422011: lea esp, [rsp + 8]; ret; 
0x000000000042202b: lea esp, [rsp + 8]; ret; 
0x000000000042203b: lea esp, [rsp + 8]; ret; 
0x00000000004237e1: lea esp, [rsp + 8]; ret; 
0x0000000000423843: lea esp, [rsp + 8]; ret; 
0x0000000000423879: lea esp, [rsp + 8]; ret; 
0x0000000000423897: lea esp, [rsp + 8]; ret; 
0x00000000004238bd: lea esp, [rsp + 8]; ret; 
0x00000000004238e7: lea esp, [rsp + 8]; ret; 
0x000000000042390d: lea esp, [rsp + 8]; ret; 
0x0000000000423a0c: lea esp, [rsp + 8]; ret; 
0x0000000000423a2c: lea esp, [rsp + 8]; ret; 
0x0000000000423a4c: lea esp, [rsp + 8]; ret; 
0x0000000000423a6c: lea esp, [rsp + 8]; ret; 
0x0000000000423a8c: lea esp, [rsp + 8]; ret; 
0x0000000000423ab2: lea esp, [rsp + 8]; ret; 
0x0000000000423acc: lea esp, [rsp + 8]; ret; 
0x0000000000423aec: lea esp, [rsp + 8]; ret; 
0x0000000000423b0c: lea esp, [rsp + 8]; ret; 
0x0000000000423b2c: lea esp, [rsp + 8]; ret; 
0x0000000000423b4c: lea esp, [rsp + 8]; ret; 
0x0000000000423be5: lea esp, [rsp + 8]; ret; 
0x0000000000423c76: lea esp, [rsp + 8]; ret; 
0x0000000000423ecc: lea esp, [rsp + 8]; ret; 
0x000000000042420d: lea esp, [rsp + 8]; ret; 
0x0000000000424340: lea esp, [rsp + 8]; ret; 
0x00000000004243a2: lea esp, [rsp + 8]; ret; 
0x00000000004243e8: lea esp, [rsp + 8]; ret; 
0x00000000004243fe: lea esp, [rsp + 8]; ret; 
0x0000000000424d44: lea esp, [rsp + 8]; ret; 
0x0000000000424dad: lea esp, [rsp + 8]; ret; 
0x0000000000424ed2: lea esp, [rsp + 8]; ret; 
0x0000000000425133: lea esp, [rsp + 8]; ret; 
0x0000000000425408: lea esp, [rsp + 8]; ret; 
0x0000000000425449: lea esp, [rsp + 8]; ret; 
0x000000000042546b: lea esp, [rsp + 8]; ret; 
0x000000000042548c: lea esp, [rsp + 8]; ret; 
0x00000000004254b7: lea esp, [rsp + 8]; ret; 
0x0000000000425537: lea esp, [rsp + 8]; ret; 
0x0000000000425614: lea esp, [rsp + 8]; ret; 
0x0000000000425bb9: lea esp, [rsp + 8]; ret; 
0x0000000000425c33: lea esp, [rsp + 8]; ret; 
0x00000000004261f7: lea esp, [rsp + 8]; ret; 
0x00000000004262b2: lea esp, [rsp + 8]; ret; 
0x0000000000426bf5: lea esp, [rsp + 8]; ret; 
0x0000000000426c35: lea esp, [rsp + 8]; ret; 
0x0000000000426ce4: lea esp, [rsp + 8]; ret; 
0x0000000000426cfe: lea esp, [rsp + 8]; ret; 
0x0000000000426d22: lea esp, [rsp + 8]; ret; 
0x0000000000426d42: lea esp, [rsp + 8]; ret; 
0x0000000000426d62: lea esp, [rsp + 8]; ret; 
0x000000000042721a: lea esp, [rsp + 8]; ret; 
0x0000000000427583: lea esp, [rsp + 8]; ret; 
0x00000000004279e1: lea esp, [rsp + 8]; ret; 
0x00000000004279fb: lea esp, [rsp + 8]; ret; 
0x0000000000427a0b: lea esp, [rsp + 8]; ret; 
0x0000000000427a20: lea esp, [rsp + 8]; ret; 
0x0000000000427a3b: lea esp, [rsp + 8]; ret; 
0x0000000000427a51: lea esp, [rsp + 8]; ret; 
0x0000000000427a71: lea esp, [rsp + 8]; ret; 
0x00000000004283db: lea esp, [rsp + 8]; ret; 
0x0000000000428e6b: lea esp, [rsp + 8]; ret; 
0x000000000042995b: lea esp, [rsp + 8]; ret; 
0x000000000042996b: lea esp, [rsp + 8]; ret; 
0x0000000000429aac: lea esp, [rsp + 8]; ret; 
0x0000000000429f31: lea esp, [rsp + 8]; ret; 
0x000000000042a59b: lea esp, [rsp + 8]; ret; 
0x000000000042b09b: lea esp, [rsp + 8]; ret; 
0x000000000042bd6b: lea esp, [rsp + 8]; ret; 
0x000000000042bd7b: lea esp, [rsp + 8]; ret; 
0x000000000042bdbd: lea esp, [rsp + 8]; ret; 
0x000000000042c32d: lea esp, [rsp + 8]; ret; 
0x000000000042d7c2: lea esp, [rsp + 8]; ret; 
0x000000000042d7e2: lea esp, [rsp + 8]; ret; 
0x000000000042d800: lea esp, [rsp + 8]; ret; 
0x000000000042d820: lea esp, [rsp + 8]; ret; 
0x000000000042e381: lea esp, [rsp + 8]; ret; 
0x000000000042e3f1: lea esp, [rsp + 8]; ret; 
0x000000000042e40e: lea esp, [rsp + 8]; ret; 
0x000000000042e59e: lea esp, [rsp + 8]; ret; 
0x000000000042e5d6: lea esp, [rsp + 8]; ret; 
0x000000000042e5eb: lea esp, [rsp + 8]; ret; 
0x000000000042e621: lea esp, [rsp + 8]; ret; 
0x000000000042e791: lea esp, [rsp + 8]; ret; 
0x000000000042eceb: lea esp, [rsp + 8]; ret; 
0x000000000042ecfd: lea esp, [rsp + 8]; ret; 
0x000000000042ed4b: lea esp, [rsp + 8]; ret; 
0x000000000042ed5b: lea esp, [rsp + 8]; ret; 
0x000000000042ed6b: lea esp, [rsp + 8]; ret; 
0x000000000042ed83: lea esp, [rsp + 8]; ret; 
0x000000000042edbb: lea esp, [rsp + 8]; ret; 
0x000000000042edcb: lea esp, [rsp + 8]; ret; 
0x000000000042ede3: lea esp, [rsp + 8]; ret; 
0x000000000042edfb: lea esp, [rsp + 8]; ret; 
0x000000000042ee26: lea esp, [rsp + 8]; ret; 
0x000000000042ee8f: lea esp, [rsp + 8]; ret; 
0x000000000042ef70: lea esp, [rsp + 8]; ret; 
0x000000000042f0dd: lea esp, [rsp + 8]; ret; 
0x000000000042f1f4: lea esp, [rsp + 8]; ret; 
0x000000000042f666: lea esp, [rsp + 8]; ret; 
0x000000000042fc88: lea esp, [rsp + 8]; ret; 
0x000000000042fca1: lea esp, [rsp + 8]; ret; 
0x000000000042fcc8: lea esp, [rsp + 8]; ret; 
0x00000000004300d0: lea esp, [rsp + 8]; ret; 
0x00000000004301b0: lea esp, [rsp + 8]; ret; 
0x0000000000430294: lea esp, [rsp + 8]; ret; 
0x00000000004302ba: lea esp, [rsp + 8]; ret; 
0x000000000043034d: lea esp, [rsp + 8]; ret; 
0x0000000000430441: lea esp, [rsp + 8]; ret; 
0x0000000000430464: lea esp, [rsp + 8]; ret; 
0x0000000000430f9d: lea esp, [rsp + 8]; ret; 
0x00000000004310d8: lea esp, [rsp + 8]; ret; 
0x00000000004310ee: lea esp, [rsp + 8]; ret; 
0x000000000043110e: lea esp, [rsp + 8]; ret; 
0x000000000043112e: lea esp, [rsp + 8]; ret; 
0x0000000000431159: lea esp, [rsp + 8]; ret; 
0x0000000000431179: lea esp, [rsp + 8]; ret; 
0x0000000000431264: lea esp, [rsp + 8]; ret; 
0x0000000000431284: lea esp, [rsp + 8]; ret; 
0x00000000004312a4: lea esp, [rsp + 8]; ret; 
0x00000000004312c4: lea esp, [rsp + 8]; ret; 
0x00000000004312e4: lea esp, [rsp + 8]; ret; 
0x0000000000431304: lea esp, [rsp + 8]; ret; 
0x0000000000431324: lea esp, [rsp + 8]; ret; 
0x00000000004315a9: lea esp, [rsp + 8]; ret; 
0x00000000004315cc: lea esp, [rsp + 8]; ret; 
0x00000000004315f9: lea esp, [rsp + 8]; ret; 
0x0000000000431619: lea esp, [rsp + 8]; ret; 
0x0000000000431640: lea esp, [rsp + 8]; ret; 
0x0000000000431663: lea esp, [rsp + 8]; ret; 
0x0000000000431692: lea esp, [rsp + 8]; ret; 
0x00000000004316ab: lea esp, [rsp + 8]; ret; 
0x00000000004316c2: lea esp, [rsp + 8]; ret; 
0x00000000004316db: lea esp, [rsp + 8]; ret; 
0x00000000004316f2: lea esp, [rsp + 8]; ret; 
0x000000000043170b: lea esp, [rsp + 8]; ret; 
0x000000000043177b: lea esp, [rsp + 8]; ret; 
0x000000000043178b: lea esp, [rsp + 8]; ret; 
0x000000000043179b: lea esp, [rsp + 8]; ret; 
0x000000000043180b: lea esp, [rsp + 8]; ret; 
0x000000000043181b: lea esp, [rsp + 8]; ret; 
0x000000000043182b: lea esp, [rsp + 8]; ret; 
0x000000000043183b: lea esp, [rsp + 8]; ret; 
0x000000000043184b: lea esp, [rsp + 8]; ret; 
0x0000000000431884: lea esp, [rsp + 8]; ret; 
0x00000000004318a1: lea esp, [rsp + 8]; ret; 
0x00000000004318c1: lea esp, [rsp + 8]; ret; 
0x00000000004318e1: lea esp, [rsp + 8]; ret; 
0x00000000004318fe: lea esp, [rsp + 8]; ret; 
0x000000000043191b: lea esp, [rsp + 8]; ret; 
0x0000000000431943: lea esp, [rsp + 8]; ret; 
0x000000000043196f: lea esp, [rsp + 8]; ret; 
0x0000000000431998: lea esp, [rsp + 8]; ret; 
0x00000000004319bc: lea esp, [rsp + 8]; ret; 
0x00000000004319e9: lea esp, [rsp + 8]; ret; 
0x0000000000431a0c: lea esp, [rsp + 8]; ret; 
0x0000000000431a39: lea esp, [rsp + 8]; ret; 
0x0000000000431a59: lea esp, [rsp + 8]; ret; 
0x0000000000431a80: lea esp, [rsp + 8]; ret; 
0x0000000000431aa3: lea esp, [rsp + 8]; ret; 
0x0000000000431ad2: lea esp, [rsp + 8]; ret; 
0x0000000000431aeb: lea esp, [rsp + 8]; ret; 
0x0000000000431b02: lea esp, [rsp + 8]; ret; 
0x0000000000431b1b: lea esp, [rsp + 8]; ret; 
0x0000000000431b32: lea esp, [rsp + 8]; ret; 
0x0000000000431b4b: lea esp, [rsp + 8]; ret; 
0x0000000000431bbb: lea esp, [rsp + 8]; ret; 
0x0000000000431bcb: lea esp, [rsp + 8]; ret; 
0x0000000000431bdb: lea esp, [rsp + 8]; ret; 
0x0000000000431c4b: lea esp, [rsp + 8]; ret; 
0x0000000000431c5b: lea esp, [rsp + 8]; ret; 
0x0000000000431c6b: lea esp, [rsp + 8]; ret; 
0x0000000000431c7b: lea esp, [rsp + 8]; ret; 
0x0000000000431c8b: lea esp, [rsp + 8]; ret; 
0x0000000000431cc4: lea esp, [rsp + 8]; ret; 
0x0000000000431ce1: lea esp, [rsp + 8]; ret; 
0x0000000000431d01: lea esp, [rsp + 8]; ret; 
0x0000000000431d21: lea esp, [rsp + 8]; ret; 
0x0000000000431d3e: lea esp, [rsp + 8]; ret; 
0x0000000000431d5b: lea esp, [rsp + 8]; ret; 
0x0000000000431d83: lea esp, [rsp + 8]; ret; 
0x0000000000431daf: lea esp, [rsp + 8]; ret; 
0x0000000000431dd8: lea esp, [rsp + 8]; ret; 
0x0000000000431dfc: lea esp, [rsp + 8]; ret; 
0x0000000000431fe2: lea esp, [rsp + 8]; ret; 
0x0000000000431ffb: lea esp, [rsp + 8]; ret; 
0x000000000043206b: lea esp, [rsp + 8]; ret; 
0x000000000043208b: lea esp, [rsp + 8]; ret; 
0x00000000004320fb: lea esp, [rsp + 8]; ret; 
0x000000000043211b: lea esp, [rsp + 8]; ret; 
0x000000000043212b: lea esp, [rsp + 8]; ret; 
0x000000000043213b: lea esp, [rsp + 8]; ret; 
0x0000000000432174: lea esp, [rsp + 8]; ret; 
0x0000000000432191: lea esp, [rsp + 8]; ret; 
0x00000000004321b1: lea esp, [rsp + 8]; ret; 
0x00000000004321d1: lea esp, [rsp + 8]; ret; 
0x00000000004321ee: lea esp, [rsp + 8]; ret; 
0x000000000043220b: lea esp, [rsp + 8]; ret; 
0x00000000004322f0: lea esp, [rsp + 8]; ret; 
0x0000000000432327: lea esp, [rsp + 8]; ret; 
0x00000000004323f4: lea esp, [rsp + 8]; ret; 
0x0000000000432414: lea esp, [rsp + 8]; ret; 
0x0000000000432444: lea esp, [rsp + 8]; ret; 
0x00000000004324de: lea esp, [rsp + 8]; ret; 
0x0000000000432515: lea esp, [rsp + 8]; ret; 
0x00000000004325e4: lea esp, [rsp + 8]; ret; 
0x0000000000432604: lea esp, [rsp + 8]; ret; 
0x0000000000432634: lea esp, [rsp + 8]; ret; 
0x00000000004326ce: lea esp, [rsp + 8]; ret; 
0x0000000000432704: lea esp, [rsp + 8]; ret; 
0x00000000004327d4: lea esp, [rsp + 8]; ret; 
0x00000000004327f4: lea esp, [rsp + 8]; ret; 
0x0000000000432824: lea esp, [rsp + 8]; ret; 
0x00000000004328c0: lea esp, [rsp + 8]; ret; 
0x00000000004328f7: lea esp, [rsp + 8]; ret; 
0x00000000004329c4: lea esp, [rsp + 8]; ret; 
0x00000000004329e4: lea esp, [rsp + 8]; ret; 
0x0000000000432a14: lea esp, [rsp + 8]; ret; 
0x0000000000432aab: lea esp, [rsp + 8]; ret; 
0x0000000000432ad3: lea esp, [rsp + 8]; ret; 
0x0000000000432bb3: lea esp, [rsp + 8]; ret; 
0x0000000000432bd3: lea esp, [rsp + 8]; ret; 
0x0000000000432c03: lea esp, [rsp + 8]; ret; 
0x0000000000432c9b: lea esp, [rsp + 8]; ret; 
0x0000000000432cbb: lea esp, [rsp + 8]; ret; 
0x0000000000432d83: lea esp, [rsp + 8]; ret; 
0x0000000000432da3: lea esp, [rsp + 8]; ret; 
0x0000000000432dd3: lea esp, [rsp + 8]; ret; 
0x0000000000432e6e: lea esp, [rsp + 8]; ret; 
0x0000000000432e9b: lea esp, [rsp + 8]; ret; 
0x0000000000432f64: lea esp, [rsp + 8]; ret; 
0x0000000000432f84: lea esp, [rsp + 8]; ret; 
0x0000000000432fb4: lea esp, [rsp + 8]; ret; 
0x000000000043304e: lea esp, [rsp + 8]; ret; 
0x000000000043307b: lea esp, [rsp + 8]; ret; 
0x0000000000433164: lea esp, [rsp + 8]; ret; 
0x0000000000433184: lea esp, [rsp + 8]; ret; 
0x00000000004331c4: lea esp, [rsp + 8]; ret; 
0x000000000043325e: lea esp, [rsp + 8]; ret; 
0x000000000043328b: lea esp, [rsp + 8]; ret; 
0x0000000000433354: lea esp, [rsp + 8]; ret; 
0x0000000000433374: lea esp, [rsp + 8]; ret; 
0x00000000004333a4: lea esp, [rsp + 8]; ret; 
0x000000000043343e: lea esp, [rsp + 8]; ret; 
0x000000000043346b: lea esp, [rsp + 8]; ret; 
0x0000000000433554: lea esp, [rsp + 8]; ret; 
0x0000000000433574: lea esp, [rsp + 8]; ret; 
0x00000000004335b4: lea esp, [rsp + 8]; ret; 
0x000000000043364b: lea esp, [rsp + 8]; ret; 
0x0000000000433677: lea esp, [rsp + 8]; ret; 
0x000000000043368b: lea esp, [rsp + 8]; ret; 
0x00000000004336ba: lea esp, [rsp + 8]; ret; 
0x00000000004336cb: lea esp, [rsp + 8]; ret; 
0x00000000004336f7: lea esp, [rsp + 8]; ret; 
0x000000000043370b: lea esp, [rsp + 8]; ret; 
0x000000000043373f: lea esp, [rsp + 8]; ret; 
0x000000000043375b: lea esp, [rsp + 8]; ret; 
0x0000000000433787: lea esp, [rsp + 8]; ret; 
0x000000000043379b: lea esp, [rsp + 8]; ret; 
0x00000000004337d1: lea esp, [rsp + 8]; ret; 
0x00000000004337eb: lea esp, [rsp + 8]; ret; 
0x0000000000433817: lea esp, [rsp + 8]; ret; 
0x000000000043382b: lea esp, [rsp + 8]; ret; 
0x000000000043385f: lea esp, [rsp + 8]; ret; 
0x00000000004338fd: lea esp, [rsp + 8]; ret; 
0x0000000000433921: lea esp, [rsp + 8]; ret; 
0x0000000000433949: lea esp, [rsp + 8]; ret; 
0x0000000000433a67: lea esp, [rsp + 8]; ret; 
0x0000000000433ac7: lea esp, [rsp + 8]; ret; 
0x0000000000433d90: lea esp, [rsp + 8]; ret; 
0x0000000000433df0: lea esp, [rsp + 8]; ret; 
0x0000000000434230: lea esp, [rsp + 8]; ret; 
0x0000000000434250: lea esp, [rsp + 8]; ret; 
0x000000000043426f: lea esp, [rsp + 8]; ret; 
0x000000000043428f: lea esp, [rsp + 8]; ret; 
0x00000000004342b0: lea esp, [rsp + 8]; ret; 
0x00000000004342d0: lea esp, [rsp + 8]; ret; 
0x000000000043430d: lea esp, [rsp + 8]; ret; 
0x000000000043434d: lea esp, [rsp + 8]; ret; 
0x000000000043438d: lea esp, [rsp + 8]; ret; 
0x00000000004343cd: lea esp, [rsp + 8]; ret; 
0x000000000043440d: lea esp, [rsp + 8]; ret; 
0x000000000043444d: lea esp, [rsp + 8]; ret; 
0x0000000000434470: lea esp, [rsp + 8]; ret; 
0x0000000000434493: lea esp, [rsp + 8]; ret; 
0x0000000000434502: lea esp, [rsp + 8]; ret; 
0x0000000000434548: lea esp, [rsp + 8]; ret; 
0x000000000043458a: lea esp, [rsp + 8]; ret; 
0x00000000004345a0: lea esp, [rsp + 8]; ret; 
0x0000000000434884: lea esp, [rsp + 8]; ret; 
0x0000000000434eab: lea esp, [rsp + 8]; ret; 
0x0000000000434eca: lea esp, [rsp + 8]; ret; 
0x0000000000434eec: lea esp, [rsp + 8]; ret; 
0x0000000000434f19: lea esp, [rsp + 8]; ret; 
0x0000000000434f3c: lea esp, [rsp + 8]; ret; 
0x0000000000434f60: lea esp, [rsp + 8]; ret; 
0x0000000000434f88: lea esp, [rsp + 8]; ret; 
0x0000000000434fa0: lea esp, [rsp + 8]; ret; 
0x0000000000434fc0: lea esp, [rsp + 8]; ret; 
0x00000000004351eb: lea esp, [rsp + 8]; ret; 
0x00000000004352bb: lea esp, [rsp + 8]; ret; 
0x00000000004352cb: lea esp, [rsp + 8]; ret; 
0x000000000043530b: lea esp, [rsp + 8]; ret; 
0x000000000043537b: lea esp, [rsp + 8]; ret; 
0x00000000004353eb: lea esp, [rsp + 8]; ret; 
0x00000000004353fd: lea esp, [rsp + 8]; ret; 
0x00000000004364d7: lea esp, [rsp + 8]; ret; 
0x0000000000436515: lea esp, [rsp + 8]; ret; 
0x0000000000436560: lea esp, [rsp + 8]; ret; 
0x0000000000436601: lea esp, [rsp + 8]; ret; 
0x0000000000436f92: lea esp, [rsp + 8]; ret; 
0x0000000000436fb2: lea esp, [rsp + 8]; ret; 
0x00000000004372f2: lea esp, [rsp + 8]; ret; 
0x0000000000437313: lea esp, [rsp + 8]; ret; 
0x0000000000437332: lea esp, [rsp + 8]; ret; 
0x0000000000437353: lea esp, [rsp + 8]; ret; 
0x0000000000437372: lea esp, [rsp + 8]; ret; 
0x000000000043738b: lea esp, [rsp + 8]; ret; 
0x0000000000438dc0: lea esp, [rsp + 8]; ret; 
0x0000000000438e22: lea esp, [rsp + 8]; ret; 
0x0000000000438e82: lea esp, [rsp + 8]; ret; 
0x0000000000438ef0: lea esp, [rsp + 8]; ret; 
0x0000000000438f12: lea esp, [rsp + 8]; ret; 
0x0000000000439170: lea esp, [rsp + 8]; ret; 
0x00000000004391d2: lea esp, [rsp + 8]; ret; 
0x0000000000439232: lea esp, [rsp + 8]; ret; 
0x00000000004392a0: lea esp, [rsp + 8]; ret; 
0x0000000000439302: lea esp, [rsp + 8]; ret; 
0x0000000000439334: lea esp, [rsp + 8]; ret; 
0x0000000000439360: lea esp, [rsp + 8]; ret; 
0x0000000000439583: lea esp, [rsp + 8]; ret; 
0x00000000004395b6: lea esp, [rsp + 8]; ret; 
0x00000000004396d0: lea esp, [rsp + 8]; ret; 
0x00000000004396f3: lea esp, [rsp + 8]; ret; 
0x000000000043979e: lea esp, [rsp + 8]; ret; 
0x0000000000439960: lea esp, [rsp + 8]; ret; 
0x0000000000439aa2: lea esp, [rsp + 8]; ret; 
0x000000000043a32d: lea esp, [rsp + 8]; ret; 
0x000000000043a376: lea esp, [rsp + 8]; ret; 
0x000000000043a5c4: lea esp, [rsp + 8]; ret; 
0x000000000043a7bb: lea esp, [rsp + 8]; ret; 
0x000000000043a81f: lea esp, [rsp + 8]; ret; 
0x000000000043a9c8: lea esp, [rsp + 8]; ret; 
0x000000000043aa8f: lea esp, [rsp + 8]; ret; 
0x000000000043b230: lea esp, [rsp + 8]; ret; 
0x000000000043b259: lea esp, [rsp + 8]; ret; 
0x000000000043b2ae: lea esp, [rsp + 8]; ret; 
0x000000000043b42e: lea esp, [rsp + 8]; ret; 
0x000000000043b8f0: lea esp, [rsp + 8]; ret; 
0x000000000043bac5: lea esp, [rsp + 8]; ret; 
0x000000000043bae4: lea esp, [rsp + 8]; ret; 
0x000000000043bdd2: lea esp, [rsp + 8]; ret; 
0x000000000043f7cd: lea esp, [rsp + 8]; ret; 
0x000000000043f7f1: lea esp, [rsp + 8]; ret; 
0x000000000043f8f6: lea esp, [rsp + 8]; ret; 
0x000000000044324d: lea esp, [rsp + 8]; ret; 
0x0000000000443271: lea esp, [rsp + 8]; ret; 
0x0000000000443376: lea esp, [rsp + 8]; ret; 
0x0000000000443602: lea esp, [rsp + 8]; ret; 
0x000000000044364d: lea esp, [rsp + 8]; ret; 
0x00000000004437a0: lea esp, [rsp + 8]; ret; 
0x00000000004437e2: lea esp, [rsp + 8]; ret; 
0x0000000000444c03: lea esp, [rsp + 8]; ret; 
0x0000000000444c47: lea esp, [rsp + 8]; ret; 
0x0000000000444c79: lea esp, [rsp + 8]; ret; 
0x0000000000444ca2: lea esp, [rsp + 8]; ret; 
0x0000000000444ced: lea esp, [rsp + 8]; ret; 
0x0000000000444d36: lea esp, [rsp + 8]; ret; 
0x00000000004458be: lea esp, [rsp + 8]; ret; 
0x0000000000445902: lea esp, [rsp + 8]; ret; 
0x0000000000445927: lea esp, [rsp + 8]; ret; 
0x000000000044595b: lea esp, [rsp + 8]; ret; 
0x0000000000445ed8: lea esp, [rsp + 8]; ret; 
0x0000000000446f2d: lea esp, [rsp + 8]; ret; 
0x00000000004470e9: lea esp, [rsp + 8]; ret; 
0x0000000000447108: lea esp, [rsp + 8]; ret; 
0x0000000000447129: lea esp, [rsp + 8]; ret; 
0x00000000004472bd: lea esp, [rsp + 8]; ret; 
0x00000000004473ad: lea esp, [rsp + 8]; ret; 
0x0000000000447532: lea esp, [rsp + 8]; ret; 
0x00000000004476bd: lea esp, [rsp + 8]; ret; 
0x00000000004476dd: lea esp, [rsp + 8]; ret; 
0x000000000044785d: lea esp, [rsp + 8]; ret; 
0x000000000044787d: lea esp, [rsp + 8]; ret; 
0x00000000004479ab: lea esp, [rsp + 8]; ret; 
0x0000000000447f9d: lea esp, [rsp + 8]; ret; 
0x0000000000448057: lea esp, [rsp + 8]; ret; 
0x00000000004480cc: lea esp, [rsp + 8]; ret; 
0x0000000000448252: lea esp, [rsp + 8]; ret; 
0x00000000004484c0: lea esp, [rsp + 8]; ret; 
0x00000000004484e0: lea esp, [rsp + 8]; ret; 
0x0000000000448502: lea esp, [rsp + 8]; ret; 
0x0000000000448528: lea esp, [rsp + 8]; ret; 
0x0000000000448545: lea esp, [rsp + 8]; ret; 
0x000000000044856b: lea esp, [rsp + 8]; ret; 
0x0000000000449489: lea esp, [rsp + 8]; ret; 
0x00000000004494c5: lea esp, [rsp + 8]; ret; 
0x0000000000449512: lea esp, [rsp + 8]; ret; 
0x0000000000449c1e: lea esp, [rsp + 8]; ret; 
0x000000000044a087: lea esp, [rsp + 8]; ret; 
0x000000000044a0c0: lea esp, [rsp + 8]; ret; 
0x000000000044a105: lea esp, [rsp + 8]; ret; 
0x000000000044a1e7: lea esp, [rsp + 8]; ret; 
0x000000000044a207: lea esp, [rsp + 8]; ret; 
0x000000000044a223: lea esp, [rsp + 8]; ret; 
0x000000000044a243: lea esp, [rsp + 8]; ret; 
0x000000000044a265: lea esp, [rsp + 8]; ret; 
0x000000000044a28b: lea esp, [rsp + 8]; ret; 
0x000000000044a2a8: lea esp, [rsp + 8]; ret; 
0x000000000044a2ce: lea esp, [rsp + 8]; ret; 
0x000000000044b229: lea esp, [rsp + 8]; ret; 
0x000000000044b265: lea esp, [rsp + 8]; ret; 
0x000000000044b2b2: lea esp, [rsp + 8]; ret; 
0x000000000044b9b7: lea esp, [rsp + 8]; ret; 
0x000000000044ba2b: lea esp, [rsp + 8]; ret; 
0x000000000044bf1c: lea esp, [rsp + 8]; ret; 
0x000000000044c0fe: lea esp, [rsp + 8]; ret; 
0x000000000044c6a2: lea esp, [rsp + 8]; ret; 
0x000000000044c92b: lea esp, [rsp + 8]; ret; 
0x000000000044ce56: lea esp, [rsp + 8]; ret; 
0x000000000044ce7e: lea esp, [rsp + 8]; ret; 
0x000000000044ea89: lea esp, [rsp + 8]; ret; 
0x000000000044ee9f: lea esp, [rsp + 8]; ret; 
0x000000000044f02f: lea esp, [rsp + 8]; ret; 
0x000000000044f34f: lea esp, [rsp + 8]; ret; 
0x000000000044f483: lea esp, [rsp + 8]; ret; 
0x000000000044f64f: lea esp, [rsp + 8]; ret; 
0x000000000044fa21: lea esp, [rsp + 8]; ret; 
0x000000000044fa42: lea esp, [rsp + 8]; ret; 
0x000000000044fa62: lea esp, [rsp + 8]; ret; 
0x000000000044fa82: lea esp, [rsp + 8]; ret; 
0x00000000004507dd: lea esp, [rsp + 8]; ret; 
0x000000000045087e: lea esp, [rsp + 8]; ret; 
0x00000000004509df: lea esp, [rsp + 8]; ret; 
0x0000000000450b48: lea esp, [rsp + 8]; ret; 
0x0000000000450b68: lea esp, [rsp + 8]; ret; 
0x0000000000450caa: lea esp, [rsp + 8]; ret; 
0x0000000000450cbe: lea esp, [rsp + 8]; ret; 
0x0000000000450e2e: lea esp, [rsp + 8]; ret; 
0x0000000000450e9b: lea esp, [rsp + 8]; ret; 
0x0000000000451279: lea esp, [rsp + 8]; ret; 
0x00000000004512f9: lea esp, [rsp + 8]; ret; 
0x00000000004522a7: lea esp, [rsp + 8]; ret; 
0x0000000000452b52: lea esp, [rsp + 8]; ret; 
0x0000000000452c93: lea esp, [rsp + 8]; ret; 
0x0000000000452e96: lea esp, [rsp + 8]; ret; 
0x0000000000452ed4: lea esp, [rsp + 8]; ret; 
0x00000000004532c0: lea esp, [rsp + 8]; ret; 
0x000000000045336b: lea esp, [rsp + 8]; ret; 
0x000000000045337d: lea esp, [rsp + 8]; ret; 
0x00000000004533ac: lea esp, [rsp + 8]; ret; 
0x0000000000453d10: lea esp, [rsp + 8]; ret; 
0x0000000000453f6e: lea esp, [rsp + 8]; ret; 
0x0000000000453f8b: lea esp, [rsp + 8]; ret; 
0x00000000004557ce: lea esp, [rsp + 8]; ret; 
0x0000000000455b19: lea esp, [rsp + 8]; ret; 
0x0000000000455b30: lea esp, [rsp + 8]; ret; 
0x0000000000455ba5: lea esp, [rsp + 8]; ret; 
0x0000000000455bcd: lea esp, [rsp + 8]; ret; 
0x000000000045605b: lea esp, [rsp + 8]; ret; 
0x000000000045682b: lea esp, [rsp + 8]; ret; 
0x000000000045683b: lea esp, [rsp + 8]; ret; 
0x000000000045684b: lea esp, [rsp + 8]; ret; 
0x000000000045685b: lea esp, [rsp + 8]; ret; 
0x000000000045686e: lea esp, [rsp + 8]; ret; 
0x000000000045688e: lea esp, [rsp + 8]; ret; 
0x00000000004568ab: lea esp, [rsp + 8]; ret; 
0x00000000004568be: lea esp, [rsp + 8]; ret; 
0x00000000004568db: lea esp, [rsp + 8]; ret; 
0x00000000004568eb: lea esp, [rsp + 8]; ret; 
0x00000000004568fe: lea esp, [rsp + 8]; ret; 
0x000000000045694c: lea esp, [rsp + 8]; ret; 
0x0000000000456a2d: lea esp, [rsp + 8]; ret; 
0x0000000000456ae2: lea esp, [rsp + 8]; ret; 
0x0000000000456b07: lea esp, [rsp + 8]; ret; 
0x0000000000456e06: lea esp, [rsp + 8]; ret; 
0x0000000000456e23: lea esp, [rsp + 8]; ret; 
0x0000000000456e48: lea esp, [rsp + 8]; ret; 
0x0000000000456e72: lea esp, [rsp + 8]; ret; 
0x0000000000456e99: lea esp, [rsp + 8]; ret; 
0x0000000000456eb6: lea esp, [rsp + 8]; ret; 
0x0000000000456f94: lea esp, [rsp + 8]; ret; 
0x0000000000457103: lea esp, [rsp + 8]; ret; 
0x000000000045720f: lea esp, [rsp + 8]; ret; 
0x0000000000457230: lea esp, [rsp + 8]; ret; 
0x0000000000457250: lea esp, [rsp + 8]; ret; 
0x0000000000457270: lea esp, [rsp + 8]; ret; 
0x0000000000457290: lea esp, [rsp + 8]; ret; 
0x00000000004572b0: lea esp, [rsp + 8]; ret; 
0x00000000004572d2: lea esp, [rsp + 8]; ret; 
0x00000000004572f2: lea esp, [rsp + 8]; ret; 
0x0000000000457316: lea esp, [rsp + 8]; ret; 
0x0000000000457330: lea esp, [rsp + 8]; ret; 
0x0000000000457350: lea esp, [rsp + 8]; ret; 
0x0000000000457373: lea esp, [rsp + 8]; ret; 
0x0000000000457393: lea esp, [rsp + 8]; ret; 
0x00000000004573b6: lea esp, [rsp + 8]; ret; 
0x00000000004573e0: lea esp, [rsp + 8]; ret; 
0x0000000000457406: lea esp, [rsp + 8]; ret; 
0x0000000000457427: lea esp, [rsp + 8]; ret; 
0x0000000000457446: lea esp, [rsp + 8]; ret; 
0x0000000000457463: lea esp, [rsp + 8]; ret; 
0x0000000000457489: lea esp, [rsp + 8]; ret; 
0x00000000004574a9: lea esp, [rsp + 8]; ret; 
0x00000000004574c6: lea esp, [rsp + 8]; ret; 
0x00000000004574e9: lea esp, [rsp + 8]; ret; 
0x0000000000457510: lea esp, [rsp + 8]; ret; 
0x0000000000457533: lea esp, [rsp + 8]; ret; 
0x0000000000457562: lea esp, [rsp + 8]; ret; 
0x0000000000457588: lea esp, [rsp + 8]; ret; 
0x00000000004575a6: lea esp, [rsp + 8]; ret; 
0x0000000000457696: lea esp, [rsp + 8]; ret; 
0x00000000004576bf: lea esp, [rsp + 8]; ret; 
0x00000000004576ef: lea esp, [rsp + 8]; ret; 
0x000000000045771c: lea esp, [rsp + 8]; ret; 
0x000000000045774c: lea esp, [rsp + 8]; ret; 
0x0000000000457776: lea esp, [rsp + 8]; ret; 
0x00000000004581ab: lea esp, [rsp + 8]; ret; 
0x00000000004582f2: lea esp, [rsp + 8]; ret; 
0x0000000000458312: lea esp, [rsp + 8]; ret; 
0x000000000045837b: lea esp, [rsp + 8]; ret; 
0x000000000045838b: lea esp, [rsp + 8]; ret; 
0x000000000045839b: lea esp, [rsp + 8]; ret; 
0x00000000004583ab: lea esp, [rsp + 8]; ret; 
0x00000000004583c0: lea esp, [rsp + 8]; ret; 
0x0000000000458772: lea esp, [rsp + 8]; ret; 
0x000000000045878e: lea esp, [rsp + 8]; ret; 
0x00000000004588fb: lea esp, [rsp + 8]; ret; 
0x0000000000458a76: lea esp, [rsp + 8]; ret; 
0x0000000000458a96: lea esp, [rsp + 8]; ret; 
0x0000000000458ab6: lea esp, [rsp + 8]; ret; 
0x0000000000458ad3: lea esp, [rsp + 8]; ret; 
0x0000000000459067: lea esp, [rsp + 8]; ret; 
0x0000000000459087: lea esp, [rsp + 8]; ret; 
0x000000000045909d: lea esp, [rsp + 8]; ret; 
0x00000000004594c7: lea esp, [rsp + 8]; ret; 
0x0000000000459a54: lea esp, [rsp + 8]; ret; 
0x0000000000459a8c: lea esp, [rsp + 8]; ret; 
0x0000000000459ae1: lea esp, [rsp + 8]; ret; 
0x0000000000459db9: lea esp, [rsp + 8]; ret; 
0x0000000000459dd0: lea esp, [rsp + 8]; ret; 
0x0000000000459ded: lea esp, [rsp + 8]; ret; 
0x0000000000459e0d: lea esp, [rsp + 8]; ret; 
0x000000000045a0a4: lea esp, [rsp + 8]; ret; 
0x000000000045a23b: lea esp, [rsp + 8]; ret; 
0x000000000045b84b: lea esp, [rsp + 8]; ret; 
0x000000000045b85b: lea esp, [rsp + 8]; ret; 
0x000000000045b873: lea esp, [rsp + 8]; ret; 
0x000000000045b973: lea esp, [rsp + 8]; ret; 
0x000000000045b993: lea esp, [rsp + 8]; ret; 
0x000000000045b9b3: lea esp, [rsp + 8]; ret; 
0x000000000045b9d5: lea esp, [rsp + 8]; ret; 
0x000000000045b9f3: lea esp, [rsp + 8]; ret; 
0x000000000045ba13: lea esp, [rsp + 8]; ret; 
0x000000000045ba5d: lea esp, [rsp + 8]; ret; 
0x000000000045bb53: lea esp, [rsp + 8]; ret; 
0x000000000045bc3d: lea esp, [rsp + 8]; ret; 
0x000000000045c0eb: lea esp, [rsp + 8]; ret; 
0x000000000045c101: lea esp, [rsp + 8]; ret; 
0x000000000045c11b: lea esp, [rsp + 8]; ret; 
0x000000000045c12b: lea esp, [rsp + 8]; ret; 
0x000000000045c13b: lea esp, [rsp + 8]; ret; 
0x000000000045c14b: lea esp, [rsp + 8]; ret; 
0x000000000045c191: lea esp, [rsp + 8]; ret; 
0x000000000045c21b: lea esp, [rsp + 8]; ret; 
0x000000000045c25b: lea esp, [rsp + 8]; ret; 
0x000000000045c26b: lea esp, [rsp + 8]; ret; 
0x000000000045c27b: lea esp, [rsp + 8]; ret; 
0x000000000045c291: lea esp, [rsp + 8]; ret; 
0x000000000045c2ab: lea esp, [rsp + 8]; ret; 
0x000000000045c2bb: lea esp, [rsp + 8]; ret; 
0x000000000045c7e4: lea esp, [rsp + 8]; ret; 
0x000000000045c7fb: lea esp, [rsp + 8]; ret; 
0x000000000045c813: lea esp, [rsp + 8]; ret; 
0x000000000045c830: lea esp, [rsp + 8]; ret; 
0x000000000045c853: lea esp, [rsp + 8]; ret; 
0x000000000045c87c: lea esp, [rsp + 8]; ret; 
0x000000000045c8af: lea esp, [rsp + 8]; ret; 
0x000000000045c8d6: lea esp, [rsp + 8]; ret; 
0x000000000045c8f6: lea esp, [rsp + 8]; ret; 
0x000000000045c91f: lea esp, [rsp + 8]; ret; 
0x000000000045c943: lea esp, [rsp + 8]; ret; 
0x000000000045c979: lea esp, [rsp + 8]; ret; 
0x000000000045c9ab: lea esp, [rsp + 8]; ret; 
0x000000000045c9d8: lea esp, [rsp + 8]; ret; 
0x000000000045c9fc: lea esp, [rsp + 8]; ret; 
0x000000000045ca2e: lea esp, [rsp + 8]; ret; 
0x000000000045ca5e: lea esp, [rsp + 8]; ret; 
0x000000000045ca8c: lea esp, [rsp + 8]; ret; 
0x000000000045cadd: lea esp, [rsp + 8]; ret; 
0x000000000045cb03: lea esp, [rsp + 8]; ret; 
0x000000000045cb2b: lea esp, [rsp + 8]; ret; 
0x000000000045cb46: lea esp, [rsp + 8]; ret; 
0x000000000045cb66: lea esp, [rsp + 8]; ret; 
0x000000000045cb86: lea esp, [rsp + 8]; ret; 
0x000000000045cba6: lea esp, [rsp + 8]; ret; 
0x000000000045cbc4: lea esp, [rsp + 8]; ret; 
0x000000000045cbe4: lea esp, [rsp + 8]; ret; 
0x000000000042f875: lea esp, [rsp - 0x10]; lea r9, [rbp - 8]; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ea5: lea esp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e65: lea esp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e35: lea esp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e05: lea esp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x000000000042ed91: lea esp, [rsp - 0x18]; call 0x36c60; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec1: lea esp, [rsp - 0x18]; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432141: lea esp, [rsp - 0x18]; call 0x6790; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c91: lea esp, [rsp - 0x18]; call 0x6a50; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431851: lea esp, [rsp - 0x18]; call 0x6d40; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040ae81: lea esp, [rsp - 0x18]; call 0x9560; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416511: lea esp, [rsp - 0x18]; call qword ptr [rip + 0x6da75]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d51: lea esp, [rsp - 0x18]; call qword ptr [rip + 0x6e235]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044fa11: lea esp, [rsp - 8]; add rdi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x00000000004146f1: lea esp, [rsp - 8]; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000423aa1: lea esp, [rsp - 8]; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004237d1: lea esp, [rsp - 8]; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x0000000000403441: lea esp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403461: lea esp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403481: lea esp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034a1: lea esp, [rsp - 8]; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034f1: lea esp, [rsp - 8]; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004075e1: lea esp, [rsp - 8]; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407601: lea esp, [rsp - 8]; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407621: lea esp, [rsp - 8]; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x0000000000422001: lea esp, [rsp - 8]; and esi, 0xff; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000042e611: lea esp, [rsp - 8]; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x000000000040b7e1: lea esp, [rsp - 8]; and esi, esi; and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x00000000004117c1: lea esp, [rsp - 8]; call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x00000000004115c1: lea esp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115f1: lea esp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412f01: lea esp, [rsp - 8]; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x0000000000414331: lea esp, [rsp - 8]; call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x00000000004150f1: lea esp, [rsp - 8]; call 0x14e70; mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004177f1: lea esp, [rsp - 8]; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x0000000000417661: lea esp, [rsp - 8]; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x0000000000417801: lea esp, [rsp - 8]; call 0x176f0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab61: lea esp, [rsp - 8]; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418341: lea esp, [rsp - 8]; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418361: lea esp, [rsp - 8]; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x0000000000456821: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456831: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456841: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456851: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568a1: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568d1: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568e1: lea esp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004190a1: lea esp, [rsp - 8]; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190d1: lea esp, [rsp - 8]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000419161: lea esp, [rsp - 8]; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000419191: lea esp, [rsp - 8]; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b0d1: lea esp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0f1: lea esp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b131: lea esp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b091: lea esp, [rsp - 8]; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b111: lea esp, [rsp - 8]; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b241: lea esp, [rsp - 8]; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b5d1: lea esp, [rsp - 8]; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x0000000000453361: lea esp, [rsp - 8]; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6f1: lea esp, [rsp - 8]; call 0x1b660; lea rsp, [rsp + 8]; ret; 
0x000000000041b6e1: lea esp, [rsp - 8]; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b861: lea esp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b871: lea esp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b881: lea esp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b891: lea esp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8c1: lea esp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8f1: lea esp, [rsp - 8]; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c251: lea esp, [rsp - 8]; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c211: lea esp, [rsp - 8]; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x000000000045c141: lea esp, [rsp - 8]; call 0x1c840; lea rsp, [rsp + 8]; ret; 
0x000000000045c261: lea esp, [rsp - 8]; call 0x1c950; lea rsp, [rsp + 8]; ret; 
0x0000000000421fc1: lea esp, [rsp - 8]; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c121: lea esp, [rsp - 8]; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x0000000000421fd1: lea esp, [rsp - 8]; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c111: lea esp, [rsp - 8]; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fe1: lea esp, [rsp - 8]; call 0x20e20; lea rsp, [rsp + 8]; ret; 
0x0000000000421ff1: lea esp, [rsp - 8]; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e1: lea esp, [rsp - 8]; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000422031: lea esp, [rsp - 8]; call 0x20fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000422021: lea esp, [rsp - 8]; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c131: lea esp, [rsp - 8]; call 0x21a20; lea rsp, [rsp + 8]; ret; 
0x000000000045c2b1: lea esp, [rsp - 8]; call 0x21fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2a1: lea esp, [rsp - 8]; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c271: lea esp, [rsp - 8]; call 0x21ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004034c1: lea esp, [rsp - 8]; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048b1: lea esp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000404991: lea esp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x00000000004048c1: lea esp, [rsp - 8]; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004049a1: lea esp, [rsp - 8]; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004048d1: lea esp, [rsp - 8]; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004049b1: lea esp, [rsp - 8]; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004048e1: lea esp, [rsp - 8]; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004049c1: lea esp, [rsp - 8]; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004279d1: lea esp, [rsp - 8]; call 0x27980; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000404f81: lea esp, [rsp - 8]; call 0x27c0; lea rsp, [rsp + 8]; ret; 
0x0000000000428e61: lea esp, [rsp - 8]; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000429951: lea esp, [rsp - 8]; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x0000000000429961: lea esp, [rsp - 8]; call 0x29970; lea rsp, [rsp + 8]; ret; 
0x0000000000456051: lea esp, [rsp - 8]; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f81: lea esp, [rsp - 8]; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x0000000000458371: lea esp, [rsp - 8]; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b091: lea esp, [rsp - 8]; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x0000000000458381: lea esp, [rsp - 8]; call 0x2b10; lea rsp, [rsp + 8]; ret; 
0x000000000042bd61: lea esp, [rsp - 8]; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x000000000042bd71: lea esp, [rsp - 8]; call 0x2bd80; lea rsp, [rsp + 8]; ret; 
0x000000000042fc91: lea esp, [rsp - 8]; call 0x2e350; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004588f1: lea esp, [rsp - 8]; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x0000000000419011: lea esp, [rsp - 8]; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x00000000004243f1: lea esp, [rsp - 8]; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edf1: lea esp, [rsp - 8]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ece1: lea esp, [rsp - 8]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000433de1: lea esp, [rsp - 8]; call 0x33bb0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e1: lea esp, [rsp - 8]; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x0000000000433d81: lea esp, [rsp - 8]; call 0x33c90; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000427a01: lea esp, [rsp - 8]; call 0x342a0; lea rsp, [rsp + 8]; ret; 
0x00000000004279f1: lea esp, [rsp - 8]; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000434241: lea esp, [rsp - 8]; call 0x342e0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434221: lea esp, [rsp - 8]; call 0x34320; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed51: lea esp, [rsp - 8]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb1: lea esp, [rsp - 8]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed41: lea esp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e91: lea esp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433281: lea esp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433071: lea esp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433461: lea esp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434ea1: lea esp, [rsp - 8]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004322e1: lea esp, [rsp - 8]; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b1: lea esp, [rsp - 8]; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000042edc1: lea esp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa1: lea esp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c91: lea esp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324d1: lea esp, [rsp - 8]; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326c1: lea esp, [rsp - 8]; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e61: lea esp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433041: lea esp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433251: lea esp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433431: lea esp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edb1: lea esp, [rsp - 8]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351e1: lea esp, [rsp - 8]; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352b1: lea esp, [rsp - 8]; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352c1: lea esp, [rsp - 8]; call 0x35280; lea rsp, [rsp + 8]; ret; 
0x0000000000435301: lea esp, [rsp - 8]; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x0000000000435371: lea esp, [rsp - 8]; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353e1: lea esp, [rsp - 8]; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000042edd1: lea esp, [rsp - 8]; call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed71: lea esp, [rsp - 8]; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431651: lea esp, [rsp - 8]; call 0x36c90; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a91: lea esp, [rsp - 8]; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000437381: lea esp, [rsp - 8]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431701: lea esp, [rsp - 8]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b41: lea esp, [rsp - 8]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff1: lea esp, [rsp - 8]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae1: lea esp, [rsp - 8]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004316a1: lea esp, [rsp - 8]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b11: lea esp, [rsp - 8]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316d1: lea esp, [rsp - 8]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed61: lea esp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433641: lea esp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336c1: lea esp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433751: lea esp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337e1: lea esp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433681: lea esp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433701: lea esp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433791: lea esp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433821: lea esp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dad1: lea esp, [rsp - 8]; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x0000000000434261: lea esp, [rsp - 8]; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434281: lea esp, [rsp - 8]; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000427a31: lea esp, [rsp - 8]; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000455b21: lea esp, [rsp - 8]; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x000000000044c921: lea esp, [rsp - 8]; call 0x4c930; lea rsp, [rsp + 8]; ret; 
0x0000000000404f71: lea esp, [rsp - 8]; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x00000000004479a1: lea esp, [rsp - 8]; call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x0000000000452b41: lea esp, [rsp - 8]; call 0x56050; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x00000000004581a1: lea esp, [rsp - 8]; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x0000000000458391: lea esp, [rsp - 8]; call 0x576a0; lea rsp, [rsp + 8]; ret; 
0x00000000004583a1: lea esp, [rsp - 8]; call 0x576d0; lea rsp, [rsp + 8]; ret; 
0x0000000000453d01: lea esp, [rsp - 8]; call 0x58ac0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045a231: lea esp, [rsp - 8]; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b841: lea esp, [rsp - 8]; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dc1: lea esp, [rsp - 8]; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b851: lea esp, [rsp - 8]; call 0x59cf0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7f1: lea esp, [rsp - 8]; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x0000000000432131: lea esp, [rsp - 8]; call 0x67c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432061: lea esp, [rsp - 8]; call 0x6820; lea rsp, [rsp + 8]; ret; 
0x00000000004320f1: lea esp, [rsp - 8]; call 0x6830; lea rsp, [rsp + 8]; ret; 
0x0000000000432081: lea esp, [rsp - 8]; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x0000000000432111: lea esp, [rsp - 8]; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321c1: lea esp, [rsp - 8]; call 0x6880; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321a1: lea esp, [rsp - 8]; call 0x6880; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432181: lea esp, [rsp - 8]; call 0x6880; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432201: lea esp, [rsp - 8]; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000432121: lea esp, [rsp - 8]; call 0x69a0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c81: lea esp, [rsp - 8]; call 0x6a70; lea rsp, [rsp + 8]; ret; 
0x0000000000431bb1: lea esp, [rsp - 8]; call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c41: lea esp, [rsp - 8]; call 0x6b00; lea rsp, [rsp + 8]; ret; 
0x0000000000431bd1: lea esp, [rsp - 8]; call 0x6b30; lea rsp, [rsp + 8]; ret; 
0x0000000000431c61: lea esp, [rsp - 8]; call 0x6b50; lea rsp, [rsp + 8]; ret; 
0x0000000000431bc1: lea esp, [rsp - 8]; call 0x6b80; lea rsp, [rsp + 8]; ret; 
0x0000000000431c51: lea esp, [rsp - 8]; call 0x6ba0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d11: lea esp, [rsp - 8]; call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cf1: lea esp, [rsp - 8]; call 0x6bd0; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd1: lea esp, [rsp - 8]; call 0x6bd0; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d51: lea esp, [rsp - 8]; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c71: lea esp, [rsp - 8]; call 0x6ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000431841: lea esp, [rsp - 8]; call 0x6d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431771: lea esp, [rsp - 8]; call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431801: lea esp, [rsp - 8]; call 0x6dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431791: lea esp, [rsp - 8]; call 0x6df0; lea rsp, [rsp + 8]; ret; 
0x0000000000431821: lea esp, [rsp - 8]; call 0x6e00; lea rsp, [rsp + 8]; ret; 
0x0000000000431781: lea esp, [rsp - 8]; call 0x6e20; lea rsp, [rsp + 8]; ret; 
0x0000000000431811: lea esp, [rsp - 8]; call 0x6e30; lea rsp, [rsp + 8]; ret; 
0x00000000004318d1: lea esp, [rsp - 8]; call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431891: lea esp, [rsp - 8]; call 0x6e50; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431911: lea esp, [rsp - 8]; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x0000000000431831: lea esp, [rsp - 8]; call 0x6f20; lea rsp, [rsp + 8]; ret; 
0x000000000042a591: lea esp, [rsp - 8]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba21: lea esp, [rsp - 8]; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283d1: lea esp, [rsp - 8]; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f121: lea esp, [rsp - 8]; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b41: lea esp, [rsp - 8]; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b21: lea esp, [rsp - 8]; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b01: lea esp, [rsp - 8]; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae1: lea esp, [rsp - 8]; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac1: lea esp, [rsp - 8]; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a81: lea esp, [rsp - 8]; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a61: lea esp, [rsp - 8]; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a41: lea esp, [rsp - 8]; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a21: lea esp, [rsp - 8]; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a01: lea esp, [rsp - 8]; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419221: lea esp, [rsp - 8]; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x0000000000419201: lea esp, [rsp - 8]; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191c1: lea esp, [rsp - 8]; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191a1: lea esp, [rsp - 8]; call qword ptr [rip + 0x509b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419171: lea esp, [rsp - 8]; call qword ptr [rip + 0x509cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000419141: lea esp, [rsp - 8]; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x0000000000419121: lea esp, [rsp - 8]; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x0000000000419101: lea esp, [rsp - 8]; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190b1: lea esp, [rsp - 8]; call qword ptr [rip + 0x50a9d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190e1: lea esp, [rsp - 8]; call qword ptr [rip + 0x50aa5]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6c1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a1: lea esp, [rsp - 8]; call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b661: lea esp, [rsp - 8]; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b1: lea esp, [rsp - 8]; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b591: lea esp, [rsp - 8]; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af71: lea esp, [rsp - 8]; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af51: lea esp, [rsp - 8]; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af31: lea esp, [rsp - 8]; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af11: lea esp, [rsp - 8]; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aef1: lea esp, [rsp - 8]; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aed1: lea esp, [rsp - 8]; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb1: lea esp, [rsp - 8]; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae91: lea esp, [rsp - 8]; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae71: lea esp, [rsp - 8]; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae51: lea esp, [rsp - 8]; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae31: lea esp, [rsp - 8]; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad71: lea esp, [rsp - 8]; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad51: lea esp, [rsp - 8]; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad31: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad11: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acf1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acd1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acb1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac91: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac71: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac51: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac31: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac11: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abf1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abd1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abb1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab91: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab71: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a15d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab41: lea esp, [rsp - 8]; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x0000000000416991: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x0000000000416861: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416841: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416821: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166f1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165b1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416591: lea esp, [rsp - 8]; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416571: lea esp, [rsp - 8]; call qword ptr [rip + 0x6da25]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416551: lea esp, [rsp - 8]; call qword ptr [rip + 0x6da35]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164d1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dab5]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416491: lea esp, [rsp - 8]; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x0000000000416471: lea esp, [rsp - 8]; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416351: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416331: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x0000000000416311: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162f1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162d1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162b1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416291: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416271: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416251: lea esp, [rsp - 8]; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416231: lea esp, [rsp - 8]; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x0000000000416151: lea esp, [rsp - 8]; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e11: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415db1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e1e5]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d71: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e215]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d31: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e255]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d11: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e275]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c71: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c51: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c31: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b11: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415af1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a91: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a71: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a51: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a31: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a11: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159d1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x00000000004157a1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x0000000000415781: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415761: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415641: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415621: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415601: lea esp, [rsp - 8]; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154c1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415481: lea esp, [rsp - 8]; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154e1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x00000000004154a1: lea esp, [rsp - 8]; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415501: lea esp, [rsp - 8]; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415461: lea esp, [rsp - 8]; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x0000000000439221: lea esp, [rsp - 8]; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c1: lea esp, [rsp - 8]; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af1: lea esp, [rsp - 8]; lea r8, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316b1: lea esp, [rsp - 8]; lea r8, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004392f1: lea esp, [rsp - 8]; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000453391: lea esp, [rsp - 8]; lea rax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x0000000000455b91: lea esp, [rsp - 8]; lea rax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000434871: lea esp, [rsp - 8]; lea rax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000044a231: lea esp, [rsp - 8]; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a211: lea esp, [rsp - 8]; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d1: lea esp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d1: lea esp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b1: lea esp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b1: lea esp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8e1: lea esp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e1: lea esp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x0000000000434481: lea esp, [rsp - 8]; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434461: lea esp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434461: lea esp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434421: lea esp, [rsp - 8]; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343e1: lea esp, [rsp - 8]; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343a1: lea esp, [rsp - 8]; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x0000000000434361: lea esp, [rsp - 8]; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434321: lea esp, [rsp - 8]; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342e1: lea esp, [rsp - 8]; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342c1: lea esp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c1: lea esp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a1: lea esp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a1: lea esp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd1: lea esp, [rsp - 8]; lea rax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f41: lea esp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f41: lea esp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040ff91: lea esp, [rsp - 8]; lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea1: lea esp, [rsp - 8]; lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa1: lea esp, [rsp - 8]; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d51: lea esp, [rsp - 8]; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d31: lea esp, [rsp - 8]; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d11: lea esp, [rsp - 8]; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000041b8d1: lea esp, [rsp - 8]; lea rdi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b381: lea esp, [rsp - 8]; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000447521: lea esp, [rsp - 8]; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000439a91: lea esp, [rsp - 8]; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000437361: lea esp, [rsp - 8]; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437321: lea esp, [rsp - 8]; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e1: lea esp, [rsp - 8]; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f81: lea esp, [rsp - 8]; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431b21: lea esp, [rsp - 8]; lea rdx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e1: lea esp, [rsp - 8]; lea rdx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000438e71: lea esp, [rsp - 8]; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e11: lea esp, [rsp - 8]; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac1: lea esp, [rsp - 8]; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431681: lea esp, [rsp - 8]; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf1: lea esp, [rsp - 8]; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x0000000000459091: lea esp, [rsp - 8]; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000043bab1: lea esp, [rsp - 8]; mov dl, sil; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b1: lea esp, [rsp - 8]; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004300c1: lea esp, [rsp - 8]; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a1: lea esp, [rsp - 8]; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f1: lea esp, [rsp - 8]; mov ecx, 0x20; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab1: lea esp, [rsp - 8]; mov ecx, 0x20; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000044a1d1: lea esp, [rsp - 8]; mov ecx, 0xffffffe0; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433a51: lea esp, [rsp - 8]; mov ecx, 0xffffffe0; lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000045c821: lea esp, [rsp - 8]; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc1: lea esp, [rsp - 8]; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e71: lea esp, [rsp - 8]; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457221: lea esp, [rsp - 8]; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457321: lea esp, [rsp - 8]; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000459de1: lea esp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e01: lea esp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba51: lea esp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x0000000000434f91: lea esp, [rsp - 8]; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb1: lea esp, [rsp - 8]; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160d1: lea esp, [rsp - 8]; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x0000000000416131: lea esp, [rsp - 8]; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f1: lea esp, [rsp - 8]; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x0000000000416111: lea esp, [rsp - 8]; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef61: lea esp, [rsp - 8]; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x0000000000434591: lea esp, [rsp - 8]; mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x00000000004160b1: lea esp, [rsp - 8]; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004166d1: lea esp, [rsp - 8]; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004159f1: lea esp, [rsp - 8]; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155e1: lea esp, [rsp - 8]; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x00000000004396c1: lea esp, [rsp - 8]; mov edx, 1; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x0000000000427a11: lea esp, [rsp - 8]; mov edx, 1; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000044a291: lea esp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448551: lea esp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448531: lea esp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448531: lea esp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c1: lea esp, [rsp - 8]; mov edx, 1; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x00000000004155c1: lea esp, [rsp - 8]; mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f51: lea esp, [rsp - 8]; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004166b1: lea esp, [rsp - 8]; mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x00000000004572e1: lea esp, [rsp - 8]; mov esi, edi; mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004191e1: lea esp, [rsp - 8]; mov qword ptr [rsp], rdi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000430431: lea esp, [rsp - 8]; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x000000000043f7e1: lea esp, [rsp - 8]; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443261: lea esp, [rsp - 8]; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x000000000043b421: lea esp, [rsp - 8]; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c11: lea esp, [rsp - 8]; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f1: lea esp, [rsp - 8]; mov r9, rsp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x00000000004115a1: lea esp, [rsp - 8]; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d1: lea esp, [rsp - 8]; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000456861: lea esp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456881: lea esp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b1: lea esp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f1: lea esp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b181: lea esp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a1: lea esp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b221: lea esp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a1: lea esp, [rsp - 8]; mov rax, rdi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041dad1: lea esp, [rsp - 8]; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f611: lea esp, [rsp - 8]; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000044fa51: lea esp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa31: lea esp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa71: lea esp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b1: lea esp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d1: lea esp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x00000000004147c1: lea esp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f1: lea esp, [rsp - 8]; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d811: lea esp, [rsp - 8]; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004149b1: lea esp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414991: lea esp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414971: lea esp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433911: lea esp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004396e1: lea esp, [rsp - 8]; mov rcx, rdx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437301: lea esp, [rsp - 8]; mov rcx, rdx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437341: lea esp, [rsp - 8]; mov rcx, rdx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431101: lea esp, [rsp - 8]; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431121: lea esp, [rsp - 8]; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004557c1: lea esp, [rsp - 8]; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x000000000045b861: lea esp, [rsp - 8]; mov rdx, rsi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a1: lea esp, [rsp - 8]; mov rdx, rsi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb1: lea esp, [rsp - 8]; mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x0000000000457451: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba1: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402be1: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b41: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c801: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457521: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e11: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402a51: lea esp, [rsp - 8]; mov rsi, rdi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004532b1: lea esp, [rsp - 8]; mov rsi, rdi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x0000000000450871: lea esp, [rsp - 8]; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321e1: lea esp, [rsp - 8]; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318f1: lea esp, [rsp - 8]; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x0000000000405181: lea esp, [rsp - 8]; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b1: lea esp, [rsp - 8]; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000045b961: lea esp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e1: lea esp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba01: lea esp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b981: lea esp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee1: lea esp, [rsp - 8]; movsxd rsi, edi; mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457361: lea esp, [rsp - 8]; movsxd rsi, edi; mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c841: lea esp, [rsp - 8]; movsxd rsi, edi; mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc1: lea esp, [rsp - 8]; movsxd rsi, edi; mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa1: lea esp, [rsp - 8]; movsxd rsi, edi; mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000453f61: lea esp, [rsp - 8]; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x000000000040b8c1: lea esp, [rsp - 8]; movsxd rsi, esi; movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad1: lea esp, [rsp - 8]; movzx esi, byte ptr [rdi]; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000042f0d1: lea esp, [rsp - 8]; xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f91: lea esp, [rsp - 8]; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf1: lea esp, [rsp - 8]; xor dl, dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004507d1: lea esp, [rsp - 8]; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x000000000043bad1: lea esp, [rsp - 8]; xor dl, dl; lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000418661: lea esp, [rsp - 8]; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418641: lea esp, [rsp - 8]; xor edi, edi; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab21: lea esp, [rsp - 8]; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000045cad1: lea esp, [rsp - 8]; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x00000000004034d1: lea esp, [rsp - 8]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f21: lea esp, [rsp - 8]; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472b1: lea esp, [rsp - 8]; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004473a1: lea esp, [rsp - 8]; xor edx, edx; call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447f91: lea esp, [rsp - 8]; xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x000000000044a251: lea esp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448511: lea esp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f1: lea esp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f1: lea esp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004151b1: lea esp, [rsp - 8]; xor edx, edx; mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004509d1: lea esp, [rsp - 8]; xor edx, edx; xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x00000000004476b1: lea esp, [rsp - 8]; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476d1: lea esp, [rsp - 8]; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x0000000000447851: lea esp, [rsp - 8]; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447871: lea esp, [rsp - 8]; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x00000000004353f1: lea esp, [rsp - 8]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453371: lea esp, [rsp - 8]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042e401: lea esp, [rsp - 8]; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000420861: lea esp, [rsp - 8]; xor sil, sil; call 0x20780; lea rsp, [rsp + 8]; ret; 
0x000000000041fcd4: lea r12, [rdx + rax]; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042e32f: lea r8, [rdx + 1]; cmp r8, rcx; jg 0x2e320; mov rsp, rbp; pop rbp; ret; 
0x000000000044b914: lea r8, [rip + 0x2a385]; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e4: lea r8, [rip + 0x2a5b5]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b74: lea r8, [rip + 0x2c125]; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x000000000043934f: lea r8, [rip + 0x3c94a]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000439225: lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c5: lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043909a: lea r8, [rip + 0x3cbff]; call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b34: lea r8, [rip + 0x3f165]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b14: lea r8, [rip + 0x3f185]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c4: lea r8, [rip + 0x3f3d5]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000432232: lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f80: lea r8, [rip + 0x43d19]; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431d76: lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af5: lea r8, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431936: lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004316b5: lea r8, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000455993: lea r8, [rsp + 0x14]; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000042f879: lea r9, [rbp - 8]; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x00000000004392f5: lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x000000000043928f: lea r9, [rip + 0x3ca0a]; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x000000000043915f: lea r9, [rip + 0x3cb3a]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000436bc4: lea r9, [rip + 0x3f0d5]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x000000000045598e: lea r9, [rsp + 0x18]; lea r8, [rsp + 0x14]; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000410767: lea rax, [r10 + 1]; pop rbx; ret; 
0x00000000004040c8: lea rax, [r12 + r13]; mov byte ptr [rbx], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000403159: lea rax, [r9 + 1]; ret; 
0x0000000000459318: lea rax, [rax + rdx*8]; ret; 
0x0000000000420664: lea rax, [rbx + 0x58]; mov rdi, qword ptr [rax]; call 0x19140; pop rbx; ret; 
0x0000000000447c4e: lea rax, [rbx + r13]; pop r13; pop r12; pop rbx; ret; 
0x000000000044ba64: lea rax, [rbx + r13]; pop r13; pop r12; pop rbx; ret; 
0x0000000000402473: lea rax, [rcx + rax - 0x10]; cmp rdx, rax; jbe 0x246b; ret; 
0x0000000000402567: lea rax, [rcx + rax - 0x10]; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x00000000004024f5: lea rax, [rcx + rax - 8]; cmp rdx, rax; jbe 0x24eb; ret; 
0x0000000000416e6f: lea rax, [rcx + rdx]; ret; 
0x00000000004226b0: lea rax, [rdi + 0x270]; ret; 
0x0000000000412ee9: lea rax, [rdi + r11]; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004479ca: lea rax, [rdi + rdx]; ret; 
0x0000000000417bc9: lea rax, [rdi + rsi]; ret; 
0x0000000000443f63: lea rax, [rdx + 1]; test eax, eax; jg 0x43f6e; add eax, 7; ret; 
0x0000000000452829: lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x00000000004527ce: lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000456941: lea rax, [rip + 0x1f5b8]; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004533a2: lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x00000000004533a2: lea rax, [rip + 0x22b57]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000453395: lea rax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000045333b: lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000044f641: lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f341: lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f021: lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee91: lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea7b: lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000045cd44: lea rax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf9: lea rax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000401032: lea rax, [rip + 0x27]; mov qword ptr [r10 + 0x60], rax; mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000045ac01: lea rax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abab: lea rax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000449aa9: lea rax, [rip + 0x2c1f0]; mov qword ptr [rsp], rax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000043358f: lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334bf: lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043319f: lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004330cf: lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000455bbd: lea rax, [rip + 0x2e2ac]; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x0000000000455b95: lea rax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000447118: lea rax, [rip + 0x2eb81]; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004470d8: lea rax, [rip + 0x2ebc1]; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x0000000000456514: lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x0000000000452649: lea rax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000444cdc: lea rax, [rip + 0x30fbd]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c68: lea rax, [rip + 0x31031]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x000000000045261d: lea rax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000453173: lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453173: lea rax, [rip + 0x326a6]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004500ce: lea rax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042d840: lea rax, [rip + 0x339c9]; movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d830: lea rax, [rip + 0x339d9]; movsd xmm0, qword ptr [rax]; ret; 
0x0000000000434875: lea rax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x00000000004508f0: lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x0000000000450591: lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x0000000000450524: lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x000000000044ccfb: lea rax, [rip + 0x38b2e]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc5b: lea rax, [rip + 0x38bce]; mov rax, qword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c90b: lea rax, [rip + 0x38f1e]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c5ef: lea rax, [rip + 0x3923a]; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044a29a: lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a257: lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a235: lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a215: lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000449d3d: lea rax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x0000000000449d2d: lea rax, [rip + 0x3a02c]; call qword ptr [rax + 0x10]; 
0x000000000044855a: lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x000000000044853a: lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x000000000044853a: lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000448517: lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f7: lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f7: lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d5: lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d5: lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b5: lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b5: lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000044549f: lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x000000000044541c: lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000436a39: lea rax, [rip + 0x3f260]; mov qword ptr [rsp], rax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000433976: lea rax, [rip + 0x42533]; bt dword ptr [rax], edi; setb al; ret; 
0x0000000000433956: lea rax, [rip + 0x42553]; bt dword ptr [rax], edi; setb al; ret; 
0x00000000004245ce: lea rax, [rip + 0x4434b]; cmp byte ptr [rax], 0; je 0x245df; call 0x24350; pop rbx; ret; 
0x000000000043b8e5: lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e5: lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000043b547: lea rax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000043b537: lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x0000000000425439: lea rax, [rip + 0x4c4f0]; movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x00000000004250f9: lea rax, [rip + 0x4c860]; movsxd rax, dword ptr [rax]; cmp rdx, rax; jne 0x2510b; mov al, 1; ret; 
0x000000000041b368: lea rax, [rip + 0x4d551]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b338: lea rax, [rip + 0x4d581]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b308: lea rax, [rip + 0x4d5b1]; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b2d8: lea rax, [rip + 0x4d5e1]; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2a8: lea rax, [rip + 0x4d611]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b278: lea rax, [rip + 0x4d641]; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b208: lea rax, [rip + 0x4d6b1]; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b1d8: lea rax, [rip + 0x4d6e1]; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041a64f: lea rax, [rip + 0x4e46a]; mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x0000000000434485: lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434465: lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434465: lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434425: lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343e5: lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343a5: lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x0000000000434365: lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434325: lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342e5: lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342c5: lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c5: lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a5: lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a5: lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000418d07: lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x0000000000418cc1: lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000418cb4: lea rax, [rip + 0x4fd15]; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x00000000004189f8: lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004189a2: lea rax, [rip + 0x4fec7]; mov rdx, qword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x000000000041894f: lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004188fc: lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x0000000000418880: lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x000000000041862c: lea rax, [rip + 0x5025d]; movzx edi, word ptr [rax]; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000418743: lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x00000000004184c2: lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x000000000041829c: lea rax, [rip + 0x505dd]; mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x00000000004181a6: lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x000000000041819c: lea rax, [rip + 0x506cd]; mov rbx, qword ptr [rax]; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x00000000004182a9: lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000417f6f: lea rax, [rip + 0x5097a]; mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000417f42: lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417f42: lea rax, [rip + 0x50997]; call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x0000000000417f35: lea rax, [rip + 0x509a4]; cmp qword ptr [rax], 0; je 0x17f4b; lea rax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417ed8: lea rax, [rip + 0x509f1]; mov byte ptr [rax], 1; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x0000000000417e65: lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417633: lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x00000000004169f4: lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169f4: lea rax, [rip + 0x52065]; call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x00000000004169d4: lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x00000000004169d4: lea rax, [rip + 0x52085]; call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x0000000000415280: lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000415280: lea rax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415248: lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415248: lea rax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415218: lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415218: lea rax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151e8: lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e8: lea rax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414cd4: lea rax, [rip + 0x53bb5]; movzx edi, word ptr [rax]; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000414df7: lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca8: lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x000000000042c157: lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c7: lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c037: lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040549c: lea rax, [rip + 0x58f45]; subsd xmm1, qword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x000000000042a5ba: lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d57: lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc7: lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c37: lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042845c: lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428425: lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283fa: lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427358: lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042714e: lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042732b: lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c8: lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427573: lea rax, [rip + 0x5daf6]; mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000427208: lea rax, [rip + 0x5de61]; mov rdi, qword ptr [rax]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004277f1: lea rax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x0000000000426c20: lea rax, [rip + 0x5e409]; mov edi, dword ptr [rax]; mov r8d, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000426be0: lea rax, [rip + 0x5e449]; mov edi, dword ptr [rax]; mov r8d, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x00000000004262a3: lea rax, [rip + 0x5ed86]; mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd5: lea rax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000424523: lea rax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000423042: lea rax, [rip + 0x5fb07]; movzx esi, word ptr [rax]; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000423bf0: lea rax, [rip + 0x60259]; mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x0000000000423370: lea rax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042289a: lea rax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004227a4: lea rax, [rip + 0x61555]; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x0000000000422763: lea rax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422607: lea rax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042256c: lea rax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224fb: lea rax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce8: lea rax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b84: lea rax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ac3: lea rax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421a99: lea rax, [rip + 0x62260]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a0b: lea rax, [rip + 0x622ee]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x00000000004216bf: lea rax, [rip + 0x6263a]; add rax, 8; mov word ptr [rax], 0x64; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421679: lea rax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042152e: lea rax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421428: lea rax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212de: lea rax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fcd: lea rax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204dd: lea rax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202e4: lea rax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdef: lea rax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdab: lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x000000000041fd70: lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x000000000041ee8d: lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000041ee01: lea rax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edb5: lea rax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e965: lea rax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e918: lea rax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e822: lea rax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e752: lea rax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d871: lea rax, [rip + 0x65688]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041e457: lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2b3: lea rax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d831: lea rax, [rip + 0x65a48]; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041e106: lea rax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e08d: lea rax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dffa: lea rax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df3b: lea rax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de9b: lea rax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddfb: lea rax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd6f: lea rax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc5b: lea rax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dbab: lea rax, [rip + 0x6614e]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041db70: lea rax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db03: lea rax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d984: lea rax, [rip + 0x66375]; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x000000000041d943: lea rax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d684: lea rax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d49a: lea rax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d394: lea rax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d244: lea rax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfaf: lea rax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec8: lea rax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd64: lea rax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cca3: lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc76: lea rax, [rip + 0x67083]; add rax, 8; mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc3b: lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbf3: lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca54: lea rax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c9f6: lea rax, [rip + 0x67303]; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041c5cf: lea rax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c55e: lea rax, [rip + 0x6779b]; add rax, 8; mov word ptr [rax], 0x65; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041c18b: lea rax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041bf38: lea rax, [rip + 0x67dc1]; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bee4: lea rax, [rip + 0x67e15]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041be98: lea rax, [rip + 0x67e61]; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bd21: lea rax, [rip + 0x67fd8]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bcd1: lea rax, [rip + 0x68028]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bc7f: lea rax, [rip + 0x6807a]; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041a9b8: lea rax, [rip + 0x681b1]; add rax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x000000000041b7bc: lea rax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afec: lea rax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041a773: lea rax, [rip + 0x6a666]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a705: lea rax, [rip + 0x6a6d4]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a67a: lea rax, [rip + 0x6a75f]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a61d: lea rax, [rip + 0x6a7bc]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a45a: lea rax, [rip + 0x6a97f]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x0000000000418f5d: lea rax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e8a: lea rax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e56: lea rax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418043: lea rax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418dbb: lea rax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d8a: lea rax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041a1b3: lea rax, [rip + 0x6ac26]; mov rax, qword ptr [rax]; test rax, rax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x0000000000417e21: lea rax, [rip + 0x6ad48]; add rax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000418014: lea rax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fe4: lea rax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000419e35: lea rax, [rip + 0x6afa4]; mov rax, qword ptr [rax]; test rax, rax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x0000000000419cfc: lea rax, [rip + 0x6b0dd]; mov rax, qword ptr [rax]; test rax, rax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419294: lea rax, [rip + 0x6bb45]; mov rax, qword ptr [rax]; test rax, rax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419244: lea rax, [rip + 0x6bb95]; mov rax, qword ptr [rax]; test rax, rax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x0000000000417c3a: lea rax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c10: lea rax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004184ec: lea rax, [rip + 0x6c8ed]; mov rax, qword ptr [rax]; test rax, rax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x000000000041531c: lea rax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004150d5: lea rax, [rip + 0x6ee6c]; mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000414a3e: lea rax, [rip + 0x6f513]; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415138: lea rax, [rip + 0x6fca1]; mov rax, qword ptr [rax]; test rax, rax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004150bc: lea rax, [rip + 0x6fd1d]; mov rax, qword ptr [rax]; test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415095: lea rax, [rip + 0x6fd44]; mov rax, qword ptr [rax]; test rax, rax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x000000000041502b: lea rax, [rip + 0x6fdae]; mov rax, qword ptr [rax]; test rax, rax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x0000000000414fde: lea rax, [rip + 0x6fdfb]; mov rax, qword ptr [rax]; test rax, rax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000414fb1: lea rax, [rip + 0x6fe28]; mov rax, qword ptr [rax]; test rax, rax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414f25: lea rax, [rip + 0x6feb4]; mov rax, qword ptr [rax]; test rax, rax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414eba: lea rax, [rip + 0x6ff1f]; mov rax, qword ptr [rax]; test rax, rax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414e78: lea rax, [rip + 0x6ff61]; mov rax, qword ptr [rax]; test rax, rax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414e21: lea rax, [rip + 0x6ffb8]; mov rax, qword ptr [rax]; test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414db4: lea rax, [rip + 0x70025]; mov rax, qword ptr [rax]; test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414d87: lea rax, [rip + 0x70052]; mov rax, qword ptr [rax]; test rax, rax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414d61: lea rax, [rip + 0x70078]; mov rax, qword ptr [rax]; test rax, rax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d2d: lea rax, [rip + 0x700ac]; mov rax, qword ptr [rax]; test rax, rax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414cfe: lea rax, [rip + 0x700db]; mov rax, qword ptr [rax]; test rax, rax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414c65: lea rax, [rip + 0x70174]; mov rax, qword ptr [rax]; test rax, rax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414b62: lea rax, [rip + 0x70277]; mov rax, qword ptr [rax]; test rax, rax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414afd: lea rax, [rip + 0x702dc]; mov rax, qword ptr [rax]; test rax, rax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414aa5: lea rax, [rip + 0x70334]; mov rax, qword ptr [rax]; test rax, rax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414a51: lea rax, [rip + 0x70388]; mov rax, qword ptr [rax]; test rax, rax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414a25: lea rax, [rip + 0x703b4]; mov rax, qword ptr [rax]; test rax, rax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000412f45: lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f45: lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004114ab: lea rax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040ed61: lea rax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ff95: lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea5: lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000040e932: lea rax, [rip + 0x741e7]; movzx edx, word ptr [rax]; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e621: lea rax, [rip + 0x744f8]; movzx edx, word ptr [rax]; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040f22c: lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x000000000040ed6b: lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ec68: lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x000000000040ea18: lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040e940: lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e635: lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e511: lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000040e0f7: lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000040e06e: lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000040e06e: lea rax, [rip + 0x75ceb]; call qword ptr [rax]; pop r13; pop r12; pop rbx; ret; 
0x000000000040defc: lea rax, [rip + 0x75e5d]; call qword ptr [rax + 0xa0]; pop r13; pop r12; pop rbx; ret; 
0x000000000040de14: lea rax, [rip + 0x75f45]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d73d: lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x00000000004050a9: lea rax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004030d5: lea rax, [rip + 0x80d94]; cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x0000000000402a3c: lea rax, [rip + 0x814f5]; mov dword ptr [rax], ebx; pop rbx; ret; 
0x0000000000402a0e: lea rax, [rip + 0x81523]; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040106c: lea rax, [rip + 0x8198d]; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x0000000000401050: lea rax, [rip + 0x819a9]; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x000000000044823c: lea rax, [rip - 0x14053]; lea rdx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x000000000041c66f: lea rax, [rip - 0x156]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b88: lea rax, [rip - 0x15f]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a18: lea rax, [rip - 0x19f]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209c6: lea rax, [rip - 0x2ed]; mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420966: lea rax, [rip - 0x32d]; mov qword ptr [rbx + 0x40], rax; pop r13; pop r12; pop rbx; ret; 
0x00000000004116e6: lea rax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000426bb0: lea rax, [rip - 0x67]; mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000042e343: lea rax, [rsi + 1]; movzx eax, byte ptr [rdx + rax - 1]; ret; 
0x00000000004528c1: lea rax, [rsi + rcx]; ret; 
0x0000000000402937: lea rax, [rsp + 8]; mov qword ptr [rdi + 0x30], rax; mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000453ada: lea rbx, [rsi + rdx]; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000044a07a: lea rcx, [rax + 1]; sub rcx, rdx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x0000000000416e67: lea rcx, [rdx + 2]; movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x000000000043b21f: lea rcx, [rip + 0x3aa7a]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa5: lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000425af0: lea rcx, [rip + 0x5fb09]; mov byte ptr [rcx + rax], dil; ret; 
0x000000000041d7fd: lea rcx, [rip + 0x6531c]; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x0000000000459530: lea rcx, [rip + 0x8b31]; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455998: lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000430a49: lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ec9: lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000044fa58: lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa38: lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa78: lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b8: lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d8: lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x0000000000420a38: lea rdi, [rax + 0x50]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000444bf0: lea rdi, [rax + 1]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004458ae: lea rdi, [rax + 1]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000040355a: lea rdi, [rax + 1]; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000407681: lea rdi, [rax + 1]; mov edx, 0x20; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000044591b: lea rdi, [rax + 1]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004147c8: lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x0000000000416ff8: lea rdi, [rax + r15]; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000040709b: lea rdi, [rax + rcx]; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000409169: lea rdi, [rax + rcx]; movsx rsi, si; and edx, 0xff; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000041708f: lea rdi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x000000000040bad4: lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf4: lea rdi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000041873c: lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x00000000004206fc: lea rdi, [rbx + 0x58]; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x000000000042089f: lea rdi, [rbx + 0x58]; xor esi, esi; call 0xe140; pop rbx; ret; 
0x000000000041ccf9: lea rdi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000421b19: lea rdi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x000000000042e5cb: lea rdi, [rdi + rax - 1]; call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x0000000000455b07: lea rdi, [rip + 0x229e2]; mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000044f63a: lea rdi, [rip + 0x260ff]; lea rax, [rip + 0x260f8]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f33a: lea rdi, [rip + 0x262a7]; lea rax, [rip + 0x262a0]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044f01a: lea rdi, [rip + 0x26467]; lea rax, [rip + 0x26460]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ee8a: lea rdi, [rip + 0x26497]; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000044ea74: lea rdi, [rip + 0x2674d]; lea rax, [rip + 0x26746]; call qword ptr [rax + 0x138]; lea rsp, [rsp + 8]; ret; 
0x000000000045bc2d: lea rdi, [rip + 0x2824c]; movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x000000000042751a: lea rdi, [rip + 0x3741f]; call 0x24dc0; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000426d55: lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d35: lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d15: lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000044594c: lea rdi, [rip + 0x3e52d]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458ef: lea rdi, [rip + 0x3e58a]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000444c31: lea rdi, [rip + 0x3f248]; and ecx, 0xff; mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004239e3: lea rdi, [rip + 0x46306]; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b8d5: lea rdi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b385: lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000419033: lea rdi, [rip + 0x50b06]; mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041d764: lea rdi, [rip + 0x65b15]; add rdi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000041d5d4: lea rdi, [rip + 0x65ca5]; add rdi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d464: lea rdi, [rip + 0x65e15]; add rdi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d2e4: lea rdi, [rip + 0x65f95]; add rdi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x000000000041b745: lea rdi, [rip + 0x696a4]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b713: lea rdi, [rip + 0x696d6]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041a6bd: lea rdi, [rip + 0x6a3dc]; xor edx, edx; mov esi, 0xe8; call 0x22e0; pop rbx; ret; 
0x000000000041a03d: lea rdi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x0000000000419ff9: lea rdi, [rip + 0x6ab90]; call 0x1ad70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418141: lea rdi, [rip + 0x6b838]; add rdi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x0000000000416a23: lea rdi, [rip + 0x6d546]; mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000411287: lea rdi, [rip + 0x72bf2]; call 0x11120; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040f222: lea rdi, [rip + 0x74c57]; mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x000000000040dbe3: lea rdi, [rip + 0x76176]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbc5: lea rdi, [rip + 0x76194]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db73: lea rdi, [rip + 0x761e6]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db55: lea rdi, [rip + 0x76204]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004558c4: lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045595e: lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000418878: lea rdi, [rsp + 0x878]; lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x0000000000458626: lea rdi, [rsp + 1]; call 0x2b80; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004585cf: lea rdi, [rsp + 1]; call 0x2c00; lea rsp, [rsp + 0x108]; ret; 
0x0000000000456b5f: lea rdi, [rsp + 1]; call 0x30d0; lea rsp, [rsp + 0x108]; ret; 
0x0000000000449d28: lea rdi, [rsp + 8]; lea rax, [rip + 0x3a02c]; call qword ptr [rax + 0x10]; 
0x000000000043b532: lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000041fd6b: lea rdi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x000000000041fda3: lea rdi, [rsp + 8]; mov rdx, rsp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x00000000004043f4: lea rdx, [rax + 2]; cmp rdx, rsi; jl 0x43ff; xor eax, eax; ret; 
0x000000000040ed5d: lea rdx, [rbp - 8]; lea rax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ec64: lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000417020: lea rdx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax + 0xc]; ret; 
0x0000000000416e30: lea rdx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000416e40: lea rdx, [rdi + 2]; movzx eax, byte ptr [rdi + 1]; add rax, rdx; movsxd rax, dword ptr [rax + 8]; ret; 
0x0000000000419064: lea rdx, [rip + 0x1125]; cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x000000000044a1da: lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x000000000044a1fa: lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000443a27: lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x000000000043bdc5: lea rdx, [rip + 0x257f4]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x000000000045cd7d: lea rdx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccc0: lea rdx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff8: lea rdx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045afa2: lea rdx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b04e: lea rdx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d7: lea rdx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a353: lea rdx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e9: lea rdx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000433aba: lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000433a5a: lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x0000000000447525: lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x00000000004557a1: lea rdx, [rip + 0x30438]; mov qword ptr [rdx + rax*8 - 0x20], 0; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x0000000000452afa: lea rdx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042993a: lea rdx, [rip + 0x3781f]; call 0xe180; pop rbx; ret; 
0x00000000004385ed: lea rdx, [rip + 0x3959c]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000043b1c0: lea rdx, [rip + 0x3aad9]; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x0000000000448243: lea rdx, [rip + 0x3bb16]; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000439a95: lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x000000000042bea3: lea rdx, [rip + 0x3cc46]; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x0000000000438edf: lea rdx, [rip + 0x3cdba]; mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000438daf: lea rdx, [rip + 0x3ceea]; mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000437365: lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437325: lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e5: lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f85: lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x000000000042e930: lea rdx, [rip + 0x43209]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000431b25: lea rdx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e5: lea rdx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004183ca: lea rdx, [rip + 0x46207]; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000425dd2: lea rdx, [rip + 0x4ba97]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000415270: lea rdx, [rip + 0x53809]; cmp qword ptr [rdx], 0; je 0x15289; mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x0000000000415238: lea rdx, [rip + 0x53841]; cmp qword ptr [rdx], 0; je 0x15251; mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415208: lea rdx, [rip + 0x53861]; cmp qword ptr [rdx], 0; je 0x15221; mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x00000000004151d8: lea rdx, [rip + 0x53881]; cmp qword ptr [rdx], 0; je 0x151f1; mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x000000000042c19f: lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c10f: lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c07f: lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000040526d: lea rdx, [rip + 0x59174]; comisd xmm1, xmmword ptr [rdx]; jp 0x527c; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x000000000042a630: lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5e5: lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d9f: lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d0f: lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c7f: lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273d4: lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042729b: lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427267: lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427238: lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427408: lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427390: lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f7: lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cbd: lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c71: lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242a3: lea rdx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042426a: lea rdx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423c6c: lea rdx, [rip + 0x5ee9d]; mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000424234: lea rdx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242dc: lea rdx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424315: lea rdx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a7: lea rdx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042455f: lea rdx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000425847: lea rdx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000425867: lea rdx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x00000000004244f9: lea rdx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042376c: lea rdx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004238da: lea rdx, [rip + 0x6059f]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x00000000004236bc: lea rdx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042360c: lea rdx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042328c: lea rdx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231dc: lea rdx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042312c: lea rdx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fcc: lea rdx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f1c: lea rdx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e6c: lea rdx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422995: lea rdx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422967: lea rdx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422797: lea rdx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422635: lea rdx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d9: lea rdx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422529: lea rdx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042249c: lea rdx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042243d: lea rdx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223bd: lea rdx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042235d: lea rdx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222dd: lea rdx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421dbc: lea rdx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d23: lea rdx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c18: lea rdx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bbf: lea rdx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421afa: lea rdx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a8c: lea rdx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a33: lea rdx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219fe: lea rdx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219a3: lea rdx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042196a: lea rdx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042190d: lea rdx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218c3: lea rdx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042185a: lea rdx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421813: lea rdx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217ad: lea rdx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421758: lea rdx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216fd: lea rdx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216b2: lea rdx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042155c: lea rdx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214be: lea rdx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421463: lea rdx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042130c: lea rdx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042126e: lea rdx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421203: lea rdx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211b3: lea rdx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042114e: lea rdx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042111b: lea rdx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210bd: lea rdx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042105e: lea rdx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042102b: lea rdx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042057c: lea rdx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420424: lea rdx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420373: lea rdx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420233: lea rdx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420198: lea rdx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c8: lea rdx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042002e: lea rdx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f144: lea rdx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f103: lea rdx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0d2: lea rdx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f07d: lea rdx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee32: lea rdx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000040324d: lea rdx, [rip + 0x64f44]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000041ece9: lea rdx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb8: lea rdx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec6c: lea rdx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe6: lea rdx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb8: lea rdx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb6c: lea rdx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eaec: lea rdx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea7c: lea rdx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea08: lea rdx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e98f: lea rdx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e7: lea rdx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000403395: lea rdx, [rip + 0x655e4]; mov dword ptr [rdx], eax; call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x000000000041e694: lea rdx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d864: lea rdx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5f4: lea rdx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e574: lea rdx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4f4: lea rdx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e485: lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e391: lea rdx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2e1: lea rdx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d824: lea rdx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d754: lea rdx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b8: lea rdx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e134: lea rdx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c4: lea rdx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e028: lea rdx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d454: lea rdx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec9: lea rdx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd9d: lea rdx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2d4: lea rdx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dccc: lea rdx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc89: lea rdx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbdc: lea rdx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db9e: lea rdx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d977: lea rdx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d656: lea rdx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d60a: lea rdx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d514: lea rdx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e6: lea rdx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d366: lea rdx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d31a: lea rdx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d216: lea rdx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1ca: lea rdx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cf03: lea rdx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf8: lea rdx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd9f: lea rdx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccda: lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc69: lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cba3: lea rdx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb53: lea rdx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb03: lea rdx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cac0: lea rdx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e9: lea rdx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c963: lea rdx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c645: lea rdx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c551: lea rdx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3b4: lea rdx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c014: lea rdx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf88: lea rdx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf2b: lea rdx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed7: lea rdx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be8b: lea rdx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be30: lea rdx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bda0: lea rdx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd14: lea rdx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc4: lea rdx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc72: lea rdx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc31: lea rdx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa1c: lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b823: lea rdx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7eb: lea rdx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9ab: lea rdx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b784: lea rdx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b053: lea rdx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b01b: lea rdx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afb4: lea rdx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a978: lea rdx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a94e: lea rdx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a91c: lea rdx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8e5: lea rdx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b4e7: lea rdx, [rip + 0x698f2]; mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x000000000041838d: lea rdx, [rip + 0x6a76c]; mov dword ptr [rdx], eax; call 0x18340; lea rsp, [rsp + 8]; ret; 
0x0000000000418f95: lea rdx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f2e: lea rdx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef6: lea rdx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ec2: lea rdx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418073: lea rdx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e1e: lea rdx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418def: lea rdx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d52: lea rdx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e14: lea rdx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041820d: lea rdx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180d2: lea rdx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180a2: lea rdx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181e1: lea rdx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418131: lea rdx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418101: lea rdx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041817f: lea rdx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417ebb: lea rdx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc4: lea rdx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d6c: lea rdx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041534a: lea rdx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004152ac: lea rdx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041158b: lea rdx, [rip + 0x7159e]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411512: lea rdx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114da: lea rdx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411473: lea rdx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004116ed: lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x00000000004116db: lea rdx, [rip + 0x7267e]; mov qword ptr [rdx + 0x30], rax; lea rax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000040db01: lea rdx, [rip + 0x75038]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d9d3: lea rdx, [rip + 0x75146]; mov word ptr [rdx], ax; ret; 
0x000000000040d9e3: lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9f3: lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d85b: lea rdx, [rip + 0x752be]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040b96a: lea rdx, [rip + 0x771af]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x00000000004050db: lea rdx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032ef: lea rdx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032a5: lea rdx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045693a: lea rdx, [rip - 0x291]; lea rax, [rip + 0x1f5b8]; mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x0000000000426b91: lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000426b90: lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000426b86: lea rdx, [rip - 0x5d]; mov qword ptr [rax + 0x40], rdx; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x00000000004189f1: lea rdx, [rip - 0x68]; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000413080: lea rdx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413213: lea rdx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b3: lea rdx, [rsp + 0x10]; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000042ee53: lea rsi, [r10 + r8]; mov rdi, rax; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x000000000041fd67: lea rsi, [rax + 1]; lea rdi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x0000000000455a0a: lea rsi, [rax + 2]; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043b10f: lea rsi, [rbp + 0x10]; xor edx, edx; call 0x3ab40; mov rsp, rbp; pop rbp; ret; 
0x00000000004390ca: lea rsi, [rbp + 0x10]; xor r9d, r9d; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x00000000004390c9: lea rsi, [rbp + 0x10]; xor r9d, r9d; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000041034c: lea rsi, [rbp - 0x110]; call 0xdde0; mov rbx, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e93c: lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000041f9a7: lea rsi, [rbx + 1]; mov rdi, rax; call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x000000000041f9a6: lea rsi, [rbx + 1]; mov rdi, rax; call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x00000000004338f0: lea rsi, [rdx + 1]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000450b89: lea rsi, [rip + 0x17ec0]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000444223: lea rsi, [rip + 0x1d7c6]; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441a3: lea rsi, [rip + 0x1d826]; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043e374: lea rsi, [rip + 0x23245]; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043bad7: lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bab8: lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bab7: lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x00000000004528ba: lea rsi, [rip + 0x25cff]; lea rax, [rsi + rcx]; ret; 
0x0000000000445ec8: lea rsi, [rip + 0x2fdd1]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x0000000000429a05: lea rsi, [rip + 0x37754]; call 0xe180; pop rbx; ret; 
0x000000000044804a: lea rsi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000438e75: lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e15: lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004322cb: lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f10: lea rsi, [rip + 0x43d89]; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431def: lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac5: lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319af: lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431685: lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004239d0: lea rsi, [rip + 0x46319]; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419020: lea rsi, [rip + 0x50b19]; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000042ee19: lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000413414: lea rsi, [rip + 0x55635]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413264: lea rsi, [rip + 0x557e5]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130d4: lea rsi, [rip + 0x55975]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000042388a: lea rsi, [rip + 0x605ef]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423836: lea rsi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x000000000042438e: lea rsi, [rip + 0x60c2b]; xor edx, edx; mov edi, 4; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x00000000004241fb: lea rsi, [rip + 0x60dbe]; mov edi, 4; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x000000000041b700: lea rsi, [rip + 0x696e9]; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad90: lea rsi, [rip + 0x69f29]; mov ecx, 0x23; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000416a10: lea rsi, [rip + 0x6d559]; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db93: lea rsi, [rip + 0x761c6]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db23: lea rsi, [rip + 0x76236]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000043925c: lea rsi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392cc: lea rsi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000045b1dd: lea rsi, [rsp + 0x145]; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x00000000004558bf: lea rsi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000455959: lea rsi, [rsp + 0x18]; lea rdi, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x000000000045b21e: lea rsi, [rsp + 0x41]; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000410424: lea rsi, [rsp + 8]; call 0xdde0; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041ee83: lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e62b: lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000041013e: lea rsi, [rsp + 8]; mov edi, 4; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000446d1e: lea rsi, [rsp + 9]; mov rdi, qword ptr [rsp]; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004103a2: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103e1: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410471: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104b1: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004146a7: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416a65: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c08: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c48: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004183db: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041d7d0: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041d8af: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004226df: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000424fdd: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000425827: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004323cc: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004325bc: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004327ac: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043299c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432b8b: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d5b: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432f3c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043313c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043332c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043352c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b0c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b5c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bac: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bfc: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434c4b: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045317c: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004540c7: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004551d0: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b61: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004584a3: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000458630: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000459541: lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000457bbb: lea rsp, [rsp + 0x1010]; pop rbx; ret; 
0x000000000040d0bf: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d218: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d277: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d2c8: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d334: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d387: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040d3e7: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041832d: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041effd: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000042004b: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004200e5: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004201b5: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420250: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420301: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420390: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004204fa: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000420599: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000424f78: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x00000000004584f6: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000045c326: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000045cda2: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000045d409: lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000040333b: lea rsp, [rsp + 0x108]; ret; 
0x00000000004156c9: lea rsp, [rsp + 0x108]; ret; 
0x0000000000415b93: lea rsp, [rsp + 0x108]; ret; 
0x00000000004163d7: lea rsp, [rsp + 0x108]; ret; 
0x0000000000416779: lea rsp, [rsp + 0x108]; ret; 
0x000000000043caa8: lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd8: lea rsp, [rsp + 0x108]; ret; 
0x0000000000456b69: lea rsp, [rsp + 0x108]; ret; 
0x00000000004585d9: lea rsp, [rsp + 0x108]; ret; 
0x0000000000459cd8: lea rsp, [rsp + 0x108]; ret; 
0x000000000040ae6f: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040b365: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040ccae: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f085: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000411242: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x00000000004140aa: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fb0: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000425730: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000427b4d: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000042e24e: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000430f80: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000444317: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000445685: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000445fad: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000446054: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044c070: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044c668: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d5a9: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d955: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000044dca9: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a9d: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000456ac1: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a184: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a216: lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc8a: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413100: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413292: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041344c: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417286: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041856e: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042135f: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421394: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213be: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213f4: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421480: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215af: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215e4: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042160e: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421644: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004216cf: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000423ea1: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043234b: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432543: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432734: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043291c: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432afb: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ce3: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ec4: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043309c: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332b4: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043348c: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434ff5: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435146: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043529d: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352ee: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435332: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043535a: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004353a4: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004353cc: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004363d2: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043646e: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a51: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a81: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443e92: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000443f3c: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441af: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044422f: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446da7: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e08: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447998: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447fd4: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000449429: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044b1c9: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044bee2: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044ed2d: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f09f: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f4f8: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f838: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000454acd: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000454b1c: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000456f6f: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b47: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b87: lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040cfe7: lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040d062: lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041042e: lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x00000000004267ee: lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000045cc86: lea rsp, [rsp + 0x128]; pop r12; pop rbx; ret; 
0x000000000043d61a: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043d7cb: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043d88a: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043d9de: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043dc4e: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043dd9a: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043deef: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x000000000043dfaa: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x0000000000440d4b: lea rsp, [rsp + 0x168]; pop r12; pop rbx; ret; 
0x0000000000440b7c: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x0000000000440e2c: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x0000000000440fd0: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x00000000004412a0: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x000000000044142c: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x00000000004415c1: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x000000000044169c: lea rsp, [rsp + 0x178]; pop r12; pop rbx; ret; 
0x0000000000452275: lea rsp, [rsp + 0x188]; pop r12; pop rbx; ret; 
0x0000000000423f65: lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000424459: lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000044d185: lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000450c79: lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000040c95e: lea rsp, [rsp + 0x18]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e08: lea rsp, [rsp + 0x18]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b25: lea rsp, [rsp + 0x18]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004053d4: lea rsp, [rsp + 0x18]; ret; 
0x000000000040663d: lea rsp, [rsp + 0x18]; ret; 
0x000000000040ae90: lea rsp, [rsp + 0x18]; ret; 
0x00000000004158de: lea rsp, [rsp + 0x18]; ret; 
0x000000000041590e: lea rsp, [rsp + 0x18]; ret; 
0x000000000041596d: lea rsp, [rsp + 0x18]; ret; 
0x000000000041599e: lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d61: lea rsp, [rsp + 0x18]; ret; 
0x0000000000416521: lea rsp, [rsp + 0x18]; ret; 
0x000000000041689e: lea rsp, [rsp + 0x18]; ret; 
0x00000000004168ce: lea rsp, [rsp + 0x18]; ret; 
0x000000000041692d: lea rsp, [rsp + 0x18]; ret; 
0x000000000041695e: lea rsp, [rsp + 0x18]; ret; 
0x000000000042de89: lea rsp, [rsp + 0x18]; ret; 
0x000000000042deb6: lea rsp, [rsp + 0x18]; ret; 
0x000000000042df8c: lea rsp, [rsp + 0x18]; ret; 
0x000000000042e196: lea rsp, [rsp + 0x18]; ret; 
0x000000000042eda0: lea rsp, [rsp + 0x18]; ret; 
0x0000000000430a58: lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ed8: lea rsp, [rsp + 0x18]; ret; 
0x0000000000431196: lea rsp, [rsp + 0x18]; ret; 
0x0000000000431860: lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ca0: lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ead: lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ed0: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432150: lea rsp, [rsp + 0x18]; ret; 
0x000000000043223e: lea rsp, [rsp + 0x18]; ret; 
0x000000000043227a: lea rsp, [rsp + 0x18]; ret; 
0x00000000004322a3: lea rsp, [rsp + 0x18]; ret; 
0x00000000004322d7: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432396: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432586: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432776: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432966: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b4d: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d20: lea rsp, [rsp + 0x18]; ret; 
0x0000000000432f00: lea rsp, [rsp + 0x18]; ret; 
0x0000000000433100: lea rsp, [rsp + 0x18]; ret; 
0x00000000004332f0: lea rsp, [rsp + 0x18]; ret; 
0x00000000004334f0: lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c7d: lea rsp, [rsp + 0x18]; ret; 
0x0000000000438d8e: lea rsp, [rsp + 0x18]; ret; 
0x0000000000439144: lea rsp, [rsp + 0x18]; ret; 
0x000000000043972f: lea rsp, [rsp + 0x18]; ret; 
0x0000000000439772: lea rsp, [rsp + 0x18]; ret; 
0x000000000043a931: lea rsp, [rsp + 0x18]; ret; 
0x000000000043a996: lea rsp, [rsp + 0x18]; ret; 
0x000000000043b20a: lea rsp, [rsp + 0x18]; ret; 
0x000000000043c16a: lea rsp, [rsp + 0x18]; ret; 
0x0000000000443885: lea rsp, [rsp + 0x18]; ret; 
0x0000000000443f94: lea rsp, [rsp + 0x18]; ret; 
0x0000000000443fc6: lea rsp, [rsp + 0x18]; ret; 
0x0000000000443feb: lea rsp, [rsp + 0x18]; ret; 
0x0000000000446e91: lea rsp, [rsp + 0x18]; ret; 
0x00000000004477c0: lea rsp, [rsp + 0x18]; ret; 
0x0000000000447806: lea rsp, [rsp + 0x18]; ret; 
0x0000000000447846: lea rsp, [rsp + 0x18]; ret; 
0x00000000004478bd: lea rsp, [rsp + 0x18]; ret; 
0x0000000000447901: lea rsp, [rsp + 0x18]; ret; 
0x0000000000447941: lea rsp, [rsp + 0x18]; ret; 
0x0000000000450bee: lea rsp, [rsp + 0x18]; ret; 
0x0000000000450e6c: lea rsp, [rsp + 0x18]; ret; 
0x00000000004546d3: lea rsp, [rsp + 0x18]; ret; 
0x00000000004559d3: lea rsp, [rsp + 0x18]; ret; 
0x0000000000455a16: lea rsp, [rsp + 0x18]; ret; 
0x00000000004587fa: lea rsp, [rsp + 0x18]; ret; 
0x00000000004588e2: lea rsp, [rsp + 0x18]; ret; 
0x0000000000459f00: lea rsp, [rsp + 0x18]; ret; 
0x000000000045b1ed: lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045b22b: lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000444f1e: lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x00000000004461a8: lea rsp, [rsp + 0x1b8]; pop r12; pop rbx; ret; 
0x0000000000416ab2: lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000427526: lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000410263: lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x000000000041c761: lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x000000000041c7b1: lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000420dc1: lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000420e11: lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000407dec: lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d59: lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000451244: lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a09: lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x00000000004130b4: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004131b4: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041323b: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004133ef: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042dcd3: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000444056: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000453ae1: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000455927: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456041: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000456f3d: lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041014d: lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x00000000004101e1: lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000424bc7: lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x00000000004100d6: lea rsp, [rsp + 0x220]; pop rbx; ret; 
0x000000000041ce57: lea rsp, [rsp + 0x268]; pop r12; pop rbx; ret; 
0x0000000000421c77: lea rsp, [rsp + 0x268]; pop r12; pop rbx; ret; 
0x0000000000414647: lea rsp, [rsp + 0x278]; pop r12; pop rbx; ret; 
0x000000000045bb34: lea rsp, [rsp + 0x288]; pop r12; pop rbx; ret; 
0x000000000041334b: lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x0000000000413515: lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x00000000004241ad: lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x000000000042f612: lea rsp, [rsp + 0x28]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000404f01: lea rsp, [rsp + 0x28]; ret; 
0x00000000004054ab: lea rsp, [rsp + 0x28]; ret; 
0x00000000004067b5: lea rsp, [rsp + 0x28]; ret; 
0x0000000000406a6a: lea rsp, [rsp + 0x28]; ret; 
0x0000000000406d5a: lea rsp, [rsp + 0x28]; ret; 
0x000000000040a015: lea rsp, [rsp + 0x28]; ret; 
0x000000000040b91a: lea rsp, [rsp + 0x28]; ret; 
0x000000000040b953: lea rsp, [rsp + 0x28]; ret; 
0x0000000000413f9b: lea rsp, [rsp + 0x28]; ret; 
0x0000000000417baf: lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e07: lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e67: lea rsp, [rsp + 0x28]; ret; 
0x0000000000438ec6: lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f56: lea rsp, [rsp + 0x28]; ret; 
0x00000000004391b4: lea rsp, [rsp + 0x28]; ret; 
0x0000000000439214: lea rsp, [rsp + 0x28]; ret; 
0x000000000043926c: lea rsp, [rsp + 0x28]; ret; 
0x00000000004392dc: lea rsp, [rsp + 0x28]; ret; 
0x000000000043b40c: lea rsp, [rsp + 0x28]; ret; 
0x0000000000443857: lea rsp, [rsp + 0x28]; ret; 
0x0000000000446d2c: lea rsp, [rsp + 0x28]; ret; 
0x0000000000446e70: lea rsp, [rsp + 0x28]; ret; 
0x0000000000446f0b: lea rsp, [rsp + 0x28]; ret; 
0x0000000000451344: lea rsp, [rsp + 0x28]; ret; 
0x00000000004558ce: lea rsp, [rsp + 0x28]; ret; 
0x0000000000455968: lea rsp, [rsp + 0x28]; ret; 
0x00000000004559a2: lea rsp, [rsp + 0x28]; ret; 
0x000000000042796d: lea rsp, [rsp + 0x30]; pop r13; pop r12; pop rbx; ret; 
0x00000000004046a1: lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000404721: lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d9: lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x0000000000424620: lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004277c2: lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004222aa: lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x0000000000443706: lea rsp, [rsp + 0x38]; ret; 
0x0000000000409fcc: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x0000000000428032: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x00000000004280fd: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x00000000004282b5: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a25f: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a315: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a492: lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x0000000000406531: lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000456f0a: lea rsp, [rsp + 0x48]; ret; 
0x000000000045ba3f: lea rsp, [rsp + 0x48]; ret; 
0x0000000000404861: lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000458367: lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x00000000004283be: lea rsp, [rsp + 0x60]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a57f: lea rsp, [rsp + 0x60]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f111: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f1b1: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f46f: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f65d: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f6ef: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410e25: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f21: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411013: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411095: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411117: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000411843: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415754: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415836: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004158b6: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000415d02: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416808: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416b41: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416bd1: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416ce1: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416d71: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c837: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c8b7: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041c938: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d097: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d117: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041d198: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c17: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420c97: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420e97: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f17: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000420f98: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421ea7: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421f27: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000421fa8: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004230d7: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004235b1: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000428e49: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042b079: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c4b9: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c5c9: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c769: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c7f9: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c909: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042cb49: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042e771: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000433b85: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043da6f: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043db8e: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043de31: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043e1be: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044105e: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044197c: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000441c37: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000447512: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000448345: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004483ee: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004484a3: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044e616: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044f1d6: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044f626: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000453e40: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004565ab: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004570df: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457991: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457a21: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457b51: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457cfb: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457eb1: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458101: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458191: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045823f: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004582d1: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458456: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004589d2: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045b642: lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040c461: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fdb9: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e31a: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e4be: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f3cb: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f47a: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000430187: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000430267: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447296: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044cf2f: lea rsp, [rsp + 0x68]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000422835: lea rsp, [rsp + 0x68]; ret; 
0x00000000004228f3: lea rsp, [rsp + 0x68]; ret; 
0x00000000004229ce: lea rsp, [rsp + 0x68]; ret; 
0x000000000044c5fd: lea rsp, [rsp + 0x68]; ret; 
0x000000000044c86f: lea rsp, [rsp + 0x68]; ret; 
0x000000000044c91a: lea rsp, [rsp + 0x68]; ret; 
0x000000000044cbca: lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc6a: lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd0a: lea rsp, [rsp + 0x68]; ret; 
0x000000000040d936: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040ddc7: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e12b: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f285: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f345: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f3d7: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f535: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f5c7: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d3: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa63: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf3: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x00000000004118f0: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041c264: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041c4b4: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041fc1d: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041fe28: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000420855: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x00000000004233a9: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042c661: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042cd01: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042d393: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042dae4: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042dbd4: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042e305: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef4d: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043d925: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043e769: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebb7: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef56: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000440ef0: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044201b: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442526: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442978: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000449374: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044b114: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044bfe4: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e1aa: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e31a: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e49a: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044f445: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c92: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457ab9: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c59: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e19: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a832: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c2: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a952: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e2: lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040e4e8: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040e5cf: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040e66e: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000415c1d: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000416462: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041b653: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c305: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422ec0: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422f70: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423020: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423180: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423230: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004232e0: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042342d: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004234ad: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042352d: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423660: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423710: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004237c0: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c541: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c6e1: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c881: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c991: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042cac1: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042e839: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043d710: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dafe: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dce0: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004505ee: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450691: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045085f: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000453da5: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045526c: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004553b1: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004560e5: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000456197: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004566a1: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457d89: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457f39: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457fb9: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045858b: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458a56: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045c3f0: lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040c829: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ca5b: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040fe96: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ff86: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000416e27: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041c3fd: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041eedb: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042a02c: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042c42c: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042ca3e: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042d79a: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043e8c8: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043eb26: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043ed28: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004411c0: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004414e3: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004418d0: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004421ca: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000442488: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004426da: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000445f5f: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000044d27c: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004504f9: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000453460: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045531a: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045545f: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004562f5: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004578ff: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045806f: lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040bc0f: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004153f7: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cf0c: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cfec: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b1: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6ec: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c2: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f2: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450d5f: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450dff: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000458dac: lea rsp, [rsp + 0x78]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b57f: lea rsp, [rsp + 0x78]; ret; 
0x000000000044961c: lea rsp, [rsp + 0x78]; ret; 
0x000000000044b3bc: lea rsp, [rsp + 0x78]; ret; 
0x0000000000425c00: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004368aa: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043c298: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000440c92: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441110: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441352: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044777e: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044992b: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044b6cb: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044cb1c: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044ce11: lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004449a7: lea rsp, [rsp + 0x88]; pop r12; pop rbx; ret; 
0x0000000000426e9c: lea rsp, [rsp + 0x88]; ret; 
0x000000000045367f: lea rsp, [rsp + 0x88]; ret; 
0x000000000041bc8f: lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bfa8: lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000043c60c: lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x00000000004188c2: lea rsp, [rsp + 0x980]; pop rbx; ret; 
0x000000000043c40a: lea rsp, [rsp + 0x98]; pop r12; pop rbx; ret; 
0x0000000000453ccf: lea rsp, [rsp + 0x98]; ret; 
0x00000000004550ff: lea rsp, [rsp + 0x98]; ret; 
0x00000000004514fb: lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x00000000004136c8: lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c74e: lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc7e: lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e75c: lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee72: lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f002: lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f319: lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9b6: lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc1c: lea rsp, [rsp + 0xd8]; ret; 
0x0000000000455636: lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000455766: lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000414961: lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8c7: lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc16: lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd5b: lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cead: lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf7: lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440146: lea rsp, [rsp + 0xe8]; ret; 
0x000000000044028b: lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403dd: lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8b4: lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451656: lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451969: lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c9c: lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fdf: lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c9: lea rsp, [rsp + 0xe8]; ret; 
0x000000000044ea4e: lea rsp, [rsp + 0xf8]; ret; 
0x000000000045384a: lea rsp, [rsp + 0xf8]; ret; 
0x0000000000402d27: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403d40: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404af6: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404bba: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c0f: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c62: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000405161: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406812: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406990: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406a41: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406ac9: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c8c: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406d32: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406db7: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f0c: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040bb25: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040c4b1: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d6a3: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040de21: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df49: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df99: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e170: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e6a8: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e767: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040fb64: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041004c: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411293: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004112e3: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004113d4: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000411444: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413052: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413712: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041474a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004147aa: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f0a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041507b: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e57: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415e87: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415eb7: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f07: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f37: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f64: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415f97: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415fc7: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415ff7: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416027: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416057: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416087: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041717b: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041738b: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417b75: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418c8e: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004194b7: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041952f: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419731: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004197af: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419faa: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a005: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a258: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2b0: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a2f8: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ae1e: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041bbe4: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041c67a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041c679: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041c678: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041cae6: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d2b0: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d42d: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d598: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d729: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f168: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f71d: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f810: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fc7a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fcdb: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ff5a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420902: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209d1: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209d0: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209cf: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a23: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a22: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a21: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420aa1: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b3d: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b93: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b92: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b91: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421097: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042118c: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421778: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421833: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421987: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000422330: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000422395: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000423c57: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042778f: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427879: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000427b93: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042bd52: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042be37: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d5f6: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db11: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db41: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f265: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f297: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f2c6: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042fc58: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000430ad5: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004311c6: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431736: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431766: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b76: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431ba6: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432026: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432056: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004338ac: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433aa1: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433b01: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433c06: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004399df: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000439a1d: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cf29: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cfe1: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043e6a3: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000440459: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000440511: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000441f36: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000443da2: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004441f5: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444275: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004442bf: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a01: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a53: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447b9a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447e24: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004480a3: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044b98a: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bab4: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bc9b: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bf51: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c011: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044d0c1: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044dfd3: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f9fb: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450bb5: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045325e: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004532a4: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000453354: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000453fba: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456bd5: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456c37: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456cdb: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458681: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458730: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458b03: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458c0f: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f4c: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f97: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a041: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a087: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045bdde: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c173: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1c9: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c203: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c243: lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000402da6: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b1a: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f2: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040723b: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004073c6: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407446: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c51d: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c615: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb2f: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a2: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d6fe: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040da69: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f75c: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc28: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412db5: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041384f: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041392b: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f3b: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a178: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a20c: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1a8: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e151: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f399: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5f4: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042062d: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042076c: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000421329: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000421579: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d01: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b1e: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042772c: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000428219: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5a5: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000431237: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea3: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f13: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043d15a: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044068d: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004439aa: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e3b: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445ffe: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b3e: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c13: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f02: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f82: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044be62: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453efb: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f4b: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004599fc: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e2: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c73f: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7bd: lea rsp, [rsp + 8]; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004029dc: lea rsp, [rsp + 8]; ret; 
0x0000000000402a17: lea rsp, [rsp + 8]; ret; 
0x0000000000402a62: lea rsp, [rsp + 8]; ret; 
0x0000000000402a91: lea rsp, [rsp + 8]; ret; 
0x0000000000402ab2: lea rsp, [rsp + 8]; ret; 
0x0000000000402adb: lea rsp, [rsp + 8]; ret; 
0x0000000000402b08: lea rsp, [rsp + 8]; ret; 
0x0000000000402b2b: lea rsp, [rsp + 8]; ret; 
0x0000000000402b52: lea rsp, [rsp + 8]; ret; 
0x0000000000402b75: lea rsp, [rsp + 8]; ret; 
0x0000000000402b95: lea rsp, [rsp + 8]; ret; 
0x0000000000402bb2: lea rsp, [rsp + 8]; ret; 
0x0000000000402bd5: lea rsp, [rsp + 8]; ret; 
0x0000000000402bf2: lea rsp, [rsp + 8]; ret; 
0x0000000000402dd2: lea rsp, [rsp + 8]; ret; 
0x0000000000402e26: lea rsp, [rsp + 8]; ret; 
0x0000000000402e45: lea rsp, [rsp + 8]; ret; 
0x0000000000402e65: lea rsp, [rsp + 8]; ret; 
0x0000000000402e7f: lea rsp, [rsp + 8]; ret; 
0x0000000000402eae: lea rsp, [rsp + 8]; ret; 
0x0000000000402ed5: lea rsp, [rsp + 8]; ret; 
0x0000000000402ef2: lea rsp, [rsp + 8]; ret; 
0x0000000000402f15: lea rsp, [rsp + 8]; ret; 
0x0000000000402f42: lea rsp, [rsp + 8]; ret; 
0x0000000000402f65: lea rsp, [rsp + 8]; ret; 
0x0000000000402f88: lea rsp, [rsp + 8]; ret; 
0x0000000000402fab: lea rsp, [rsp + 8]; ret; 
0x0000000000402fcf: lea rsp, [rsp + 8]; ret; 
0x0000000000402ff8: lea rsp, [rsp + 8]; ret; 
0x0000000000403021: lea rsp, [rsp + 8]; ret; 
0x0000000000403045: lea rsp, [rsp + 8]; ret; 
0x0000000000403065: lea rsp, [rsp + 8]; ret; 
0x0000000000403085: lea rsp, [rsp + 8]; ret; 
0x00000000004030a5: lea rsp, [rsp + 8]; ret; 
0x00000000004030c5: lea rsp, [rsp + 8]; ret; 
0x00000000004033a3: lea rsp, [rsp + 8]; ret; 
0x0000000000403450: lea rsp, [rsp + 8]; ret; 
0x0000000000403470: lea rsp, [rsp + 8]; ret; 
0x0000000000403490: lea rsp, [rsp + 8]; ret; 
0x00000000004034b0: lea rsp, [rsp + 8]; ret; 
0x00000000004034ca: lea rsp, [rsp + 8]; ret; 
0x00000000004034dc: lea rsp, [rsp + 8]; ret; 
0x0000000000403500: lea rsp, [rsp + 8]; ret; 
0x000000000040353f: lea rsp, [rsp + 8]; ret; 
0x0000000000404218: lea rsp, [rsp + 8]; ret; 
0x000000000040452f: lea rsp, [rsp + 8]; ret; 
0x00000000004048ba: lea rsp, [rsp + 8]; ret; 
0x00000000004048ca: lea rsp, [rsp + 8]; ret; 
0x00000000004048da: lea rsp, [rsp + 8]; ret; 
0x00000000004048ea: lea rsp, [rsp + 8]; ret; 
0x000000000040499a: lea rsp, [rsp + 8]; ret; 
0x00000000004049aa: lea rsp, [rsp + 8]; ret; 
0x00000000004049ba: lea rsp, [rsp + 8]; ret; 
0x00000000004049ca: lea rsp, [rsp + 8]; ret; 
0x0000000000404ebe: lea rsp, [rsp + 8]; ret; 
0x0000000000404f7a: lea rsp, [rsp + 8]; ret; 
0x0000000000404f8a: lea rsp, [rsp + 8]; ret; 
0x0000000000405089: lea rsp, [rsp + 8]; ret; 
0x000000000040518e: lea rsp, [rsp + 8]; ret; 
0x00000000004051bd: lea rsp, [rsp + 8]; ret; 
0x0000000000407024: lea rsp, [rsp + 8]; ret; 
0x00000000004070a4: lea rsp, [rsp + 8]; ret; 
0x00000000004075f0: lea rsp, [rsp + 8]; ret; 
0x0000000000407610: lea rsp, [rsp + 8]; ret; 
0x0000000000407630: lea rsp, [rsp + 8]; ret; 
0x000000000040768f: lea rsp, [rsp + 8]; ret; 
0x0000000000407b61: lea rsp, [rsp + 8]; ret; 
0x0000000000408750: lea rsp, [rsp + 8]; ret; 
0x00000000004087b8: lea rsp, [rsp + 8]; ret; 
0x00000000004087df: lea rsp, [rsp + 8]; ret; 
0x000000000040917c: lea rsp, [rsp + 8]; ret; 
0x0000000000409294: lea rsp, [rsp + 8]; ret; 
0x0000000000409487: lea rsp, [rsp + 8]; ret; 
0x0000000000409e1f: lea rsp, [rsp + 8]; ret; 
0x0000000000409e4d: lea rsp, [rsp + 8]; ret; 
0x0000000000409ec2: lea rsp, [rsp + 8]; ret; 
0x000000000040a1a8: lea rsp, [rsp + 8]; ret; 
0x000000000040b04d: lea rsp, [rsp + 8]; ret; 
0x000000000040b7ee: lea rsp, [rsp + 8]; ret; 
0x000000000040b8d0: lea rsp, [rsp + 8]; ret; 
0x000000000040b99f: lea rsp, [rsp + 8]; ret; 
0x000000000040b9cc: lea rsp, [rsp + 8]; ret; 
0x000000000040ba05: lea rsp, [rsp + 8]; ret; 
0x000000000040ba6b: lea rsp, [rsp + 8]; ret; 
0x000000000040badd: lea rsp, [rsp + 8]; ret; 
0x000000000040d9c9: lea rsp, [rsp + 8]; ret; 
0x000000000040dada: lea rsp, [rsp + 8]; ret; 
0x000000000040dcfd: lea rsp, [rsp + 8]; ret; 
0x000000000040e51e: lea rsp, [rsp + 8]; ret; 
0x000000000040e6fe: lea rsp, [rsp + 8]; ret; 
0x000000000040f12a: lea rsp, [rsp + 8]; ret; 
0x000000000040feb2: lea rsp, [rsp + 8]; ret; 
0x000000000040ffa2: lea rsp, [rsp + 8]; ret; 
0x00000000004115ad: lea rsp, [rsp + 8]; ret; 
0x00000000004115ca: lea rsp, [rsp + 8]; ret; 
0x00000000004115dd: lea rsp, [rsp + 8]; ret; 
0x00000000004115fa: lea rsp, [rsp + 8]; ret; 
0x000000000041173d: lea rsp, [rsp + 8]; ret; 
0x00000000004117ca: lea rsp, [rsp + 8]; ret; 
0x0000000000412f0a: lea rsp, [rsp + 8]; ret; 
0x0000000000412f4e: lea rsp, [rsp + 8]; ret; 
0x0000000000412f87: lea rsp, [rsp + 8]; ret; 
0x0000000000413016: lea rsp, [rsp + 8]; ret; 
0x00000000004131dd: lea rsp, [rsp + 8]; ret; 
0x000000000041337e: lea rsp, [rsp + 8]; ret; 
0x0000000000413550: lea rsp, [rsp + 8]; ret; 
0x000000000041373b: lea rsp, [rsp + 8]; ret; 
0x0000000000413bb9: lea rsp, [rsp + 8]; ret; 
0x0000000000413bd4: lea rsp, [rsp + 8]; ret; 
0x000000000041433a: lea rsp, [rsp + 8]; ret; 
0x00000000004146e4: lea rsp, [rsp + 8]; ret; 
0x00000000004146fe: lea rsp, [rsp + 8]; ret; 
0x00000000004147d1: lea rsp, [rsp + 8]; ret; 
0x00000000004147f8: lea rsp, [rsp + 8]; ret; 
0x0000000000414816: lea rsp, [rsp + 8]; ret; 
0x0000000000414985: lea rsp, [rsp + 8]; ret; 
0x00000000004149a6: lea rsp, [rsp + 8]; ret; 
0x00000000004149c6: lea rsp, [rsp + 8]; ret; 
0x00000000004149e4: lea rsp, [rsp + 8]; ret; 
0x0000000000414a14: lea rsp, [rsp + 8]; ret; 
0x0000000000414a48: lea rsp, [rsp + 8]; ret; 
0x0000000000414ae3: lea rsp, [rsp + 8]; ret; 
0x0000000000414ce3: lea rsp, [rsp + 8]; ret; 
0x00000000004150e3: lea rsp, [rsp + 8]; ret; 
0x0000000000415102: lea rsp, [rsp + 8]; ret; 
0x0000000000415127: lea rsp, [rsp + 8]; ret; 
0x00000000004151c1: lea rsp, [rsp + 8]; ret; 
0x00000000004151f1: lea rsp, [rsp + 8]; ret; 
0x0000000000415221: lea rsp, [rsp + 8]; ret; 
0x0000000000415251: lea rsp, [rsp + 8]; ret; 
0x0000000000415289: lea rsp, [rsp + 8]; ret; 
0x000000000041542a: lea rsp, [rsp + 8]; ret; 
0x000000000041546b: lea rsp, [rsp + 8]; ret; 
0x000000000041548b: lea rsp, [rsp + 8]; ret; 
0x00000000004154ab: lea rsp, [rsp + 8]; ret; 
0x00000000004154cb: lea rsp, [rsp + 8]; ret; 
0x00000000004154eb: lea rsp, [rsp + 8]; ret; 
0x000000000041550b: lea rsp, [rsp + 8]; ret; 
0x000000000041553c: lea rsp, [rsp + 8]; ret; 
0x000000000041556a: lea rsp, [rsp + 8]; ret; 
0x000000000041558c: lea rsp, [rsp + 8]; ret; 
0x00000000004155b9: lea rsp, [rsp + 8]; ret; 
0x00000000004155d0: lea rsp, [rsp + 8]; ret; 
0x00000000004155f0: lea rsp, [rsp + 8]; ret; 
0x000000000041560b: lea rsp, [rsp + 8]; ret; 
0x000000000041562b: lea rsp, [rsp + 8]; ret; 
0x000000000041564b: lea rsp, [rsp + 8]; ret; 
0x0000000000415678: lea rsp, [rsp + 8]; ret; 
0x0000000000415697: lea rsp, [rsp + 8]; ret; 
0x000000000041576b: lea rsp, [rsp + 8]; ret; 
0x000000000041578b: lea rsp, [rsp + 8]; ret; 
0x00000000004157ab: lea rsp, [rsp + 8]; ret; 
0x00000000004159c9: lea rsp, [rsp + 8]; ret; 
0x00000000004159db: lea rsp, [rsp + 8]; ret; 
0x0000000000415a00: lea rsp, [rsp + 8]; ret; 
0x0000000000415a20: lea rsp, [rsp + 8]; ret; 
0x0000000000415a3e: lea rsp, [rsp + 8]; ret; 
0x0000000000415a60: lea rsp, [rsp + 8]; ret; 
0x0000000000415a7e: lea rsp, [rsp + 8]; ret; 
0x0000000000415a9b: lea rsp, [rsp + 8]; ret; 
0x0000000000415abb: lea rsp, [rsp + 8]; ret; 
0x0000000000415adb: lea rsp, [rsp + 8]; ret; 
0x0000000000415afb: lea rsp, [rsp + 8]; ret; 
0x0000000000415b1b: lea rsp, [rsp + 8]; ret; 
0x0000000000415b4a: lea rsp, [rsp + 8]; ret; 
0x0000000000415b67: lea rsp, [rsp + 8]; ret; 
0x0000000000415c3b: lea rsp, [rsp + 8]; ret; 
0x0000000000415c5b: lea rsp, [rsp + 8]; ret; 
0x0000000000415c7b: lea rsp, [rsp + 8]; ret; 
0x0000000000415d23: lea rsp, [rsp + 8]; ret; 
0x0000000000415d43: lea rsp, [rsp + 8]; ret; 
0x0000000000415d81: lea rsp, [rsp + 8]; ret; 
0x0000000000415da3: lea rsp, [rsp + 8]; ret; 
0x0000000000415dc1: lea rsp, [rsp + 8]; ret; 
0x0000000000415ddb: lea rsp, [rsp + 8]; ret; 
0x0000000000415dfb: lea rsp, [rsp + 8]; ret; 
0x0000000000415e1b: lea rsp, [rsp + 8]; ret; 
0x00000000004160c0: lea rsp, [rsp + 8]; ret; 
0x00000000004160e0: lea rsp, [rsp + 8]; ret; 
0x0000000000416100: lea rsp, [rsp + 8]; ret; 
0x0000000000416120: lea rsp, [rsp + 8]; ret; 
0x0000000000416140: lea rsp, [rsp + 8]; ret; 
0x000000000041615b: lea rsp, [rsp + 8]; ret; 
0x000000000041623b: lea rsp, [rsp + 8]; ret; 
0x0000000000416260: lea rsp, [rsp + 8]; ret; 
0x000000000041627e: lea rsp, [rsp + 8]; ret; 
0x00000000004162a0: lea rsp, [rsp + 8]; ret; 
0x00000000004162be: lea rsp, [rsp + 8]; ret; 
0x00000000004162db: lea rsp, [rsp + 8]; ret; 
0x00000000004162fb: lea rsp, [rsp + 8]; ret; 
0x000000000041631b: lea rsp, [rsp + 8]; ret; 
0x000000000041633b: lea rsp, [rsp + 8]; ret; 
0x000000000041635b: lea rsp, [rsp + 8]; ret; 
0x000000000041638a: lea rsp, [rsp + 8]; ret; 
0x00000000004163a7: lea rsp, [rsp + 8]; ret; 
0x000000000041647b: lea rsp, [rsp + 8]; ret; 
0x000000000041649b: lea rsp, [rsp + 8]; ret; 
0x00000000004164bb: lea rsp, [rsp + 8]; ret; 
0x00000000004164e3: lea rsp, [rsp + 8]; ret; 
0x0000000000416503: lea rsp, [rsp + 8]; ret; 
0x0000000000416541: lea rsp, [rsp + 8]; ret; 
0x0000000000416563: lea rsp, [rsp + 8]; ret; 
0x0000000000416581: lea rsp, [rsp + 8]; ret; 
0x000000000041659b: lea rsp, [rsp + 8]; ret; 
0x00000000004165bb: lea rsp, [rsp + 8]; ret; 
0x00000000004165ec: lea rsp, [rsp + 8]; ret; 
0x000000000041661a: lea rsp, [rsp + 8]; ret; 
0x000000000041663c: lea rsp, [rsp + 8]; ret; 
0x000000000041666a: lea rsp, [rsp + 8]; ret; 
0x0000000000416688: lea rsp, [rsp + 8]; ret; 
0x00000000004166a9: lea rsp, [rsp + 8]; ret; 
0x00000000004166c0: lea rsp, [rsp + 8]; ret; 
0x00000000004166e0: lea rsp, [rsp + 8]; ret; 
0x00000000004166fb: lea rsp, [rsp + 8]; ret; 
0x0000000000416728: lea rsp, [rsp + 8]; ret; 
0x0000000000416747: lea rsp, [rsp + 8]; ret; 
0x000000000041682b: lea rsp, [rsp + 8]; ret; 
0x000000000041684b: lea rsp, [rsp + 8]; ret; 
0x000000000041686b: lea rsp, [rsp + 8]; ret; 
0x0000000000416989: lea rsp, [rsp + 8]; ret; 
0x000000000041699b: lea rsp, [rsp + 8]; ret; 
0x00000000004169c9: lea rsp, [rsp + 8]; ret; 
0x000000000041766a: lea rsp, [rsp + 8]; ret; 
0x00000000004177fa: lea rsp, [rsp + 8]; ret; 
0x000000000041780a: lea rsp, [rsp + 8]; ret; 
0x0000000000417dec: lea rsp, [rsp + 8]; ret; 
0x0000000000417e2f: lea rsp, [rsp + 8]; ret; 
0x0000000000417f7e: lea rsp, [rsp + 8]; ret; 
0x0000000000418151: lea rsp, [rsp + 8]; ret; 
0x000000000041834f: lea rsp, [rsp + 8]; ret; 
0x000000000041836a: lea rsp, [rsp + 8]; ret; 
0x000000000041839b: lea rsp, [rsp + 8]; ret; 
0x00000000004185a8: lea rsp, [rsp + 8]; ret; 
0x000000000041864c: lea rsp, [rsp + 8]; ret; 
0x000000000041866c: lea rsp, [rsp + 8]; ret; 
0x000000000041869e: lea rsp, [rsp + 8]; ret; 
0x0000000000418aec: lea rsp, [rsp + 8]; ret; 
0x000000000041901a: lea rsp, [rsp + 8]; ret; 
0x00000000004190aa: lea rsp, [rsp + 8]; ret; 
0x00000000004190bb: lea rsp, [rsp + 8]; ret; 
0x00000000004190da: lea rsp, [rsp + 8]; ret; 
0x00000000004190eb: lea rsp, [rsp + 8]; ret; 
0x000000000041910b: lea rsp, [rsp + 8]; ret; 
0x000000000041912b: lea rsp, [rsp + 8]; ret; 
0x000000000041914b: lea rsp, [rsp + 8]; ret; 
0x000000000041916a: lea rsp, [rsp + 8]; ret; 
0x000000000041917b: lea rsp, [rsp + 8]; ret; 
0x000000000041919a: lea rsp, [rsp + 8]; ret; 
0x00000000004191ab: lea rsp, [rsp + 8]; ret; 
0x00000000004191cb: lea rsp, [rsp + 8]; ret; 
0x00000000004191f1: lea rsp, [rsp + 8]; ret; 
0x000000000041920b: lea rsp, [rsp + 8]; ret; 
0x000000000041922b: lea rsp, [rsp + 8]; ret; 
0x000000000041958e: lea rsp, [rsp + 8]; ret; 
0x000000000041a740: lea rsp, [rsp + 8]; ret; 
0x000000000041aa4b: lea rsp, [rsp + 8]; ret; 
0x000000000041aa7c: lea rsp, [rsp + 8]; ret; 
0x000000000041aaad: lea rsp, [rsp + 8]; ret; 
0x000000000041aadd: lea rsp, [rsp + 8]; ret; 
0x000000000041ab0e: lea rsp, [rsp + 8]; ret; 
0x000000000041ab2c: lea rsp, [rsp + 8]; ret; 
0x000000000041ab4b: lea rsp, [rsp + 8]; ret; 
0x000000000041ab6a: lea rsp, [rsp + 8]; ret; 
0x000000000041ab7b: lea rsp, [rsp + 8]; ret; 
0x000000000041ab9b: lea rsp, [rsp + 8]; ret; 
0x000000000041abbb: lea rsp, [rsp + 8]; ret; 
0x000000000041abdb: lea rsp, [rsp + 8]; ret; 
0x000000000041abfb: lea rsp, [rsp + 8]; ret; 
0x000000000041ac1b: lea rsp, [rsp + 8]; ret; 
0x000000000041ac3b: lea rsp, [rsp + 8]; ret; 
0x000000000041ac5b: lea rsp, [rsp + 8]; ret; 
0x000000000041ac7b: lea rsp, [rsp + 8]; ret; 
0x000000000041ac9b: lea rsp, [rsp + 8]; ret; 
0x000000000041acbb: lea rsp, [rsp + 8]; ret; 
0x000000000041acdb: lea rsp, [rsp + 8]; ret; 
0x000000000041acfb: lea rsp, [rsp + 8]; ret; 
0x000000000041ad1b: lea rsp, [rsp + 8]; ret; 
0x000000000041ad3b: lea rsp, [rsp + 8]; ret; 
0x000000000041ad5b: lea rsp, [rsp + 8]; ret; 
0x000000000041ad7b: lea rsp, [rsp + 8]; ret; 
0x000000000041ae3b: lea rsp, [rsp + 8]; ret; 
0x000000000041ae5b: lea rsp, [rsp + 8]; ret; 
0x000000000041ae7b: lea rsp, [rsp + 8]; ret; 
0x000000000041ae9b: lea rsp, [rsp + 8]; ret; 
0x000000000041aebb: lea rsp, [rsp + 8]; ret; 
0x000000000041aedb: lea rsp, [rsp + 8]; ret; 
0x000000000041aefb: lea rsp, [rsp + 8]; ret; 
0x000000000041af1b: lea rsp, [rsp + 8]; ret; 
0x000000000041af3b: lea rsp, [rsp + 8]; ret; 
0x000000000041af5b: lea rsp, [rsp + 8]; ret; 
0x000000000041af7b: lea rsp, [rsp + 8]; ret; 
0x000000000041b07d: lea rsp, [rsp + 8]; ret; 
0x000000000041b0a1: lea rsp, [rsp + 8]; ret; 
0x000000000041b0bc: lea rsp, [rsp + 8]; ret; 
0x000000000041b0df: lea rsp, [rsp + 8]; ret; 
0x000000000041b0ff: lea rsp, [rsp + 8]; ret; 
0x000000000041b11c: lea rsp, [rsp + 8]; ret; 
0x000000000041b13f: lea rsp, [rsp + 8]; ret; 
0x000000000041b177: lea rsp, [rsp + 8]; ret; 
0x000000000041b18d: lea rsp, [rsp + 8]; ret; 
0x000000000041b1ad: lea rsp, [rsp + 8]; ret; 
0x000000000041b1e2: lea rsp, [rsp + 8]; ret; 
0x000000000041b217: lea rsp, [rsp + 8]; ret; 
0x000000000041b22d: lea rsp, [rsp + 8]; ret; 
0x000000000041b24c: lea rsp, [rsp + 8]; ret; 
0x000000000041b284: lea rsp, [rsp + 8]; ret; 
0x000000000041b2b2: lea rsp, [rsp + 8]; ret; 
0x000000000041b2e7: lea rsp, [rsp + 8]; ret; 
0x000000000041b314: lea rsp, [rsp + 8]; ret; 
0x000000000041b342: lea rsp, [rsp + 8]; ret; 
0x000000000041b372: lea rsp, [rsp + 8]; ret; 
0x000000000041b391: lea rsp, [rsp + 8]; ret; 
0x000000000041b3d8: lea rsp, [rsp + 8]; ret; 
0x000000000041b59b: lea rsp, [rsp + 8]; ret; 
0x000000000041b5bb: lea rsp, [rsp + 8]; ret; 
0x000000000041b5da: lea rsp, [rsp + 8]; ret; 
0x000000000041b66b: lea rsp, [rsp + 8]; ret; 
0x000000000041b699: lea rsp, [rsp + 8]; ret; 
0x000000000041b6ab: lea rsp, [rsp + 8]; ret; 
0x000000000041b6cb: lea rsp, [rsp + 8]; ret; 
0x000000000041b6ea: lea rsp, [rsp + 8]; ret; 
0x000000000041b6fa: lea rsp, [rsp + 8]; ret; 
0x000000000041b84d: lea rsp, [rsp + 8]; ret; 
0x000000000041b86a: lea rsp, [rsp + 8]; ret; 
0x000000000041b87a: lea rsp, [rsp + 8]; ret; 
0x000000000041b88a: lea rsp, [rsp + 8]; ret; 
0x000000000041b89a: lea rsp, [rsp + 8]; ret; 
0x000000000041b8ad: lea rsp, [rsp + 8]; ret; 
0x000000000041b8ca: lea rsp, [rsp + 8]; ret; 
0x000000000041b8e1: lea rsp, [rsp + 8]; ret; 
0x000000000041b8fa: lea rsp, [rsp + 8]; ret; 
0x000000000041bce1: lea rsp, [rsp + 8]; ret; 
0x000000000041bd31: lea rsp, [rsp + 8]; ret; 
0x000000000041bef4: lea rsp, [rsp + 8]; ret; 
0x000000000041d2f4: lea rsp, [rsp + 8]; ret; 
0x000000000041d474: lea rsp, [rsp + 8]; ret; 
0x000000000041d5e4: lea rsp, [rsp + 8]; ret; 
0x000000000041d774: lea rsp, [rsp + 8]; ret; 
0x000000000041d83c: lea rsp, [rsp + 8]; ret; 
0x000000000041d87c: lea rsp, [rsp + 8]; ret; 
0x000000000041dae5: lea rsp, [rsp + 8]; ret; 
0x000000000041dae4: lea rsp, [rsp + 8]; ret; 
0x000000000041f625: lea rsp, [rsp + 8]; ret; 
0x000000000041f624: lea rsp, [rsp + 8]; ret; 
0x000000000042086d: lea rsp, [rsp + 8]; ret; 
0x0000000000420a43: lea rsp, [rsp + 8]; ret; 
0x0000000000420acd: lea rsp, [rsp + 8]; ret; 
0x0000000000421fca: lea rsp, [rsp + 8]; ret; 
0x0000000000421fda: lea rsp, [rsp + 8]; ret; 
0x0000000000421fea: lea rsp, [rsp + 8]; ret; 
0x0000000000421ffa: lea rsp, [rsp + 8]; ret; 
0x0000000000422010: lea rsp, [rsp + 8]; ret; 
0x000000000042202a: lea rsp, [rsp + 8]; ret; 
0x000000000042203a: lea rsp, [rsp + 8]; ret; 
0x00000000004237e0: lea rsp, [rsp + 8]; ret; 
0x0000000000423842: lea rsp, [rsp + 8]; ret; 
0x0000000000423878: lea rsp, [rsp + 8]; ret; 
0x0000000000423896: lea rsp, [rsp + 8]; ret; 
0x00000000004238bc: lea rsp, [rsp + 8]; ret; 
0x00000000004238e6: lea rsp, [rsp + 8]; ret; 
0x000000000042390c: lea rsp, [rsp + 8]; ret; 
0x0000000000423a0b: lea rsp, [rsp + 8]; ret; 
0x0000000000423a2b: lea rsp, [rsp + 8]; ret; 
0x0000000000423a4b: lea rsp, [rsp + 8]; ret; 
0x0000000000423a6b: lea rsp, [rsp + 8]; ret; 
0x0000000000423a8b: lea rsp, [rsp + 8]; ret; 
0x0000000000423ab1: lea rsp, [rsp + 8]; ret; 
0x0000000000423acb: lea rsp, [rsp + 8]; ret; 
0x0000000000423aeb: lea rsp, [rsp + 8]; ret; 
0x0000000000423b0b: lea rsp, [rsp + 8]; ret; 
0x0000000000423b2b: lea rsp, [rsp + 8]; ret; 
0x0000000000423b4b: lea rsp, [rsp + 8]; ret; 
0x0000000000423be4: lea rsp, [rsp + 8]; ret; 
0x0000000000423c75: lea rsp, [rsp + 8]; ret; 
0x0000000000423ecb: lea rsp, [rsp + 8]; ret; 
0x000000000042420c: lea rsp, [rsp + 8]; ret; 
0x000000000042433f: lea rsp, [rsp + 8]; ret; 
0x00000000004243a1: lea rsp, [rsp + 8]; ret; 
0x00000000004243e7: lea rsp, [rsp + 8]; ret; 
0x00000000004243fd: lea rsp, [rsp + 8]; ret; 
0x0000000000424d43: lea rsp, [rsp + 8]; ret; 
0x0000000000424dac: lea rsp, [rsp + 8]; ret; 
0x0000000000424ed1: lea rsp, [rsp + 8]; ret; 
0x0000000000425132: lea rsp, [rsp + 8]; ret; 
0x0000000000425407: lea rsp, [rsp + 8]; ret; 
0x0000000000425448: lea rsp, [rsp + 8]; ret; 
0x000000000042546a: lea rsp, [rsp + 8]; ret; 
0x000000000042548b: lea rsp, [rsp + 8]; ret; 
0x00000000004254b6: lea rsp, [rsp + 8]; ret; 
0x0000000000425536: lea rsp, [rsp + 8]; ret; 
0x0000000000425613: lea rsp, [rsp + 8]; ret; 
0x0000000000425bb8: lea rsp, [rsp + 8]; ret; 
0x0000000000425c32: lea rsp, [rsp + 8]; ret; 
0x00000000004261f6: lea rsp, [rsp + 8]; ret; 
0x00000000004262b1: lea rsp, [rsp + 8]; ret; 
0x0000000000426bf4: lea rsp, [rsp + 8]; ret; 
0x0000000000426c34: lea rsp, [rsp + 8]; ret; 
0x0000000000426ce3: lea rsp, [rsp + 8]; ret; 
0x0000000000426cfd: lea rsp, [rsp + 8]; ret; 
0x0000000000426d21: lea rsp, [rsp + 8]; ret; 
0x0000000000426d41: lea rsp, [rsp + 8]; ret; 
0x0000000000426d61: lea rsp, [rsp + 8]; ret; 
0x0000000000427219: lea rsp, [rsp + 8]; ret; 
0x0000000000427582: lea rsp, [rsp + 8]; ret; 
0x00000000004279e0: lea rsp, [rsp + 8]; ret; 
0x00000000004279fa: lea rsp, [rsp + 8]; ret; 
0x0000000000427a0a: lea rsp, [rsp + 8]; ret; 
0x0000000000427a1f: lea rsp, [rsp + 8]; ret; 
0x0000000000427a3a: lea rsp, [rsp + 8]; ret; 
0x0000000000427a50: lea rsp, [rsp + 8]; ret; 
0x0000000000427a70: lea rsp, [rsp + 8]; ret; 
0x00000000004283da: lea rsp, [rsp + 8]; ret; 
0x0000000000428e6a: lea rsp, [rsp + 8]; ret; 
0x000000000042995a: lea rsp, [rsp + 8]; ret; 
0x000000000042996a: lea rsp, [rsp + 8]; ret; 
0x0000000000429aab: lea rsp, [rsp + 8]; ret; 
0x0000000000429f30: lea rsp, [rsp + 8]; ret; 
0x000000000042a59a: lea rsp, [rsp + 8]; ret; 
0x000000000042b09a: lea rsp, [rsp + 8]; ret; 
0x000000000042bd6a: lea rsp, [rsp + 8]; ret; 
0x000000000042bd7a: lea rsp, [rsp + 8]; ret; 
0x000000000042bdbc: lea rsp, [rsp + 8]; ret; 
0x000000000042c32c: lea rsp, [rsp + 8]; ret; 
0x000000000042d7c1: lea rsp, [rsp + 8]; ret; 
0x000000000042d7e1: lea rsp, [rsp + 8]; ret; 
0x000000000042d7ff: lea rsp, [rsp + 8]; ret; 
0x000000000042d81f: lea rsp, [rsp + 8]; ret; 
0x000000000042e380: lea rsp, [rsp + 8]; ret; 
0x000000000042e3f0: lea rsp, [rsp + 8]; ret; 
0x000000000042e40d: lea rsp, [rsp + 8]; ret; 
0x000000000042e59d: lea rsp, [rsp + 8]; ret; 
0x000000000042e5d5: lea rsp, [rsp + 8]; ret; 
0x000000000042e5ea: lea rsp, [rsp + 8]; ret; 
0x000000000042e620: lea rsp, [rsp + 8]; ret; 
0x000000000042e790: lea rsp, [rsp + 8]; ret; 
0x000000000042ecea: lea rsp, [rsp + 8]; ret; 
0x000000000042ecfc: lea rsp, [rsp + 8]; ret; 
0x000000000042ed4a: lea rsp, [rsp + 8]; ret; 
0x000000000042ed5a: lea rsp, [rsp + 8]; ret; 
0x000000000042ed6a: lea rsp, [rsp + 8]; ret; 
0x000000000042ed82: lea rsp, [rsp + 8]; ret; 
0x000000000042edba: lea rsp, [rsp + 8]; ret; 
0x000000000042edca: lea rsp, [rsp + 8]; ret; 
0x000000000042ede2: lea rsp, [rsp + 8]; ret; 
0x000000000042edfa: lea rsp, [rsp + 8]; ret; 
0x000000000042ee25: lea rsp, [rsp + 8]; ret; 
0x000000000042ee8e: lea rsp, [rsp + 8]; ret; 
0x000000000042ef6f: lea rsp, [rsp + 8]; ret; 
0x000000000042f0dc: lea rsp, [rsp + 8]; ret; 
0x000000000042f1f3: lea rsp, [rsp + 8]; ret; 
0x000000000042f665: lea rsp, [rsp + 8]; ret; 
0x000000000042fc87: lea rsp, [rsp + 8]; ret; 
0x000000000042fca0: lea rsp, [rsp + 8]; ret; 
0x000000000042fcc7: lea rsp, [rsp + 8]; ret; 
0x00000000004300cf: lea rsp, [rsp + 8]; ret; 
0x00000000004301af: lea rsp, [rsp + 8]; ret; 
0x0000000000430293: lea rsp, [rsp + 8]; ret; 
0x00000000004302b9: lea rsp, [rsp + 8]; ret; 
0x000000000043034c: lea rsp, [rsp + 8]; ret; 
0x0000000000430440: lea rsp, [rsp + 8]; ret; 
0x0000000000430463: lea rsp, [rsp + 8]; ret; 
0x0000000000430f9c: lea rsp, [rsp + 8]; ret; 
0x00000000004310d7: lea rsp, [rsp + 8]; ret; 
0x00000000004310ed: lea rsp, [rsp + 8]; ret; 
0x000000000043110d: lea rsp, [rsp + 8]; ret; 
0x000000000043112d: lea rsp, [rsp + 8]; ret; 
0x0000000000431158: lea rsp, [rsp + 8]; ret; 
0x0000000000431178: lea rsp, [rsp + 8]; ret; 
0x0000000000431263: lea rsp, [rsp + 8]; ret; 
0x0000000000431283: lea rsp, [rsp + 8]; ret; 
0x00000000004312a3: lea rsp, [rsp + 8]; ret; 
0x00000000004312c3: lea rsp, [rsp + 8]; ret; 
0x00000000004312e3: lea rsp, [rsp + 8]; ret; 
0x0000000000431303: lea rsp, [rsp + 8]; ret; 
0x0000000000431323: lea rsp, [rsp + 8]; ret; 
0x00000000004315a8: lea rsp, [rsp + 8]; ret; 
0x00000000004315cb: lea rsp, [rsp + 8]; ret; 
0x00000000004315f8: lea rsp, [rsp + 8]; ret; 
0x0000000000431618: lea rsp, [rsp + 8]; ret; 
0x000000000043163f: lea rsp, [rsp + 8]; ret; 
0x0000000000431662: lea rsp, [rsp + 8]; ret; 
0x0000000000431691: lea rsp, [rsp + 8]; ret; 
0x00000000004316aa: lea rsp, [rsp + 8]; ret; 
0x00000000004316c1: lea rsp, [rsp + 8]; ret; 
0x00000000004316da: lea rsp, [rsp + 8]; ret; 
0x00000000004316f1: lea rsp, [rsp + 8]; ret; 
0x000000000043170a: lea rsp, [rsp + 8]; ret; 
0x000000000043177a: lea rsp, [rsp + 8]; ret; 
0x000000000043178a: lea rsp, [rsp + 8]; ret; 
0x000000000043179a: lea rsp, [rsp + 8]; ret; 
0x000000000043180a: lea rsp, [rsp + 8]; ret; 
0x000000000043181a: lea rsp, [rsp + 8]; ret; 
0x000000000043182a: lea rsp, [rsp + 8]; ret; 
0x000000000043183a: lea rsp, [rsp + 8]; ret; 
0x000000000043184a: lea rsp, [rsp + 8]; ret; 
0x0000000000431883: lea rsp, [rsp + 8]; ret; 
0x00000000004318a0: lea rsp, [rsp + 8]; ret; 
0x00000000004318c0: lea rsp, [rsp + 8]; ret; 
0x00000000004318e0: lea rsp, [rsp + 8]; ret; 
0x00000000004318fd: lea rsp, [rsp + 8]; ret; 
0x000000000043191a: lea rsp, [rsp + 8]; ret; 
0x0000000000431942: lea rsp, [rsp + 8]; ret; 
0x000000000043196e: lea rsp, [rsp + 8]; ret; 
0x0000000000431997: lea rsp, [rsp + 8]; ret; 
0x00000000004319bb: lea rsp, [rsp + 8]; ret; 
0x00000000004319e8: lea rsp, [rsp + 8]; ret; 
0x0000000000431a0b: lea rsp, [rsp + 8]; ret; 
0x0000000000431a38: lea rsp, [rsp + 8]; ret; 
0x0000000000431a58: lea rsp, [rsp + 8]; ret; 
0x0000000000431a7f: lea rsp, [rsp + 8]; ret; 
0x0000000000431aa2: lea rsp, [rsp + 8]; ret; 
0x0000000000431ad1: lea rsp, [rsp + 8]; ret; 
0x0000000000431aea: lea rsp, [rsp + 8]; ret; 
0x0000000000431b01: lea rsp, [rsp + 8]; ret; 
0x0000000000431b1a: lea rsp, [rsp + 8]; ret; 
0x0000000000431b31: lea rsp, [rsp + 8]; ret; 
0x0000000000431b4a: lea rsp, [rsp + 8]; ret; 
0x0000000000431bba: lea rsp, [rsp + 8]; ret; 
0x0000000000431bca: lea rsp, [rsp + 8]; ret; 
0x0000000000431bda: lea rsp, [rsp + 8]; ret; 
0x0000000000431c4a: lea rsp, [rsp + 8]; ret; 
0x0000000000431c5a: lea rsp, [rsp + 8]; ret; 
0x0000000000431c6a: lea rsp, [rsp + 8]; ret; 
0x0000000000431c7a: lea rsp, [rsp + 8]; ret; 
0x0000000000431c8a: lea rsp, [rsp + 8]; ret; 
0x0000000000431cc3: lea rsp, [rsp + 8]; ret; 
0x0000000000431ce0: lea rsp, [rsp + 8]; ret; 
0x0000000000431d00: lea rsp, [rsp + 8]; ret; 
0x0000000000431d20: lea rsp, [rsp + 8]; ret; 
0x0000000000431d3d: lea rsp, [rsp + 8]; ret; 
0x0000000000431d5a: lea rsp, [rsp + 8]; ret; 
0x0000000000431d82: lea rsp, [rsp + 8]; ret; 
0x0000000000431dae: lea rsp, [rsp + 8]; ret; 
0x0000000000431dd7: lea rsp, [rsp + 8]; ret; 
0x0000000000431dfb: lea rsp, [rsp + 8]; ret; 
0x0000000000431fe1: lea rsp, [rsp + 8]; ret; 
0x0000000000431ffa: lea rsp, [rsp + 8]; ret; 
0x000000000043206a: lea rsp, [rsp + 8]; ret; 
0x000000000043208a: lea rsp, [rsp + 8]; ret; 
0x00000000004320fa: lea rsp, [rsp + 8]; ret; 
0x000000000043211a: lea rsp, [rsp + 8]; ret; 
0x000000000043212a: lea rsp, [rsp + 8]; ret; 
0x000000000043213a: lea rsp, [rsp + 8]; ret; 
0x0000000000432173: lea rsp, [rsp + 8]; ret; 
0x0000000000432190: lea rsp, [rsp + 8]; ret; 
0x00000000004321b0: lea rsp, [rsp + 8]; ret; 
0x00000000004321d0: lea rsp, [rsp + 8]; ret; 
0x00000000004321ed: lea rsp, [rsp + 8]; ret; 
0x000000000043220a: lea rsp, [rsp + 8]; ret; 
0x00000000004322ef: lea rsp, [rsp + 8]; ret; 
0x0000000000432326: lea rsp, [rsp + 8]; ret; 
0x00000000004323f3: lea rsp, [rsp + 8]; ret; 
0x0000000000432413: lea rsp, [rsp + 8]; ret; 
0x0000000000432443: lea rsp, [rsp + 8]; ret; 
0x00000000004324dd: lea rsp, [rsp + 8]; ret; 
0x0000000000432514: lea rsp, [rsp + 8]; ret; 
0x00000000004325e3: lea rsp, [rsp + 8]; ret; 
0x0000000000432603: lea rsp, [rsp + 8]; ret; 
0x0000000000432633: lea rsp, [rsp + 8]; ret; 
0x00000000004326cd: lea rsp, [rsp + 8]; ret; 
0x0000000000432703: lea rsp, [rsp + 8]; ret; 
0x00000000004327d3: lea rsp, [rsp + 8]; ret; 
0x00000000004327f3: lea rsp, [rsp + 8]; ret; 
0x0000000000432823: lea rsp, [rsp + 8]; ret; 
0x00000000004328bf: lea rsp, [rsp + 8]; ret; 
0x00000000004328f6: lea rsp, [rsp + 8]; ret; 
0x00000000004329c3: lea rsp, [rsp + 8]; ret; 
0x00000000004329e3: lea rsp, [rsp + 8]; ret; 
0x0000000000432a13: lea rsp, [rsp + 8]; ret; 
0x0000000000432aaa: lea rsp, [rsp + 8]; ret; 
0x0000000000432ad2: lea rsp, [rsp + 8]; ret; 
0x0000000000432bb2: lea rsp, [rsp + 8]; ret; 
0x0000000000432bd2: lea rsp, [rsp + 8]; ret; 
0x0000000000432c02: lea rsp, [rsp + 8]; ret; 
0x0000000000432c9a: lea rsp, [rsp + 8]; ret; 
0x0000000000432cba: lea rsp, [rsp + 8]; ret; 
0x0000000000432d82: lea rsp, [rsp + 8]; ret; 
0x0000000000432da2: lea rsp, [rsp + 8]; ret; 
0x0000000000432dd2: lea rsp, [rsp + 8]; ret; 
0x0000000000432e6d: lea rsp, [rsp + 8]; ret; 
0x0000000000432e9a: lea rsp, [rsp + 8]; ret; 
0x0000000000432f63: lea rsp, [rsp + 8]; ret; 
0x0000000000432f83: lea rsp, [rsp + 8]; ret; 
0x0000000000432fb3: lea rsp, [rsp + 8]; ret; 
0x000000000043304d: lea rsp, [rsp + 8]; ret; 
0x000000000043307a: lea rsp, [rsp + 8]; ret; 
0x0000000000433163: lea rsp, [rsp + 8]; ret; 
0x0000000000433183: lea rsp, [rsp + 8]; ret; 
0x00000000004331c3: lea rsp, [rsp + 8]; ret; 
0x000000000043325d: lea rsp, [rsp + 8]; ret; 
0x000000000043328a: lea rsp, [rsp + 8]; ret; 
0x0000000000433353: lea rsp, [rsp + 8]; ret; 
0x0000000000433373: lea rsp, [rsp + 8]; ret; 
0x00000000004333a3: lea rsp, [rsp + 8]; ret; 
0x000000000043343d: lea rsp, [rsp + 8]; ret; 
0x000000000043346a: lea rsp, [rsp + 8]; ret; 
0x0000000000433553: lea rsp, [rsp + 8]; ret; 
0x0000000000433573: lea rsp, [rsp + 8]; ret; 
0x00000000004335b3: lea rsp, [rsp + 8]; ret; 
0x000000000043364a: lea rsp, [rsp + 8]; ret; 
0x0000000000433676: lea rsp, [rsp + 8]; ret; 
0x000000000043368a: lea rsp, [rsp + 8]; ret; 
0x00000000004336b9: lea rsp, [rsp + 8]; ret; 
0x00000000004336ca: lea rsp, [rsp + 8]; ret; 
0x00000000004336f6: lea rsp, [rsp + 8]; ret; 
0x000000000043370a: lea rsp, [rsp + 8]; ret; 
0x000000000043373e: lea rsp, [rsp + 8]; ret; 
0x000000000043375a: lea rsp, [rsp + 8]; ret; 
0x0000000000433786: lea rsp, [rsp + 8]; ret; 
0x000000000043379a: lea rsp, [rsp + 8]; ret; 
0x00000000004337d0: lea rsp, [rsp + 8]; ret; 
0x00000000004337ea: lea rsp, [rsp + 8]; ret; 
0x0000000000433816: lea rsp, [rsp + 8]; ret; 
0x000000000043382a: lea rsp, [rsp + 8]; ret; 
0x000000000043385e: lea rsp, [rsp + 8]; ret; 
0x00000000004338fc: lea rsp, [rsp + 8]; ret; 
0x0000000000433920: lea rsp, [rsp + 8]; ret; 
0x0000000000433948: lea rsp, [rsp + 8]; ret; 
0x0000000000433a66: lea rsp, [rsp + 8]; ret; 
0x0000000000433ac6: lea rsp, [rsp + 8]; ret; 
0x0000000000433d8f: lea rsp, [rsp + 8]; ret; 
0x0000000000433def: lea rsp, [rsp + 8]; ret; 
0x000000000043422f: lea rsp, [rsp + 8]; ret; 
0x000000000043424f: lea rsp, [rsp + 8]; ret; 
0x000000000043426e: lea rsp, [rsp + 8]; ret; 
0x000000000043428e: lea rsp, [rsp + 8]; ret; 
0x00000000004342af: lea rsp, [rsp + 8]; ret; 
0x00000000004342cf: lea rsp, [rsp + 8]; ret; 
0x00000000004342ce: lea rsp, [rsp + 8]; ret; 
0x000000000043430c: lea rsp, [rsp + 8]; ret; 
0x000000000043434c: lea rsp, [rsp + 8]; ret; 
0x000000000043438c: lea rsp, [rsp + 8]; ret; 
0x00000000004343cc: lea rsp, [rsp + 8]; ret; 
0x000000000043440c: lea rsp, [rsp + 8]; ret; 
0x000000000043444c: lea rsp, [rsp + 8]; ret; 
0x000000000043446f: lea rsp, [rsp + 8]; ret; 
0x0000000000434492: lea rsp, [rsp + 8]; ret; 
0x0000000000434501: lea rsp, [rsp + 8]; ret; 
0x0000000000434547: lea rsp, [rsp + 8]; ret; 
0x0000000000434589: lea rsp, [rsp + 8]; ret; 
0x000000000043459f: lea rsp, [rsp + 8]; ret; 
0x0000000000434883: lea rsp, [rsp + 8]; ret; 
0x0000000000434eaa: lea rsp, [rsp + 8]; ret; 
0x0000000000434ec9: lea rsp, [rsp + 8]; ret; 
0x0000000000434eeb: lea rsp, [rsp + 8]; ret; 
0x0000000000434f18: lea rsp, [rsp + 8]; ret; 
0x0000000000434f3b: lea rsp, [rsp + 8]; ret; 
0x0000000000434f5f: lea rsp, [rsp + 8]; ret; 
0x0000000000434f87: lea rsp, [rsp + 8]; ret; 
0x0000000000434f9f: lea rsp, [rsp + 8]; ret; 
0x0000000000434fbf: lea rsp, [rsp + 8]; ret; 
0x00000000004351ea: lea rsp, [rsp + 8]; ret; 
0x00000000004352ba: lea rsp, [rsp + 8]; ret; 
0x00000000004352ca: lea rsp, [rsp + 8]; ret; 
0x000000000043530a: lea rsp, [rsp + 8]; ret; 
0x000000000043537a: lea rsp, [rsp + 8]; ret; 
0x00000000004353ea: lea rsp, [rsp + 8]; ret; 
0x00000000004353fc: lea rsp, [rsp + 8]; ret; 
0x00000000004364d6: lea rsp, [rsp + 8]; ret; 
0x0000000000436514: lea rsp, [rsp + 8]; ret; 
0x000000000043655f: lea rsp, [rsp + 8]; ret; 
0x0000000000436600: lea rsp, [rsp + 8]; ret; 
0x0000000000436f91: lea rsp, [rsp + 8]; ret; 
0x0000000000436fb1: lea rsp, [rsp + 8]; ret; 
0x00000000004372f1: lea rsp, [rsp + 8]; ret; 
0x0000000000437312: lea rsp, [rsp + 8]; ret; 
0x0000000000437331: lea rsp, [rsp + 8]; ret; 
0x0000000000437352: lea rsp, [rsp + 8]; ret; 
0x0000000000437371: lea rsp, [rsp + 8]; ret; 
0x000000000043738a: lea rsp, [rsp + 8]; ret; 
0x0000000000438dbf: lea rsp, [rsp + 8]; ret; 
0x0000000000438e21: lea rsp, [rsp + 8]; ret; 
0x0000000000438e81: lea rsp, [rsp + 8]; ret; 
0x0000000000438eef: lea rsp, [rsp + 8]; ret; 
0x0000000000438f11: lea rsp, [rsp + 8]; ret; 
0x000000000043916f: lea rsp, [rsp + 8]; ret; 
0x00000000004391d1: lea rsp, [rsp + 8]; ret; 
0x0000000000439231: lea rsp, [rsp + 8]; ret; 
0x000000000043929f: lea rsp, [rsp + 8]; ret; 
0x0000000000439301: lea rsp, [rsp + 8]; ret; 
0x0000000000439333: lea rsp, [rsp + 8]; ret; 
0x000000000043935f: lea rsp, [rsp + 8]; ret; 
0x0000000000439582: lea rsp, [rsp + 8]; ret; 
0x00000000004395b5: lea rsp, [rsp + 8]; ret; 
0x00000000004396cf: lea rsp, [rsp + 8]; ret; 
0x00000000004396f2: lea rsp, [rsp + 8]; ret; 
0x000000000043979d: lea rsp, [rsp + 8]; ret; 
0x000000000043995f: lea rsp, [rsp + 8]; ret; 
0x0000000000439aa1: lea rsp, [rsp + 8]; ret; 
0x000000000043a32c: lea rsp, [rsp + 8]; ret; 
0x000000000043a375: lea rsp, [rsp + 8]; ret; 
0x000000000043a5c3: lea rsp, [rsp + 8]; ret; 
0x000000000043a7ba: lea rsp, [rsp + 8]; ret; 
0x000000000043a81e: lea rsp, [rsp + 8]; ret; 
0x000000000043a9c7: lea rsp, [rsp + 8]; ret; 
0x000000000043aa8e: lea rsp, [rsp + 8]; ret; 
0x000000000043b22f: lea rsp, [rsp + 8]; ret; 
0x000000000043b258: lea rsp, [rsp + 8]; ret; 
0x000000000043b2ad: lea rsp, [rsp + 8]; ret; 
0x000000000043b42d: lea rsp, [rsp + 8]; ret; 
0x000000000043b8ef: lea rsp, [rsp + 8]; ret; 
0x000000000043bac4: lea rsp, [rsp + 8]; ret; 
0x000000000043bae3: lea rsp, [rsp + 8]; ret; 
0x000000000043bdd1: lea rsp, [rsp + 8]; ret; 
0x000000000043f7cc: lea rsp, [rsp + 8]; ret; 
0x000000000043f7f0: lea rsp, [rsp + 8]; ret; 
0x000000000043f8f5: lea rsp, [rsp + 8]; ret; 
0x000000000044324c: lea rsp, [rsp + 8]; ret; 
0x0000000000443270: lea rsp, [rsp + 8]; ret; 
0x0000000000443375: lea rsp, [rsp + 8]; ret; 
0x0000000000443601: lea rsp, [rsp + 8]; ret; 
0x000000000044364c: lea rsp, [rsp + 8]; ret; 
0x000000000044379f: lea rsp, [rsp + 8]; ret; 
0x00000000004437e1: lea rsp, [rsp + 8]; ret; 
0x0000000000444c02: lea rsp, [rsp + 8]; ret; 
0x0000000000444c46: lea rsp, [rsp + 8]; ret; 
0x0000000000444c78: lea rsp, [rsp + 8]; ret; 
0x0000000000444ca1: lea rsp, [rsp + 8]; ret; 
0x0000000000444cec: lea rsp, [rsp + 8]; ret; 
0x0000000000444d35: lea rsp, [rsp + 8]; ret; 
0x00000000004458bd: lea rsp, [rsp + 8]; ret; 
0x0000000000445901: lea rsp, [rsp + 8]; ret; 
0x0000000000445926: lea rsp, [rsp + 8]; ret; 
0x000000000044595a: lea rsp, [rsp + 8]; ret; 
0x0000000000445ed7: lea rsp, [rsp + 8]; ret; 
0x0000000000446f2c: lea rsp, [rsp + 8]; ret; 
0x00000000004470e8: lea rsp, [rsp + 8]; ret; 
0x0000000000447107: lea rsp, [rsp + 8]; ret; 
0x0000000000447128: lea rsp, [rsp + 8]; ret; 
0x00000000004472bc: lea rsp, [rsp + 8]; ret; 
0x00000000004473ac: lea rsp, [rsp + 8]; ret; 
0x0000000000447531: lea rsp, [rsp + 8]; ret; 
0x00000000004476bc: lea rsp, [rsp + 8]; ret; 
0x00000000004476dc: lea rsp, [rsp + 8]; ret; 
0x000000000044785c: lea rsp, [rsp + 8]; ret; 
0x000000000044787c: lea rsp, [rsp + 8]; ret; 
0x00000000004479aa: lea rsp, [rsp + 8]; ret; 
0x0000000000447f9c: lea rsp, [rsp + 8]; ret; 
0x0000000000448056: lea rsp, [rsp + 8]; ret; 
0x00000000004480cb: lea rsp, [rsp + 8]; ret; 
0x0000000000448251: lea rsp, [rsp + 8]; ret; 
0x00000000004484bf: lea rsp, [rsp + 8]; ret; 
0x00000000004484df: lea rsp, [rsp + 8]; ret; 
0x0000000000448501: lea rsp, [rsp + 8]; ret; 
0x0000000000448527: lea rsp, [rsp + 8]; ret; 
0x0000000000448544: lea rsp, [rsp + 8]; ret; 
0x000000000044856a: lea rsp, [rsp + 8]; ret; 
0x0000000000449488: lea rsp, [rsp + 8]; ret; 
0x00000000004494c4: lea rsp, [rsp + 8]; ret; 
0x0000000000449511: lea rsp, [rsp + 8]; ret; 
0x0000000000449c1d: lea rsp, [rsp + 8]; ret; 
0x000000000044a086: lea rsp, [rsp + 8]; ret; 
0x000000000044a0bf: lea rsp, [rsp + 8]; ret; 
0x000000000044a104: lea rsp, [rsp + 8]; ret; 
0x000000000044a1e6: lea rsp, [rsp + 8]; ret; 
0x000000000044a206: lea rsp, [rsp + 8]; ret; 
0x000000000044a222: lea rsp, [rsp + 8]; ret; 
0x000000000044a242: lea rsp, [rsp + 8]; ret; 
0x000000000044a264: lea rsp, [rsp + 8]; ret; 
0x000000000044a28a: lea rsp, [rsp + 8]; ret; 
0x000000000044a2a7: lea rsp, [rsp + 8]; ret; 
0x000000000044a2cd: lea rsp, [rsp + 8]; ret; 
0x000000000044b228: lea rsp, [rsp + 8]; ret; 
0x000000000044b264: lea rsp, [rsp + 8]; ret; 
0x000000000044b2b1: lea rsp, [rsp + 8]; ret; 
0x000000000044b9b6: lea rsp, [rsp + 8]; ret; 
0x000000000044ba2a: lea rsp, [rsp + 8]; ret; 
0x000000000044bf1b: lea rsp, [rsp + 8]; ret; 
0x000000000044c0fd: lea rsp, [rsp + 8]; ret; 
0x000000000044c6a1: lea rsp, [rsp + 8]; ret; 
0x000000000044c92a: lea rsp, [rsp + 8]; ret; 
0x000000000044ce55: lea rsp, [rsp + 8]; ret; 
0x000000000044ce7d: lea rsp, [rsp + 8]; ret; 
0x000000000044ea88: lea rsp, [rsp + 8]; ret; 
0x000000000044ee9e: lea rsp, [rsp + 8]; ret; 
0x000000000044f02e: lea rsp, [rsp + 8]; ret; 
0x000000000044f34e: lea rsp, [rsp + 8]; ret; 
0x000000000044f482: lea rsp, [rsp + 8]; ret; 
0x000000000044f64e: lea rsp, [rsp + 8]; ret; 
0x000000000044fa20: lea rsp, [rsp + 8]; ret; 
0x000000000044fa41: lea rsp, [rsp + 8]; ret; 
0x000000000044fa61: lea rsp, [rsp + 8]; ret; 
0x000000000044fa81: lea rsp, [rsp + 8]; ret; 
0x00000000004507dc: lea rsp, [rsp + 8]; ret; 
0x000000000045087d: lea rsp, [rsp + 8]; ret; 
0x00000000004509de: lea rsp, [rsp + 8]; ret; 
0x0000000000450b47: lea rsp, [rsp + 8]; ret; 
0x0000000000450b67: lea rsp, [rsp + 8]; ret; 
0x0000000000450ca9: lea rsp, [rsp + 8]; ret; 
0x0000000000450cbd: lea rsp, [rsp + 8]; ret; 
0x0000000000450e2d: lea rsp, [rsp + 8]; ret; 
0x0000000000450e9a: lea rsp, [rsp + 8]; ret; 
0x0000000000451278: lea rsp, [rsp + 8]; ret; 
0x00000000004512f8: lea rsp, [rsp + 8]; ret; 
0x00000000004522a6: lea rsp, [rsp + 8]; ret; 
0x0000000000452b51: lea rsp, [rsp + 8]; ret; 
0x0000000000452c92: lea rsp, [rsp + 8]; ret; 
0x0000000000452e95: lea rsp, [rsp + 8]; ret; 
0x0000000000452ed3: lea rsp, [rsp + 8]; ret; 
0x00000000004532bf: lea rsp, [rsp + 8]; ret; 
0x000000000045336a: lea rsp, [rsp + 8]; ret; 
0x000000000045337c: lea rsp, [rsp + 8]; ret; 
0x00000000004533ab: lea rsp, [rsp + 8]; ret; 
0x0000000000453d0f: lea rsp, [rsp + 8]; ret; 
0x0000000000453f6d: lea rsp, [rsp + 8]; ret; 
0x0000000000453f8a: lea rsp, [rsp + 8]; ret; 
0x00000000004557cd: lea rsp, [rsp + 8]; ret; 
0x0000000000455b18: lea rsp, [rsp + 8]; ret; 
0x0000000000455b2f: lea rsp, [rsp + 8]; ret; 
0x0000000000455ba4: lea rsp, [rsp + 8]; ret; 
0x0000000000455bcc: lea rsp, [rsp + 8]; ret; 
0x000000000045605a: lea rsp, [rsp + 8]; ret; 
0x000000000045682a: lea rsp, [rsp + 8]; ret; 
0x000000000045683a: lea rsp, [rsp + 8]; ret; 
0x000000000045684a: lea rsp, [rsp + 8]; ret; 
0x000000000045685a: lea rsp, [rsp + 8]; ret; 
0x000000000045686d: lea rsp, [rsp + 8]; ret; 
0x000000000045688d: lea rsp, [rsp + 8]; ret; 
0x00000000004568aa: lea rsp, [rsp + 8]; ret; 
0x00000000004568bd: lea rsp, [rsp + 8]; ret; 
0x00000000004568da: lea rsp, [rsp + 8]; ret; 
0x00000000004568ea: lea rsp, [rsp + 8]; ret; 
0x00000000004568fd: lea rsp, [rsp + 8]; ret; 
0x000000000045694b: lea rsp, [rsp + 8]; ret; 
0x0000000000456a2c: lea rsp, [rsp + 8]; ret; 
0x0000000000456ae1: lea rsp, [rsp + 8]; ret; 
0x0000000000456b06: lea rsp, [rsp + 8]; ret; 
0x0000000000456e05: lea rsp, [rsp + 8]; ret; 
0x0000000000456e22: lea rsp, [rsp + 8]; ret; 
0x0000000000456e47: lea rsp, [rsp + 8]; ret; 
0x0000000000456e71: lea rsp, [rsp + 8]; ret; 
0x0000000000456e98: lea rsp, [rsp + 8]; ret; 
0x0000000000456eb5: lea rsp, [rsp + 8]; ret; 
0x0000000000456f93: lea rsp, [rsp + 8]; ret; 
0x0000000000457102: lea rsp, [rsp + 8]; ret; 
0x000000000045720e: lea rsp, [rsp + 8]; ret; 
0x000000000045722f: lea rsp, [rsp + 8]; ret; 
0x000000000045724f: lea rsp, [rsp + 8]; ret; 
0x000000000045726f: lea rsp, [rsp + 8]; ret; 
0x000000000045728f: lea rsp, [rsp + 8]; ret; 
0x00000000004572af: lea rsp, [rsp + 8]; ret; 
0x00000000004572d1: lea rsp, [rsp + 8]; ret; 
0x00000000004572f1: lea rsp, [rsp + 8]; ret; 
0x0000000000457315: lea rsp, [rsp + 8]; ret; 
0x000000000045732f: lea rsp, [rsp + 8]; ret; 
0x000000000045734f: lea rsp, [rsp + 8]; ret; 
0x0000000000457372: lea rsp, [rsp + 8]; ret; 
0x0000000000457392: lea rsp, [rsp + 8]; ret; 
0x00000000004573b5: lea rsp, [rsp + 8]; ret; 
0x00000000004573df: lea rsp, [rsp + 8]; ret; 
0x0000000000457405: lea rsp, [rsp + 8]; ret; 
0x0000000000457426: lea rsp, [rsp + 8]; ret; 
0x0000000000457445: lea rsp, [rsp + 8]; ret; 
0x0000000000457462: lea rsp, [rsp + 8]; ret; 
0x0000000000457488: lea rsp, [rsp + 8]; ret; 
0x00000000004574a8: lea rsp, [rsp + 8]; ret; 
0x00000000004574c5: lea rsp, [rsp + 8]; ret; 
0x00000000004574e8: lea rsp, [rsp + 8]; ret; 
0x000000000045750f: lea rsp, [rsp + 8]; ret; 
0x0000000000457532: lea rsp, [rsp + 8]; ret; 
0x0000000000457561: lea rsp, [rsp + 8]; ret; 
0x0000000000457587: lea rsp, [rsp + 8]; ret; 
0x00000000004575a5: lea rsp, [rsp + 8]; ret; 
0x0000000000457695: lea rsp, [rsp + 8]; ret; 
0x00000000004576be: lea rsp, [rsp + 8]; ret; 
0x00000000004576ee: lea rsp, [rsp + 8]; ret; 
0x000000000045771b: lea rsp, [rsp + 8]; ret; 
0x000000000045774b: lea rsp, [rsp + 8]; ret; 
0x0000000000457775: lea rsp, [rsp + 8]; ret; 
0x00000000004581aa: lea rsp, [rsp + 8]; ret; 
0x00000000004582f1: lea rsp, [rsp + 8]; ret; 
0x0000000000458311: lea rsp, [rsp + 8]; ret; 
0x000000000045837a: lea rsp, [rsp + 8]; ret; 
0x000000000045838a: lea rsp, [rsp + 8]; ret; 
0x000000000045839a: lea rsp, [rsp + 8]; ret; 
0x00000000004583aa: lea rsp, [rsp + 8]; ret; 
0x00000000004583bf: lea rsp, [rsp + 8]; ret; 
0x0000000000458771: lea rsp, [rsp + 8]; ret; 
0x000000000045878d: lea rsp, [rsp + 8]; ret; 
0x00000000004588fa: lea rsp, [rsp + 8]; ret; 
0x0000000000458a75: lea rsp, [rsp + 8]; ret; 
0x0000000000458a95: lea rsp, [rsp + 8]; ret; 
0x0000000000458ab5: lea rsp, [rsp + 8]; ret; 
0x0000000000458ad2: lea rsp, [rsp + 8]; ret; 
0x0000000000459066: lea rsp, [rsp + 8]; ret; 
0x0000000000459086: lea rsp, [rsp + 8]; ret; 
0x000000000045909c: lea rsp, [rsp + 8]; ret; 
0x00000000004594c6: lea rsp, [rsp + 8]; ret; 
0x0000000000459a53: lea rsp, [rsp + 8]; ret; 
0x0000000000459a8b: lea rsp, [rsp + 8]; ret; 
0x0000000000459ae0: lea rsp, [rsp + 8]; ret; 
0x0000000000459db8: lea rsp, [rsp + 8]; ret; 
0x0000000000459dcf: lea rsp, [rsp + 8]; ret; 
0x0000000000459dec: lea rsp, [rsp + 8]; ret; 
0x0000000000459e0c: lea rsp, [rsp + 8]; ret; 
0x000000000045a0a3: lea rsp, [rsp + 8]; ret; 
0x000000000045a23a: lea rsp, [rsp + 8]; ret; 
0x000000000045b84a: lea rsp, [rsp + 8]; ret; 
0x000000000045b85a: lea rsp, [rsp + 8]; ret; 
0x000000000045b872: lea rsp, [rsp + 8]; ret; 
0x000000000045b972: lea rsp, [rsp + 8]; ret; 
0x000000000045b992: lea rsp, [rsp + 8]; ret; 
0x000000000045b9b2: lea rsp, [rsp + 8]; ret; 
0x000000000045b9d4: lea rsp, [rsp + 8]; ret; 
0x000000000045b9f2: lea rsp, [rsp + 8]; ret; 
0x000000000045ba12: lea rsp, [rsp + 8]; ret; 
0x000000000045ba5c: lea rsp, [rsp + 8]; ret; 
0x000000000045bb52: lea rsp, [rsp + 8]; ret; 
0x000000000045bc3c: lea rsp, [rsp + 8]; ret; 
0x000000000045c0ea: lea rsp, [rsp + 8]; ret; 
0x000000000045c100: lea rsp, [rsp + 8]; ret; 
0x000000000045c11a: lea rsp, [rsp + 8]; ret; 
0x000000000045c12a: lea rsp, [rsp + 8]; ret; 
0x000000000045c13a: lea rsp, [rsp + 8]; ret; 
0x000000000045c14a: lea rsp, [rsp + 8]; ret; 
0x000000000045c190: lea rsp, [rsp + 8]; ret; 
0x000000000045c21a: lea rsp, [rsp + 8]; ret; 
0x000000000045c25a: lea rsp, [rsp + 8]; ret; 
0x000000000045c26a: lea rsp, [rsp + 8]; ret; 
0x000000000045c27a: lea rsp, [rsp + 8]; ret; 
0x000000000045c290: lea rsp, [rsp + 8]; ret; 
0x000000000045c2aa: lea rsp, [rsp + 8]; ret; 
0x000000000045c2ba: lea rsp, [rsp + 8]; ret; 
0x000000000045c7e3: lea rsp, [rsp + 8]; ret; 
0x000000000045c7fa: lea rsp, [rsp + 8]; ret; 
0x000000000045c812: lea rsp, [rsp + 8]; ret; 
0x000000000045c82f: lea rsp, [rsp + 8]; ret; 
0x000000000045c852: lea rsp, [rsp + 8]; ret; 
0x000000000045c87b: lea rsp, [rsp + 8]; ret; 
0x000000000045c8ae: lea rsp, [rsp + 8]; ret; 
0x000000000045c8d5: lea rsp, [rsp + 8]; ret; 
0x000000000045c8f5: lea rsp, [rsp + 8]; ret; 
0x000000000045c91e: lea rsp, [rsp + 8]; ret; 
0x000000000045c942: lea rsp, [rsp + 8]; ret; 
0x000000000045c978: lea rsp, [rsp + 8]; ret; 
0x000000000045c9aa: lea rsp, [rsp + 8]; ret; 
0x000000000045c9d7: lea rsp, [rsp + 8]; ret; 
0x000000000045c9fb: lea rsp, [rsp + 8]; ret; 
0x000000000045ca2d: lea rsp, [rsp + 8]; ret; 
0x000000000045ca5d: lea rsp, [rsp + 8]; ret; 
0x000000000045ca8b: lea rsp, [rsp + 8]; ret; 
0x000000000045cadc: lea rsp, [rsp + 8]; ret; 
0x000000000045cb02: lea rsp, [rsp + 8]; ret; 
0x000000000045cb2a: lea rsp, [rsp + 8]; ret; 
0x000000000045cb45: lea rsp, [rsp + 8]; ret; 
0x000000000045cb65: lea rsp, [rsp + 8]; ret; 
0x000000000045cb85: lea rsp, [rsp + 8]; ret; 
0x000000000045cba5: lea rsp, [rsp + 8]; ret; 
0x000000000045cbc3: lea rsp, [rsp + 8]; ret; 
0x000000000045cbe3: lea rsp, [rsp + 8]; ret; 
0x000000000042f874: lea rsp, [rsp - 0x10]; lea r9, [rbp - 8]; call 0x2f890; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ea4: lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e64: lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e34: lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e04: lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x000000000042ed90: lea rsp, [rsp - 0x18]; call 0x36c60; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ec0: lea rsp, [rsp - 0x18]; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432140: lea rsp, [rsp - 0x18]; call 0x6790; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c90: lea rsp, [rsp - 0x18]; call 0x6a50; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431850: lea rsp, [rsp - 0x18]; call 0x6d40; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040ae80: lea rsp, [rsp - 0x18]; call 0x9560; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416510: lea rsp, [rsp - 0x18]; call qword ptr [rip + 0x6da75]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d50: lea rsp, [rsp - 0x18]; call qword ptr [rip + 0x6e235]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044fa10: lea rsp, [rsp - 8]; add rdi, 0x18; call 0x1ad30; mov al, 1; lea rsp, [rsp + 8]; ret; 
0x00000000004146f0: lea rsp, [rsp - 8]; add rdi, 8; call 0x2660; lea rsp, [rsp + 8]; ret; 
0x0000000000423aa0: lea rsp, [rsp - 8]; and ecx, 0xffff; call qword ptr [rip + 0x46267]; lea rsp, [rsp + 8]; ret; 
0x00000000004237d0: lea rsp, [rsp - 8]; and edi, 0xff; call 0x23540; lea rsp, [rsp + 8]; ret; 
0x0000000000403440: lea rsp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403460: lea rsp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403480: lea rsp, [rsp - 8]; and edx, 0xff; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004034a0: lea rsp, [rsp - 8]; and edx, 0xff; call 0x2400; lea rsp, [rsp + 8]; ret; 
0x00000000004034f0: lea rsp, [rsp - 8]; and edx, 0xff; call 0x3480; lea rsp, [rsp + 8]; ret; 
0x00000000004075e0: lea rsp, [rsp - 8]; and edx, 0xff; call 0x7520; lea rsp, [rsp + 8]; ret; 
0x0000000000407600: lea rsp, [rsp - 8]; and edx, 0xff; call 0x7560; lea rsp, [rsp + 8]; ret; 
0x0000000000407620: lea rsp, [rsp - 8]; and edx, 0xff; call 0x75a0; lea rsp, [rsp + 8]; ret; 
0x0000000000422000: lea rsp, [rsp - 8]; and esi, 0xff; call 0x20f20; lea rsp, [rsp + 8]; ret; 
0x000000000042e610: lea rsp, [rsp - 8]; and esi, 0xff; call 0xd670; lea rsp, [rsp + 8]; ret; 
0x000000000040b7e0: lea rsp, [rsp - 8]; and esi, esi; and edi, edi; call 0xb6e0; lea rsp, [rsp + 8]; ret; 
0x00000000004117c0: lea rsp, [rsp - 8]; call 0x10f30; lea rsp, [rsp + 8]; ret; 
0x00000000004115c0: lea rsp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115f0: lea rsp, [rsp - 8]; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000412f00: lea rsp, [rsp - 8]; call 0x11b00; lea rsp, [rsp + 8]; ret; 
0x0000000000414330: lea rsp, [rsp - 8]; call 0x142a0; lea rsp, [rsp + 8]; ret; 
0x00000000004150f0: lea rsp, [rsp - 8]; call 0x14e70; mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x00000000004177f0: lea rsp, [rsp - 8]; call 0x17190; lea rsp, [rsp + 8]; ret; 
0x0000000000417660: lea rsp, [rsp - 8]; call 0x173a0; lea rsp, [rsp + 8]; ret; 
0x0000000000417800: lea rsp, [rsp - 8]; call 0x176f0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab60: lea rsp, [rsp - 8]; call 0x17fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418340: lea rsp, [rsp - 8]; call 0x18160; call 0x23bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000418360: lea rsp, [rsp - 8]; call 0x18160; lea rsp, [rsp + 8]; ret; 
0x0000000000456820: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456830: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456840: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456850: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568a0: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568d0: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568e0: lea rsp, [rsp - 8]; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004190a0: lea rsp, [rsp - 8]; call 0x19080; lea rsp, [rsp + 8]; ret; 
0x00000000004190d0: lea rsp, [rsp - 8]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000419160: lea rsp, [rsp - 8]; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000419190: lea rsp, [rsp - 8]; call 0x19170; lea rsp, [rsp + 8]; ret; 
0x000000000041b0d0: lea rsp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0f0: lea rsp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b130: lea rsp, [rsp - 8]; call 0x1af90; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b090: lea rsp, [rsp - 8]; call 0x1af90; mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b110: lea rsp, [rsp - 8]; call 0x1af90; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b240: lea rsp, [rsp - 8]; call 0x1af90; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b5d0: lea rsp, [rsp - 8]; call 0x1b500; lea rsp, [rsp + 8]; ret; 
0x0000000000453360: lea rsp, [rsp - 8]; call 0x1b5d0; lea rsp, [rsp + 8]; ret; 
0x000000000041b6f0: lea rsp, [rsp - 8]; call 0x1b660; lea rsp, [rsp + 8]; ret; 
0x000000000041b6e0: lea rsp, [rsp - 8]; call 0x1b6a0; lea rsp, [rsp + 8]; ret; 
0x000000000041b860: lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b870: lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b880: lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b890: lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8c0: lea rsp, [rsp - 8]; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041b8f0: lea rsp, [rsp - 8]; call 0x1b8d0; lea rsp, [rsp + 8]; ret; 
0x000000000045c250: lea rsp, [rsp - 8]; call 0x1c720; lea rsp, [rsp + 8]; ret; 
0x000000000045c210: lea rsp, [rsp - 8]; call 0x1c770; lea rsp, [rsp + 8]; ret; 
0x000000000045c140: lea rsp, [rsp - 8]; call 0x1c840; lea rsp, [rsp + 8]; ret; 
0x000000000045c260: lea rsp, [rsp - 8]; call 0x1c950; lea rsp, [rsp + 8]; ret; 
0x0000000000421fc0: lea rsp, [rsp - 8]; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x000000000045c120: lea rsp, [rsp - 8]; call 0x20d80; lea rsp, [rsp + 8]; ret; 
0x0000000000421fd0: lea rsp, [rsp - 8]; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c110: lea rsp, [rsp - 8]; call 0x20dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000421fe0: lea rsp, [rsp - 8]; call 0x20e20; lea rsp, [rsp + 8]; ret; 
0x0000000000421ff0: lea rsp, [rsp - 8]; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e0: lea rsp, [rsp - 8]; call 0x20ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000422030: lea rsp, [rsp - 8]; call 0x20fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000422020: lea rsp, [rsp - 8]; call 0x210a0; lea rsp, [rsp + 8]; ret; 
0x000000000045c130: lea rsp, [rsp - 8]; call 0x21a20; lea rsp, [rsp + 8]; ret; 
0x000000000045c2b0: lea rsp, [rsp - 8]; call 0x21fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c2a0: lea rsp, [rsp - 8]; call 0x21fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c270: lea rsp, [rsp - 8]; call 0x21ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004034c0: lea rsp, [rsp - 8]; call 0x2580; lea rsp, [rsp + 8]; ret; 
0x00000000004048b0: lea rsp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x0000000000404990: lea rsp, [rsp - 8]; call 0x2760; lea rsp, [rsp + 8]; ret; 
0x00000000004048c0: lea rsp, [rsp - 8]; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004049a0: lea rsp, [rsp - 8]; call 0x2770; lea rsp, [rsp + 8]; ret; 
0x00000000004048d0: lea rsp, [rsp - 8]; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004049b0: lea rsp, [rsp - 8]; call 0x2780; lea rsp, [rsp + 8]; ret; 
0x00000000004048e0: lea rsp, [rsp - 8]; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004049c0: lea rsp, [rsp - 8]; call 0x2790; lea rsp, [rsp + 8]; ret; 
0x00000000004279d0: lea rsp, [rsp - 8]; call 0x27980; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000404f80: lea rsp, [rsp - 8]; call 0x27c0; lea rsp, [rsp + 8]; ret; 
0x0000000000428e60: lea rsp, [rsp - 8]; call 0x28dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000429950: lea rsp, [rsp - 8]; call 0x29900; lea rsp, [rsp + 8]; ret; 
0x0000000000429960: lea rsp, [rsp - 8]; call 0x29970; lea rsp, [rsp + 8]; ret; 
0x0000000000456050: lea rsp, [rsp - 8]; call 0x29f0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f80: lea rsp, [rsp - 8]; call 0x2ac0; lea rsp, [rsp + 8]; ret; 
0x0000000000458370: lea rsp, [rsp - 8]; call 0x2af0; lea rsp, [rsp + 8]; ret; 
0x000000000042b090: lea rsp, [rsp - 8]; call 0x2b000; lea rsp, [rsp + 8]; ret; 
0x0000000000458380: lea rsp, [rsp - 8]; call 0x2b10; lea rsp, [rsp + 8]; ret; 
0x000000000042bd60: lea rsp, [rsp - 8]; call 0x2bcf0; lea rsp, [rsp + 8]; ret; 
0x000000000042bd70: lea rsp, [rsp - 8]; call 0x2bd80; lea rsp, [rsp + 8]; ret; 
0x000000000042fc90: lea rsp, [rsp - 8]; call 0x2e350; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004588f0: lea rsp, [rsp - 8]; call 0x2e90; lea rsp, [rsp + 8]; ret; 
0x0000000000419010: lea rsp, [rsp - 8]; call 0x2f50; lea rsp, [rsp + 8]; ret; 
0x00000000004243f0: lea rsp, [rsp - 8]; call 0x2fc0; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edf0: lea rsp, [rsp - 8]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000042ece0: lea rsp, [rsp - 8]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000433de0: lea rsp, [rsp - 8]; call 0x33bb0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e5e0: lea rsp, [rsp - 8]; call 0x33c90; lea rsp, [rsp + 8]; ret; 
0x0000000000433d80: lea rsp, [rsp - 8]; call 0x33c90; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000427a00: lea rsp, [rsp - 8]; call 0x342a0; lea rsp, [rsp + 8]; ret; 
0x00000000004279f0: lea rsp, [rsp - 8]; call 0x342c0; lea rsp, [rsp + 8]; ret; 
0x0000000000434240: lea rsp, [rsp - 8]; call 0x342e0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000434220: lea rsp, [rsp - 8]; call 0x34320; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed50: lea rsp, [rsp - 8]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432cb0: lea rsp, [rsp - 8]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed40: lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432e90: lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433280: lea rsp, [rsp - 8]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433070: lea rsp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000433460: lea rsp, [rsp - 8]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000434ea0: lea rsp, [rsp - 8]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004322e0: lea rsp, [rsp - 8]; call 0x35000; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004328b0: lea rsp, [rsp - 8]; call 0x35000; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000042edc0: lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432aa0: lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000432c90: lea rsp, [rsp - 8]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x00000000004324d0: lea rsp, [rsp - 8]; call 0x35000; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004326c0: lea rsp, [rsp - 8]; call 0x35000; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e60: lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433040: lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433250: lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433430: lea rsp, [rsp - 8]; call 0x35000; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000042edb0: lea rsp, [rsp - 8]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004351e0: lea rsp, [rsp - 8]; call 0x35150; lea rsp, [rsp + 8]; ret; 
0x00000000004352b0: lea rsp, [rsp - 8]; call 0x351f0; lea rsp, [rsp + 8]; ret; 
0x00000000004352c0: lea rsp, [rsp - 8]; call 0x35280; lea rsp, [rsp + 8]; ret; 
0x0000000000435300: lea rsp, [rsp - 8]; call 0x352d0; lea rsp, [rsp + 8]; ret; 
0x0000000000435370: lea rsp, [rsp - 8]; call 0x35340; lea rsp, [rsp + 8]; ret; 
0x00000000004353e0: lea rsp, [rsp - 8]; call 0x353b0; lea rsp, [rsp + 8]; ret; 
0x000000000042edd0: lea rsp, [rsp - 8]; call 0x36c60; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed70: lea rsp, [rsp - 8]; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431650: lea rsp, [rsp - 8]; call 0x36c90; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a90: lea rsp, [rsp - 8]; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000437380: lea rsp, [rsp - 8]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431700: lea rsp, [rsp - 8]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000431b40: lea rsp, [rsp - 8]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff0: lea rsp, [rsp - 8]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae0: lea rsp, [rsp - 8]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004316a0: lea rsp, [rsp - 8]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431b10: lea rsp, [rsp - 8]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316d0: lea rsp, [rsp - 8]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed60: lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433640: lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004336c0: lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433750: lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x00000000004337e0: lea rsp, [rsp - 8]; call 0x397b0; lea rsp, [rsp + 8]; ret; 
0x0000000000433680: lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433700: lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433790: lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x0000000000433820: lea rsp, [rsp - 8]; call 0x39a90; lea rsp, [rsp + 8]; ret; 
0x000000000040dad0: lea rsp, [rsp - 8]; call 0x4510; lea rsp, [rsp + 8]; ret; 
0x0000000000434260: lea rsp, [rsp - 8]; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000434280: lea rsp, [rsp - 8]; call 0x479b0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000427a30: lea rsp, [rsp - 8]; call 0x47e90; lea rsp, [rsp + 8]; ret; 
0x0000000000455b20: lea rsp, [rsp - 8]; call 0x480f0; call 0x55a20; lea rsp, [rsp + 8]; ret; 
0x000000000044c920: lea rsp, [rsp - 8]; call 0x4c930; lea rsp, [rsp + 8]; ret; 
0x0000000000404f70: lea rsp, [rsp - 8]; call 0x4f40; lea rsp, [rsp + 8]; ret; 
0x00000000004479a0: lea rsp, [rsp - 8]; call 0x53a60; lea rsp, [rsp + 8]; ret; 
0x0000000000452b40: lea rsp, [rsp - 8]; call 0x56050; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x00000000004581a0: lea rsp, [rsp - 8]; call 0x57590; lea rsp, [rsp + 8]; ret; 
0x0000000000458390: lea rsp, [rsp - 8]; call 0x576a0; lea rsp, [rsp + 8]; ret; 
0x00000000004583a0: lea rsp, [rsp - 8]; call 0x576d0; lea rsp, [rsp + 8]; ret; 
0x0000000000453d00: lea rsp, [rsp - 8]; call 0x58ac0; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045a230: lea rsp, [rsp - 8]; call 0x58b10; lea rsp, [rsp + 8]; ret; 
0x000000000045b840: lea rsp, [rsp - 8]; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000459dc0: lea rsp, [rsp - 8]; call 0x59cf0; call 0x59cb0; lea rsp, [rsp + 8]; ret; 
0x000000000045b850: lea rsp, [rsp - 8]; call 0x59cf0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7f0: lea rsp, [rsp - 8]; call 0x5c750; lea rsp, [rsp + 8]; ret; 
0x0000000000432130: lea rsp, [rsp - 8]; call 0x67c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432060: lea rsp, [rsp - 8]; call 0x6820; lea rsp, [rsp + 8]; ret; 
0x00000000004320f0: lea rsp, [rsp - 8]; call 0x6830; lea rsp, [rsp + 8]; ret; 
0x0000000000432080: lea rsp, [rsp - 8]; call 0x6850; lea rsp, [rsp + 8]; ret; 
0x0000000000432110: lea rsp, [rsp - 8]; call 0x6860; lea rsp, [rsp + 8]; ret; 
0x00000000004321c0: lea rsp, [rsp - 8]; call 0x6880; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321a0: lea rsp, [rsp - 8]; call 0x6880; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432180: lea rsp, [rsp - 8]; call 0x6880; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432200: lea rsp, [rsp - 8]; call 0x6880; lea rsp, [rsp + 8]; ret; 
0x0000000000432120: lea rsp, [rsp - 8]; call 0x69a0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c80: lea rsp, [rsp - 8]; call 0x6a70; lea rsp, [rsp + 8]; ret; 
0x0000000000431bb0: lea rsp, [rsp - 8]; call 0x6ae0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c40: lea rsp, [rsp - 8]; call 0x6b00; lea rsp, [rsp + 8]; ret; 
0x0000000000431bd0: lea rsp, [rsp - 8]; call 0x6b30; lea rsp, [rsp + 8]; ret; 
0x0000000000431c60: lea rsp, [rsp - 8]; call 0x6b50; lea rsp, [rsp + 8]; ret; 
0x0000000000431bc0: lea rsp, [rsp - 8]; call 0x6b80; lea rsp, [rsp + 8]; ret; 
0x0000000000431c50: lea rsp, [rsp - 8]; call 0x6ba0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d10: lea rsp, [rsp - 8]; call 0x6bd0; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cf0: lea rsp, [rsp - 8]; call 0x6bd0; cmp eax, 7; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd0: lea rsp, [rsp - 8]; call 0x6bd0; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d50: lea rsp, [rsp - 8]; call 0x6bd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431c70: lea rsp, [rsp - 8]; call 0x6ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000431840: lea rsp, [rsp - 8]; call 0x6d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431770: lea rsp, [rsp - 8]; call 0x6dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431800: lea rsp, [rsp - 8]; call 0x6dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431790: lea rsp, [rsp - 8]; call 0x6df0; lea rsp, [rsp + 8]; ret; 
0x0000000000431820: lea rsp, [rsp - 8]; call 0x6e00; lea rsp, [rsp + 8]; ret; 
0x0000000000431780: lea rsp, [rsp - 8]; call 0x6e20; lea rsp, [rsp + 8]; ret; 
0x0000000000431810: lea rsp, [rsp - 8]; call 0x6e30; lea rsp, [rsp + 8]; ret; 
0x00000000004318d0: lea rsp, [rsp - 8]; call 0x6e50; cmp eax, 6; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431890: lea rsp, [rsp - 8]; call 0x6e50; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431910: lea rsp, [rsp - 8]; call 0x6e50; lea rsp, [rsp + 8]; ret; 
0x0000000000431830: lea rsp, [rsp - 8]; call 0x6f20; lea rsp, [rsp + 8]; ret; 
0x000000000042a590: lea rsp, [rsp - 8]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000044ba20: lea rsp, [rsp - 8]; call 0xdfb0; lea rsp, [rsp + 8]; ret; 
0x00000000004283d0: lea rsp, [rsp - 8]; call 0xe140; lea rsp, [rsp + 8]; ret; 
0x000000000040f120: lea rsp, [rsp - 8]; call 0xf1c0; lea rsp, [rsp + 8]; ret; 
0x0000000000423b40: lea rsp, [rsp - 8]; call qword ptr [rip + 0x461f5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b20: lea rsp, [rsp - 8]; call qword ptr [rip + 0x4620d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b00: lea rsp, [rsp - 8]; call qword ptr [rip + 0x46225]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ae0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x4623d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423ac0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x46255]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a80: lea rsp, [rsp - 8]; call qword ptr [rip + 0x46285]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a60: lea rsp, [rsp - 8]; call qword ptr [rip + 0x4629d]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a40: lea rsp, [rsp - 8]; call qword ptr [rip + 0x462b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a20: lea rsp, [rsp - 8]; call qword ptr [rip + 0x462cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000423a00: lea rsp, [rsp - 8]; call qword ptr [rip + 0x462e5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419220: lea rsp, [rsp - 8]; call qword ptr [rip + 0x50925]; lea rsp, [rsp + 8]; ret; 
0x0000000000419200: lea rsp, [rsp - 8]; call qword ptr [rip + 0x5093d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191c0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x5099d]; lea rsp, [rsp + 8]; ret; 
0x00000000004191a0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x509b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000419170: lea rsp, [rsp - 8]; call qword ptr [rip + 0x509cd]; lea rsp, [rsp + 8]; ret; 
0x0000000000419140: lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a05]; lea rsp, [rsp + 8]; ret; 
0x0000000000419120: lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a45]; lea rsp, [rsp + 8]; ret; 
0x0000000000419100: lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a8d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190b0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x50a9d]; lea rsp, [rsp + 8]; ret; 
0x00000000004190e0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x50aa5]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6c0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6974d]; lea rsp, [rsp + 8]; ret; 
0x000000000041b6a0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69765]; lea rsp, [rsp + 8]; ret; 
0x000000000041b660: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69795]; lea rsp, [rsp + 8]; ret; 
0x000000000041b5b0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69835]; lea rsp, [rsp + 8]; ret; 
0x000000000041b590: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6985d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e55]; lea rsp, [rsp + 8]; ret; 
0x000000000041af50: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e6d]; lea rsp, [rsp + 8]; ret; 
0x000000000041af30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e85]; lea rsp, [rsp + 8]; ret; 
0x000000000041af10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69e9d]; lea rsp, [rsp + 8]; ret; 
0x000000000041aef0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69eb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041aed0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ecd]; lea rsp, [rsp + 8]; ret; 
0x000000000041aeb0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ee5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae90: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69efd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f15]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae50: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f2d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ae30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69f45]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69fdd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad50: lea rsp, [rsp - 8]; call qword ptr [rip + 0x69ff5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a00d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ad10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a025]; lea rsp, [rsp + 8]; ret; 
0x000000000041acf0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a03d]; lea rsp, [rsp + 8]; ret; 
0x000000000041acd0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a055]; lea rsp, [rsp + 8]; ret; 
0x000000000041acb0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a06d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac90: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a085]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a09d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac50: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0b5]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0cd]; lea rsp, [rsp + 8]; ret; 
0x000000000041ac10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a0d5]; lea rsp, [rsp + 8]; ret; 
0x000000000041abf0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a105]; lea rsp, [rsp + 8]; ret; 
0x000000000041abd0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a11d]; lea rsp, [rsp + 8]; ret; 
0x000000000041abb0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a12d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab90: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a145]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a15d]; lea rsp, [rsp + 8]; ret; 
0x000000000041ab40: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6a185]; lea rsp, [rsp + 8]; ret; 
0x0000000000416990: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d665]; lea rsp, [rsp + 8]; ret; 
0x0000000000416860: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d7b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416840: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d7fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416820: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d815]; lea rsp, [rsp + 8]; ret; 
0x00000000004166f0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d8dd]; lea rsp, [rsp + 8]; ret; 
0x00000000004165b0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d9b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000416590: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6d9fd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416570: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6da25]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416550: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6da35]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164d0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dab5]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164b0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000416490: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6db15]; lea rsp, [rsp + 8]; ret; 
0x0000000000416470: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6db2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416350: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc2d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416330: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc45]; lea rsp, [rsp + 8]; ret; 
0x0000000000416310: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc5d]; lea rsp, [rsp + 8]; ret; 
0x00000000004162f0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc75]; lea rsp, [rsp + 8]; ret; 
0x00000000004162d0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dc95]; lea rsp, [rsp + 8]; ret; 
0x00000000004162b0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dcb5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416290: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dcd5]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000416270: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dcf5]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000416250: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6dd15]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000416230: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6de65]; lea rsp, [rsp + 8]; ret; 
0x0000000000416150: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6df5d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415e10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e155]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e1bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415db0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e1e5]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e215]; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e255]; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415df0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e255]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e275]; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e33d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c50: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e355]; lea rsp, [rsp + 8]; ret; 
0x0000000000415c30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e36d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415b10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e46d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415af0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e47d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ad0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415ab0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4b5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a90: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4d5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a70: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e4f5]; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a50: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e515]; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000415a30: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e535]; movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000415a10: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e555]; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004159d0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e625]; lea rsp, [rsp + 8]; ret; 
0x00000000004157a0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e875]; lea rsp, [rsp + 8]; ret; 
0x0000000000415780: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e88d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415760: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e8a5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415640: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e98d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415620: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e9bd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415600: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6e9e5]; lea rsp, [rsp + 8]; ret; 
0x00000000004154c0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eafd]; lea rsp, [rsp + 8]; ret; 
0x0000000000415480: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb35]; lea rsp, [rsp + 8]; ret; 
0x00000000004154e0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb45]; lea rsp, [rsp + 8]; ret; 
0x00000000004154a0: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eb7d]; lea rsp, [rsp + 8]; ret; 
0x0000000000415500: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6eba5]; lea rsp, [rsp + 8]; ret; 
0x0000000000415460: lea rsp, [rsp - 8]; call qword ptr [rip + 0x6ebcd]; lea rsp, [rsp + 8]; ret; 
0x0000000000439220: lea rsp, [rsp - 8]; lea r8, [rip + 0x3ca74]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004391c0: lea rsp, [rsp - 8]; lea r8, [rip + 0x3cad4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431af0: lea rsp, [rsp - 8]; lea r8, [rip + 0x441a4]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x00000000004316b0: lea rsp, [rsp - 8]; lea r8, [rip + 0x445e4]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004392f0: lea rsp, [rsp - 8]; lea r9, [rip + 0x3c9a4]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000453390: lea rsp, [rsp - 8]; lea rax, [rip + 0x22b64]; cmp qword ptr [rax], 0; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x0000000000455b90: lea rsp, [rsp - 8]; lea rax, [rip + 0x2e2d4]; mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000434870: lea rsp, [rsp - 8]; lea rax, [rip + 0x342e4]; mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000044a230: lea rsp, [rsp - 8]; lea rax, [rip + 0x39b24]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a210: lea rsp, [rsp - 8]; lea rax, [rip + 0x39b44]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004484d0: lea rsp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; 
0x00000000004484d0: lea rsp, [rsp - 8]; lea rax, [rip + 0x3b884]; call qword ptr [rax + 0x18]; lea rsp, [rsp + 8]; ret; 
0x00000000004484b0: lea rsp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004484b0: lea rsp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000043b8e0: lea rsp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; 
0x000000000043b8e0: lea rsp, [rsp - 8]; lea rax, [rip + 0x48474]; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x0000000000434480: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8d4]; call qword ptr [rax + 0x80]; lea rsp, [rsp + 8]; ret; 
0x0000000000434460: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; 
0x0000000000434460: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f8f4]; call qword ptr [rax + 0x78]; lea rsp, [rsp + 8]; ret; 
0x0000000000434420: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f934]; call qword ptr [rax + 0x70]; 
0x00000000004343e0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f974]; call qword ptr [rax + 0x68]; 
0x00000000004343a0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9b4]; call qword ptr [rax + 0x60]; 
0x0000000000434360: lea rsp, [rsp - 8]; lea rax, [rip + 0x4f9f4]; call qword ptr [rax + 0x58]; 
0x0000000000434320: lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa34]; call qword ptr [rax + 0x50]; 
0x00000000004342e0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa74]; call qword ptr [rax + 0x48]; 
0x00000000004342c0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; 
0x00000000004342c0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4fa94]; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004342a0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; 
0x00000000004342a0: lea rsp, [rsp - 8]; lea rax, [rip + 0x4fab4]; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x0000000000423bd0: lea rsp, [rsp - 8]; lea rax, [rip + 0x5ef24]; mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x0000000000412f40: lea rsp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; 
0x0000000000412f40: lea rsp, [rsp - 8]; lea rax, [rip + 0x70ee4]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040ff90: lea rsp, [rsp - 8]; lea rax, [rip + 0x73dc4]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000040fea0: lea rsp, [rsp - 8]; lea rax, [rip + 0x73eb4]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa0: lea rsp, [rsp - 8]; lea rcx, [rip + 0x3ecf4]; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d50: lea rsp, [rsp - 8]; lea rdi, [rip + 0x37bcc]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d30: lea rsp, [rsp - 8]; lea rdi, [rip + 0x37be4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000426d10: lea rsp, [rsp - 8]; lea rdi, [rip + 0x37bf4]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x000000000041b8d0: lea rsp, [rsp - 8]; lea rdi, [rip + 0x4e3e4]; call 0x1b710; lea rsp, [rsp + 8]; ret; 
0x000000000041b380: lea rsp, [rsp - 8]; lea rdi, [rip + 0x4e814]; call 0x1add0; lea rsp, [rsp + 8]; ret; 
0x0000000000447520: lea rsp, [rsp - 8]; lea rdx, [rip + 0x2e774]; call 0x47540; lea rsp, [rsp + 8]; ret; 
0x0000000000439a90: lea rsp, [rsp - 8]; lea rdx, [rip + 0x3c204]; call 0x39ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000437360: lea rsp, [rsp - 8]; lea rdx, [rip + 0x3e934]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000437320: lea rsp, [rsp - 8]; lea rdx, [rip + 0x3e974]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004372e0: lea rsp, [rsp - 8]; lea rdx, [rip + 0x3e9b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000436f80: lea rsp, [rsp - 8]; lea rdx, [rip + 0x3ed14]; call 0x36d90; lea rsp, [rsp + 8]; ret; 
0x0000000000431b20: lea rsp, [rsp - 8]; lea rdx, [rip + 0x44174]; call 0x37340; lea rsp, [rsp + 8]; ret; 
0x00000000004316e0: lea rsp, [rsp - 8]; lea rdx, [rip + 0x445b4]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000438e70: lea rsp, [rsp - 8]; lea rsi, [rip + 0x3ce24]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e10: lea rsp, [rsp - 8]; lea rsi, [rip + 0x3ce84]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac0: lea rsp, [rsp - 8]; lea rsi, [rip + 0x441d4]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431680: lea rsp, [rsp - 8]; lea rsi, [rip + 0x44614]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf0: lea rsp, [rsp - 8]; mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x0000000000459090: lea rsp, [rsp - 8]; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000043bab0: lea rsp, [rsp - 8]; mov dl, sil; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b0: lea rsp, [rsp - 8]; mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x00000000004300c0: lea rsp, [rsp - 8]; mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a0: lea rsp, [rsp - 8]; mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f0: lea rsp, [rsp - 8]; mov ecx, 0x20; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab0: lea rsp, [rsp - 8]; mov ecx, 0x20; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000044a1d0: lea rsp, [rsp - 8]; mov ecx, 0xffffffe0; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433a50: lea rsp, [rsp - 8]; mov ecx, 0xffffffe0; lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000045c820: lea rsp, [rsp - 8]; mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc0: lea rsp, [rsp - 8]; mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402e70: lea rsp, [rsp - 8]; mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457220: lea rsp, [rsp - 8]; mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457320: lea rsp, [rsp - 8]; mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000459de0: lea rsp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e00: lea rsp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba50: lea rsp, [rsp - 8]; mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x0000000000434f90: lea rsp, [rsp - 8]; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb0: lea rsp, [rsp - 8]; mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160d0: lea rsp, [rsp - 8]; mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x0000000000416130: lea rsp, [rsp - 8]; mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f0: lea rsp, [rsp - 8]; mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x0000000000416110: lea rsp, [rsp - 8]; mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x000000000042ef60: lea rsp, [rsp - 8]; mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x0000000000434590: lea rsp, [rsp - 8]; mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x00000000004160b0: lea rsp, [rsp - 8]; mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x00000000004166d0: lea rsp, [rsp - 8]; mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004159f0: lea rsp, [rsp - 8]; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155e0: lea rsp, [rsp - 8]; mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x00000000004396c0: lea rsp, [rsp - 8]; mov edx, 1; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x0000000000427a10: lea rsp, [rsp - 8]; mov edx, 1; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x000000000044a290: lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448550: lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448530: lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448530: lea rsp, [rsp - 8]; mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c0: lea rsp, [rsp - 8]; mov edx, 1; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x00000000004155c0: lea rsp, [rsp - 8]; mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f50: lea rsp, [rsp - 8]; mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004166b0: lea rsp, [rsp - 8]; mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x00000000004572e0: lea rsp, [rsp - 8]; mov esi, edi; mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004191e0: lea rsp, [rsp - 8]; mov qword ptr [rsp], rdi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000430430: lea rsp, [rsp - 8]; mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x000000000043f7e0: lea rsp, [rsp - 8]; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443260: lea rsp, [rsp - 8]; mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x000000000043b420: lea rsp, [rsp - 8]; mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c10: lea rsp, [rsp - 8]; mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f0: lea rsp, [rsp - 8]; mov r9, rsp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x00000000004115a0: lea rsp, [rsp - 8]; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d0: lea rsp, [rsp - 8]; mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000456860: lea rsp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456880: lea rsp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b0: lea rsp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f0: lea rsp, [rsp - 8]; mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b180: lea rsp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a0: lea rsp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b220: lea rsp, [rsp - 8]; mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a0: lea rsp, [rsp - 8]; mov rax, rdi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041dad0: lea rsp, [rsp - 8]; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f610: lea rsp, [rsp - 8]; mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000044fa50: lea rsp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa30: lea rsp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa70: lea rsp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b0: lea rsp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d0: lea rsp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x00000000004147c0: lea rsp, [rsp - 8]; mov rax, rdi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f0: lea rsp, [rsp - 8]; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d810: lea rsp, [rsp - 8]; mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004149b0: lea rsp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414990: lea rsp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414970: lea rsp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433910: lea rsp, [rsp - 8]; mov rax, rdi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004396e0: lea rsp, [rsp - 8]; mov rcx, rdx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437300: lea rsp, [rsp - 8]; mov rcx, rdx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437340: lea rsp, [rsp - 8]; mov rcx, rdx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000431100: lea rsp, [rsp - 8]; mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431120: lea rsp, [rsp - 8]; mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x00000000004557c0: lea rsp, [rsp - 8]; mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x000000000045b860: lea rsp, [rsp - 8]; mov rdx, rsi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a0: lea rsp, [rsp - 8]; mov rdx, rsi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb0: lea rsp, [rsp - 8]; mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x0000000000457450: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba0: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402be0: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b40: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c800: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457520: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e10: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402a50: lea rsp, [rsp - 8]; mov rsi, rdi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004532b0: lea rsp, [rsp - 8]; mov rsi, rdi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x0000000000450870: lea rsp, [rsp - 8]; mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321e0: lea rsp, [rsp - 8]; mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318f0: lea rsp, [rsp - 8]; mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x0000000000405180: lea rsp, [rsp - 8]; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b0: lea rsp, [rsp - 8]; movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000045b960: lea rsp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e0: lea rsp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba00: lea rsp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b980: lea rsp, [rsp - 8]; movsxd rdx, esi; mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee0: lea rsp, [rsp - 8]; movsxd rsi, edi; mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457360: lea rsp, [rsp - 8]; movsxd rsi, edi; mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c840: lea rsp, [rsp - 8]; movsxd rsi, edi; mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc0: lea rsp, [rsp - 8]; movsxd rsi, edi; mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa0: lea rsp, [rsp - 8]; movsxd rsi, edi; mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000453f60: lea rsp, [rsp - 8]; movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x000000000040b8c0: lea rsp, [rsp - 8]; movsxd rsi, esi; movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad0: lea rsp, [rsp - 8]; movzx esi, byte ptr [rdi]; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000042f0d0: lea rsp, [rsp - 8]; xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f90: lea rsp, [rsp - 8]; xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf0: lea rsp, [rsp - 8]; xor dl, dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004507d0: lea rsp, [rsp - 8]; xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x000000000043bad0: lea rsp, [rsp - 8]; xor dl, dl; lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000418660: lea rsp, [rsp - 8]; xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418640: lea rsp, [rsp - 8]; xor edi, edi; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab20: lea rsp, [rsp - 8]; xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x000000000045cad0: lea rsp, [rsp - 8]; xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x00000000004034d0: lea rsp, [rsp - 8]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000446f20: lea rsp, [rsp - 8]; xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472b0: lea rsp, [rsp - 8]; xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004473a0: lea rsp, [rsp - 8]; xor edx, edx; call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447f90: lea rsp, [rsp - 8]; xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x000000000044a250: lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448510: lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f0: lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f0: lea rsp, [rsp - 8]; xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x00000000004151b0: lea rsp, [rsp - 8]; xor edx, edx; mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004509d0: lea rsp, [rsp - 8]; xor edx, edx; xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x00000000004476b0: lea rsp, [rsp - 8]; xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476d0: lea rsp, [rsp - 8]; xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x0000000000447850: lea rsp, [rsp - 8]; xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447870: lea rsp, [rsp - 8]; xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x00000000004353f0: lea rsp, [rsp - 8]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453370: lea rsp, [rsp - 8]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000042e400: lea rsp, [rsp - 8]; xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000420860: lea rsp, [rsp - 8]; xor sil, sil; call 0x20780; lea rsp, [rsp + 8]; ret; 
0x0000000000424fda: leave; add al, 0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004392f9: leave; add eax, dword ptr [rax]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000439353: leave; add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000439352: leave; add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x000000000042d2f1: leave; call 0x2d0e0; pop r13; pop r12; pop rbx; ret; 
0x000000000042e407: leave; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e63f: leave; call 0x2e650; mov rsp, rbp; pop rbp; ret; 
0x0000000000430616: leave; call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x00000000004390d0: leave; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000043f7ea: leave; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x000000000043f7c6: leave; call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x000000000044326a: leave; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000443246: leave; call 0x43080; lea rsp, [rsp + 8]; ret; 
0x0000000000444c9b: leave; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d2f: leave; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004441ef: leave; call 0x46060; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044426f: leave; call 0x46060; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447101: leave; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x000000000044c6f9: leave; call 0x4c710; pop r13; pop r12; pop rbx; ret; 
0x0000000000459060: leave; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000433942: leave; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x0000000000456057: leave; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456039: leave; cli; inc dword ptr [rbx - 0x308bfb08]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042d843: leave; cmp dword ptr [rbx], eax; add dl, dh; movups xmm0, xmmword ptr [rax]; ret; 
0x0000000000439459: leave; fistp qword ptr [rdi]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b911: leave; fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b94a: leave; fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040d05b: leave; fistp qword ptr [rsp]; fild qword ptr [rsp]; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000417ba8: leave; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000403800: leave; je 0x3816; test r8, r8; jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x0000000000409480: leave; jg 0x9438; movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x0000000000403a78: leave; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x0000000000456db3: leave; jl 0x56dbe; cmp ecx, 0x400; jl 0x56dc4; mov eax, 0xffffffff; ret; 
0x0000000000403a85: leave; jle 0x3a8e; mov eax, 1; ret; 
0x000000000040732b: leave; jle 0x7336; mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x0000000000433d33: leave; mov eax, ecx; ret; 
0x00000000004573d4: leave; mov edi, 0x85; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042bdb1: leave; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000041aa6f: leave; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000417b71: leave; mov rax, rcx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043b2a4: leave; mov rdi, rax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004571fc: leave; mov rsi, 0xffffffffffffffff; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402a83: leave; mov rsi, rdi; mov edi, 2; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043453e: leave; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004528b8: leave; sbb byte ptr [rax - 0x73], cl; xor eax, 0x25cff; lea rax, [rsi + rcx]; ret; 
0x0000000000403a41: leave; sub r9, rsi; mov rax, r9; ret; 
0x0000000000408b93: leave; test al, 0xff; jmp qword ptr [rsi + 0x41]; 
0x000000000042e376: leave; xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e378: leave; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e3e8: leave; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e595: leave; xor esi, esi; call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x00000000004304fd: leave; xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x000000000043059a: leave; xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306ba: leave; xor r8d, r8d; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000402720: lfence; ret; 
0x000000000042b713: lock add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004031b3: lock add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x00000000004577c3: lock add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x0000000000403183: lock add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000457793: lock add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000403173: lock add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000457783: lock add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000403193: lock add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004577a3: lock add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004031a3: lock add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004577b3: lock add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004031c3: lock add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004577d3: lock add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004031d3: lock add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x00000000004577e3: lock add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x000000000040bad0: lock add byte ptr [rcx + rcx + 0x48], bh; lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf0: lock add byte ptr [rcx + rcx + 0x48], bh; lea edi, [rax - 0x10]; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x0000000000436bc8: lock add eax, dword ptr [rax]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x00000000004026a2: lock cmpxchg dword ptr [rdi], esi; ret; 
0x0000000000402713: lock cmpxchg qword ptr [rdi], rsi; ret; 
0x00000000004025cf: lock dec dword ptr [rcx]; jmp 0x25d6; dec dword ptr [rcx]; sete al; ret; 
0x00000000004025ef: lock dec qword ptr [rcx]; jmp 0x25f8; dec qword ptr [rcx]; sete al; ret; 
0x000000000040260f: lock inc dword ptr [rcx]; jmp 0x2616; inc dword ptr [rcx]; ret; 
0x000000000040262f: lock inc qword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x000000000040264a: lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x000000000040266a: lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x0000000000402693: lock xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x00000000004026bc: lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026dc: lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x0000000000402703: lock xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x000000000042fd00: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042ecf9: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045720b: lodsb al, byte ptr [rsi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000401aa0: lodsb al, byte ptr [rsi]; mov ebp, 0x89480001; ret; 
0x000000000045c23f: lodsd eax, dword ptr [rsi]; adc eax, 0x8d48fffc; and al, 8; pop r12; pop rbx; ret; 
0x000000000043281f: lodsd eax, dword ptr [rsi]; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045445b: lodsd eax, dword ptr [rsi]; call 0x4d05445f; mov esi, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x00000000004570ff: lodsd eax, dword ptr [rsi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000420a3f: lodsd eax, dword ptr [rsi]; mov al, 0xfe; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044823f: lodsd eax, dword ptr [rsi]; mov edi, 0x8d48fffe; adc eax, 0x3bb16; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000426cdf: lodsd eax, dword ptr [rsi]; ret 0xfffd; 
0x00000000004331bf: lodsd eax, dword ptr [rsi]; sbb dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000430d47: lodsd eax, dword ptr [rsi]; std; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430dde: lodsd eax, dword ptr [rsi]; std; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004325ff: lodsd eax, dword ptr [rsi]; sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004570fe: lodsd eax, dword ptr cs:[rsi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000413c06: loope 0x13c50; cmp esi, edi; sete al; ret; 
0x0000000000415d98: loope 0x15da0; add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415db8: loope 0x15dc0; add bh, bl; cmp al, 0x24; fild qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd8: loope 0x15de0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415e18: loope 0x15e20; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415e84: loope 0x15e8c; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415eb4: loope 0x15ebc; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f04: loope 0x15f0c; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000415f34: loope 0x15f3c; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000041b1db: loope 0x1b1b3; add al, 0; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b2db: loope 0x1b2b2; add al, 0; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x0000000000423aa6: loope 0x23aa7; inc dword ptr [rax]; add bh, bh; adc eax, 0x46267; lea rsp, [rsp + 8]; ret; 
0x0000000000430217: loope 0x30218; dec dword ptr [rax + 0x29]; ret; 
0x0000000000430216: loope 0x30218; dec dword ptr [rax + 0x29]; ret; 
0x0000000000430ac9: loope 0x30ab3; int1; jmp 0x30acd; dec dword ptr [rax - 0x77]; ret; 
0x00000000004331a3: loope 0x331a7; add bl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x00000000004391b1: loope 0x391b2; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000439211: loope 0x39212; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000439269: loope 0x3926a; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000403a56: loope 0x3aa0; mov eax, 0xffffffff; ret; 
0x000000000043b427: loope 0x3b411; adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000403e89: loope 0x3e8a; jmp qword ptr [rdi + 0x43]; 
0x0000000000403e88: loope 0x3e8a; jmp qword ptr [rdi + 0x43]; 
0x000000000044422b: loope 0x4424a; add byte ptr [rax], al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000444bf5: loope 0x44bf6; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c39: loope 0x44c3a; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x3e], cl; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000449c17: loope 0x49c01; adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f7: loope 0x4c0e1; adc eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000405c0e: loope 0x5bf9; ret 0; 
0x000000000045cabc: loope 0x5cabd; sldt word ptr [rax]; or eax, ecx; ret; 
0x0000000000409eba: loope 0x9edc; add rax, rcx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x000000000040d738: loope 0xd77b; movzx edx, bp; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000045264d: lsl eax, word ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000444ce0: lsl eax, word ptr [rax]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004022ca: mfence; jmp 0x21a8; ret; 
0x00000000004023f1: mfence; jmp 0x234b; ret; 
0x0000000000402740: mfence; ret; 
0x000000000042b85e: mov ah, 0x24; movabs al, byte ptr [0x9824bc8d48000008]; or byte ptr [rax], al; add al, ch; syscall; 
0x0000000000413e29: mov ah, 0x24; or byte ptr [rcx], al; add byte ptr [rax], al; mov rdi, r14; mov rax, r15; call rax; 
0x00000000004451bf: mov ah, 0x24; push -0x17ffffff; pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x00000000004316e8: mov ah, 0x45; add al, 0; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x0000000000456038: mov ah, 0xc9; cli; inc dword ptr [rbx - 0x308bfb08]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041cbcb: mov ah, 0xd7; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x00000000004372e8: mov ah, 0xe9; add eax, dword ptr [rax]; call 0x37300; lea rsp, [rsp + 8]; ret; 
0x00000000004343a8: mov ah, 0xf9; add al, 0; call qword ptr [rax + 0x60]; 
0x00000000004342a8: mov ah, 0xfa; add al, 0; call qword ptr [rax + 0x38]; 
0x00000000004342a8: mov ah, 0xfa; add al, 0; call qword ptr [rax + 0x38]; lea rsp, [rsp + 8]; ret; 
0x000000000041eff8: mov ah, 1; mov al, r12b; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041a2ab: mov ah, 1; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ae19: mov ah, al; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004458f2: mov ah, ch; add eax, dword ptr [rax]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000040ff9e: mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a23e: mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041f75c: mov al, 0; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x0000000000408cb8: mov al, 0x29; ret; 
0x000000000043a817: mov al, 0x30; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000443ae8: mov al, 0x48; mov esp, ebp; pop rbp; ret; 
0x0000000000412049: mov al, 0x4c; mov edi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd4: mov al, 0x4c; mov edi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f79a: mov al, 0x4c; mov esi, dword ptr [rbp - 0x48]; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000044321e: mov al, 0x4c; mov esi, dword ptr [rbp - 0x48]; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e073: mov al, 0x4c; mov esi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000041cae2: mov al, 0xd7; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a098: mov al, 0xd7; add byte ptr [rax], al; mov edi, dword ptr [rdi]; call 0x2aa0; lea rsp, [rsp + 8]; ret; 
0x0000000000420d79: mov al, 0xd7; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000426b46: mov al, 0xd7; add byte ptr [rax], al; ret; 
0x0000000000459fc4: mov al, 0xd7; add byte ptr [rax], al; ret; 
0x0000000000459fd2: mov al, 0xd7; add byte ptr [rax], al; ret; 
0x0000000000459fda: mov al, 0xd7; add byte ptr [rax], al; ret; 
0x000000000045264c: mov al, 0xf; add eax, dword ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000456e02: mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e1f: mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e44: mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e6e: mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456e95: mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427216: mov al, 0xfd; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000420a40: mov al, 0xfe; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043979a: mov al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000444f22: mov al, 1; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045901f: mov al, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000459035: mov al, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000412f81: mov al, 1; jmp 0x12f87; xor al, al; lea rsp, [rsp + 8]; ret; 
0x00000000004130fa: mov al, 1; jmp 0x13100; xor al, al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004131d7: mov al, 1; jmp 0x131dd; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000413f95: mov al, 1; jmp 0x13f9b; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000425c2c: mov al, 1; jmp 0x25c32; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429aa5: mov al, 1; jmp 0x29aab; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429f2a: mov al, 1; jmp 0x29f30; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000042c326: mov al, 1; jmp 0x2c32c; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000043a36f: mov al, 1; jmp 0x3a375; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000043c164: mov al, 1; jmp 0x3c16a; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450be8: mov al, 1; jmp 0x50bee; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450ca3: mov al, 1; jmp 0x50ca9; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e27: mov al, 1; jmp 0x50e2d; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e66: mov al, 1; jmp 0x50e6c; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450e94: mov al, 1; jmp 0x50e9a; xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000045133e: mov al, 1; jmp 0x51344; xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000453cc9: mov al, 1; jmp 0x53ccf; xor al, al; lea rsp, [rsp + 0x98]; ret; 
0x000000000044fa1e: mov al, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000405174: mov al, 1; mov rsp, rbp; pop rbp; ret; 
0x0000000000403221: mov al, 1; ret; 
0x0000000000404dbb: mov al, 1; ret; 
0x0000000000404dee: mov al, 1; ret; 
0x0000000000419071: mov al, 1; ret; 
0x000000000041ad9f: mov al, 1; ret; 
0x0000000000425108: mov al, 1; ret; 
0x000000000042beaf: mov al, 1; ret; 
0x000000000044416c: mov al, 1; ret; 
0x000000000044826e: mov al, 1; ret; 
0x0000000000449c02: mov al, 1; ret; 
0x0000000000457831: mov al, 1; ret; 
0x000000000044f141: mov al, 4; add byte ptr [rax], al; ret; 
0x000000000041effb: mov al, ah; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000423f63: mov al, ah; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000451242: mov al, ah; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a07: mov al, ah; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a02a: mov al, ah; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042c42a: mov al, ah; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041a2ae: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ae1c: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d2ae: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d42b: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d596: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d727: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f166: mov al, ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004218e1: mov al, ah; pop r13; pop r12; pop rbx; ret; 
0x0000000000407376: mov al, bh; and eax, 0xff; ret; 
0x00000000004073f6: mov al, bh; and eax, 0xff; ret; 
0x00000000004363d0: mov al, bl; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004130b2: mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004131b2: mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042c767: mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c7f7: mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042e76f: mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000447510: mov al, bl; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042ccff: mov al, bl; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042c98f: mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042cabf: mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042e837: mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045526a: mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004553af: mov al, bl; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042ca3c: mov al, bl; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000044d27a: mov al, bl; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000455318: mov al, bl; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000425bfe: mov al, bl; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043e6a1: mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000441f34: mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045325c: mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000429c9b: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429d2b: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429dbb: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c09b: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c12b: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c1bb: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000433dd7: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000433e37: mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000041976a: mov al, bl; pop rbx; ret; 
0x000000000041ef59: mov al, bl; pop rbx; ret; 
0x0000000000424d68: mov al, bl; pop rbx; ret; 
0x0000000000433c85: mov al, bl; pop rbx; ret; 
0x000000000043b854: mov al, bl; pop rbx; ret; 
0x000000000041a882: mov al, byte ptr [rax + rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041d725: mov al, byte ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459a40: mov al, byte ptr [rax]; mov rdx, qword ptr [rsp]; add qword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000436f76: mov al, byte ptr [rbp - 0x1c]; mov rsp, rbp; pop rbp; ret; 
0x00000000004372d4: mov al, byte ptr [rbp - 0x24]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439818: mov al, byte ptr [rbp - 4]; mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043989b: mov al, byte ptr [rbp - 4]; mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044cd88: mov al, byte ptr [rbx]; add byte ptr [rax - 0x75], cl; cmp al, ch; cld; dec dword ptr [rax - 0x77]; ret; 
0x00000000004021e3: mov al, byte ptr [rcx + rdx]; dec r8; mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x0000000000402070: mov al, byte ptr [rcx + rdx]; mov byte ptr [rdx], al; inc rdx; dec r8; jne 0x2070; ret; 
0x0000000000425bac: mov al, byte ptr [rdx + rax]; jmp 0x25bb3; xor al, al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000404d19: mov al, byte ptr [rsi + rcx]; and r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404ce9: mov al, byte ptr [rsi + rcx]; or r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4ce0; ret; 
0x0000000000404d79: mov al, byte ptr [rsi + rcx]; xor r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d70; ret; 
0x0000000000415b8a: mov al, byte ptr [rsp + 1]; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x00000000004163ca: mov al, byte ptr [rsp + 1]; jmp 0x163d2; xor al, al; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000453846: mov al, byte ptr [rsp + 8]; lea rsp, [rsp + 0xf8]; ret; 
0x0000000000439a4e: mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a7e: mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000449372: mov al, ch; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044b112: mov al, ch; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d096: mov al, ch; pop r13; pop r12; pop rbx; ret; 
0x0000000000407375: mov al, dil; and eax, 0xff; ret; 
0x00000000004073f5: mov al, dil; and eax, 0xff; ret; 
0x0000000000454a9b: mov al, dl; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000041effa: mov al, r12b; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000423f62: mov al, r12b; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000451241: mov al, r12b; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000454a06: mov al, r12b; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x000000000042a029: mov al, r12b; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042c429: mov al, r12b; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000041a2ad: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ae1b: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d2ad: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d42a: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d595: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d726: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f165: mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004218e0: mov al, r12b; pop r13; pop r12; pop rbx; ret; 
0x0000000000449371: mov al, r13b; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044b111: mov al, r13b; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044d095: mov al, r13b; pop r13; pop r12; pop rbx; ret; 
0x000000000040d87b: mov ax, 1; and eax, 0xffff; ret; 
0x000000000040928d: mov ax, 1; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x000000000041155b: mov ax, 2; and eax, 0xffff; ret; 
0x000000000044bb71: mov ax, bx; and eax, 0xffff; pop rbx; ret; 
0x00000000004032c0: mov ax, bx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x000000000040330a: mov ax, bx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x0000000000404e10: mov ax, di; and eax, 0xf; ret; 
0x0000000000426cf5: mov ax, di; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x000000000040d9d0: mov ax, di; lea rdx, [rip + 0x75146]; mov word ptr [rdx], ax; ret; 
0x000000000040d9e0: mov ax, di; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9f0: mov ax, di; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x0000000000423f81: mov ax, word ptr [rax + 2]; jmp 0x23f8a; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000404ead: mov ax, word ptr [rax + 4]; mov word ptr [rsp + 4], ax; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x0000000000432295: mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043226c: mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432229: mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c2: mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000444119: mov ax, word ptr [rax + rdx*2 - 2]; mov word ptr [r13], ax; pop r13; pop r12; pop rbx; ret; 
0x000000000042547c: mov ax, word ptr [rax]; and ax, 0x77; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x000000000040dafc: mov ax, word ptr [rax]; jmp 0xdb0b; lea rdx, [rip + 0x75038]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000436d79: mov ax, word ptr [rbp + 0x18]; mov word ptr [rbp - 8], ax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004027ac: mov ax, word ptr [rbp - 8]; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000406850: mov ax, word ptr [rdi + 8]; and ax, 0x8000; setne al; ret; 
0x0000000000411555: mov ax, word ptr [rdi - 0x16]; jmp 0x1155f; mov ax, 2; and eax, 0xffff; ret; 
0x000000000040d875: mov ax, word ptr [rdi - 0x16]; jmp 0xd87f; mov ax, 1; and eax, 0xffff; ret; 
0x0000000000411585: mov ax, word ptr [rdi - 0x18]; jmp 0x11595; lea rdx, [rip + 0x7159e]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d855: mov ax, word ptr [rdi - 0x18]; jmp 0xd865; lea rdx, [rip + 0x752be]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040675b: mov ax, word ptr [rdx + 8]; mov word ptr [rbp - 8], ax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b971: mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d862: mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040db08: mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411592: mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x00000000004208f8: mov ax, word ptr [rdx]; mov word ptr [rbx + 0x374], ax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417ddf: mov ax, word ptr [rdx]; mov word ptr [rdx], 0; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000042138d: mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213ed: mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215dd: mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042163d: mov ax, word ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434feb: mov ax, word ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043513c: mov ax, word ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435293: mov ax, word ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352e4: mov ax, word ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040e93a: mov bh, 0x10; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e629: mov bh, 0x10; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e0ef: mov bh, 0x10; mov rsi, rsp; mov rdi, r13; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x0000000000432a0c: mov bh, 0x30; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329bc: mov bh, 0x30; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329dc: mov bh, 0x30; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x000000000040ed69: mov bh, 0x30; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x00000000004117b4: mov bh, 0x30; mov dl, 1; call 0xd950; pop rbx; ret; 
0x000000000042304a: mov bh, 0x30; mov dl, 1; call 0xd950; pop rbx; ret; 
0x000000000040e50a: mov bh, 0x30; mov ecx, 1; lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x0000000000457bb2: mov bh, 0x30; xor dl, dl; call 0xd950; lea rsp, [rsp + 0x1010]; pop rbx; ret; 
0x0000000000414cdc: mov bh, 0x38; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418634: mov bh, 0x38; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000418527: mov bh, 0x38; call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x00000000004336b5: mov bh, 0x62; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000446e63: mov bh, 0x74; and al, 4; movzx edi, word ptr [rsp]; call 0x5bfd0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443fbd: mov bh, 0x7c; and al, 8; call 0x43610; lea rsp, [rsp + 0x18]; ret; 
0x000000000041d7e1: mov bh, 0x87; je 0x1d7e8; add byte ptr [rax], al; ret; 
0x0000000000434585: mov bh, 0x87; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432a38: mov bh, 0xc2; ret; 
0x0000000000404901: mov bh, 0xc7; ret; 
0x00000000004049e1: mov bh, 0xc7; ret; 
0x000000000040d73b: mov bh, 0xd5; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000040e069: mov bh, 0xd5; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000040ea16: mov bh, 0xd6; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000045c1c2: mov bh, 0xf4; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1fc: mov bh, 0xf4; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c23c: mov bh, 0xf4; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000446e8e: mov bh, 4; and al, 0x48; lea esp, [rsp + 0x18]; ret; 
0x00000000004181f5: mov bh, 6; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000432941: mov bh, 7; cvtsi2sd xmm0, eax; ret; 
0x00000000004329f1: mov bh, 7; cvtsi2ss xmm0, eax; ret; 
0x0000000000416d4a: mov bh, bh; dec dword ptr [rax - 0x77]; ret; 
0x0000000000416df6: mov bh, bh; dec dword ptr [rax - 0x77]; ret; 
0x0000000000421052: mov bh, byte ptr [rip - 0x74b7fffa]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c9b; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c4b4: mov bh, dh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c53c: mov bh, dh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004568f9: mov bl, 0x23; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca29: mov bl, 0x54; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa3e: mov bl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa1b: mov bl, 0xfc; push qword ptr [rax + 0x648d4801]; and al, 8; ret; 
0x00000000004363ce: mov bl, 1; mov al, bl; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000419768: mov bl, 1; mov al, bl; pop rbx; ret; 
0x000000000041ef57: mov bl, 1; mov al, bl; pop rbx; ret; 
0x0000000000418ae1: mov bl, 6; add byte ptr [rdi], cl; mov edi, 0x14e8f6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044bc64: mov bl, bh; jmp qword ptr [rsi + 0x45]; 
0x000000000043bada: mov bl, byte ptr [rdx + 2]; add al, ch; sub eax, 0x48fffffe; lea esp, [rsp + 8]; ret; 
0x0000000000404bb6: mov byte ptr [r12 + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404bb5: mov byte ptr [r12 + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ff55: mov byte ptr [r12], 0x20; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fc71: mov byte ptr [r12], al; add qword ptr [rbx + 0x18], 1; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040c4ad: mov byte ptr [r12], bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403d90: mov byte ptr [r12], bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000408e93: mov byte ptr [r9], r13b; ret 0xbf0f; 
0x000000000045b957: mov byte ptr [rax + 0x16], 0; ret; 
0x000000000045b953: mov byte ptr [rax + 0x17], 1; mov byte ptr [rax + 0x16], 0; ret; 
0x0000000000452ec3: mov byte ptr [rax + 0x18], 1; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000044f094: mov byte ptr [rax + 1], 0xbb; mov rax, qword ptr [rbx]; mov byte ptr [rax + 2], 0xbf; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f4f4: mov byte ptr [rax + 1], 0xfe; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f834: mov byte ptr [rax + 1], 0xff; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000407332: mov byte ptr [rax + 1], dh; ret; 
0x0000000000407331: mov byte ptr [rax + 1], sil; ret; 
0x000000000044f09b: mov byte ptr [rax + 2], 0xbf; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004317c4: mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c04: mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x00000000004320b4: mov byte ptr [rax + r12], r13b; pop r13; pop r12; pop rbx; ret; 
0x000000000043cf7d: mov byte ptr [rax + r13], r12b; pop r13; pop r12; pop rbx; ret; 
0x000000000043b53b: mov byte ptr [rax + rax], al; call qword ptr [rax + 0x38]; 
0x000000000043b54b: mov byte ptr [rax + rax], al; call qword ptr [rax + 0x38]; 
0x000000000043cf7e: mov byte ptr [rax + rbp], ah; pop r13; pop r12; pop rbx; ret; 
0x00000000004039bc: mov byte ptr [rax + rcx*2], 0x83; mov dword ptr [rax + rcx*2], 0xd977f939; xor eax, eax; ret; 
0x0000000000447c8d: mov byte ptr [rax + rdi], 0; ret; 
0x00000000004277f8: mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x000000000042bd4d: mov byte ptr [rax + rdx - 1], 0x2f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004317c5: mov byte ptr [rax + riz], ch; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c05: mov byte ptr [rax + riz], ch; pop r13; pop r12; pop rbx; ret; 
0x00000000004320b5: mov byte ptr [rax + riz], ch; pop r13; pop r12; pop rbx; ret; 
0x000000000043655b: mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044950d: mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2ad: mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004119ba: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000411a7a: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000429bdd: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000429eed: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042bfe2: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042c2ed: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000044d010: mov byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000045126c: mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040ba64: mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041f9dd: mov byte ptr [rax], 0; pop rbx; ret; 
0x0000000000407336: mov byte ptr [rax], 0; ret; 
0x000000000042be34: mov byte ptr [rax], 0x2f; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f82e: mov byte ptr [rax], 0xfe; mov rax, qword ptr [rbx]; mov byte ptr [rax + 1], 0xff; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f4ee: mov byte ptr [rax], 0xff; mov rax, qword ptr [rbx]; mov byte ptr [rax + 1], 0xfe; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417f76: mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000417f6c: mov byte ptr [rax], 1; lea rax, [rip + 0x5097a]; mov byte ptr [rax], 1; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x000000000041b1df: mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b2af: mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b33f: mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b36f: mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040732e: mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x000000000041b20f: mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2df: mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b16f: mov byte ptr [rax], 1; mov eax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000417edf: mov byte ptr [rax], 1; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x000000000041b27f: mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b30f: mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000427b91: mov byte ptr [rax], ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004449ab: mov byte ptr [rax], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000426ea0: mov byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000453683: mov byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000406fb1: mov byte ptr [rax], dl; ret; 
0x0000000000427b90: mov byte ptr [rax], r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004226a0: mov byte ptr [rbx + 0x10], 1; pop rbx; ret; 
0x0000000000404c0c: mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c0b: mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c5f: mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c5e: mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000408d2d: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov r15, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc6: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040ece0: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040edef: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x00000000004313df: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000043e297: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000043e357: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b60: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000044b900: mov byte ptr [rbx + rcx*4 + 0x75], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040e989: mov byte ptr [rbx + rcx*4 + 0x7d], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b04: mov byte ptr [rbx + rcx*4 + 0x7d], cl; nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000433732: mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c4: mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433852: mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000423c54: mov byte ptr [rbx], 0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403d3e: mov byte ptr [rbx], ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004040cc: mov byte ptr [rbx], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041f9b3: mov byte ptr [rbx], al; pop rbx; ret; 
0x0000000000403d3d: mov byte ptr [rbx], r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c459: mov byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x0000000000425af8: mov byte ptr [rcx + rax], bh; ret; 
0x0000000000425af7: mov byte ptr [rcx + rax], dil; ret; 
0x000000000043a9bc: mov byte ptr [rcx + rdx], al; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x00000000004013f4: mov byte ptr [rcx], 0; call 0x17d50; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403a9d: mov byte ptr [rcx], 0x48; add edi, 1; cmp rdx, rdi; ja 0x3a68; xor eax, eax; ret; 
0x0000000000447a7d: mov byte ptr [rcx], 0x80; cmp al, 0x30; add byte ptr [rbp - 0x1d], dh; ret; 
0x00000000004055cc: mov byte ptr [rcx], 0x8b; test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x0000000000452279: mov byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000402372: mov byte ptr [rcx], al; inc rcx; dec rdx; jne 0x2371; ret; 
0x000000000044f52e: mov byte ptr [rcx], bh; add rcx, 1; add rsi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000408e94: mov byte ptr [rcx], ch; ret 0xbf0f; 
0x000000000044f52d: mov byte ptr [rcx], dil; add rcx, 1; add rsi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000402371: mov byte ptr [rcx], r8b; inc rcx; dec rdx; jne 0x2371; ret; 
0x000000000041ba89: mov byte ptr [rdi + rcx], 0x2f; cmp eax, edx; jg 0x1ba70; ret; 
0x00000000004075c6: mov byte ptr [rdi + rcx], dl; shr rsi, 1; cmp eax, 1; jg 0x75b8; ret; 
0x000000000044f87e: mov byte ptr [rdi + rdx + 1], dl; add ecx, 2; cmp eax, ecx; jg 0x4f858; ret; 
0x000000000044f87d: mov byte ptr [rdi + rdx + 1], r10b; add ecx, 2; cmp eax, ecx; jg 0x4f858; ret; 
0x0000000000407506: mov byte ptr [rdi + rdx], cl; shr esi, 1; cmp eax, 1; jg 0x74f8; ret; 
0x00000000004074ce: mov byte ptr [rdi + rdx], cl; shr esi, 3; cmp eax, 1; jg 0x74b8; ret; 
0x000000000040748e: mov byte ptr [rdi + rdx], cl; shr esi, 4; cmp eax, 1; jg 0x7478; ret; 
0x0000000000407590: mov byte ptr [rdi + rdx], cl; shr rsi, 3; cmp eax, 1; jg 0x7578; ret; 
0x0000000000407550: mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7538; ret; 
0x0000000000407660: mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7648; ret; 
0x00000000004181f4: mov byte ptr [rdi - 0x7cb7fffa], dh; ret; 
0x0000000000432086: mov byte ptr [rdi - 3], 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000432483: mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x00000000004324a1: mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x0000000000432673: mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000432691: mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000408e8c: mov byte ptr [rdi], cl; mov edi, 0xbf0f9855; mov byte ptr [r9], r13b; ret 0xbf0f; 
0x00000000004341dd: mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x000000000043420d: mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x0000000000432654: mov byte ptr [rdi], dl; movsx eax, dl; ret; 
0x0000000000432464: mov byte ptr [rdi], dl; movzx eax, dl; ret; 
0x000000000041ec37: mov byte ptr [rdx + rax], ch; add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000041ed4b: mov byte ptr [rdx + rax], ch; add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000043a926: mov byte ptr [rdx + rax], cl; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000041ec36: mov byte ptr [rdx + rax], r13b; add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000041ed4a: mov byte ptr [rdx + rax], r13b; add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x0000000000404cf0: mov byte ptr [rdx + rcx], al; cmp rax, rcx; jg 0x4ce0; ret; 
0x0000000000404d20: mov byte ptr [rdx + rcx], al; cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404d50: mov byte ptr [rdx + rcx], al; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000404d80: mov byte ptr [rdx + rcx], al; cmp rax, rcx; jg 0x4d70; ret; 
0x0000000000404cef: mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4ce0; ret; 
0x0000000000404d1f: mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404d4f: mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000404d7f: mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d70; ret; 
0x00000000004512e7: mov byte ptr [rdx], 0; mov rdx, qword ptr [rsp]; add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000044f577: mov byte ptr [rdx], 0x48; add ecx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x00000000004038b7: mov byte ptr [rdx], 0x48; add edi, 2; cmp rcx, rdi; ja 0x3890; xor eax, eax; ret; 
0x000000000041135f: mov byte ptr [rdx], 0x48; cmp eax, edx; jg 0x11310; ret; 
0x000000000044f536: mov byte ptr [rdx], 0x48; cmp edx, ecx; ja 0x4f518; ret; 
0x000000000040aa48: mov byte ptr [rdx], 0xa; cmp byte ptr [rdi], 0; jne 0xaa5c; mov rax, rcx; ret; 
0x000000000045bb38: mov byte ptr [rdx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000402073: mov byte ptr [rdx], al; inc rdx; dec r8; jne 0x2070; ret; 
0x00000000004021e9: mov byte ptr [rdx], al; jne 0x21e0; ret; 
0x0000000000425437: mov byte ptr [rdx], al; lea rax, [rip + 0x4c4f0]; movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x0000000000424fd5: mov byte ptr [rdx], al; mov byte ptr [rip + 0x4c9a3], bl; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004554fb: mov byte ptr [rip + 0x233ee], 4; and eax, 0xff; pop rbx; ret; 
0x0000000000424fd7: mov byte ptr [rip + 0x4c9a3], bl; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000426dbc: mov byte ptr [rip + 0x5e9dd], 0; ret; 
0x0000000000426db4: mov byte ptr [rip + 0x5e9e5], 1; ret; 
0x0000000000425124: mov byte ptr [rip + 0x5ff56], dl; mov rdi, rax; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x00000000004250a3: mov byte ptr [rip + 0x5ffd6], 0xff; cmp edx, ecx; jg 0x25020; pop rbx; ret; 
0x00000000004243e1: mov byte ptr [rip + 0x60a49], al; lea rsp, [rsp + 8]; ret; 
0x000000000041d874: mov byte ptr [rsi + 6], dl; add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000040aa45: mov byte ptr [rsi], 0; mov byte ptr [rdx], 0xa; cmp byte ptr [rdi], 0; jne 0xaa5c; mov rax, rcx; ret; 
0x000000000040471f: mov byte ptr [rsi], cl; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040485f: mov byte ptr [rsi], cl; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x000000000040469f: mov byte ptr [rsi], dl; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d7: mov byte ptr [rsi], dl; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040469e: mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d6: mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040471e: mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040485e: mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000406634: mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404bb7: mov byte ptr [rsp + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c256: mov byte ptr [rsp + rdi*8], 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041ff56: mov byte ptr [rsp], 0x20; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fc72: mov byte ptr [rsp], al; add qword ptr [rbx + 0x18], 1; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040c4ae: mov byte ptr [rsp], bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000439a4b: mov byte ptr [rsp], bl; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a7b: mov byte ptr [rsp], bl; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000403d91: mov byte ptr [rsp], bl; pop r13; pop r12; pop rbx; ret; 
0x000000000044f52c: mov byte ptr ds:[rcx], dil; add rcx, 1; add rsi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000414cd7: mov ch, 0x3b; add eax, 0x38b70f00; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000409482: mov ch, 0x41; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000423ec7: mov ch, 0x4c; add al, 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423a47: mov ch, 0x62; add al, 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b6e7: mov ch, 0xa5; add al, byte ptr [rax]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004191a7: mov ch, 9; add eax, 0x648d4800; and al, 8; ret; 
0x00000000004344fe: mov ch, bh; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043c8bf: mov ch, bh; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8be: mov ch, bh; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000418df2: mov ch, byte ptr [rbx + 0x3a8b0006]; call rax; 
0x00000000004026a4: mov cl, 0x37; ret; 
0x0000000000402716: mov cl, 0x37; ret; 
0x000000000044a0bb: mov cl, 0x56; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004583bb: mov cl, 0xa6; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045734b: mov cl, 0xaa; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045724b: mov cl, 0xab; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b30b: mov cl, 0xd5; add al, 0; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b20b: mov cl, 0xd6; add al, 0; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041cb78: mov cl, 0xd7; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x0000000000430961: mov cl, 0xfd; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000411a24: mov cl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x000000000045907f: mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000459095: mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000044f591: mov cl, 4; add byte ptr [rax], al; ret; 
0x00000000004074ca: mov cl, byte ptr [r8 + rcx]; mov byte ptr [rdi + rdx], cl; shr esi, 3; cmp eax, 1; jg 0x74b8; ret; 
0x000000000040748a: mov cl, byte ptr [r8 + rcx]; mov byte ptr [rdi + rdx], cl; shr esi, 4; cmp eax, 1; jg 0x7478; ret; 
0x000000000040758c: mov cl, byte ptr [r8 + rcx]; mov byte ptr [rdi + rdx], cl; shr rsi, 3; cmp eax, 1; jg 0x7578; ret; 
0x000000000040754c: mov cl, byte ptr [r8 + rcx]; mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7538; ret; 
0x000000000040765c: mov cl, byte ptr [r8 + rcx]; mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7648; ret; 
0x00000000004074cb: mov cl, byte ptr [rax + rcx]; mov byte ptr [rdi + rdx], cl; shr esi, 3; cmp eax, 1; jg 0x74b8; ret; 
0x000000000040748b: mov cl, byte ptr [rax + rcx]; mov byte ptr [rdi + rdx], cl; shr esi, 4; cmp eax, 1; jg 0x7478; ret; 
0x000000000040758d: mov cl, byte ptr [rax + rcx]; mov byte ptr [rdi + rdx], cl; shr rsi, 3; cmp eax, 1; jg 0x7578; ret; 
0x000000000040754d: mov cl, byte ptr [rax + rcx]; mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7538; ret; 
0x000000000040765d: mov cl, byte ptr [rax + rcx]; mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7648; ret; 
0x000000000042fcc0: mov dh, 0; add byte ptr [rax - 0x7d], cl; call 0x649044cb; and al, 8; ret; 
0x000000000042bea1: mov dh, 0; lea rdx, [rip + 0x3cc46]; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x000000000042545d: mov dh, 0; or eax, 8; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x00000000004338ee: mov dh, 0x10; lea rsi, [rdx + 1]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000040b045: mov dh, 0x12; sub rcx, rdx; mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x0000000000404a42: mov dh, 0x14; adc byte ptr [rbx - 0x49f0f019], al; add al, 0x38; add eax, edx; and eax, 0xff; ret; 
0x0000000000433046: mov dh, 0x1f; add byte ptr [rax], al; movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043243c: mov dh, 0x30; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323ec: mov dh, 0x30; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000043240c: mov dh, 0x30; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x00000000004458ac: mov dh, 0x30; lea rdi, [rax + 1]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000445919: mov dh, 0x30; lea rdi, [rax + 1]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad6: mov dh, 0x37; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x0000000000425441: mov dh, 0x38; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000043824e: mov dh, 0x40; add al, 0x89; ret 0x8948; 
0x0000000000445342: mov dh, 0x40; add ecx, dword ptr [rax - 0x77]; ret 0x20b9; 
0x0000000000445312: mov dh, 0x40; sbb byte ptr [rax - 0x77], cl; ret 0x20b9; 
0x000000000042e348: mov dh, 0x44; add bh, bh; ret; 
0x00000000004080b7: mov dh, 0x45; movabs al, byte ptr [0x2900000001bae0d1]; ret 0x8966; 
0x00000000004125ad: mov dh, 0x46; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x00000000004321c6: mov dh, 0x46; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432066: mov dh, 0x47; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b402: mov dh, 0x4c; add bh, bh; bt dword ptr [rsp], ecx; jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x000000000045c116: mov dh, 0x4c; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453d06: mov dh, 0x4d; add byte ptr [rax], al; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045c0e6: mov dh, 0x4d; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c46: mov dh, 0x4e; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d16: mov dh, 0x4e; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431bc6: mov dh, 0x4f; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041450f: mov dh, 0x50; add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x0000000000416e6c: mov dh, 0x52; add dword ptr [rax - 0x73], ecx; add al, 0x11; ret; 
0x0000000000459ad9: mov dh, 0x52; add ecx, dword ptr [rcx]; ror byte ptr [rcx + 0x648d4806], 1; and al, 8; ret; 
0x000000000041dc1d: mov dh, 0x55; add byte ptr [rax + 0x63], cl; ret; 
0x000000000041dd1d: mov dh, 0x55; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000411c80: mov dh, 0x55; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x000000000045c9a6: mov dh, 0x55; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431896: mov dh, 0x55; std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044465b: mov dh, 0x84; and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x1c75; 
0x00000000004479a6: mov dh, 0xc0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432467: mov dh, 0xc2; ret; 
0x00000000004073ee: mov dh, 0xc7; add eax, 0x20; jmp 0x73f8; mov al, dil; and eax, 0xff; ret; 
0x0000000000404e02: mov dh, 0xc7; shr eax, 4; and eax, 0xff; ret; 
0x000000000040736e: mov dh, 0xc7; sub eax, 0x20; jmp 0x7378; mov al, dil; and eax, 0xff; ret; 
0x00000000004075c4: mov dh, 0xc8; mov byte ptr [rdi + rcx], dl; shr rsi, 1; cmp eax, 1; jg 0x75b8; ret; 
0x0000000000447116: mov dh, 0xca; lea rax, [rip + 0x2eb81]; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004470d6: mov dh, 0xca; lea rax, [rip + 0x2ebc1]; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x000000000041ba87: mov dh, 0xca; mov byte ptr [rdi + rcx], 0x2f; cmp eax, edx; jg 0x1ba70; ret; 
0x0000000000433022: mov dh, 0xce; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433232: mov dh, 0xce; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433412: mov dh, 0xce; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433622: mov dh, 0xce; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fc2: mov dh, 0xce; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d2: mov dh, 0xce; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b2: mov dh, 0xce; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c2: mov dh, 0xce; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433002: mov dh, 0xce; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433212: mov dh, 0xce; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f2: mov dh, 0xce; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433602: mov dh, 0xce; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000040ab3d: mov dh, 0xd1; cmp byte ptr [rdi + rdx], 0x30; je 0xab30; mov rax, rcx; ret; 
0x000000000040d69c: mov dh, 0xd4; call 0x3460; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b042: mov dh, 0xe; movzx edx, byte ptr [rdx]; sub rcx, rdx; mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x000000000043a7af: mov dh, 0xf0; mov rdi, qword ptr [rsp]; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x0000000000416bfc: mov dh, 0xf3; mov edx, 1; call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042f2f1: mov dh, 0xf4; call 0x2f330; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd71: mov dh, 0xf4; call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042552f: mov dh, 0xf8; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425463: mov dh, 0xf8; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000425484: mov dh, 0xf8; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000425b6c: mov dh, 0xfb; call 0x25ac0; pop rbx; ret; 
0x0000000000416a59: mov dh, 0xfb; mov edx, 1; call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045849a: mov dh, 1; add byte ptr [rax], al; call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000450876: mov dh, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321e6: mov dh, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318f6: mov dh, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x000000000041e643: mov dh, 4; and al, 0x89; ret; 
0x000000000041e6e3: mov dh, 4; and al, 0x89; ret; 
0x000000000043cf26: mov dh, 4; and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000431733: mov dh, 4; and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000431b73: mov dh, 4; and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000432023: mov dh, 4; and ecx, dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000404a49: mov dh, 4; cmp byte ptr [rcx], al; shl byte ptr [rip + 0xff], 1; ret; 
0x0000000000432371: mov dh, 7; cvtsi2sd xmm0, eax; ret; 
0x0000000000432421: mov dh, 7; cvtsi2ss xmm0, eax; ret; 
0x0000000000433691: mov dh, 7; ret; 
0x0000000000456512: mov dh, ah; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x000000000042c764: mov dh, bh; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c6dc: mov dh, bh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004336b2: mov dh, byte ptr [rax]; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000041cb2b: mov dl, 0xd7; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x0000000000424336: mov dl, 0xd7; add byte ptr [rax], al; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x000000000041c99f: mov dl, 0xd7; add byte ptr [rax], al; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000044fa5e: mov dl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa7e: mov dl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004308e7: mov dl, 0xfd; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004118a6: mov dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000411964: mov dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x00000000004117b6: mov dl, 1; call 0xd950; pop rbx; ret; 
0x000000000042304c: mov dl, 1; call 0xd950; pop rbx; ret; 
0x00000000004341da: mov dl, byte ptr [rdx + rcx]; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x000000000043420a: mov dl, byte ptr [rdx + rcx]; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x34200; ret; 
0x000000000043bab6: mov dl, dh; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043bab5: mov dl, sil; lea rsi, [rip + 0x25aa9]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000429c58: mov dword ptr [r12], 0x89480000; fucompi st(0); mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000429ce8: mov dword ptr [r12], 0x89480000; fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x000000000042c058: mov dword ptr [r12], 0x89480000; fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0e8: mov dword ptr [r12], 0x89480000; fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000045867d: mov dword ptr [r12], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458aff: mov dword ptr [r12], edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414b2e: mov dword ptr [r13 + 0x10], ebx; pop r13; pop r12; pop rbx; ret; 
0x000000000044411f: mov dword ptr [r13], eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d55: mov dword ptr [r13], edi; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x000000000045395c: mov dword ptr [r8], edx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045becc: mov dword ptr [r8], edx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000041d78c: mov dword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x000000000041d794: mov dword ptr [rax + 0x20], 0; ret; 
0x000000000041d784: mov dword ptr [rax + 0x28], esi; mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x000000000041d808: mov dword ptr [rax + 0x374], edx; ret; 
0x0000000000426b8e: mov dword ptr [rax + 0x40], edx; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000426b99: mov dword ptr [rax + 0x48], edx; ret; 
0x000000000043a5b9: mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000426b43: mov dword ptr [rax + 4], 0xd7b0; ret; 
0x0000000000459fc1: mov dword ptr [rax + 4], 0xd7b0; ret; 
0x0000000000459fcf: mov dword ptr [rax + 4], 0xd7b0; ret; 
0x0000000000459fd7: mov dword ptr [rax + 4], 0xd7b0; ret; 
0x00000000004051a3: mov dword ptr [rax + 4], esi; ret; 
0x000000000043650d: mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494bd: mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b25d: mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004365ed: mov dword ptr [rax + 8], 0xffffffff; mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041480f: mov dword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040a012: mov dword ptr [rax + 8], edx; lea rsp, [rsp + 0x28]; ret; 
0x000000000045b950: mov dword ptr [rax + 8], edx; mov byte ptr [rax + 0x17], 1; mov byte ptr [rax + 0x16], 0; ret; 
0x000000000041d788: mov dword ptr [rax + 8], edx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000406848: mov dword ptr [rax + 8], edx; ret; 
0x0000000000406878: mov dword ptr [rax + 8], edx; ret; 
0x000000000045b8fe: mov dword ptr [rax + 8], edx; ret; 
0x000000000045b8fd: mov dword ptr [rax + 8], edx; ret; 
0x000000000045b91e: mov dword ptr [rax + 8], edx; ret; 
0x000000000045b91d: mov dword ptr [rax + 8], edx; ret; 
0x00000000004317f6: mov dword ptr [rax + r12*2], r13d; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c36: mov dword ptr [rax + r12*2], r13d; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e6: mov dword ptr [rax + r12*2], r13d; pop r13; pop r12; pop rbx; ret; 
0x00000000004404af: mov dword ptr [rax + r13*2], r12d; pop r13; pop r12; pop rbx; ret; 
0x00000000004404b0: mov dword ptr [rax + rbp*2], esp; pop r13; pop r12; pop rbx; ret; 
0x00000000004039c0: mov dword ptr [rax + rcx*2], 0xd977f939; xor eax, eax; ret; 
0x0000000000403694: mov dword ptr [rax + rcx*2], 0xf577f839; ret; 
0x0000000000449b9d: mov dword ptr [rax + rdx*2], ecx; add rdx, 1; cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x00000000004317f7: mov dword ptr [rax + riz*2], ebp; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c37: mov dword ptr [rax + riz*2], ebp; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e7: mov dword ptr [rax + riz*2], ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000040d9b9: mov dword ptr [rax - 0x18], esi; jmp 0xd9c9; and esi, 0xffff; call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x0000000000450b5c: mov dword ptr [rax], 0; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000423e9b: mov dword ptr [rax], 0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004087b2: mov dword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004150dd: mov dword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000452e8f: mov dword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004181ae: mov dword ptr [rax], 0; mov rax, rbx; call rax; 
0x0000000000403c25: mov dword ptr [rax], 0; pop r13; pop r12; pop rbx; ret; 
0x0000000000407914: mov dword ptr [rax], 0; ret; 
0x000000000040794f: mov dword ptr [rax], 0; ret; 
0x0000000000415363: mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041dca2: mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041ddb6: mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x0000000000422542: mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000042264e: mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041cc82: mov dword ptr [rax], 0x6eb0067; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc82: mov dword ptr [rax], 0x6eb0067; mov rdi, rbx; call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x000000000041bcdd: mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041bd2d: mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041bef0: mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x00000000004216cb: mov dword ptr [rax], 0x8d480064; and al, 0x10; pop rbx; ret; 
0x000000000042147c: mov dword ptr [rax], 0x8d480065; and al, 0x10; pop rbx; ret; 
0x0000000000421983: mov dword ptr [rax], 0x8d480067; and al, 8; pop r12; pop rbx; ret; 
0x000000000041b3cd: mov dword ptr [rax], 1; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x0000000000419696: mov dword ptr [rax], eax; mov rax, rsi; ret; 
0x0000000000407928: mov dword ptr [rax], eax; ret; 
0x0000000000429c99: mov dword ptr [rax], ebp; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429d29: mov dword ptr [rax], ebp; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429db9: mov dword ptr [rax], ebp; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c099: mov dword ptr [rax], ebp; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c129: mov dword ptr [rax], ebp; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c1b9: mov dword ptr [rax], ebp; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000428476: mov dword ptr [rax], ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000042a64a: mov dword ptr [rax], ebp; pop r13; pop r12; pop rbx; ret; 
0x0000000000402a43: mov dword ptr [rax], ebx; pop rbx; ret; 
0x000000000041a9c4: mov dword ptr [rax], ebx; pop rbx; ret; 
0x000000000040783d: mov dword ptr [rax], ecx; mov qword ptr [rsi], 0; ret; 
0x0000000000407837: mov dword ptr [rax], edi; jmp 0x783f; mov ecx, dword ptr [rsi]; mov dword ptr [rax], ecx; mov qword ptr [rsi], 0; ret; 
0x0000000000407815: mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x000000000040789d: mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x0000000000419337: mov dword ptr [rax], edi; ret; 
0x000000000045395d: mov dword ptr [rax], edx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045becd: mov dword ptr [rax], edx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x0000000000401058: mov dword ptr [rax], edx; jmp 0x1000; ret; 
0x0000000000456949: mov dword ptr [rax], edx; lea rsp, [rsp + 8]; ret; 
0x000000000040a00a: mov dword ptr [rax], edx; mov dx, word ptr [rsp + 0x18]; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x00000000004189ae: mov dword ptr [rax], edx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004189ae: mov dword ptr [rax], edx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; pop rbx; ret; 
0x0000000000418a00: mov dword ptr [rax], edx; pop rbx; ret; 
0x0000000000406b22: mov dword ptr [rax], edx; ret; 
0x0000000000406b71: mov dword ptr [rax], edx; ret; 
0x0000000000406bc4: mov dword ptr [rax], edx; ret; 
0x0000000000406deb: mov dword ptr [rax], edx; ret; 
0x0000000000406dea: mov dword ptr [rax], edx; ret; 
0x0000000000406e16: mov dword ptr [rax], edx; ret; 
0x0000000000406e15: mov dword ptr [rax], edx; ret; 
0x0000000000406e47: mov dword ptr [rax], edx; ret; 
0x0000000000406e46: mov dword ptr [rax], edx; ret; 
0x00000000004051d3: mov dword ptr [rax], esi; ret; 
0x0000000000432104: mov dword ptr [rax], esi; ret; 
0x000000000040e6a6: mov dword ptr [rax], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e6a5: mov dword ptr [rax], r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000429c98: mov dword ptr [rax], r13d; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429d28: mov dword ptr [rax], r13d; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429db8: mov dword ptr [rax], r13d; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c098: mov dword ptr [rax], r13d; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c128: mov dword ptr [rax], r13d; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c1b8: mov dword ptr [rax], r13d; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000428475: mov dword ptr [rax], r13d; pop r13; pop r12; pop rbx; ret; 
0x000000000042a649: mov dword ptr [rax], r13d; pop r13; pop r12; pop rbx; ret; 
0x0000000000407927: mov dword ptr [rax], r8d; ret; 
0x0000000000414b2f: mov dword ptr [rbp + 0x10], ebx; pop r13; pop r12; pop rbx; ret; 
0x0000000000426e03: mov dword ptr [rbp + 0x18], eax; mov rsp, rbp; pop rbp; ret; 
0x00000000004304fa: mov dword ptr [rbp + 0x31], 0xc03145c9; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430597: mov dword ptr [rbp + 0x31], 0xc03145c9; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306b7: mov dword ptr [rbp + 0x31], 0xc03145c9; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000401069: mov dword ptr [rbp - 4], edi; lea rax, [rip + 0x8198d]; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x000000000045c9d3: mov dword ptr [rbp - 6], edx; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000406760: mov dword ptr [rbp - 8], eax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d7e: mov dword ptr [rbp - 8], eax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414b2b: mov dword ptr [rbp], eax; mov dword ptr [r13 + 0x10], ebx; pop r13; pop r12; pop rbx; ret; 
0x0000000000444120: mov dword ptr [rbp], eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d56: mov dword ptr [rbp], edi; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x000000000045021a: mov dword ptr [rbx + 0x10], 0xffffffff; call 0x2750; mov eax, dword ptr [rip + 0x28334]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x000000000043cfde: mov dword ptr [rbx + 0x10], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044050e: mov dword ptr [rbx + 0x10], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cfdd: mov dword ptr [rbx + 0x10], r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044050d: mov dword ptr [rbx + 0x10], r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004206d3: mov dword ptr [rbx + 0x18], 0; pop r13; pop r12; pop rbx; ret; 
0x000000000041c50a: mov dword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041c56f: mov dword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x00000000004192f9: mov dword ptr [rbx + 0x1c], 0; mov dword ptr [rbx + 0x20], 0; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x0000000000419300: mov dword ptr [rbx + 0x20], 0; mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x000000000041c506: mov dword ptr [rbx + 0x20], eax; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x0000000000419307: mov dword ptr [rbx + 0x24], 0; pop rbx; ret; 
0x0000000000426bb8: mov dword ptr [rbx + 0x30], eax; pop rbx; ret; 
0x00000000004208fc: mov dword ptr [rbx + 0x374], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041caa5: mov dword ptr [rbx + 0x374], edx; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x00000000004073ef: mov dword ptr [rbx + 0x3eb20c0], 0x25f88840; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000040736f: mov dword ptr [rbx + 0x3eb20e8], 0x25f88840; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000041c677: mov dword ptr [rbx + 0x40], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209ce: mov dword ptr [rbx + 0x40], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a20: mov dword ptr [rbx + 0x40], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b90: mov dword ptr [rbx + 0x40], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042096e: mov dword ptr [rbx + 0x40], eax; pop r13; pop r12; pop rbx; ret; 
0x000000000041a65a: mov dword ptr [rbx + 0x98], eax; pop rbx; ret; 
0x0000000000420d76: mov dword ptr [rbx + 4], 0xd7b0; pop rbx; ret; 
0x000000000045022c: mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000421094: mov dword ptr [rbx + 8], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421189: mov dword ptr [rbx + 8], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456bd0: mov dword ptr [rbx + riz*8], esi; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456c32: mov dword ptr [rbx + riz*8], esi; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000412ff7: mov dword ptr [rbx], 0; pop rbx; ret; 
0x0000000000454b71: mov dword ptr [rbx], 0; pop rbx; ret; 
0x0000000000420d70: mov dword ptr [rbx], 0xffffffff; mov dword ptr [rbx + 4], 0xd7b0; pop rbx; ret; 
0x000000000041c4db: mov dword ptr [rbx], 0xffffffff; pop rbx; ret; 
0x000000000042135d: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421392: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213bc: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213f2: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215ad: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215e2: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042160c: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421642: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447996: mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040cd06: mov dword ptr [rbx], eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000414e5e: mov dword ptr [rbx], eax; pop rbx; ret; 
0x000000000041908e: mov dword ptr [rbx], eax; pop rbx; ret; 
0x00000000004586ac: mov dword ptr [rbx], eax; pop rbx; ret; 
0x0000000000455925: mov dword ptr [rbx], edx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000040bb23: mov dword ptr [rbx], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e16e: mov dword ptr [rbx], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413050: mov dword ptr [rbx], esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a5d6: mov dword ptr [rbx], esp; mov rax, qword ptr [rbx]; pop r13; pop r12; pop rbx; ret; 
0x0000000000411c22: mov dword ptr [rbx], esp; pop r13; pop r12; pop rbx; ret; 
0x00000000004193ac: mov dword ptr [rcx + 0x18], edx; ret; 
0x0000000000419692: mov dword ptr [rcx + 0x20], eax; mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x000000000043978e: mov dword ptr [rcx + 0xffe2], 0xe6894800; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x000000000041936c: mov dword ptr [rcx + 8], edx; ret; 
0x0000000000447c80: mov dword ptr [rcx], 0x3e3c80; je 0x47c8d; cmp rdx, rdi; jg 0x47c78; mov byte ptr [rax + rdi], 0; ret; 
0x000000000040136b: mov dword ptr [rcx], 0x69dde800; add dword ptr [rax], eax; mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403aa1: mov dword ptr [rcx], 0x77fa3948; sal byte ptr [rcx], 0xc0; ret; 
0x0000000000456ada: mov dword ptr [rcx], 0xffff5fe8; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044f573: mov dword ptr [rcx], edi; add rsi, 2; add rcx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x000000000040293d: mov dword ptr [rdi + 0x30], eax; mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000402945: mov dword ptr [rdi + 0x38], eax; xor eax, eax; ret; 
0x0000000000456d9e: mov dword ptr [rdi + rdx*8], 0xffffffff; cmp eax, 0xf; jl 0x56d98; xor eax, eax; ret; 
0x0000000000456c6e: mov dword ptr [rdi + rdx*8], 0xffffffff; cmp eax, 1; jl 0x56c68; xor eax, eax; ret; 
0x0000000000432a56: mov dword ptr [rdi], eax; and eax, 0xffff; ret; 
0x0000000000432a73: mov dword ptr [rdi], eax; and eax, 0xffff; ret; 
0x0000000000417c80: mov dword ptr [rdi], eax; mov qword ptr [rsi], rdx; ret; 
0x0000000000432866: mov dword ptr [rdi], eax; movsx eax, ax; ret; 
0x0000000000432883: mov dword ptr [rdi], eax; movsx eax, ax; ret; 
0x0000000000432c21: mov dword ptr [rdi], eax; ret; 
0x0000000000432c43: mov dword ptr [rdi], eax; ret; 
0x0000000000432c61: mov dword ptr [rdi], eax; ret; 
0x0000000000432df1: mov dword ptr [rdi], eax; ret; 
0x0000000000432e13: mov dword ptr [rdi], eax; ret; 
0x0000000000432e31: mov dword ptr [rdi], eax; ret; 
0x0000000000432fd0: mov dword ptr [rdi], eax; ret; 
0x0000000000432ff3: mov dword ptr [rdi], eax; ret; 
0x0000000000433010: mov dword ptr [rdi], eax; ret; 
0x00000000004331e0: mov dword ptr [rdi], eax; ret; 
0x0000000000433203: mov dword ptr [rdi], eax; ret; 
0x0000000000433220: mov dword ptr [rdi], eax; ret; 
0x00000000004333c0: mov dword ptr [rdi], eax; ret; 
0x00000000004333e3: mov dword ptr [rdi], eax; ret; 
0x0000000000433400: mov dword ptr [rdi], eax; ret; 
0x00000000004335d0: mov dword ptr [rdi], eax; ret; 
0x00000000004335f3: mov dword ptr [rdi], eax; ret; 
0x0000000000433610: mov dword ptr [rdi], eax; ret; 
0x00000000004035f9: mov dword ptr [rdi], edx; add rdi, 2; cmp rax, rdi; ja 0x35f8; ret; 
0x0000000000403690: mov dword ptr [rdi], edx; add rdi, 4; cmp rax, rdi; ja 0x3690; ret; 
0x00000000004036b1: mov dword ptr [rdi], edx; add rdi, 8; cmp rax, rdi; ja 0x36b0; ret; 
0x00000000004077d6: mov dword ptr [rdi], edx; mov qword ptr [rsi], rax; ret; 
0x0000000000432845: mov dword ptr [rdi], edx; movsx eax, dx; ret; 
0x0000000000432a35: mov dword ptr [rdi], edx; movzx eax, dx; ret; 
0x0000000000419333: mov dword ptr [rdx + 0x20], edi; mov qword ptr [rax], rdi; ret; 
0x00000000004116e3: mov dword ptr [rdx + 0x30], eax; lea rax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000040103a: mov dword ptr [rdx + 0x60], eax; mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000044824b: mov dword ptr [rdx + 0x80], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000419583: mov dword ptr [rdx + 0xa8], eax; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x000000000041972b: mov dword ptr [rdx + 0xa8], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004193b9: mov dword ptr [rdx + 0xa8], eax; ret; 
0x000000000041a037: mov dword ptr [rdx + 0xb8], eax; lea rdi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x00000000004116f5: mov dword ptr [rdx + 0xc0], eax; ret; 
0x0000000000453219: mov dword ptr [rdx + 8], ecx; mov qword ptr [rdx], rbx; mov qword ptr [rip + 0x2568a], rax; pop rbx; ret; 
0x00000000004557a9: mov dword ptr [rdx + rax*8 - 0x20], 0; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x0000000000436506: mov dword ptr [rdx - 0x6c], eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b6: mov dword ptr [rdx - 0x6c], eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b256: mov dword ptr [rdx - 0x6c], eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004364d3: mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000449485: mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b225: mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x00000000004035fd: mov dword ptr [rdx], 0x77f83948; hlt; ret; 
0x0000000000409289: mov dword ptr [rdx], 0xb8660001; add dword ptr [rax], eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000417de3: mov dword ptr [rdx], 0xff250000; inc dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004032c4: mov dword ptr [rdx], eax; and eax, 0xffff; pop rbx; ret; 
0x000000000040330e: mov dword ptr [rdx], eax; and eax, 0xffff; pop rbx; ret; 
0x0000000000418394: mov dword ptr [rdx], eax; call 0x18340; lea rsp, [rsp + 8]; ret; 
0x000000000041b4ef: mov dword ptr [rdx], eax; call 0x1a6e0; pop rbx; ret; 
0x000000000040339c: mov dword ptr [rdx], eax; call 0x33c0; lea rsp, [rsp + 8]; ret; 
0x0000000000404f29: mov dword ptr [rdx], eax; fnclex; fldcw word ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000407dea: mov dword ptr [rdx], eax; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000409ec0: mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000423c73: mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000425602: mov dword ptr [rdx], eax; mov esi, 1; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000458765: mov dword ptr [rdx], eax; mov esi, r8d; mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x000000000040d9db: mov dword ptr [rdx], eax; ret; 
0x000000000040d9eb: mov dword ptr [rdx], eax; ret; 
0x000000000040d9fb: mov dword ptr [rdx], eax; ret; 
0x000000000045321d: mov dword ptr [rdx], ebx; mov qword ptr [rip + 0x2568a], rax; pop rbx; ret; 
0x00000000004029d2: mov dword ptr [rdx], ecx; mov rdi, rax; call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x00000000004087b0: mov dword ptr [rdx], esi; mov dword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000458764: mov dword ptr [rdx], r8d; mov esi, r8d; mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x0000000000453220: mov dword ptr [rip + 0x2568a], eax; pop rbx; ret; 
0x0000000000459dae: mov dword ptr [rip + 0x2bf38], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000423bab: mov dword ptr [rip + 0x44fff], eax; ret; 
0x0000000000423b68: mov dword ptr [rip + 0x461e2], edi; ret; 
0x00000000004189eb: mov dword ptr [rip + 0x5113f], eax; lea rdx, [rip - 0x68]; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000417a48: mov dword ptr [rip + 0x520ce], 0; ret; 
0x0000000000417926: mov dword ptr [rip + 0x521f0], 0x270; ret; 
0x0000000000425afc: mov dword ptr [rip + 0x5fb1e], edx; ret; 
0x0000000000424ec2: mov dword ptr [rip + 0x60314], 0; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000423ba0: mov dword ptr [rip + 0x6127a], edx; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000431f13: mov dword ptr [rip - 0x2b17fffc], edi; insd dword ptr [rdi], dx; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000041927a: mov dword ptr [rsi + 0x20], edx; mov rdi, rbx; mov ecx, 5; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x0000000000456d1e: mov dword ptr [rsi + rdi*8], edx; xor eax, eax; ret; 
0x0000000000456d61: mov dword ptr [rsi + rdi*8], edx; xor eax, eax; ret; 
0x0000000000407949: mov dword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x0000000000407840: mov dword ptr [rsi], 0; ret; 
0x0000000000411359: mov dword ptr [rsi], 0x8348003f; mov byte ptr [rdx], 0x48; cmp eax, edx; jg 0x11310; ret; 
0x0000000000417952: mov dword ptr [rsi], 0x914c8b00; add al, 0x89; ret 0x8d48; 
0x00000000004179ba: mov dword ptr [rsi], 0x914c8b00; add al, 0x89; ret 0x8d48; 
0x000000000040790b: mov dword ptr [rsi], eax; cmp dx, 0x20; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x0000000000459ade: mov dword ptr [rsi], eax; lea rsp, [rsp + 8]; ret; 
0x00000000004077d9: mov dword ptr [rsi], eax; ret; 
0x0000000000419375: mov dword ptr [rsi], eax; ret; 
0x0000000000453967: mov dword ptr [rsi], eax; ret; 
0x000000000045bed7: mov dword ptr [rsi], eax; ret; 
0x0000000000407818: mov dword ptr [rsi], ecx; ret; 
0x00000000004078de: mov dword ptr [rsi], ecx; shr dword ptr [rax], 1; ret; 
0x0000000000407944: mov dword ptr [rsi], edi; jmp 0x794f; mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x0000000000416e65: mov dword ptr [rsi], edx; lea rcx, [rdx + 2]; movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x0000000000417c83: mov dword ptr [rsi], edx; ret; 
0x0000000000432388: mov dword ptr [rsp + 0x10], eax; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432578: mov dword ptr [rsp + 0x10], eax; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432768: mov dword ptr [rsp + 0x10], eax; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432958: mov dword ptr [rsp + 0x10], eax; fild dword ptr [rsp + 0x10]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000424159: mov dword ptr [rsp + 0xa8], eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000443797: mov dword ptr [rsp + 4], eax; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000404eb2: mov dword ptr [rsp + 4], eax; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x00000000004053c7: mov dword ptr [rsp + 4], eax; movsd xmm1, qword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x00000000004067a4: mov dword ptr [rsp + 8], eax; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000043229a: mov dword ptr [rsp + 8], eax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432271: mov dword ptr [rsp + 8], eax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439727: mov dword ptr [rsp + 8], eax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043976a: mov dword ptr [rsp + 8], eax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043222e: mov dword ptr [rsp + 8], eax; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c7: mov dword ptr [rsp + 8], eax; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000044384e: mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000431fb9: mov dword ptr [rsp + 8], edi; mov rdi, rax; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x000000000042de7c: mov dword ptr [rsp + 8], edx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dea9: mov dword ptr [rsp + 8], edx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df7f: mov dword ptr [rsp + 8], edx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004588d6: mov dword ptr [rsp + 8], edx; mov rsi, rsp; call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ef4: mov dword ptr [rsp + 8], edx; mov rsi, rsp; call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x0000000000429c59: mov dword ptr [rsp], 0x89480000; fucompi st(0); mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000429ce9: mov dword ptr [rsp], 0x89480000; fucompi st(0); retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x000000000042c059: mov dword ptr [rsp], 0x89480000; fucompi st(0); sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0e9: mov dword ptr [rsp], 0x89480000; fucompi st(0); sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x0000000000436a41: mov dword ptr [rsp], eax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449ab1: mov dword ptr [rsp], eax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000044b851: mov dword ptr [rsp], eax; call 0x4b700; mov rsp, rbp; pop rbp; ret; 
0x000000000044bedf: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044c5fa: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c86c: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c917: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cbc7: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc67: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd07: mov dword ptr [rsp], eax; lea rsp, [rsp + 0x68]; ret; 
0x000000000045867e: mov dword ptr [rsp], eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042de78: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dea5: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df7b: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443644: mov dword ptr [rsp], eax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000456f64: mov dword ptr [rsp], ebx; mov rdi, rsp; call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432269: mov dword ptr [rsp], ecx; mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000407b56: mov dword ptr [rsp], edi; mov eax, esi; and edx, edx; imul rax, rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004559c8: mov dword ptr [rsp], edi; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004191e6: mov dword ptr [rsp], edi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000458b00: mov dword ptr [rsp], edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432292: mov dword ptr [rsp], edx; mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416979: mov dword ptr [rsp], esi; mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159b9: mov dword ptr [rsp], esi; mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x000000000041676a: mov dword ptr [rsp], esi; mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156ba: mov dword ptr [rsp], esi; mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x000000000041caa1: mov dx, word ptr [rax]; mov word ptr [rbx + 0x374], dx; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x000000000041d804: mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x000000000040a00c: mov dx, word ptr [rsp + 0x18]; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x0000000000409e43: mov eax, 0x1f; sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000445398: mov eax, 0x29000002; ret 0x8941; 
0x00000000004283fe: mov eax, 0x388b0005; call rdx; 
0x0000000000428429: mov eax, 0x388b0005; call rdx; 
0x0000000000428460: mov eax, 0x388b0005; call rdx; 
0x0000000000418105: mov eax, 0x3a8b0006; call rax; 
0x0000000000418135: mov eax, 0x3a8b0006; call rax; 
0x00000000004087d4: mov eax, 0x3f; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e14: mov eax, 0x3f; sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004290e6: mov eax, 0x41000000; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042b314: mov eax, 0x41000000; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004461ac: mov eax, 0x41000001; pop rsp; pop rbx; ret; 
0x000000000041a039: mov eax, 0x48000000; lea edi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x000000000044a260: mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000044a2a3: mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000044a280: mov eax, 0x48000000; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2c3: mov eax, 0x48000000; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004147f4: mov eax, 0x4800003d; lea esp, [rsp + 8]; ret; 
0x0000000000456944: mov eax, 0x480001f5; mov dword ptr [rax], edx; lea rsp, [rsp + 8]; ret; 
0x0000000000414e24: mov eax, 0x480006ff; mov eax, dword ptr [rax]; test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x00000000004574e4: mov eax, 0x48fffaa9; lea esp, [rsp + 8]; ret; 
0x0000000000455b14: mov eax, 0x48fffac4; lea esp, [rsp + 8]; ret; 
0x000000000040a044: mov eax, 0x48ffffdd; mov esp, ebp; pop rbp; ret; 
0x000000000044f140: mov eax, 0x4b0; ret; 
0x000000000044f590: mov eax, 0x4b1; ret; 
0x00000000004484b9: mov eax, 0x50ff0003; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484fb: mov eax, 0x50ff0003; and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044853e: mov eax, 0x50ff0003; and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484d9: mov eax, 0x50ff0003; sbb byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041204d: mov eax, 0x5dec8948; ret; 
0x000000000042e077: mov eax, 0x5dec8948; ret; 
0x000000000042ecd8: mov eax, 0x5dec8948; ret; 
0x00000000004146df: mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a0f: mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000413b80: mov eax, 0x8000ffff; ret; 
0x0000000000459a7c: mov eax, 0x808; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x000000000043020f: mov eax, 0x894cfffd; imul eax; loope 0x30218; dec dword ptr [rax + 0x29]; ret; 
0x000000000041834c: mov eax, 0x8d480000; and al, 8; ret; 
0x00000000004043f1: mov eax, 0x8d480b75; push rax; add cl, byte ptr [rax + 0x39]; bnd jl 0x43ff; xor eax, eax; ret; 
0x0000000000431ee0: mov eax, 0xa; ret; 
0x000000000040928e: mov eax, 0xbf0f0001; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042e0f7: mov eax, 0xc0658b4c; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc15: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc14: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d55b: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d55a: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a91: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a90: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8be: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8bd: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db0c: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db0b: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dee6: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dee5: mov eax, 0xc06d8b4c; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412af9: mov eax, 0xc0758b4c; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000045588a: mov eax, 0xc0758b4c; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fba: mov eax, 0xc0758b4c; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f79e: mov eax, 0xc07d8b4c; mov rsp, rbp; pop rbp; ret; 
0x0000000000443222: mov eax, 0xc07d8b4c; mov rsp, rbp; pop rbp; ret; 
0x000000000040107d: mov eax, 0xe7; mov edi, dword ptr [rbp - 4]; syscall; 
0x000000000040ed64: mov eax, 0xf00073d; mov bh, 0x30; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x0000000000401fa1: mov eax, 0xf; syscall; 
0x0000000000401fa1: mov eax, 0xf; syscall; ret; 
0x000000000040414a: mov eax, 0xffffffff; jmp 0x4153; xor eax, eax; pop rbx; ret; 
0x00000000004550f4: mov eax, 0xffffffff; jmp 0x550ff; mov eax, dword ptr [rsp + 0x58]; lea rsp, [rsp + 0x98]; ret; 
0x000000000041b09b: mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0da: mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b0fa: mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b13a: mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b212: mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2e2: mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x0000000000401e22: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e55: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e88: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ecb: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f0e: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f51: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f95: mov eax, 0xffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000040372d: mov eax, 0xffffffff; ret; 
0x00000000004037ae: mov eax, 0xffffffff; ret; 
0x0000000000403809: mov eax, 0xffffffff; ret; 
0x00000000004038a8: mov eax, 0xffffffff; ret; 
0x0000000000403917: mov eax, 0xffffffff; ret; 
0x00000000004039b3: mov eax, 0xffffffff; ret; 
0x0000000000403a58: mov eax, 0xffffffff; ret; 
0x0000000000403a7c: mov eax, 0xffffffff; ret; 
0x0000000000411aeb: mov eax, 0xffffffff; ret; 
0x000000000042fde9: mov eax, 0xffffffff; ret; 
0x0000000000433b95: mov eax, 0xffffffff; ret; 
0x0000000000434002: mov eax, 0xffffffff; ret; 
0x000000000043404c: mov eax, 0xffffffff; ret; 
0x0000000000434076: mov eax, 0xffffffff; ret; 
0x00000000004340d5: mov eax, 0xffffffff; ret; 
0x0000000000434107: mov eax, 0xffffffff; ret; 
0x0000000000434167: mov eax, 0xffffffff; ret; 
0x0000000000455110: mov eax, 0xffffffff; ret; 
0x00000000004551e0: mov eax, 0xffffffff; ret; 
0x0000000000456cfc: mov eax, 0xffffffff; ret; 
0x0000000000456d3c: mov eax, 0xffffffff; ret; 
0x0000000000456dbe: mov eax, 0xffffffff; ret; 
0x0000000000426bea: mov eax, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c2a: mov eax, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000430342: mov eax, 1; call 0x30360; lea rsp, [rsp + 8]; ret; 
0x0000000000430436: mov eax, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x0000000000434303: mov eax, 1; jmp 0x3430c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434343: mov eax, 1; jmp 0x3434c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434383: mov eax, 1; jmp 0x3438c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343c3: mov eax, 1; jmp 0x343cc; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434403: mov eax, 1; jmp 0x3440c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434443: mov eax, 1; jmp 0x3444c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000045ba36: mov eax, 1; jmp 0x5ba3f; xor eax, eax; lea rsp, [rsp + 0x48]; ret; 
0x000000000041b172: mov eax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000403810: mov eax, 1; ret; 
0x00000000004038af: mov eax, 1; ret; 
0x0000000000403910: mov eax, 1; ret; 
0x00000000004039ac: mov eax, 1; ret; 
0x0000000000403a88: mov eax, 1; ret; 
0x0000000000407351: mov eax, 1; ret; 
0x000000000040dae5: mov eax, 1; ret; 
0x000000000041a890: mov eax, 1; ret; 
0x0000000000432300: mov eax, 1; ret; 
0x00000000004324f0: mov eax, 1; ret; 
0x0000000000433650: mov eax, 1; ret; 
0x00000000004336d0: mov eax, 1; ret; 
0x0000000000433ba0: mov eax, 1; ret; 
0x000000000043400e: mov eax, 1; ret; 
0x0000000000434053: mov eax, 1; ret; 
0x0000000000434082: mov eax, 1; ret; 
0x00000000004340dc: mov eax, 1; ret; 
0x0000000000434113: mov eax, 1; ret; 
0x0000000000434173: mov eax, 1; ret; 
0x0000000000456ddf: mov eax, 1; ret; 
0x0000000000433024: mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433234: mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433414: mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433624: mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fc4: mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d4: mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b4: mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c4: mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433004: mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433214: mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f4: mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433604: mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004326e0: mov eax, 2; ret; 
0x00000000004328d0: mov eax, 2; ret; 
0x0000000000433760: mov eax, 2; ret; 
0x0000000000431670: mov eax, 4; ret; 
0x0000000000432ab0: mov eax, 4; ret; 
0x0000000000432ca0: mov eax, 4; ret; 
0x00000000004337f0: mov eax, 4; ret; 
0x0000000000402e17: mov eax, 8; mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000403012: mov eax, 8; mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ab0: mov eax, 8; ret; 
0x0000000000432e80: mov eax, 8; ret; 
0x0000000000433060: mov eax, 8; ret; 
0x0000000000433270: mov eax, 8; ret; 
0x0000000000433450: mov eax, 8; ret; 
0x000000000044cbc3: mov eax, dword ptr [rax + 0x10]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000041957f: mov eax, dword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x00000000004193b5: mov eax, dword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000044c913: mov eax, dword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000423fa1: mov eax, dword ptr [rax + 0x18]; ret; 
0x000000000044cc63: mov eax, dword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd03: mov eax, dword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000423ba7: mov eax, dword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x000000000041702c: mov eax, dword ptr [rax + 0xc]; ret; 
0x0000000000423f82: mov eax, dword ptr [rax + 2]; jmp 0x23f8a; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000404eae: mov eax, dword ptr [rax + 4]; mov word ptr [rsp + 4], ax; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x0000000000436503: mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x6c], eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b3: mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x6c], eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b253: mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x6c], eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004364d0: mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000449482: mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b222: mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000414e5a: mov eax, dword ptr [rax + 8]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000419371: mov eax, dword ptr [rax + 8]; mov qword ptr [rsi], rax; ret; 
0x000000000044c868: mov eax, dword ptr [rax + 8]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x00000000004149bd: mov eax, dword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149bd: mov eax, dword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000041499d: mov eax, dword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041499d: mov eax, dword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x000000000041497d: mov eax, dword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041497d: mov eax, dword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000432296: mov eax, dword ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043226d: mov eax, dword ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043222a: mov eax, dword ptr [rax + 8]; mov word ptr [rsp + 8], ax; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c3: mov eax, dword ptr [rax + 8]; mov word ptr [rsp + 8], ax; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000044411a: mov eax, dword ptr [rax + rdx*2 - 2]; mov word ptr [r13], ax; pop r13; pop r12; pop rbx; ret; 
0x000000000043ceda: mov eax, dword ptr [rax - 8]; add rax, 1; ret; 
0x000000000044040a: mov eax, dword ptr [rax - 8]; add rax, 1; ret; 
0x000000000043b869: mov eax, dword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b899: mov eax, dword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000042e359: mov eax, dword ptr [rax - 8]; ret; 
0x000000000044c0e9: mov eax, dword ptr [rax - 8]; shl rax, 1; ret; 
0x0000000000459534: mov eax, dword ptr [rax]; add byte ptr [rsi + 0xff], bh; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004365f9: mov eax, dword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040780d: mov eax, dword ptr [rax]; add r8d, r9d; add edi, r8d; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x0000000000417c56: mov eax, dword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x000000000042547d: mov eax, dword ptr [rax]; and ax, 0x77; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000412ff1: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041304a: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004130ad: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131ad: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149c1: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149c1: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x00000000004130ad: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004131ad: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000412ff1: mov eax, dword ptr [rax]; call qword ptr [rax + 0x10]; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000413698: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413736: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000414931: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c71e: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c897: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca78: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbe6: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd2b: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce7d: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc4e: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc7: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa8: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440116: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044025b: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403ad: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e72c: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e884: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea1e: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee42: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efd2: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e9: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f986: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbec: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451626: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004517e7: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451939: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b0a: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c6c: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451e45: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451faf: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452188: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452599: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413736: mov eax, dword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x000000000044c699: mov eax, dword ptr [rax]; call qword ptr [rax + 0xe8]; lea rsp, [rsp + 8]; ret; 
0x0000000000413011: mov eax, dword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041431d: mov eax, dword ptr [rax]; call qword ptr [rax + 8]; 
0x00000000004149a1: mov eax, dword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000413011: mov eax, dword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x00000000004149a1: mov eax, dword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x000000000041308c: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x00000000004130df: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000413172: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x000000000041321f: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x000000000041326f: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x000000000041330b: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x00000000004133bf: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x000000000041341f: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x00000000004134cb: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000414981: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000450b94: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000450be0: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000450c53: mov eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000414981: mov eax, dword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040dafd: mov eax, dword ptr [rax]; jmp 0xdb0b; lea rdx, [rip + 0x75038]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000402a15: mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414a46: mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000417e2d: mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000436559: mov eax, dword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044950b: mov eax, dword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2ab: mov eax, dword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000407920: mov eax, dword ptr [rax]; mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x000000000041a657: mov eax, dword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x000000000044c5f7: mov eax, dword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000443641: mov eax, dword ptr [rax]; mov qword ptr [rsp], rax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041356c: mov eax, dword ptr [rax]; ret; 
0x000000000041358a: mov eax, dword ptr [rax]; ret; 
0x000000000041359c: mov eax, dword ptr [rax]; ret; 
0x000000000041386c: mov eax, dword ptr [rax]; ret; 
0x0000000000416e3c: mov eax, dword ptr [rax]; ret; 
0x0000000000423bf7: mov eax, dword ptr [rax]; sub eax, 1; ret; 
0x000000000041146c: mov eax, dword ptr [rax]; test rax, rax; je 0x11483; lea rdx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d3: mov eax, dword ptr [rax]; test rax, rax; je 0x114ea; lea rdx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041150b: mov eax, dword ptr [rax]; test rax, rax; je 0x11522; lea rdx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000414a2d: mov eax, dword ptr [rax]; test rax, rax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000414a59: mov eax, dword ptr [rax]; test rax, rax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414aad: mov eax, dword ptr [rax]; test rax, rax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414b05: mov eax, dword ptr [rax]; test rax, rax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414b6a: mov eax, dword ptr [rax]; test rax, rax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414c6d: mov eax, dword ptr [rax]; test rax, rax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414d06: mov eax, dword ptr [rax]; test rax, rax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414d35: mov eax, dword ptr [rax]; test rax, rax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d69: mov eax, dword ptr [rax]; test rax, rax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d8f: mov eax, dword ptr [rax]; test rax, rax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414dbc: mov eax, dword ptr [rax]; test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414e29: mov eax, dword ptr [rax]; test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414e80: mov eax, dword ptr [rax]; test rax, rax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414ec2: mov eax, dword ptr [rax]; test rax, rax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414f2d: mov eax, dword ptr [rax]; test rax, rax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414fb9: mov eax, dword ptr [rax]; test rax, rax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414fe6: mov eax, dword ptr [rax]; test rax, rax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000415033: mov eax, dword ptr [rax]; test rax, rax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x000000000041509d: mov eax, dword ptr [rax]; test rax, rax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x00000000004150c4: mov eax, dword ptr [rax]; test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415140: mov eax, dword ptr [rax]; test rax, rax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004152a5: mov eax, dword ptr [rax]; test rax, rax; je 0x152b9; lea rdx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415343: mov eax, dword ptr [rax]; test rax, rax; je 0x15357; lea rdx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d65: mov eax, dword ptr [rax]; test rax, rax; je 0x17d79; lea rdx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dbd: mov eax, dword ptr [rax]; test rax, rax; je 0x17dd4; lea rdx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e0d: mov eax, dword ptr [rax]; test rax, rax; je 0x17e21; lea rdx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb4: mov eax, dword ptr [rax]; test rax, rax; je 0x17ec8; lea rdx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041806c: mov eax, dword ptr [rax]; test rax, rax; je 0x18083; lea rdx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041809b: mov eax, dword ptr [rax]; test rax, rax; je 0x180af; lea rdx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180cb: mov eax, dword ptr [rax]; test rax, rax; je 0x180e2; lea rdx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180fa: mov eax, dword ptr [rax]; test rax, rax; je 0x1810e; lea rdx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041812a: mov eax, dword ptr [rax]; test rax, rax; je 0x18141; lea rdx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418178: mov eax, dword ptr [rax]; test rax, rax; je 0x1818c; lea rdx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181da: mov eax, dword ptr [rax]; test rax, rax; je 0x181f1; lea rdx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418206: mov eax, dword ptr [rax]; test rax, rax; je 0x1821a; lea rdx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004184f4: mov eax, dword ptr [rax]; test rax, rax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x0000000000418d4b: mov eax, dword ptr [rax]; test rax, rax; je 0x18d62; lea rdx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418de8: mov eax, dword ptr [rax]; test rax, rax; je 0x18dff; lea rdx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e17: mov eax, dword ptr [rax]; test rax, rax; je 0x18e2e; lea rdx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ebb: mov eax, dword ptr [rax]; test rax, rax; je 0x18ed2; lea rdx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eef: mov eax, dword ptr [rax]; test rax, rax; je 0x18f06; lea rdx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f27: mov eax, dword ptr [rax]; test rax, rax; je 0x18f3e; lea rdx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f8e: mov eax, dword ptr [rax]; test rax, rax; je 0x18fa5; lea rdx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041924c: mov eax, dword ptr [rax]; test rax, rax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x000000000041929c: mov eax, dword ptr [rax]; test rax, rax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419d04: mov eax, dword ptr [rax]; test rax, rax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419e3d: mov eax, dword ptr [rax]; test rax, rax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x000000000041a1bb: mov eax, dword ptr [rax]; test rax, rax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x000000000041a462: mov eax, dword ptr [rax]; test rax, rax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x000000000041a625: mov eax, dword ptr [rax]; test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a682: mov eax, dword ptr [rax]; test rax, rax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a70d: mov eax, dword ptr [rax]; test rax, rax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a77b: mov eax, dword ptr [rax]; test rax, rax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a8de: mov eax, dword ptr [rax]; test rax, rax; je 0x1a8f2; lea rdx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a915: mov eax, dword ptr [rax]; test rax, rax; je 0x1a929; lea rdx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a947: mov eax, dword ptr [rax]; test rax, rax; je 0x1a95b; lea rdx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a971: mov eax, dword ptr [rax]; test rax, rax; je 0x1a985; lea rdx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a4: mov eax, dword ptr [rax]; test rax, rax; je 0x1a9b8; lea rdx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa15: mov eax, dword ptr [rax]; test rax, rax; je 0x1aa29; lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afad: mov eax, dword ptr [rax]; test rax, rax; je 0x1afc4; lea rdx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b014: mov eax, dword ptr [rax]; test rax, rax; je 0x1b02b; lea rdx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b04c: mov eax, dword ptr [rax]; test rax, rax; je 0x1b063; lea rdx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3ad: mov eax, dword ptr [rax]; test rax, rax; je 0x1b3c1; lea rdx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b77d: mov eax, dword ptr [rax]; test rax, rax; je 0x1b794; lea rdx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e4: mov eax, dword ptr [rax]; test rax, rax; je 0x1b7fb; lea rdx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b81c: mov eax, dword ptr [rax]; test rax, rax; je 0x1b833; lea rdx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc2a: mov eax, dword ptr [rax]; test rax, rax; je 0x1bc3e; lea rdx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc6b: mov eax, dword ptr [rax]; test rax, rax; je 0x1bc7f; lea rdx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcbd: mov eax, dword ptr [rax]; test rax, rax; je 0x1bcd1; lea rdx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd0d: mov eax, dword ptr [rax]; test rax, rax; je 0x1bd21; lea rdx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd99: mov eax, dword ptr [rax]; test rax, rax; je 0x1bdad; lea rdx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be29: mov eax, dword ptr [rax]; test rax, rax; je 0x1be3d; lea rdx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be84: mov eax, dword ptr [rax]; test rax, rax; je 0x1be98; lea rdx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed0: mov eax, dword ptr [rax]; test rax, rax; je 0x1bee4; lea rdx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf24: mov eax, dword ptr [rax]; test rax, rax; je 0x1bf38; lea rdx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf81: mov eax, dword ptr [rax]; test rax, rax; je 0x1bf95; lea rdx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c00d: mov eax, dword ptr [rax]; test rax, rax; je 0x1c021; lea rdx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c54a: mov eax, dword ptr [rax]; test rax, rax; je 0x1c55e; lea rdx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c63e: mov eax, dword ptr [rax]; test rax, rax; je 0x1c652; lea rdx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c95c: mov eax, dword ptr [rax]; test rax, rax; je 0x1c970; lea rdx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e2: mov eax, dword ptr [rax]; test rax, rax; je 0x1c9f6; lea rdx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cab9: mov eax, dword ptr [rax]; test rax, rax; je 0x1cacd; lea rdx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cafc: mov eax, dword ptr [rax]; test rax, rax; je 0x1cb10; lea rdx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb4c: mov eax, dword ptr [rax]; test rax, rax; je 0x1cb60; lea rdx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb9c: mov eax, dword ptr [rax]; test rax, rax; je 0x1cbb0; lea rdx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc62: mov eax, dword ptr [rax]; test rax, rax; je 0x1cc76; lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd3: mov eax, dword ptr [rax]; test rax, rax; je 0x1cce7; lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd98: mov eax, dword ptr [rax]; test rax, rax; je 0x1cdac; lea rdx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf1: mov eax, dword ptr [rax]; test rax, rax; je 0x1ce05; lea rdx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cefc: mov eax, dword ptr [rax]; test rax, rax; je 0x1cf10; lea rdx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c3: mov eax, dword ptr [rax]; test rax, rax; je 0x1d1d7; lea rdx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d20f: mov eax, dword ptr [rax]; test rax, rax; je 0x1d223; lea rdx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2cd: mov eax, dword ptr [rax]; test rax, rax; je 0x1d2e4; lea rdx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d313: mov eax, dword ptr [rax]; test rax, rax; je 0x1d327; lea rdx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d35f: mov eax, dword ptr [rax]; test rax, rax; je 0x1d373; lea rdx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d44d: mov eax, dword ptr [rax]; test rax, rax; je 0x1d464; lea rdx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4df: mov eax, dword ptr [rax]; test rax, rax; je 0x1d4f3; lea rdx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d50d: mov eax, dword ptr [rax]; test rax, rax; je 0x1d521; lea rdx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5bd: mov eax, dword ptr [rax]; test rax, rax; je 0x1d5d4; lea rdx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d603: mov eax, dword ptr [rax]; test rax, rax; je 0x1d617; lea rdx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d64f: mov eax, dword ptr [rax]; test rax, rax; je 0x1d663; lea rdx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d74d: mov eax, dword ptr [rax]; test rax, rax; je 0x1d764; lea rdx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d81d: mov eax, dword ptr [rax]; test rax, rax; je 0x1d831; lea rdx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d85d: mov eax, dword ptr [rax]; test rax, rax; je 0x1d871; lea rdx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d970: mov eax, dword ptr [rax]; test rax, rax; je 0x1d984; lea rdx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db97: mov eax, dword ptr [rax]; test rax, rax; je 0x1dbab; lea rdx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd5: mov eax, dword ptr [rax]; test rax, rax; je 0x1dbe9; lea rdx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc82: mov eax, dword ptr [rax]; test rax, rax; je 0x1dc96; lea rdx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc5: mov eax, dword ptr [rax]; test rax, rax; je 0x1dcd9; lea rdx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd96: mov eax, dword ptr [rax]; test rax, rax; je 0x1ddaa; lea rdx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec2: mov eax, dword ptr [rax]; test rax, rax; je 0x1ded6; lea rdx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e021: mov eax, dword ptr [rax]; test rax, rax; je 0x1e035; lea rdx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e12d: mov eax, dword ptr [rax]; test rax, rax; je 0x1e141; lea rdx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b1: mov eax, dword ptr [rax]; test rax, rax; je 0x1e1c5; lea rdx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2da: mov eax, dword ptr [rax]; test rax, rax; je 0x1e2ee; lea rdx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e38a: mov eax, dword ptr [rax]; test rax, rax; je 0x1e39e; lea rdx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e47e: mov eax, dword ptr [rax]; test rax, rax; je 0x1e492; lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4ed: mov eax, dword ptr [rax]; test rax, rax; je 0x1e501; lea rdx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e56d: mov eax, dword ptr [rax]; test rax, rax; je 0x1e581; lea rdx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5ed: mov eax, dword ptr [rax]; test rax, rax; je 0x1e601; lea rdx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e68d: mov eax, dword ptr [rax]; test rax, rax; je 0x1e6a1; lea rdx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e0: mov eax, dword ptr [rax]; test rax, rax; je 0x1e8f4; lea rdx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e988: mov eax, dword ptr [rax]; test rax, rax; je 0x1e99c; lea rdx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea01: mov eax, dword ptr [rax]; test rax, rax; je 0x1ea15; lea rdx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea75: mov eax, dword ptr [rax]; test rax, rax; je 0x1ea89; lea rdx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae5: mov eax, dword ptr [rax]; test rax, rax; je 0x1eaf9; lea rdx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb65: mov eax, dword ptr [rax]; test rax, rax; je 0x1eb79; lea rdx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb1: mov eax, dword ptr [rax]; test rax, rax; je 0x1ebc5; lea rdx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebdf: mov eax, dword ptr [rax]; test rax, rax; je 0x1ebf3; lea rdx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec65: mov eax, dword ptr [rax]; test rax, rax; je 0x1ec79; lea rdx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb1: mov eax, dword ptr [rax]; test rax, rax; je 0x1ecc5; lea rdx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece2: mov eax, dword ptr [rax]; test rax, rax; je 0x1ecf6; lea rdx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee2b: mov eax, dword ptr [rax]; test rax, rax; je 0x1ee3f; lea rdx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f076: mov eax, dword ptr [rax]; test rax, rax; je 0x1f08a; lea rdx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0cb: mov eax, dword ptr [rax]; test rax, rax; je 0x1f0df; lea rdx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0fc: mov eax, dword ptr [rax]; test rax, rax; je 0x1f110; lea rdx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f13d: mov eax, dword ptr [rax]; test rax, rax; je 0x1f151; lea rdx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420027: mov eax, dword ptr [rax]; test rax, rax; je 0x2003b; lea rdx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c1: mov eax, dword ptr [rax]; test rax, rax; je 0x200d5; lea rdx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420191: mov eax, dword ptr [rax]; test rax, rax; je 0x201a5; lea rdx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042022c: mov eax, dword ptr [rax]; test rax, rax; je 0x20240; lea rdx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042036c: mov eax, dword ptr [rax]; test rax, rax; je 0x20380; lea rdx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042041d: mov eax, dword ptr [rax]; test rax, rax; je 0x20431; lea rdx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420575: mov eax, dword ptr [rax]; test rax, rax; je 0x20589; lea rdx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421024: mov eax, dword ptr [rax]; test rax, rax; je 0x21038; lea rdx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421057: mov eax, dword ptr [rax]; test rax, rax; je 0x2106b; lea rdx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210b6: mov eax, dword ptr [rax]; test rax, rax; je 0x210ca; lea rdx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421114: mov eax, dword ptr [rax]; test rax, rax; je 0x21128; lea rdx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421147: mov eax, dword ptr [rax]; test rax, rax; je 0x2115b; lea rdx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211ac: mov eax, dword ptr [rax]; test rax, rax; je 0x211c0; lea rdx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211fc: mov eax, dword ptr [rax]; test rax, rax; je 0x21210; lea rdx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421267: mov eax, dword ptr [rax]; test rax, rax; je 0x2127b; lea rdx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421305: mov eax, dword ptr [rax]; test rax, rax; je 0x21319; lea rdx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042145c: mov eax, dword ptr [rax]; test rax, rax; je 0x21470; lea rdx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214b7: mov eax, dword ptr [rax]; test rax, rax; je 0x214cb; lea rdx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421555: mov eax, dword ptr [rax]; test rax, rax; je 0x21569; lea rdx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216ab: mov eax, dword ptr [rax]; test rax, rax; je 0x216bf; lea rdx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216f6: mov eax, dword ptr [rax]; test rax, rax; je 0x2170a; lea rdx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421751: mov eax, dword ptr [rax]; test rax, rax; je 0x21765; lea rdx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217a6: mov eax, dword ptr [rax]; test rax, rax; je 0x217ba; lea rdx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042180c: mov eax, dword ptr [rax]; test rax, rax; je 0x21820; lea rdx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421853: mov eax, dword ptr [rax]; test rax, rax; je 0x21867; lea rdx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218bc: mov eax, dword ptr [rax]; test rax, rax; je 0x218d0; lea rdx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421906: mov eax, dword ptr [rax]; test rax, rax; je 0x2191a; lea rdx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421963: mov eax, dword ptr [rax]; test rax, rax; je 0x21977; lea rdx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042199c: mov eax, dword ptr [rax]; test rax, rax; je 0x219b0; lea rdx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219f7: mov eax, dword ptr [rax]; test rax, rax; je 0x21a0b; lea rdx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a2c: mov eax, dword ptr [rax]; test rax, rax; je 0x21a40; lea rdx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a85: mov eax, dword ptr [rax]; test rax, rax; je 0x21a99; lea rdx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af3: mov eax, dword ptr [rax]; test rax, rax; je 0x21b07; lea rdx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bb8: mov eax, dword ptr [rax]; test rax, rax; je 0x21bcc; lea rdx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c11: mov eax, dword ptr [rax]; test rax, rax; je 0x21c25; lea rdx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d1c: mov eax, dword ptr [rax]; test rax, rax; je 0x21d30; lea rdx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db5: mov eax, dword ptr [rax]; test rax, rax; je 0x21dc9; lea rdx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222d6: mov eax, dword ptr [rax]; test rax, rax; je 0x222ea; lea rdx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422356: mov eax, dword ptr [rax]; test rax, rax; je 0x2236a; lea rdx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223b6: mov eax, dword ptr [rax]; test rax, rax; je 0x223ca; lea rdx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422436: mov eax, dword ptr [rax]; test rax, rax; je 0x2244a; lea rdx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422495: mov eax, dword ptr [rax]; test rax, rax; je 0x224a9; lea rdx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422522: mov eax, dword ptr [rax]; test rax, rax; je 0x22536; lea rdx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d2: mov eax, dword ptr [rax]; test rax, rax; je 0x225e6; lea rdx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042262e: mov eax, dword ptr [rax]; test rax, rax; je 0x22642; lea rdx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422790: mov eax, dword ptr [rax]; test rax, rax; je 0x227a4; lea rdx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422960: mov eax, dword ptr [rax]; test rax, rax; je 0x22974; lea rdx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042298e: mov eax, dword ptr [rax]; test rax, rax; je 0x229a2; lea rdx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e65: mov eax, dword ptr [rax]; test rax, rax; je 0x22e79; lea rdx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f15: mov eax, dword ptr [rax]; test rax, rax; je 0x22f29; lea rdx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fc5: mov eax, dword ptr [rax]; test rax, rax; je 0x22fd9; lea rdx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423125: mov eax, dword ptr [rax]; test rax, rax; je 0x23139; lea rdx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231d5: mov eax, dword ptr [rax]; test rax, rax; je 0x231e9; lea rdx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423285: mov eax, dword ptr [rax]; test rax, rax; je 0x23299; lea rdx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423605: mov eax, dword ptr [rax]; test rax, rax; je 0x23619; lea rdx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004236b5: mov eax, dword ptr [rax]; test rax, rax; je 0x236c9; lea rdx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423765: mov eax, dword ptr [rax]; test rax, rax; je 0x23779; lea rdx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042422d: mov eax, dword ptr [rax]; test rax, rax; je 0x24244; lea rdx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424263: mov eax, dword ptr [rax]; test rax, rax; je 0x2427a; lea rdx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042429c: mov eax, dword ptr [rax]; test rax, rax; je 0x242b3; lea rdx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d5: mov eax, dword ptr [rax]; test rax, rax; je 0x242ec; lea rdx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042430e: mov eax, dword ptr [rax]; test rax, rax; je 0x24325; lea rdx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f2: mov eax, dword ptr [rax]; test rax, rax; je 0x24506; lea rdx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424558: mov eax, dword ptr [rax]; test rax, rax; je 0x2456c; lea rdx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a0: mov eax, dword ptr [rax]; test rax, rax; je 0x245b4; lea rdx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c6a: mov eax, dword ptr [rax]; test rax, rax; je 0x26c7e; lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb6: mov eax, dword ptr [rax]; test rax, rax; je 0x26cca; lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427231: mov eax, dword ptr [rax]; test rax, rax; je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427260: mov eax, dword ptr [rax]; test rax, rax; je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427294: mov eax, dword ptr [rax]; test rax, rax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f0: mov eax, dword ptr [rax]; test rax, rax; je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427389: mov eax, dword ptr [rax]; test rax, rax; je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273cd: mov eax, dword ptr [rax]; test rax, rax; je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427401: mov eax, dword ptr [rax]; test rax, rax; je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c78: mov eax, dword ptr [rax]; test rax, rax; je 0x29c8c; lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d08: mov eax, dword ptr [rax]; test rax, rax; je 0x29d1c; lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d98: mov eax, dword ptr [rax]; test rax, rax; je 0x29dac; lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004029fd: mov eax, dword ptr [rax]; test rax, rax; je 0x2a0e; mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000402a2b: mov eax, dword ptr [rax]; test rax, rax; je 0x2a3c; mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x000000000042a5de: mov eax, dword ptr [rax]; test rax, rax; je 0x2a5f2; lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a629: mov eax, dword ptr [rax]; test rax, rax; je 0x2a63d; lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c078: mov eax, dword ptr [rax]; test rax, rax; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c108: mov eax, dword ptr [rax]; test rax, rax; je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c198: mov eax, dword ptr [rax]; test rax, rax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c3e: mov eax, dword ptr [rax]; test rax, rax; je 0x2c4f; mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x0000000000402cf6: mov eax, dword ptr [rax]; test rax, rax; je 0x2d07; mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x000000000040329e: mov eax, dword ptr [rax]; test rax, rax; je 0x32b5; lea rdx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032e8: mov eax, dword ptr [rax]; test rax, rax; je 0x32ff; lea rdx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004050d4: mov eax, dword ptr [rax]; test rax, rax; je 0x50e8; lea rdx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452af3: mov eax, dword ptr [rax]; test rax, rax; je 0x52b07; lea rdx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e2: mov eax, dword ptr [rax]; test rax, rax; je 0x566f9; lea rdx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a34c: mov eax, dword ptr [rax]; test rax, rax; je 0x5a363; lea rdx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d0: mov eax, dword ptr [rax]; test rax, rax; je 0x5a3e7; lea rdx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af9b: mov eax, dword ptr [rax]; test rax, rax; je 0x5afb2; lea rdx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff1: mov eax, dword ptr [rax]; test rax, rax; je 0x5b008; lea rdx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b047: mov eax, dword ptr [rax]; test rax, rax; je 0x5b05e; lea rdx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccb9: mov eax, dword ptr [rax]; test rax, rax; je 0x5ccd0; lea rdx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd76: mov eax, dword ptr [rax]; test rax, rax; je 0x5cd8d; lea rdx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000436d7a: mov eax, dword ptr [rbp + 0x18]; mov word ptr [rbp - 8], ax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450f02: mov eax, dword ptr [rbp - 0x10]; mov rdx, qword ptr [rbp - 8]; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402911: mov eax, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004028f5: mov eax, dword ptr [rbp - 0x18]; fldcw word ptr [rbp - 0xc]; mov rsp, rbp; pop rbp; ret; 
0x00000000004094d5: mov eax, dword ptr [rbp - 0x18]; mov rdx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004517e3: mov eax, dword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b06: mov eax, dword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451693: mov eax, dword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519b3: mov eax, dword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451812: mov eax, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451b35: mov eax, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451e41: mov eax, dword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452184: mov eax, dword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451ce7: mov eax, dword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452027: mov eax, dword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e70: mov eax, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x00000000004521b3: mov eax, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x00000000004027ad: mov eax, dword ptr [rbp - 8]; and eax, 0xffff; mov rsp, rbp; pop rbp; ret; 
0x00000000004027cd: mov eax, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041752c: mov eax, dword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x0000000000416ff5: mov eax, dword ptr [rbx + 8]; lea rdi, [rax + r15]; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000044cc5f: mov eax, dword ptr [rbx]; add byte ptr [rax - 0x75], cl; and byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044ccff: mov eax, dword ptr [rbx]; add byte ptr [rax - 0x75], cl; sub byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000414742: mov eax, dword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x000000000041370d: mov eax, dword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x00000000004147a5: mov eax, dword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9f6: mov eax, dword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000415185: mov eax, dword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x000000000043e1d5: mov eax, dword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043e37c: mov eax, dword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x00000000004418e5: mov eax, dword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000441b9c: mov eax, dword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043e395: mov eax, dword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rdi, rbx; call 0x3e370; pop rbx; ret; 
0x000000000044f4f2: mov eax, dword ptr [rbx]; mov byte ptr [rax + 1], 0xfe; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f832: mov eax, dword ptr [rbx]; mov byte ptr [rax + 1], 0xff; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f099: mov eax, dword ptr [rbx]; mov byte ptr [rax + 2], 0xbf; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000427b8e: mov eax, dword ptr [rbx]; mov byte ptr [rax], r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414e57: mov eax, dword ptr [rbx]; mov rax, qword ptr [rax + 8]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000412fee: mov eax, dword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413047: mov eax, dword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000412fee: mov eax, dword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000416ffd: mov eax, dword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000041a5d9: mov eax, dword ptr [rbx]; pop r13; pop r12; pop rbx; ret; 
0x0000000000410e21: mov eax, dword ptr [rcx]; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000413568: mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413868: mov eax, dword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x000000000043cec0: mov eax, dword ptr [rdi + 0x10]; ret; 
0x00000000004403f0: mov eax, dword ptr [rdi + 0x10]; ret; 
0x000000000044e580: mov eax, dword ptr [rdi + 0x10]; ret; 
0x000000000043f7e6: mov eax, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443266: mov eax, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000413598: mov eax, dword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x0000000000413b91: mov eax, dword ptr [rdi + 0x38]; ret; 
0x00000000004144f1: mov eax, dword ptr [rdi + 0x50]; ret; 
0x0000000000413c21: mov eax, dword ptr [rdi + 0x58]; ret; 
0x0000000000423f7b: mov eax, dword ptr [rdi + 0xe0]; mov ax, word ptr [rax + 2]; jmp 0x23f8a; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000423f9b: mov eax, dword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000406851: mov eax, dword ptr [rdi + 8]; and ax, 0x8000; setne al; ret; 
0x0000000000406820: mov eax, dword ptr [rdi + 8]; and eax, 0x7fff; movsxd rax, eax; ret; 
0x0000000000403359: mov eax, dword ptr [rdi + 8]; ret; 
0x000000000043ced1: mov eax, dword ptr [rdi + 8]; test rax, rax; je 0x3cee1; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000440401: mov eax, dword ptr [rdi + 8]; test rax, rax; je 0x40411; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x000000000040d896: mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411576: mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411556: mov eax, dword ptr [rdi - 0x16]; jmp 0x1155f; mov ax, 2; and eax, 0xffff; ret; 
0x000000000040d876: mov eax, dword ptr [rdi - 0x16]; jmp 0xd87f; mov ax, 1; and eax, 0xffff; ret; 
0x0000000000411586: mov eax, dword ptr [rdi - 0x18]; jmp 0x11595; lea rdx, [rip + 0x7159e]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d856: mov eax, dword ptr [rdi - 0x18]; jmp 0xd865; lea rdx, [rip + 0x752be]; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x00000000004480e5: mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044bef5: mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x0000000000411ac6: mov eax, dword ptr [rdi - 8]; add rax, 1; ret; 
0x0000000000411ae6: mov eax, dword ptr [rdi - 8]; ret; 
0x0000000000406dc0: mov eax, dword ptr [rdi]; and eax, 0x7f800000; shr eax, 0x17; and eax, eax; ret; 
0x0000000000406e20: mov eax, dword ptr [rdi]; and eax, 0x7fffff; ret; 
0x0000000000406df0: mov eax, dword ptr [rdi]; and eax, 0x80000000; setne al; ret; 
0x000000000044fcbf: mov eax, dword ptr [rdi]; call qword ptr [rax + 0x70]; 
0x0000000000403909: mov eax, dword ptr [rdi]; cmp r8d, dword ptr [rsi]; jbe 0x3916; mov eax, 1; ret; 
0x0000000000432b20: mov eax, dword ptr [rdi]; cvtsi2sd xmm0, rax; ret; 
0x0000000000432be0: mov eax, dword ptr [rdi]; cvtsi2ss xmm0, rax; ret; 
0x000000000041431a: mov eax, dword ptr [rdi]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000413587: mov eax, dword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x0000000000406b31: mov eax, dword ptr [rdi]; movabs rdx, 0x8000000000000000; and rax, rdx; setne al; ret; 
0x0000000000403369: mov eax, dword ptr [rdi]; ret; 
0x0000000000406776: mov eax, dword ptr [rdi]; ret; 
0x0000000000413751: mov eax, dword ptr [rdi]; ret; 
0x000000000042d520: mov eax, dword ptr [rdi]; ret; 
0x000000000042d530: mov eax, dword ptr [rdi]; ret; 
0x0000000000432071: mov eax, dword ptr [rdi]; ret; 
0x0000000000433830: mov eax, dword ptr [rdi]; ret; 
0x000000000042e351: mov eax, dword ptr [rdi]; test rax, rax; je 0x2e35c; mov rax, qword ptr [rax - 8]; ret; 
0x000000000041724b: mov eax, dword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x000000000040675c: mov eax, dword ptr [rdx + 8]; mov word ptr [rbp - 8], ax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b972: mov eax, dword ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d863: mov eax, dword ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040db09: mov eax, dword ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000411593: mov eax, dword ptr [rdx]; and eax, 0xffff; ret; 
0x000000000041427b: mov eax, dword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041418b: mov eax, dword ptr [rdx]; call qword ptr [rax + 8]; 
0x00000000004208f9: mov eax, dword ptr [rdx]; mov word ptr [rbx + 0x374], ax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417de0: mov eax, dword ptr [rdx]; mov word ptr [rdx], 0; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x000000000045930f: mov eax, dword ptr [rip + 0x25d3b]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x0000000000450226: mov eax, dword ptr [rip + 0x28334]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000450271: mov eax, dword ptr [rip + 0x28339]; ret; 
0x0000000000452ebd: mov eax, dword ptr [rip + 0x32d0d]; mov byte ptr [rax + 0x18], 1; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000423ec5: mov eax, dword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b61: mov eax, dword ptr [rip + 0x461e9]; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x0000000000456f39: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041495d: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd57: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cea9: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440287: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403d9: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8b0: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451652: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451965: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c5: mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044384a: mov eax, dword ptr [rsp + 0x10]; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x00000000004130a8: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a8: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041492c: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd26: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce78: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440256: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a8: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e87f: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451621: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451934: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452594: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c4e: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041426b: mov eax, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041417b: mov eax, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000414273: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414183: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000041483f: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc3e: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd8f: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044016e: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402bf: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e78e: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045152f: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045183f: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522ce: mov eax, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000417366: mov eax, dword ptr [rsp + 0x14]; call qword ptr [rax + 0x10]; 
0x000000000041716b: mov eax, dword ptr [rsp + 0x14]; call qword ptr [rax]; 
0x000000000045c651: mov eax, dword ptr [rsp + 0x170]; call rax; 
0x000000000043c8c3: mov eax, dword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc12: mov eax, dword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf3: mov eax, dword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440142: mov eax, dword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c98: mov eax, dword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fdb: mov eax, dword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000419726: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rdx + 0xa8], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043c892: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbe1: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc2: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440111: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c67: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451faa: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041316d: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413306: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c6: mov eax, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000043c783: mov eax, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae2: mov eax, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb3: mov eax, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440012: mov eax, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b63: mov eax, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea3: mov eax, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ea4a: mov eax, dword ptr [rsp + 0x20]; lea rsp, [rsp + 0xf8]; ret; 
0x000000000044ea19: mov eax, dword ptr [rsp + 0x20]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e8e7: mov eax, dword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043caa4: mov eax, dword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd4: mov eax, dword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000458363: mov eax, dword ptr [rsp + 0x28]; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x000000000043ca73: mov eax, dword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa3: mov eax, dword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c909: mov eax, dword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe39: mov eax, dword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004550fb: mov eax, dword ptr [rsp + 0x58]; lea rsp, [rsp + 0x98]; ret; 
0x0000000000422827: mov eax, dword ptr [rsp + 0x60]; test rax, rax; je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228e5: mov eax, dword ptr [rsp + 0x60]; test rax, rax; je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004229c0: mov eax, dword ptr [rsp + 0x60]; test rax, rax; je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x000000000044960e: mov eax, dword ptr [rsp + 0x60]; test rax, rax; je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b3ae: mov eax, dword ptr [rsp + 0x60]; test rax, rax; je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000045c501: mov eax, dword ptr [rsp + 0x68]; call rax; 
0x000000000040518a: mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x000000000044d181: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000443853: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000041b57b: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0x78]; ret; 
0x00000000004136c4: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c74a: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc7a: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e758: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee6e: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044effe: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f315: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9b2: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc18: mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000413693: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c719: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc49: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e727: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee3d: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efcd: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e4: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f981: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe7: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004135c8: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c638: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb68: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e638: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed58: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee8: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f8: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a8: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa8: mov eax, dword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000446da1: mov eax, dword ptr [rsp]; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e02: mov eax, dword ptr [rsp]; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043a92a: mov eax, dword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a9c0: mov eax, dword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000451270: mov eax, dword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000044bed7: mov eax, dword ptr [rsp]; add rax, 4; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413037: mov eax, dword ptr [rsp]; call qword ptr [rax + 8]; 
0x00000000004267e1: mov eax, dword ptr [rsp]; cmp dword ptr [rax + 0xc], 0; jg 0x26748; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041328b: mov eax, dword ptr [rsp]; jmp 0x13292; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413377: mov eax, dword ptr [rsp]; jmp 0x1337e; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000413445: mov eax, dword ptr [rsp]; jmp 0x1344c; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413549: mov eax, dword ptr [rsp]; jmp 0x13550; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000456abe: mov eax, dword ptr [rsp]; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc87: mov eax, dword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447fd1: mov eax, dword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044cb19: mov eax, dword ptr [rsp]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000415078: mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004051ba: mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000040ba68: mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044379c: mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000451269: mov eax, dword ptr [rsp]; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040ba61: mov eax, dword ptr [rsp]; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043a5b6: mov eax, dword ptr [rsp]; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x000000000043650a: mov eax, dword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494ba: mov eax, dword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b25a: mov eax, dword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000042135a: mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213b9: mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215aa: mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421609: mov eax, dword ptr [rsp]; mov dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004364cd: mov eax, dword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044947f: mov eax, dword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b21f: mov eax, dword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000459a78: mov eax, dword ptr [rsp]; mov edi, dword ptr [rax + 0x808]; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000447992: mov eax, dword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000402941: mov eax, dword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000439723: mov eax, dword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439766: mov eax, dword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004365f5: mov eax, dword ptr [rsp]; mov rax, qword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000436555: mov eax, dword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000449507: mov eax, dword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2a7: mov eax, dword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000042de81: mov eax, dword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deae: mov eax, dword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df84: mov eax, dword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e18e: mov eax, dword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dccb: mov eax, dword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042138e: mov eax, dword ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213ee: mov eax, dword ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215de: mov eax, dword ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042163e: mov eax, dword ptr [rsp]; mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000401fc1: mov eax, dword ptr [rsp]; ret; 
0x0000000000458b41: mov eax, dword ptr [rsp]; shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b81: mov eax, dword ptr [rsp]; shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434fec: mov eax, dword ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043513d: mov eax, dword ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435294: mov eax, dword ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352e5: mov eax, dword ptr [rsp]; test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432343: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043253b: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043272c: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432914: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432af3: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432cdb: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ebc: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433094: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332ac: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433484: mov eax, dword ptr [rsp]; test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044ccfe: mov eax, dword ptr cs:[rbx]; add byte ptr [rax - 0x75], cl; sub byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000045c969: mov eax, eax; mov rsi, rdi; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000042e592: mov eax, eax; xor ecx, ecx; xor esi, esi; call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x000000000040ae6d: mov eax, ebp; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fae: mov eax, ebp; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a182: mov eax, ebp; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a214: mov eax, ebp; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef4b: mov eax, ebp; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040cd03: mov eax, ebp; mov qword ptr [rbx], rax; pop r13; pop r12; pop rbx; ret; 
0x000000000040eee1: mov eax, ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000041960b: mov eax, ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000041a0da: mov eax, ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000044bea0: mov eax, ebp; pop r13; pop r12; pop rbx; ret; 
0x0000000000457619: mov eax, ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000044bb72: mov eax, ebx; and eax, 0xffff; pop rbx; ret; 
0x00000000004181b5: mov eax, ebx; call rax; 
0x00000000004277eb: mov eax, ebx; imul rdx, rax, 0x30; lea rax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x000000000041b4e5: mov eax, ebx; lea rdx, [rip + 0x698f2]; mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x00000000004540c5: mov eax, ebx; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004551ce: mov eax, ebx; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000430f7e: mov eax, ebx; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000424457: mov eax, ebx; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000453adf: mov eax, ebx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000416b3f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416bcf: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416cdf: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416d6f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c4b7: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c5c7: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c907: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042cb47: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043da6d: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043db8c: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043de2f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043e1bc: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044105c: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044197a: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000441c35: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000453e3e: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004570dd: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045798f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457a1f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457b4f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457cf9: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000457eaf: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004580ff: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045818f: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000045823d: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004582cf: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000458454: mov eax, ebx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f283: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d1: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa61: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf1: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000042c65f: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043d923: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043e767: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebb5: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef54: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000440eee: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442019: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442524: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442976: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e318: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000044e498: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000453c90: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457ab7: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457c57: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457e17: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a830: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c0: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a950: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e0: mov eax, ebx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041b651: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c53f: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c6df: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042c87f: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043d70e: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dafc: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dcde: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000453da3: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457d87: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457f37: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000457fb7: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458589: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458a54: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000045c3ee: mov eax, ebx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040c827: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ca59: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000416e25: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000042d798: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043e8c6: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043eb24: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043ed26: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004411be: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004414e1: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004418ce: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004421c8: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000442486: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004426d8: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045345e: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045545d: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004578fd: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000045806d: mov eax, ebx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043c296: mov eax, ebx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000440c90: mov eax, ebx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044110e: mov eax, ebx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000441350: mov eax, ebx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000041bfa6: mov eax, ebx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000043c60a: mov eax, ebx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x0000000000455634: mov eax, ebx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000455764: mov eax, ebx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x00000000004197ad: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419fa8: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000430ad3: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004479ff: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a51: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447e22: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004480a1: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044b988: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bab2: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044dfd1: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000453352: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000458c0d: mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b8ad: mov eax, ebx; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043c0ec: mov eax, ebx; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412fcd: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417e83: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfda: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe4: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f00a: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004416ca: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a04: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a2a: mov eax, ebx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004032c1: mov eax, ebx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x000000000040330b: mov eax, ebx; mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x000000000041519b: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x00000000004279bc: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x000000000042e3c2: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x0000000000433c42: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x0000000000433d72: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x0000000000447e60: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bc3d: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bcf2: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bd42: mov eax, ebx; pop r13; pop r12; pop rbx; ret; 
0x0000000000404180: mov eax, ebx; pop rbx; ret; 
0x000000000040cd2d: mov eax, ebx; pop rbx; ret; 
0x000000000040ef29: mov eax, ebx; pop rbx; ret; 
0x0000000000414a8d: mov eax, ebx; pop rbx; ret; 
0x0000000000419003: mov eax, ebx; pop rbx; ret; 
0x000000000041a353: mov eax, ebx; pop rbx; ret; 
0x000000000041a3b4: mov eax, ebx; pop rbx; ret; 
0x000000000041bea9: mov eax, ebx; pop rbx; ret; 
0x000000000041bf49: mov eax, ebx; pop rbx; ret; 
0x0000000000433c61: mov eax, ebx; pop rbx; ret; 
0x000000000043e1de: mov eax, ebx; pop rbx; ret; 
0x000000000043e385: mov eax, ebx; pop rbx; ret; 
0x000000000043e8ee: mov eax, ebx; pop rbx; ret; 
0x00000000004418ee: mov eax, ebx; pop rbx; ret; 
0x0000000000441ba5: mov eax, ebx; pop rbx; ret; 
0x00000000004421ee: mov eax, ebx; pop rbx; ret; 
0x0000000000447e80: mov eax, ebx; pop rbx; ret; 
0x000000000044b943: mov eax, ebx; pop rbx; ret; 
0x000000000044d2c3: mov eax, ebx; pop rbx; ret; 
0x000000000044d413: mov eax, ebx; pop rbx; ret; 
0x000000000044db5b: mov eax, ebx; pop rbx; ret; 
0x000000000044f0de: mov eax, ebx; pop rbx; ret; 
0x000000000044f13b: mov eax, ebx; pop rbx; ret; 
0x0000000000452ef8: mov eax, ebx; pop rbx; ret; 
0x0000000000452f19: mov eax, ebx; pop rbx; ret; 
0x0000000000452f37: mov eax, ebx; pop rbx; ret; 
0x0000000000452f59: mov eax, ebx; pop rbx; ret; 
0x00000000004575da: mov eax, ebx; pop rbx; ret; 
0x0000000000417b73: mov eax, ecx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b04b: mov eax, ecx; lea rsp, [rsp + 8]; ret; 
0x0000000000401f79: mov eax, ecx; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x000000000040b64d: mov eax, ecx; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439323: mov eax, ecx; mov rsi, qword ptr [rsp]; mov ecx, 0x13; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000431da3: mov eax, ecx; movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431963: mov eax, ecx; movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000403720: mov eax, ecx; ret; 
0x00000000004037a1: mov eax, ecx; ret; 
0x0000000000403a46: mov eax, ecx; ret; 
0x000000000040aa51: mov eax, ecx; ret; 
0x000000000040ab46: mov eax, ecx; ret; 
0x0000000000433d34: mov eax, ecx; ret; 
0x0000000000447d60: mov eax, ecx; ret; 
0x000000000044bb45: mov eax, ecx; ret; 
0x0000000000417b03: mov eax, ecx; shr eax, 0x12; xor eax, ecx; pop rbx; ret; 
0x00000000004045e1: mov eax, ecx; sub rax, rdx; ret; 
0x0000000000404601: mov eax, ecx; sub rax, rdx; ret; 
0x0000000000401f39: mov eax, ecx; syscall; 
0x00000000004045d9: mov eax, ecx; xor edx, edx; div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045f9: mov eax, ecx; xor edx, edx; div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x0000000000403230: mov eax, edi; and eax, 0x7f; ret; 
0x0000000000457840: mov eax, edi; and eax, 0x7f; ret; 
0x00000000004178c0: mov eax, edi; and eax, 0x80000000; and esi, 0x7fffffff; or eax, esi; ret; 
0x0000000000404e11: mov eax, edi; and eax, 0xf; ret; 
0x00000000004031f0: mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000403200: mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000457800: mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000457810: mov eax, edi; and eax, 0xff00; shr eax, 8; ret; 
0x0000000000404560: mov eax, edi; and eax, 1; ret; 
0x0000000000404570: mov eax, edi; and eax, 1; ret; 
0x0000000000404581: mov eax, edi; and eax, 1; ret; 
0x0000000000404591: mov eax, edi; and eax, 1; ret; 
0x0000000000432316: mov eax, edi; and esi, 0xff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328e6: mov eax, edi; and esi, 0xffff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432ac6: mov eax, edi; and esi, esi; mov rdi, rax; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000402760: mov eax, edi; bswap eax; ret; 
0x0000000000402770: mov eax, edi; bswap eax; ret; 
0x0000000000402781: mov eax, edi; bswap rax; ret; 
0x0000000000402791: mov eax, edi; bswap rax; ret; 
0x00000000004115a6: mov eax, edi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d6: mov eax, edi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000456866: mov eax, edi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456886: mov eax, edi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b6: mov eax, edi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f6: mov eax, edi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b0b5: mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b186: mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a6: mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b226: mov eax, edi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a6: mov eax, edi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x0000000000426cf6: mov eax, edi; call 0x25620; lea rsp, [rsp + 8]; ret; 
0x0000000000413cd6: mov eax, edi; call rax; 
0x0000000000413e33: mov eax, edi; call rax; 
0x0000000000417097: mov eax, edi; call rax; 
0x000000000041dad6: mov eax, edi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f616: mov eax, edi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x0000000000432d01: mov eax, edi; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432ee1: mov eax, edi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332d1: mov eax, edi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432db1: mov eax, edi; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f91: mov eax, edi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000433381: mov eax, edi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000432d16: mov eax, edi; fild dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432ef6: mov eax, edi; fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332e6: mov eax, edi; fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004045a0: mov eax, edi; imul eax, edi; ret; 
0x00000000004045b1: mov eax, edi; imul rax, rdi; ret; 
0x00000000004045c1: mov eax, edi; imul rax, rdi; ret; 
0x000000000044fa56: mov eax, edi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa36: mov eax, edi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa76: mov eax, edi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b6: mov eax, edi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d6: mov eax, edi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x0000000000420a36: mov eax, edi; lea rdi, [rax + 0x50]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004147c6: mov eax, edi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x00000000004239e1: mov eax, edi; lea rdi, [rip + 0x46306]; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419031: mov eax, edi; lea rdi, [rip + 0x50b06]; mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b711: mov eax, edi; lea rdi, [rip + 0x696d6]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a21: mov eax, edi; lea rdi, [rip + 0x6d546]; mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbe1: mov eax, edi; lea rdi, [rip + 0x76176]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db71: mov eax, edi; lea rdi, [rip + 0x761e6]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040d9d1: mov eax, edi; lea rdx, [rip + 0x75146]; mov word ptr [rdx], ax; ret; 
0x000000000040d9e1: mov eax, edi; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x000000000040d9f1: mov eax, edi; lea rdx, [rip + 0x75156]; mov word ptr [rdx], ax; ret; 
0x0000000000445ec6: mov eax, edi; lea rsi, [rip + 0x2fdd1]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x000000000040db91: mov eax, edi; lea rsi, [rip + 0x761c6]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db21: mov eax, edi; lea rsi, [rip + 0x76236]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000426b41: mov eax, edi; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x00000000004051a1: mov eax, edi; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051d1: mov eax, edi; mov dword ptr [rax], esi; ret; 
0x000000000042d7f6: mov eax, edi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d816: mov eax, edi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402641: mov eax, edi; mov edx, 0xffffffff; xchg rdx, rax; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x0000000000402661: mov eax, edi; mov edx, 1; xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x000000000045b8f1: mov eax, edi; mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b911: mov eax, edi; mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045bb46: mov eax, edi; mov esi, dword ptr [rsi]; mov rdi, rax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000041d781: mov eax, edi; mov qword ptr [rax + 0x28], rsi; mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000432101: mov eax, edi; mov qword ptr [rax], rsi; ret; 
0x00000000004149b6: mov eax, edi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414996: mov eax, edi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414976: mov eax, edi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433916: mov eax, edi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000432dc6: mov eax, edi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432bf6: mov eax, edi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432d76: mov eax, edi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432ba6: mov eax, edi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432d96: mov eax, edi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bc6: mov eax, edi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x00000000004149d6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x0000000000431296: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312b6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x0000000000431256: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000431276: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312d6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312f6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x0000000000431316: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x0000000000430286: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432fa6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433396: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x00000000004331b6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335a6: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f56: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433346: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433156: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000433546: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432f76: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433366: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433176: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000433566: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000430456: mov eax, edi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x0000000000401eea: mov eax, edi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401eaa: mov eax, edi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e6a: mov eax, edi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000432626: mov eax, edi; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004325d6: mov eax, edi; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325f6: mov eax, edi; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x0000000000432816: mov eax, edi; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004327c6: mov eax, edi; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327e6: mov eax, edi; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x0000000000432436: mov eax, edi; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323e6: mov eax, edi; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432406: mov eax, edi; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x0000000000432a06: mov eax, edi; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329b6: mov eax, edi; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329d6: mov eax, edi; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x0000000000401e3a: mov eax, edi; mov rdi, rsi; syscall; 
0x000000000045c64b: mov eax, edi; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4fb: mov eax, edi; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x00000000004026b1: mov eax, edi; mov rdx, 0xffffffffffffffff; xchg rdx, rax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026d1: mov eax, edi; mov rdx, 1; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000045c7d6: mov eax, edi; mov rsi, qword ptr [rsi]; mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004326f6: mov eax, edi; movsx esi, si; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432506: mov eax, edi; movsx esi, sil; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000402697: mov eax, edi; ret; 
0x0000000000402696: mov eax, edi; ret; 
0x0000000000402709: mov eax, edi; ret; 
0x0000000000404910: mov eax, edi; ret; 
0x0000000000404920: mov eax, edi; ret; 
0x0000000000404931: mov eax, edi; ret; 
0x0000000000404941: mov eax, edi; ret; 
0x00000000004049f0: mov eax, edi; ret; 
0x0000000000404a00: mov eax, edi; ret; 
0x0000000000404a11: mov eax, edi; ret; 
0x0000000000404a21: mov eax, edi; ret; 
0x0000000000406f81: mov eax, edi; ret; 
0x0000000000406f91: mov eax, edi; ret; 
0x0000000000413961: mov eax, edi; ret; 
0x0000000000413eb1: mov eax, edi; ret; 
0x0000000000413ec1: mov eax, edi; ret; 
0x0000000000413f21: mov eax, edi; ret; 
0x0000000000413f31: mov eax, edi; ret; 
0x0000000000414671: mov eax, edi; ret; 
0x0000000000426b31: mov eax, edi; ret; 
0x0000000000404e60: mov eax, edi; shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e70: mov eax, edi; shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e81: mov eax, edi; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e91: mov eax, edi; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000403426: mov eax, edi; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404896: mov eax, edi; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404976: mov eax, edi; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e26: mov eax, edi; shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000401e0a: mov eax, edi; syscall; 
0x0000000000413006: mov eax, edi; test rdi, rdi; je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000403351: mov eax, edi; test rdi, rdi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x0000000000403361: mov eax, edi; test rdi, rdi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x000000000044c0e1: mov eax, edi; test rdi, rdi; je 0x4c0ec; mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x0000000000425aee: mov eax, edx; lea rcx, [rip + 0x5fb09]; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000456f08: mov eax, edx; lea rsp, [rsp + 0x48]; ret; 
0x000000000040fb62: mov eax, edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000433c04: mov eax, edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447b98: mov eax, edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bc99: mov eax, edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004026a0: mov eax, edx; lock cmpxchg dword ptr [rdi], esi; ret; 
0x0000000000402711: mov eax, edx; lock cmpxchg qword ptr [rdi], rsi; ret; 
0x000000000040b6ca: mov eax, edx; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040678a: mov eax, edx; ret; 
0x0000000000407302: mov eax, edx; ret; 
0x000000000040b42b: mov eax, edx; ret; 
0x000000000040cf7a: mov eax, edx; ret; 
0x000000000040f93a: mov eax, edx; ret; 
0x000000000041969d: mov eax, edx; ret; 
0x0000000000433f76: mov eax, edx; ret; 
0x0000000000433fe7: mov eax, edx; ret; 
0x0000000000456739: mov eax, edx; ret; 
0x000000000044f0b0: mov eax, edx; shl eax, 1; ret; 
0x0000000000450099: mov eax, edx; shr eax, 4; xor eax, edx; and eax, 0xf; ret; 
0x0000000000407b59: mov eax, esi; and edx, edx; imul rax, rdx; lea rsp, [rsp + 8]; ret; 
0x0000000000417003: mov eax, esi; call rax; 
0x000000000040b801: mov eax, esi; imul rax, rdi; ret; 
0x0000000000402682: mov eax, esi; ret; 
0x00000000004026f4: mov eax, esi; ret; 
0x0000000000419699: mov eax, esi; ret; 
0x000000000043b881: mov eax, esi; ret; 
0x000000000043b8b1: mov eax, esi; ret; 
0x000000000044ec20: mov eax, esi; ret; 
0x000000000044ec30: mov eax, esi; ret; 
0x000000000044eec0: mov eax, esi; ret; 
0x000000000044f050: mov eax, esi; ret; 
0x000000000044f490: mov eax, esi; shl eax, 1; ret; 
0x000000000040d0bd: mov eax, esp; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000410261: mov eax, esp; lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x000000000040652f: mov eax, esp; lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000402d25: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406810: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040698e: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406a3f: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406ac7: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c8a: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406d30: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406db5: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f0a: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414748: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f08: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fcd9: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421776: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421831: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d5f4: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f263: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004338aa: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f95: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a03f: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a085: mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043d67c: mov eax, esp; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440bde: mov eax, esp; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004587f0: mov eax, esp; mov rdx, r9; call 0x57540; lea rsp, [rsp + 0x18]; ret; 
0x0000000000414f9b: mov eax, esp; pop r13; pop r12; pop rbx; ret; 
0x0000000000448024: mov eax, esp; pop r13; pop r12; pop rbx; ret; 
0x0000000000401fb1: mov eax, esp; ret; 
0x0000000000402d24: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040680f: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040698d: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406ac6: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406c89: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406db4: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406f09: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414747: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d5f3: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f262: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a03e: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a084: mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a181: mov eax, r13d; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000045a213: mov eax, r13d; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000457618: mov eax, r13d; pop r13; pop r12; pop rbx; ret; 
0x0000000000427152: mov ebp, 0x388b0005; call rdx; 
0x000000000042fd3f: mov ebp, 0x41000000; pop rbp; pop r12; pop rbx; ret; 
0x000000000041f65c: mov ebp, 0x48000000; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x00000000004335af: mov ebp, 0x48000015; lea esp, [rsp + 8]; ret; 
0x0000000000432a0f: mov ebp, 0x48000020; lea esp, [rsp + 8]; ret; 
0x000000000043240f: mov ebp, 0x4800002a; lea esp, [rsp + 8]; ret; 
0x00000000004312df: mov ebp, 0x48000031; lea esp, [rsp + 8]; ret; 
0x000000000043045f: mov ebp, 0x480000af; lea esp, [rsp + 8]; ret; 
0x0000000000444cdf: mov ebp, 0x4800030f; mov edx, dword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000415dd7: mov ebp, 0x480006e1; lea esp, [rsp + 8]; ret; 
0x0000000000415627: mov ebp, 0x480006e9; lea esp, [rsp + 8]; ret; 
0x00000000004228ef: mov ebp, 0x48ffff26; lea esp, [rsp + 0x68]; ret; 
0x000000000040d69f: mov ebp, 0x48ffff5d; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456f8f: mov ebp, 0x48ffffff; lea esp, [rsp + 8]; ret; 
0x000000000041452f: mov ebp, 0x5bffff75; ret; 
0x0000000000406a5f: mov ebp, 0x7cdbffff; and al, 0x10; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000401a5d: mov ebp, 0x89480001; ret; 
0x0000000000401aa1: mov ebp, 0x89480001; ret; 
0x0000000000401ad7: mov ebp, 0x89480001; ret; 
0x0000000000401b08: mov ebp, 0x89480001; ret; 
0x000000000040768c: mov ebp, 0x8d48ffff; and al, 8; ret; 
0x000000000040936b: mov ebp, 0xbf0f0001; ret; 
0x000000000045b1ac: mov ebp, 0xfffff510; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad1f: mov ebp, 0xfffff890; mov rsp, rbp; pop rbp; ret; 
0x0000000000449272: mov ebp, 0xfffffe08; mov rsp, rbp; pop rbp; ret; 
0x000000000044b00a: mov ebp, 0xfffffe08; mov rsp, rbp; pop rbp; ret; 
0x0000000000438beb: mov ebp, 0xfffffe30; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb85: mov ebp, 0xfffffe60; mov rsp, rbp; pop rbp; ret; 
0x000000000041873e: mov ebp, 0xfffffe70; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x0000000000404080: mov ebp, 0xfffffed0; mov rsp, rbp; pop rbp; ret; 
0x00000000004086fb: mov ebp, 0xfffffee8; mov rsp, rbp; pop rbp; ret; 
0x000000000040c326: mov ebp, 0xffffff50; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e63: mov ebp, 0xffffff50; mov rsp, rbp; pop rbp; ret; 
0x0000000000439067: mov ebp, 0xffffff50; mov rsp, rbp; pop rbp; ret; 
0x00000000004309e6: mov ebp, 0xffffff58; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e71: mov ebp, 0xffffff58; mov rsp, rbp; pop rbp; ret; 
0x0000000000409142: mov ebp, 0xffffff68; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fb8: mov ebp, 0xffffff68; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf94: mov ebp, 0xffffff70; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a1a: mov ebp, 0xffffff78; mov rsp, rbp; pop rbp; ret; 
0x000000000043e12a: mov ebp, 0xffffff78; mov rsp, rbp; pop rbp; ret; 
0x000000000044181a: mov ebp, 0xffffff78; mov rsp, rbp; pop rbp; ret; 
0x0000000000444ac2: mov ebp, 0xffffff78; mov rsp, rbp; pop rbp; ret; 
0x000000000040447b: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea36: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298e9: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd6: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6a7: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f70a: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f85d: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa6: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043000a: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305fb: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a54: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc4: mov ebp, dword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045445a: mov ebp, dword ptr [rbp - 0x118]; mov r14, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e7bf: mov ebp, dword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e88d: mov ebp, dword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004086ec: mov ebp, dword ptr [rbp - 0x128]; mov r14, qword ptr [rbp - 0x120]; mov r15, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404071: mov ebp, dword ptr [rbp - 0x140]; mov r14, qword ptr [rbp - 0x138]; mov r15, qword ptr [rbp - 0x130]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6e4: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041deef: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e04e: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300a7: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430565: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430685: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418ac0: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436baf: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc10: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d0fd: mov ebp, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044062d: mov ebp, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb76: mov ebp, dword ptr [rbp - 0x1b0]; mov r14, qword ptr [rbp - 0x1a8]; mov r15, qword ptr [rbp - 0x1a0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000438bdc: mov ebp, dword ptr [rbp - 0x1e0]; mov r14, qword ptr [rbp - 0x1d8]; mov r15, qword ptr [rbp - 0x1d0]; mov rsp, rbp; pop rbp; ret; 
0x000000000043632f: mov ebp, dword ptr [rbp - 0x200]; mov r14, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449263: mov ebp, dword ptr [rbp - 0x208]; mov r14, qword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044affb: mov ebp, dword ptr [rbp - 0x208]; mov r14, qword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a726: mov ebp, dword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a806: mov ebp, dword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7b0: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f99a: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043149f: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000431555: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c44: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418494: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304cd: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d075: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e63d: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004405a5: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ecd: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004513c0: mov ebp, dword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042df65: mov ebp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435084: mov ebp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435114: mov ebp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004351cc: mov ebp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043526c: mov ebp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7c3: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa0f: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b38a: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa61: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434e2: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3c2: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d510: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d6f8: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc06: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddae: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414c4d: mov ebp, dword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e44b: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043078a: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b6b: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bea: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043a6e5: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d347: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f388: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044087d: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e0b: mov ebp, dword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f92a: mov ebp, dword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb54: mov ebp, dword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d237: mov ebp, dword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e58a: mov ebp, dword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000044076a: mov ebp, dword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e1d: mov ebp, dword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc17: mov ebp, dword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d55d: mov ebp, dword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a93: mov ebp, dword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c0: mov ebp, dword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db0e: mov ebp, dword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dee8: mov ebp, dword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412af7: mov ebp, dword ptr [rbp - 0x48]; mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455888: mov ebp, dword ptr [rbp - 0x48]; mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fb8: mov ebp, dword ptr [rbp - 0x48]; mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e071: mov ebp, dword ptr [rbp - 0x50]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae6: mov ebp, dword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de4e: mov ebp, dword ptr [rbp - 0x60]; mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb1: mov ebp, dword ptr [rbp - 0x68]; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad10: mov ebp, dword ptr [rbp - 0x780]; mov r14, qword ptr [rbp - 0x778]; mov r15, qword ptr [rbp - 0x770]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc4: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecde: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eded: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313dd: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e295: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e355: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b5e: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8fe: mov ebp, dword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b8: mov ebp, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a78: mov ebp, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429eeb: mov ebp, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2eb: mov ebp, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e983: mov ebp, dword ptr [rbp - 0x80]; mov r14, qword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436afe: mov ebp, dword ptr [rbp - 0x80]; mov r14, qword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0e4: mov ebp, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bd0: mov ebp, dword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfd5: mov ebp, dword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d003: mov ebp, dword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a7c: mov ebp, dword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b7c: mov ebp, dword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x00000000004535ae: mov ebp, dword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a81: mov ebp, dword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b821: mov ebp, dword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445776: mov ebp, dword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf85: mov ebp, dword ptr [rbp - 0xa0]; mov r14, qword ptr [rbp - 0x98]; mov r15, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000409133: mov ebp, dword ptr [rbp - 0xa8]; mov r14, qword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fa9: mov ebp, dword ptr [rbp - 0xa8]; mov r14, qword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x000000000045b19d: mov ebp, dword ptr [rbp - 0xb00]; mov r14, qword ptr [rbp - 0xaf8]; mov r15, qword ptr [rbp - 0xaf0]; mov rsp, rbp; pop rbp; ret; 
0x00000000004309d7: mov ebp, dword ptr [rbp - 0xb8]; mov r14, qword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e62: mov ebp, dword ptr [rbp - 0xb8]; mov r14, qword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c317: mov ebp, dword ptr [rbp - 0xc0]; mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e54: mov ebp, dword ptr [rbp - 0xc0]; mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439058: mov ebp, dword ptr [rbp - 0xc0]; mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044fd: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4f4: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b9: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c765: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7ec: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e869: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab9: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee6b: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411ba2: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa42: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6b2: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f802: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdda: mov ebp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402964: mov ebp, dword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402964: mov ebp, dword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x0000000000457616: mov ebp, eax; mov eax, r13d; pop r13; pop r12; pop rbx; ret; 
0x000000000040eede: mov ebp, eax; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000040e062: mov ebp, eax; mov rsi, rbx; movzx edx, r13w; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000043c746: mov ebp, edi; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000431582: mov ebp, esp; call 0x313f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431572: mov ebp, esp; call 0x314b0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e7a2: mov ebp, esp; call 0x368c0; mov rsp, rbp; pop rbp; ret; 
0x000000000044b912: mov ebp, esp; lea r8, [rip + 0x2a385]; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e2: mov ebp, esp; lea r8, [rip + 0x2a5b5]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b72: mov ebp, esp; lea r8, [rip + 0x2c125]; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b32: mov ebp, esp; lea r8, [rip + 0x3f165]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b12: mov ebp, esp; lea r8, [rip + 0x3f185]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c2: mov ebp, esp; lea r8, [rip + 0x3f3d5]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bc2: mov ebp, esp; lea r9, [rip + 0x3f0d5]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cb2: mov ebp, esp; lea rax, [rip + 0x4fd15]; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000401e62: mov ebp, esp; lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e32: mov ebp, esp; lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e02: mov ebp, esp; lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x0000000000405172: mov ebp, esp; mov al, 1; mov rsp, rbp; pop rbp; ret; 
0x0000000000459032: mov ebp, esp; mov r8b, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000435412: mov ebp, esp; xor esi, esi; call 0xbaf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fd2: mov ebp, esp; xor r8b, r8b; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430612: mov ebp, esp; xor r9d, r9d; call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x000000000045c7bc: mov ebx, 0x24648d48; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042735c: mov ebx, 0x388b0005; call rdx; 
0x00000000004273d8: mov ebx, 0x3a8b0005; call rax; 
0x0000000000418183: mov ebx, 0x3a8b0006; call rax; 
0x0000000000419089: mov ebx, 0x4800050a; mov dword ptr [rbx], eax; pop rbx; ret; 
0x000000000045cba1: mov ebx, 0x48fffa52; lea esp, [rsp + 8]; ret; 
0x00000000004575a1: mov ebx, 0x48fffaa8; lea esp, [rsp + 8]; ret; 
0x000000000040a991: mov ebx, 0x48ffff8b; mov ebx, dword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x00000000004030a1: mov ebx, 0x48ffffed; lea esp, [rsp + 8]; ret; 
0x0000000000406d4f: mov ebx, 0x7cdbffff; and al, 0x10; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000401c53: mov ebx, 0x89480001; ret; 
0x0000000000401cc2: mov ebx, 0x89480001; ret; 
0x0000000000401d06: mov ebx, 0x89480001; ret; 
0x0000000000457071: mov ebx, 0x89fffabf; ret; 
0x000000000042fc84: mov ebx, 0x8d480000; and al, 8; ret; 
0x0000000000452f34: mov ebx, dword ptr [rax + 0x1c]; mov eax, ebx; pop rbx; ret; 
0x0000000000452f55: mov ebx, dword ptr [rax + 0x20]; mov rax, rbx; pop rbx; ret; 
0x00000000004597c1: mov ebx, dword ptr [rax + 2]; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000452f15: mov ebx, dword ptr [rax + 8]; mov rax, rbx; pop rbx; ret; 
0x00000000004181a4: mov ebx, dword ptr [rax]; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x0000000000452ef5: mov ebx, dword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000403ba8: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403d02: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b650: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6cd: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b8b0: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411790: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004161b9: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000416219: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d67f: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440be1: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044feb8: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffaf: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450064: mov ebx, dword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401229: mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401374: mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004013fd: mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004014ff: mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401644: mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401df2: mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a917: mov ebx, dword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a996: mov ebx, dword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa1f: mov ebx, dword ptr [rbp - 0x118]; mov r12, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x0000000000410359: mov ebx, dword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a89e: mov ebx, dword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040d1b4: mov ebx, dword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044f5: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4ec: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b1: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c75d: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7e4: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e861: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab1: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee63: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411b9a: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa3a: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6aa: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7fa: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd2: mov ebx, dword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040954d: mov ebx, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e168: mov ebx, dword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f8c8: mov ebx, dword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443348: mov ebx, dword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043962a: mov ebx, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043981c: mov ebx, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d0f5: mov ebx, dword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440625: mov ebx, dword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004396b4: mov ebx, dword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043989f: mov ebx, dword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043c0ef: mov ebx, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450f0a: mov ebx, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042df5d: mov ebx, dword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043507c: mov ebx, dword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043510c: mov ebx, dword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004351c4: mov ebx, dword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435264: mov ebx, dword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436cff: mov ebx, dword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e0f5: mov ebx, dword ptr [rbp - 0x48]; mov r12, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b18f: mov ebx, dword ptr [rbp - 0x598]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ade: mov ebx, dword ptr [rbp - 0x60]; mov r12, qword ptr [rbp - 0x58]; mov r13, qword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab29: mov ebx, dword ptr [rbp - 0x70]; mov r12, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119ad: mov ebx, dword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a6d: mov ebx, dword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429ee0: mov ebx, dword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2e0: mov ebx, dword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000043558f: mov ebx, dword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0d6: mov ebx, dword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov r13, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444bc9: mov ebx, dword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445885: mov ebx, dword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000452c61: mov ebx, dword ptr [rbp - 0x98]; mov r12, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010cf: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411bf2: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412eee: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412fd0: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417da8: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417e86: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004185d2: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfdd: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe7: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f00d: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004416cd: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a07: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a2d: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004531d3: mov ebx, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004189b1: mov ebx, dword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004189b1: mov ebx, dword ptr [rdi + 0x10]; call 0x19220; call rbx; pop rbx; ret; 
0x0000000000458c0a: mov ebx, dword ptr [rsp]; mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000416092: mov ebx, edi; call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000415ec2: mov ebx, edi; call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x0000000000423bc2: mov ebx, edi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x0000000000423bc2: mov ebx, edi; call 0x2990; call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x000000000043b902: mov ebx, edi; call 0x3b8e0; add rax, rbx; pop rbx; ret; 
0x000000000042bc02: mov ebx, edi; call 0xbaf0; mov rdi, rbx; call 0x2bba0; pop rbx; ret; 
0x000000000042e5f2: mov ebx, edi; call 0xbaf0; mov rdi, rbx; call 0xcd10; pop rbx; ret; 
0x0000000000429812: mov ebx, edi; call 0xe140; mov rdi, rbx; call 0x297b0; pop rbx; ret; 
0x00000000004169f2: mov ebx, edi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169f2: mov ebx, edi; lea rax, [rip + 0x52065]; call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x00000000004169d2: mov ebx, edi; lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x00000000004169d2: mov ebx, edi; lea rax, [rip + 0x52085]; call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x000000000041c4d2: mov ebx, edi; mov edi, dword ptr [rbx]; call 0x1bbb0; mov dword ptr [rbx], 0xffffffff; pop rbx; ret; 
0x000000000043e1d2: mov ebx, edi; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x00000000004418e2: mov ebx, edi; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000419082: mov ebx, edi; mov rdi, rsi; call qword ptr [rip + 0x50abb]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x00000000004527c6: mov ebx, esi; mov rsi, r12; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x00000000004197aa: mov ebx, esp; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447d21: mov ecx, 0; test rdx, rdx; jne 0x47d2f; xor eax, eax; ret; 
0x0000000000439329: mov ecx, 0x13; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x000000000040db2d: mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db5f: mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db7d: mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db9d: mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbcf: mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbed: mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000417624: mov ecx, 0x1cebffff; mov rsi, qword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x00000000004300c5: mov ecx, 0x20; call 0x300e0; lea rsp, [rsp + 8]; ret; 
0x00000000004301a5: mov ecx, 0x20; call 0x301c0; lea rsp, [rsp + 8]; ret; 
0x000000000044a1f5: mov ecx, 0x20; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433ab5: mov ecx, 0x20; lea rdx, [rip + 0x2d88f]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x000000000041ad97: mov ecx, 0x23; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x000000000045c73e: mov ecx, 0x24648d48; or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000416a17: mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a2d: mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000042f323: mov ecx, 0x41000000; pop rbp; pop r12; pop rbx; ret; 
0x0000000000425823: mov ecx, 0x48fffff6; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004192b1: mov ecx, 0x5480006; rol byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000042c7d3: mov ecx, 0x8800027d; ret; 
0x000000000042c7f3: mov ecx, 0x88fffe87; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040cb6a: mov ecx, 0x89480000; in al, dx; pop rbp; ret; 
0x0000000000449619: mov ecx, 0x8d48fffc; and al, 0x78; ret; 
0x0000000000458561: mov ecx, 0x97e80002; cmpsb byte ptr [rsi], byte ptr [rdi]; cli; dec dword ptr [rax - 0x77]; ret; 
0x00000000004239d7: mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239ed: mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000459272: mov ecx, 0xbf0f08e0; test byte ptr [rcx], -0x10; movsx eax, ax; ret; 
0x0000000000419027: mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041903d: mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000438d82: mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000438dfb: mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e5b: mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f4a: mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438d0d: mov ecx, 0xf; xor edx, edx; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000044a1d5: mov ecx, 0xffffffe0; lea rdx, [rip + 0x1714f]; call 0x4a110; lea rsp, [rsp + 8]; ret; 
0x0000000000433a55: mov ecx, 0xffffffe0; lea rdx, [rip + 0x2d8cf]; call 0x33990; lea rsp, [rsp + 8]; ret; 
0x00000000004395a9: mov ecx, 0xffffffff; xor edx, edx; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439576: mov ecx, 0xffffffff; xor edx, edx; call 0x39150; lea rsp, [rsp + 8]; ret; 
0x000000000043913a: mov ecx, 1; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000433d2b: mov ecx, 1; jmp 0x33d34; xor ecx, ecx; mov eax, ecx; ret; 
0x000000000041ee88: mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e630: mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e50c: mov ecx, 1; lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x000000000043920a: mov ecx, 2; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004391aa: mov ecx, 4; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000439262: mov ecx, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392d2: mov ecx, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000419280: mov ecx, 5; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000041b707: mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b71d: mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b74f: mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000043f8e8: mov ecx, dword ptr [rax + 0x10]; mov rdi, rax; xor edx, edx; call 0x3f900; lea rsp, [rsp + 8]; ret; 
0x0000000000443368: mov ecx, dword ptr [rax + 0x10]; mov rdi, rax; xor edx, edx; call 0x43380; lea rsp, [rsp + 8]; ret; 
0x0000000000414dea: mov ecx, dword ptr [rax + 0x20]; mov edx, dword ptr [rax + 0x1c]; mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414c9b: mov ecx, dword ptr [rax + 0x20]; mov edx, dword ptr [rax + 0x1c]; mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x00000000004029ce: mov ecx, dword ptr [rax + 0x20]; mov qword ptr [rdx], rcx; mov rdi, rax; call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x000000000041968f: mov ecx, dword ptr [rax]; mov qword ptr [rcx + 0x20], r8; mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x000000000045901c: mov ecx, dword ptr [rax]; mov r8b, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000457500: mov ecx, dword ptr [rax]; mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000458ffc: mov ecx, dword ptr [rax]; xor r8b, r8b; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f7c: mov ecx, dword ptr [rbp + 0x10]; syscall; 
0x0000000000434a19: mov ecx, dword ptr [rcx - 8]; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x0000000000417c79: mov ecx, dword ptr [rdi]; mov rdx, qword ptr [rcx + 8]; mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x0000000000419364: mov ecx, dword ptr [rdx + 0x10]; mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000041ef48: mov ecx, dword ptr [rdx + 0x18]; cmp rcx, qword ptr [rdx + 0x20]; jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x00000000004193a4: mov ecx, dword ptr [rdx + 0x20]; mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x000000000040783b: mov ecx, dword ptr [rsi]; mov dword ptr [rax], ecx; mov qword ptr [rsi], 0; ret; 
0x000000000043a98b: mov ecx, dword ptr [rsp]; add dword ptr [rcx + 0x38], 1; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415422: mov ecx, eax; call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x0000000000431da0: mov ecx, eax; mov r8, r9; movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431960: mov ecx, eax; mov r8, r9; movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d70: mov ecx, eax; movsd xmm0, qword ptr [rax]; lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431930: mov ecx, eax; movss xmm0, dword ptr [rax]; lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x000000000040ea12: mov ecx, eax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040507e: mov ecx, eax; shl edx, cl; or edi, edx; call 0x5090; lea rsp, [rsp + 8]; ret; 
0x0000000000403a74: mov ecx, eax; test rcx, rcx; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x000000000042fcfd: mov ecx, ebp; call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd3c: mov ecx, ebp; call 0x2fe00; pop r13; pop r12; pop rbx; ret; 
0x0000000000403a40: mov ecx, ecx; sub r9, rsi; mov rax, r9; ret; 
0x0000000000456d58: mov ecx, edi; and rdx, qword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x000000000040260b: mov ecx, edi; je 0x2614; lock inc dword ptr [rcx]; jmp 0x2616; inc dword ptr [rcx]; ret; 
0x000000000040262b: mov ecx, edi; je 0x2635; lock inc qword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x0000000000456d15: mov ecx, edi; or rdx, qword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000407922: mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x00000000004528b4: mov ecx, edx; imul rcx, rcx, 0x18; lea rsi, [rip + 0x25cff]; lea rax, [rsi + rcx]; ret; 
0x00000000004396e6: mov ecx, edx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437306: mov ecx, edx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437346: mov ecx, edx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c90f: mov ecx, edx; mov rdx, rax; mov edi, 0x115; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576af: mov ecx, edx; mov rdx, rax; mov edi, 0x11; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000457552: mov ecx, edx; mov rdx, rax; mov edi, 0x17; call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x000000000040ec62: mov ecx, esi; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x00000000004324bb: mov ecx, esi; shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x00000000004326ab: mov ecx, esi; shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x000000000043289b: mov ecx, esi; shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432a8b: mov ecx, esi; shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432c7b: mov ecx, esi; shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432e4b: mov ecx, esi; shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432c3b: mov ecx, esi; shl eax, cl; not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e0b: mov ecx, esi; shl eax, cl; not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432c1b: mov ecx, esi; shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432deb: mov ecx, esi; shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x000000000043264e: mov ecx, esi; shl eax, cl; or edx, eax; mov byte ptr [rdi], dl; movsx eax, dl; ret; 
0x000000000043245e: mov ecx, esi; shl eax, cl; or edx, eax; mov byte ptr [rdi], dl; movzx eax, dl; ret; 
0x000000000043283e: mov ecx, esi; shl eax, cl; or edx, eax; mov word ptr [rdi], dx; movsx eax, dx; ret; 
0x0000000000432a2e: mov ecx, esi; shl eax, cl; or edx, eax; mov word ptr [rdi], dx; movzx eax, dx; ret; 
0x000000000043249b: mov ecx, esi; shl eax, cl; xor al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x000000000043268b: mov ecx, esi; shl eax, cl; xor al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000432a6b: mov ecx, esi; shl eax, cl; xor ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043287b: mov ecx, esi; shl eax, cl; xor ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000432c5b: mov ecx, esi; shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e2b: mov ecx, esi; shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x000000000043b426: mov ecx, esp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c16: mov ecx, esp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f6: mov ecx, esp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x000000000040d737: mov ecx, esp; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x0000000000431d9f: mov ecx, r8d; mov r8, r9; movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043195f: mov ecx, r8d; mov r8, r9; movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d6f: mov ecx, r8d; movsd xmm0, qword ptr [rax]; lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043192f: mov ecx, r8d; movss xmm0, dword ptr [rax]; lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000402fa1: mov edi, 0x10; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c914: mov edi, 0x115; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576b4: mov edi, 0x11; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000457711: mov edi, 0x13; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000418ae5: mov edi, 0x14e8f6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045bc35: mov edi, 0x14e8f6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402ecb: mov edi, 0x15; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457458: mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457557: mov edi, 0x17; call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x000000000045c825: mov edi, 0x18; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee8: mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402f0b: mov edi, 0x21; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000043281c: mov edi, 0x22ade830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040303b: mov edi, 0x23; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000427878: mov edi, 0x24648d48; or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004327cc: mov edi, 0x248de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000456e8e: mov edi, 0x26; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004078a1: mov edi, 0x26d348ca; ret; 
0x00000000004327ec: mov edi, 0x270de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402fc5: mov edi, 0x27; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x00000000004272cc: mov edi, 0x388b0005; call rdx; 
0x000000000042732f: mov edi, 0x388b0005; call rdx; 
0x000000000040848d: mov edi, 0x3948a445; ret 0x667f; 
0x000000000040846e: mov edi, 0x3948a445; ret 0xd7e; 
0x0000000000402e75: mov edi, 0x39; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x00000000004272fb: mov edi, 0x3a8b0005; call rax; 
0x0000000000417d70: mov edi, 0x3a8b0006; call rax; 
0x0000000000417dc8: mov edi, 0x3a8b0006; call rax; 
0x00000000004574de: mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457505: mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000458eb9: mov edi, 0x3c8d48d3; shr al, 1; sub al, 0x2c; sti; jmp qword ptr [rsi + 0x41]; 
0x0000000000402ea4: mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000457204: mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000409ad4: mov edi, 0x428d48d2; and byte ptr [rsi - 0x77], ah; ret; 
0x0000000000433afd: mov edi, 0x48000007; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004574bb: mov edi, 0x48; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045747e: mov edi, 0x48; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045749e: mov edi, 0x48; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045755d: mov edi, 0x48fffaa9; lea esp, [rsp + 8]; ret; 
0x000000000040301d: mov edi, 0x48ffffee; lea esp, [rsp + 8]; ret; 
0x0000000000402e3b: mov edi, 0x4d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040305b: mov edi, 0x4f; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000408485: mov edi, 0x508d48c7; add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0x667f; 
0x0000000000408466: mov edi, 0x508d48c7; add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0xd7e; 
0x0000000000402ba8: mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b6b: mov edi, 0x52; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402bcb: mov edi, 0x53; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402be8: mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b48: mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402fee: mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000040307b: mov edi, 0x60; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000040309b: mov edi, 0x61; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c808: mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000040874e: mov edi, 0x648d48c0; and al, 8; ret; 
0x00000000004087dd: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409292: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409485: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409e1d: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409e4b: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000415a7c: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000415b48: mov edi, 0x648d48c0; and al, 8; ret; 
0x00000000004162bc: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000416388: mov edi, 0x648d48c0; and al, 8; ret; 
0x00000000004326cb: mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409fca: mov edi, 0x648d48c5; and al, 0x40; pop r13; pop r12; pop rbx; ret; 
0x0000000000457528: mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004572e7: mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000040a19e: mov edi, 0x6b; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000457225: mov edi, 0x6e; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457325: mov edi, 0x6f; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x0000000000457368: mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c8cb: mov edi, 0x7d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8eb: mov edi, 0x7e; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e18: mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000456e3d: mov edi, 0x82; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000417dd8: mov edi, 0x83480006; ret 0x6608; 
0x000000000045743b: mov edi, 0x84; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004573d5: mov edi, 0x85; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000401839: mov edi, 0x89480001; ret; 
0x00000000004018cc: mov edi, 0x89480001; ret; 
0x0000000000455ead: mov edi, 0x89fffacf; ret; 
0x000000000040791d: mov edi, 0x8b44fa; mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x0000000000418e7f: mov edi, 0x8b480006; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e4b: mov edi, 0x8b480006; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418eb7: mov edi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eb6: mov edi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e13: mov edi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab5b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418de4: mov edi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab8a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000448240: mov edi, 0x8d48fffe; adc eax, 0x3bb16; mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000459271: mov edi, 0x8e0c1c7; movsx esi, si; or eax, esi; movsx eax, ax; ret; 
0x0000000000459281: mov edi, 0x8e0c1c7; or eax, 0x7f; movsx eax, ax; ret; 
0x000000000045ca81: mov edi, 0x9a; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004030bb: mov edi, 0xa0; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f7e: mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f5b: mov edi, 0xb; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000408e8e: mov edi, 0xbf0f9855; mov byte ptr [r9], r13b; ret 0xbf0f; 
0x0000000000408cb2: mov edi, 0xbf0fb85d; mov r8b, 0x29; ret; 
0x00000000004326f9: mov edi, 0xc78948f6; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000041665a: mov edi, 0xc78948f6; mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x00000000004155a9: mov edi, 0xc78948f6; mov edx, 0xfffffffe; call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f09: mov edi, 0xc78948f6; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000040ef53: mov edi, 0xc9; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000402a58: mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000417ee2: mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x000000000045ca53: mov edi, 0xca; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c96e: mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045c9cd: mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000040dc0f: mov edi, 0xcc; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x00000000004147ee: mov edi, 0xcc; call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x0000000000418cd5: mov edi, 0xd3; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000045c848: mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000417cff: mov edi, 0xd7; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d3f: mov edi, 0xd8; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000402e1c: mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000423f92: mov edi, 0xe0; add byte ptr [rbx + rcx + 0x48], dh; mov eax, dword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000418fb5: mov edi, 0xe3; call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x0000000000418d1d: mov edi, 0xe3; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000045cb9b: mov edi, 0xe3; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb7b: mov edi, 0xe4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000414a82: mov edi, 0xe7; call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x0000000000402dc8: mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000041b073: mov edi, 0xe8; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000045c8a4: mov edi, 0xe8; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000403017: mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000417d1f: mov edi, 0xec; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040a03e: mov edi, 0xf8bf0ff6; call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x000000000044a29d: mov edi, 0xff00039a; nop; mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x00000000004253f9: mov edi, 0xff25ff; add byte ptr [rax], al; or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000045cb3b: mov edi, 0xff; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000407ef3: mov edi, 0xfffef885; jmp ptr [rcx]; ret 0x8966; 
0x0000000000408e81: mov edi, 0xffff7085; jmp ptr [rcx]; ret 0x8966; 
0x0000000000408eaf: mov edi, 0xffff7895; inc dword ptr [rcx]; shl byte ptr [rsi - 0x77], 1; ret 0x8166; 
0x0000000000402b21: mov edi, 1; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000425609: mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000426e92: mov edi, 1; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x0000000000459db1: mov edi, 2; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402a87: mov edi, 2; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa8: mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b8b: mov edi, 4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000424202: mov edi, 4; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x0000000000424397: mov edi, 4; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x0000000000410143: mov edi, 4; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000402e5b: mov edi, 5; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045759b: mov edi, 6; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045757d: mov edi, 7; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004254a5: mov edi, 7; call 0x253d0; xor edi, edi; call 0x25410; lea rsp, [rsp + 8]; ret; 
0x0000000000402ad1: mov edi, 8; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f38: mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000401bfe: mov edi, dword ptr [0x482f00]; call rax; 
0x0000000000459a7b: mov edi, dword ptr [rax + 0x808]; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x00000000004149b9: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414999: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414979: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000414979: mov edi, dword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000430a46: mov edi, dword ptr [rax - 0x30]; lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ec6: mov edi, dword ptr [rax - 0x30]; lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000042757b: mov edi, dword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000420669: mov edi, dword ptr [rax]; call 0x19140; pop rbx; ret; 
0x00000000004262aa: mov edi, dword ptr [rax]; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004586a5: mov edi, dword ptr [rax]; call 0x2ee0; mov dword ptr [rbx], eax; pop rbx; ret; 
0x000000000045876a: mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x0000000000431169: mov edi, dword ptr [rax]; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042d7f8: mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d818: mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000455b9d: mov edi, dword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000433919: mov edi, dword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000423bdc: mov edi, dword ptr [rax]; call qword ptr [rip + 0x6030c]; lea rsp, [rsp + 8]; ret; 
0x00000000004050b0: mov edi, dword ptr [rax]; call rdx; 
0x00000000004114b2: mov edi, dword ptr [rax]; call rdx; 
0x0000000000415323: mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c17: mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c41: mov edi, dword ptr [rax]; call rdx; 
0x0000000000417feb: mov edi, dword ptr [rax]; call rdx; 
0x000000000041801b: mov edi, dword ptr [rax]; call rdx; 
0x000000000041804a: mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d91: mov edi, dword ptr [rax]; call rdx; 
0x0000000000418dc2: mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e5d: mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e91: mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f64: mov edi, dword ptr [rax]; call rdx; 
0x000000000041aff3: mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7c3: mov edi, dword ptr [rax]; call rdx; 
0x000000000041c192: mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5d6: mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca5b: mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbfa: mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc42: mov edi, dword ptr [rax]; call rdx; 
0x000000000041ccaa: mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd6b: mov edi, dword ptr [rax]; call rdx; 
0x000000000041cecf: mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfb6: mov edi, dword ptr [rax]; call rdx; 
0x000000000041d24b: mov edi, dword ptr [rax]; call rdx; 
0x000000000041d39b: mov edi, dword ptr [rax]; call rdx; 
0x000000000041d4a1: mov edi, dword ptr [rax]; call rdx; 
0x000000000041d68b: mov edi, dword ptr [rax]; call rdx; 
0x000000000041d94a: mov edi, dword ptr [rax]; call rdx; 
0x000000000041db0a: mov edi, dword ptr [rax]; call rdx; 
0x000000000041db77: mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc62: mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd76: mov edi, dword ptr [rax]; call rdx; 
0x000000000041de02: mov edi, dword ptr [rax]; call rdx; 
0x000000000041dea2: mov edi, dword ptr [rax]; call rdx; 
0x000000000041df42: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e001: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e094: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e10d: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2ba: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e45e: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e759: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e829: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e91f: mov edi, dword ptr [rax]; call rdx; 
0x000000000041e96c: mov edi, dword ptr [rax]; call rdx; 
0x000000000041edbc: mov edi, dword ptr [rax]; call rdx; 
0x000000000041ee08: mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdf6: mov edi, dword ptr [rax]; call rdx; 
0x00000000004202eb: mov edi, dword ptr [rax]; call rdx; 
0x00000000004204e4: mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fd4: mov edi, dword ptr [rax]; call rdx; 
0x00000000004212e5: mov edi, dword ptr [rax]; call rdx; 
0x000000000042142f: mov edi, dword ptr [rax]; call rdx; 
0x0000000000421535: mov edi, dword ptr [rax]; call rdx; 
0x0000000000421680: mov edi, dword ptr [rax]; call rdx; 
0x0000000000421aca: mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b8b: mov edi, dword ptr [rax]; call rdx; 
0x0000000000421cef: mov edi, dword ptr [rax]; call rdx; 
0x0000000000422502: mov edi, dword ptr [rax]; call rdx; 
0x0000000000422573: mov edi, dword ptr [rax]; call rdx; 
0x000000000042260e: mov edi, dword ptr [rax]; call rdx; 
0x000000000042276a: mov edi, dword ptr [rax]; call rdx; 
0x00000000004228a1: mov edi, dword ptr [rax]; call rdx; 
0x0000000000423377: mov edi, dword ptr [rax]; call rdx; 
0x000000000042452a: mov edi, dword ptr [rax]; call rdx; 
0x0000000000427155: mov edi, dword ptr [rax]; call rdx; 
0x00000000004272cf: mov edi, dword ptr [rax]; call rdx; 
0x0000000000427332: mov edi, dword ptr [rax]; call rdx; 
0x000000000042735f: mov edi, dword ptr [rax]; call rdx; 
0x0000000000428401: mov edi, dword ptr [rax]; call rdx; 
0x000000000042842c: mov edi, dword ptr [rax]; call rdx; 
0x0000000000428463: mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c3e: mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cce: mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d5e: mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5c1: mov edi, dword ptr [rax]; call rdx; 
0x000000000042c03e: mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0ce: mov edi, dword ptr [rax]; call rdx; 
0x000000000042c15e: mov edi, dword ptr [rax]; call rdx; 
0x00000000004500d5: mov edi, dword ptr [rax]; call rdx; 
0x0000000000452624: mov edi, dword ptr [rax]; call rdx; 
0x0000000000452650: mov edi, dword ptr [rax]; call rdx; 
0x000000000045abb2: mov edi, dword ptr [rax]; call rdx; 
0x000000000045ac08: mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd00: mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd4b: mov edi, dword ptr [rax]; call rdx; 
0x0000000000414df5: mov edi, dword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca6: mov edi, dword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000426c89: mov edi, dword ptr [rax]; mov esi, 0x4b2f; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x0000000000426be7: mov edi, dword ptr [rax]; mov r8d, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c27: mov edi, dword ptr [rax]; mov r8d, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000414270: mov edi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414180: mov edi, dword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000427210: mov edi, dword ptr [rax]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000426cd5: mov edi, dword ptr [rax]; xor edx, edx; mov esi, 0x4b2f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000042f7b8: mov edi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f9a2: mov edi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a7: mov edi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043155d: mov edi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c4c: mov edi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004086fa: mov edi, dword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040407f: mov edi, dword ptr [rbp - 0x130]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7cb: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa17: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b392: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa69: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434ea: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3ca: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d518: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d700: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc0e: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb6: mov edi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb84: mov edi, dword ptr [rbp - 0x1a0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000438bea: mov edi, dword ptr [rbp - 0x1d0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449271: mov edi, dword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b009: mov edi, dword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e453: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430792: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b73: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bf2: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043a6ed: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d34f: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f390: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440885: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e13: mov edi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004517df: mov edi, dword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b02: mov edi, dword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000042f932: mov edi, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb5c: mov edi, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d23f: mov edi, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e592: mov edi, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440772: mov edi, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e25: mov edi, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451e3d: mov edi, dword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452180: mov edi, dword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000042fc1f: mov edi, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d565: mov edi, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a9b: mov edi, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c8: mov edi, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db16: mov edi, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044def0: mov edi, dword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412aff: mov edi, dword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455890: mov edi, dword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fc0: mov edi, dword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f7a0: mov edi, dword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443224: mov edi, dword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000041204b: mov edi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd6: mov edi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5ed: mov edi, dword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000044306f: mov edi, dword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000446cbb: mov edi, dword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000408d33: mov edi, dword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e98b: mov edi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b06: mov edi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad1e: mov edi, dword ptr [rbp - 0x770]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bdb: mov edi, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfe0: mov edi, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d00e: mov edi, dword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a8f: mov edi, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b82f: mov edi, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a19: mov edi, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e129: mov edi, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441819: mov edi, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444ac1: mov edi, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf93: mov edi, dword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000409141: mov edi, dword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fb7: mov edi, dword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x00000000004309e5: mov edi, dword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e70: mov edi, dword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045b1ab: mov edi, dword ptr [rbp - 0xaf0]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c325: mov edi, dword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e62: mov edi, dword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439066: mov edi, dword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401082: mov edi, dword ptr [rbp - 4]; syscall; 
0x0000000000401082: mov edi, dword ptr [rbp - 4]; syscall; jmp 0x107d; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6ec: mov edi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041def7: mov edi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e056: mov edi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300af: mov edi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043056d: mov edi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043068d: mov edi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000456b1a: mov edi, dword ptr [rbx + 0x10]; call 0x19140; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x0000000000401cc1: mov edi, dword ptr [rbx - 0x76b7ffff]; ret; 
0x0000000000454b69: mov edi, dword ptr [rbx]; call 0x19220; mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000041c4d4: mov edi, dword ptr [rbx]; call 0x1bbb0; mov dword ptr [rbx], 0xffffffff; pop rbx; ret; 
0x0000000000415009: mov edi, dword ptr [rbx]; mov esi, 1; call 0x2950; pop rbx; ret; 
0x0000000000412feb: mov edi, dword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413044: mov edi, dword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413bc6: mov edi, dword ptr [rdi + 0x18]; call 0xb3b0; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000040296c: mov edi, dword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000040296c: mov edi, dword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x000000000042e7b6: mov edi, dword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x000000000045a09c: mov edi, dword ptr [rdi]; call 0x2aa0; lea rsp, [rsp + 8]; ret; 
0x00000000004582e5: mov edi, dword ptr [rdi]; call 0x2e50; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000458305: mov edi, dword ptr [rdi]; call 0x2e50; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431106: mov edi, dword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431126: mov edi, dword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x0000000000459de5: mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x0000000000459e05: mov edi, dword ptr [rdi]; call 0x58a60; lea rsp, [rsp + 8]; ret; 
0x000000000045ba55: mov edi, dword ptr [rdi]; call 0x5ba20; lea rsp, [rsp + 8]; ret; 
0x000000000042f1e6: mov edi, dword ptr [rdi]; call 0xca70; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000414317: mov edi, dword ptr [rdi]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x00000000004032ac: mov edi, dword ptr [rdx]; call rax; 
0x00000000004032f6: mov edi, dword ptr [rdx]; call rax; 
0x00000000004050e2: mov edi, dword ptr [rdx]; call rax; 
0x000000000041147a: mov edi, dword ptr [rdx]; call rax; 
0x00000000004114e1: mov edi, dword ptr [rdx]; call rax; 
0x0000000000411519: mov edi, dword ptr [rdx]; call rax; 
0x00000000004152b3: mov edi, dword ptr [rdx]; call rax; 
0x0000000000415351: mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d73: mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dcb: mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e1b: mov edi, dword ptr [rdx]; call rax; 
0x0000000000417ec2: mov edi, dword ptr [rdx]; call rax; 
0x000000000041807a: mov edi, dword ptr [rdx]; call rax; 
0x00000000004180a9: mov edi, dword ptr [rdx]; call rax; 
0x00000000004180d9: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418108: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418138: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418186: mov edi, dword ptr [rdx]; call rax; 
0x00000000004181e8: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418214: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d59: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418df6: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e25: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ec9: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418efd: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f35: mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f9c: mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8ec: mov edi, dword ptr [rdx]; call rax; 
0x000000000041a923: mov edi, dword ptr [rdx]; call rax; 
0x000000000041a955: mov edi, dword ptr [rdx]; call rax; 
0x000000000041a97f: mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9b2: mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa23: mov edi, dword ptr [rdx]; call rax; 
0x000000000041afbb: mov edi, dword ptr [rdx]; call rax; 
0x000000000041b022: mov edi, dword ptr [rdx]; call rax; 
0x000000000041b05a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3bb: mov edi, dword ptr [rdx]; call rax; 
0x000000000041b78b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7f2: mov edi, dword ptr [rdx]; call rax; 
0x000000000041b82a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc38: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc79: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bccb: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd1b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bda7: mov edi, dword ptr [rdx]; call rax; 
0x000000000041be37: mov edi, dword ptr [rdx]; call rax; 
0x000000000041be92: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bede: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf32: mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf8f: mov edi, dword ptr [rdx]; call rax; 
0x000000000041c01b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041c558: mov edi, dword ptr [rdx]; call rax; 
0x000000000041c64c: mov edi, dword ptr [rdx]; call rax; 
0x000000000041c96a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9f0: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cac7: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb0a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb5a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cbaa: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc70: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cce1: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cda6: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdff: mov edi, dword ptr [rdx]; call rax; 
0x000000000041cf0a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1d1: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d21d: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2db: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d321: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d36d: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d45b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4ed: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d51b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5cb: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d611: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d65d: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d75b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d82b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d86b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041d97e: mov edi, dword ptr [rdx]; call rax; 
0x000000000041dba5: mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbe3: mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc90: mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcd3: mov edi, dword ptr [rdx]; call rax; 
0x000000000041dda4: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ded0: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e02f: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e13b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1bf: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2e8: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e398: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e48c: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4fb: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e57b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5fb: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e69b: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8ee: mov edi, dword ptr [rdx]; call rax; 
0x000000000041e996: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea0f: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea83: mov edi, dword ptr [rdx]; call rax; 
0x000000000041eaf3: mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb73: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebbf: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebed: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec73: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecbf: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecf0: mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee39: mov edi, dword ptr [rdx]; call rax; 
0x000000000041f084: mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0d9: mov edi, dword ptr [rdx]; call rax; 
0x000000000041f10a: mov edi, dword ptr [rdx]; call rax; 
0x000000000041f14b: mov edi, dword ptr [rdx]; call rax; 
0x0000000000420035: mov edi, dword ptr [rdx]; call rax; 
0x00000000004200cf: mov edi, dword ptr [rdx]; call rax; 
0x000000000042019f: mov edi, dword ptr [rdx]; call rax; 
0x000000000042023a: mov edi, dword ptr [rdx]; call rax; 
0x000000000042037a: mov edi, dword ptr [rdx]; call rax; 
0x000000000042042b: mov edi, dword ptr [rdx]; call rax; 
0x0000000000420583: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421032: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421065: mov edi, dword ptr [rdx]; call rax; 
0x00000000004210c4: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421122: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421155: mov edi, dword ptr [rdx]; call rax; 
0x00000000004211ba: mov edi, dword ptr [rdx]; call rax; 
0x000000000042120a: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421275: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421313: mov edi, dword ptr [rdx]; call rax; 
0x000000000042146a: mov edi, dword ptr [rdx]; call rax; 
0x00000000004214c5: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421563: mov edi, dword ptr [rdx]; call rax; 
0x00000000004216b9: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421704: mov edi, dword ptr [rdx]; call rax; 
0x000000000042175f: mov edi, dword ptr [rdx]; call rax; 
0x00000000004217b4: mov edi, dword ptr [rdx]; call rax; 
0x000000000042181a: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421861: mov edi, dword ptr [rdx]; call rax; 
0x00000000004218ca: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421914: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421971: mov edi, dword ptr [rdx]; call rax; 
0x00000000004219aa: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a05: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a3a: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a93: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421b01: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bc6: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c1f: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d2a: mov edi, dword ptr [rdx]; call rax; 
0x0000000000421dc3: mov edi, dword ptr [rdx]; call rax; 
0x00000000004222e4: mov edi, dword ptr [rdx]; call rax; 
0x0000000000422364: mov edi, dword ptr [rdx]; call rax; 
0x00000000004223c4: mov edi, dword ptr [rdx]; call rax; 
0x0000000000422444: mov edi, dword ptr [rdx]; call rax; 
0x00000000004224a3: mov edi, dword ptr [rdx]; call rax; 
0x0000000000422530: mov edi, dword ptr [rdx]; call rax; 
0x00000000004225e0: mov edi, dword ptr [rdx]; call rax; 
0x000000000042263c: mov edi, dword ptr [rdx]; call rax; 
0x000000000042279e: mov edi, dword ptr [rdx]; call rax; 
0x000000000042296e: mov edi, dword ptr [rdx]; call rax; 
0x000000000042299c: mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e73: mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f23: mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fd3: mov edi, dword ptr [rdx]; call rax; 
0x0000000000423133: mov edi, dword ptr [rdx]; call rax; 
0x00000000004231e3: mov edi, dword ptr [rdx]; call rax; 
0x0000000000423293: mov edi, dword ptr [rdx]; call rax; 
0x0000000000423613: mov edi, dword ptr [rdx]; call rax; 
0x00000000004236c3: mov edi, dword ptr [rdx]; call rax; 
0x0000000000423773: mov edi, dword ptr [rdx]; call rax; 
0x000000000042423b: mov edi, dword ptr [rdx]; call rax; 
0x0000000000424271: mov edi, dword ptr [rdx]; call rax; 
0x00000000004242aa: mov edi, dword ptr [rdx]; call rax; 
0x00000000004242e3: mov edi, dword ptr [rdx]; call rax; 
0x000000000042431c: mov edi, dword ptr [rdx]; call rax; 
0x0000000000424500: mov edi, dword ptr [rdx]; call rax; 
0x0000000000424566: mov edi, dword ptr [rdx]; call rax; 
0x00000000004245ae: mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c78: mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cc4: mov edi, dword ptr [rdx]; call rax; 
0x000000000042723f: mov edi, dword ptr [rdx]; call rax; 
0x000000000042726e: mov edi, dword ptr [rdx]; call rax; 
0x00000000004272a2: mov edi, dword ptr [rdx]; call rax; 
0x00000000004272fe: mov edi, dword ptr [rdx]; call rax; 
0x0000000000427397: mov edi, dword ptr [rdx]; call rax; 
0x00000000004273db: mov edi, dword ptr [rdx]; call rax; 
0x000000000042740f: mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c86: mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d16: mov edi, dword ptr [rdx]; call rax; 
0x0000000000429da6: mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5ec: mov edi, dword ptr [rdx]; call rax; 
0x000000000042a637: mov edi, dword ptr [rdx]; call rax; 
0x000000000042c086: mov edi, dword ptr [rdx]; call rax; 
0x000000000042c116: mov edi, dword ptr [rdx]; call rax; 
0x000000000042c1a6: mov edi, dword ptr [rdx]; call rax; 
0x0000000000452b01: mov edi, dword ptr [rdx]; call rax; 
0x00000000004566f0: mov edi, dword ptr [rdx]; call rax; 
0x000000000045a35a: mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3de: mov edi, dword ptr [rdx]; call rax; 
0x000000000045afa9: mov edi, dword ptr [rdx]; call rax; 
0x000000000045afff: mov edi, dword ptr [rdx]; call rax; 
0x000000000045b055: mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccc7: mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd84: mov edi, dword ptr [rdx]; call rax; 
0x0000000000452ec8: mov edi, dword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000041a782: mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a714: mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a689: mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a62c: mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a469: mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x000000000041a1c2: mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x0000000000419e44: mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x0000000000419d0b: mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x00000000004192a3: mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419253: mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x00000000004184fb: mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x0000000000415147: mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004150cb: mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x00000000004150a4: mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x000000000041503a: mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x0000000000414fed: mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000414fc0: mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414f34: mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414ec9: mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414e87: mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414e30: mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414dc3: mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414d96: mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414d70: mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d3c: mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d0d: mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414c74: mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414b71: mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414b0c: mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414ab4: mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414a60: mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414a34: mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000402cfd: mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x0000000000402c45: mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x0000000000402a32: mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x0000000000402a04: mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000418f51: mov edi, dword ptr [rsi - 0x74b7fffa]; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000407898: mov edi, dword ptr [rsi]; shr rdi, cl; mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x000000000041762f: mov edi, dword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x00000000004130a3: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a3: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414927: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd21: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce73: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440251: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a3: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e87a: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045161c: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045192f: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045258f: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c49: mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000445415: mov edi, dword ptr [rsp + 0x168]; lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000445498: mov edi, dword ptr [rsp + 0x170]; lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x0000000000417527: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000043c88d: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbdc: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdbd: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044010c: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c62: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa5: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413168: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413301: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c1: mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000044ea14: mov edi, dword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca6e: mov edi, dword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ff9e: mov edi, dword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041368e: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c714: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc44: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e722: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee38: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efc8: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2df: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f97c: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe2: mov edi, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043a7b2: mov edi, dword ptr [rsp]; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x0000000000446d24: mov edi, dword ptr [rsp]; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000453673: mov edi, dword ptr [rsp]; mov esi, dword ptr [rsp + 8]; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x0000000000443fde: mov edi, dword ptr [rsp]; mov rsi, qword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043978d: mov edi, eax; and edx, 0xff; mov rsi, rsp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x000000000041511b: mov edi, eax; call 0x13720; call 0x14fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004150fb: mov edi, eax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000045229f: mov edi, eax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x00000000004185a1: mov edi, eax; call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x00000000004338f5: mov edi, eax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004480c4: mov edi, eax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf14: mov edi, eax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041f9ac: mov edi, eax; call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x000000000042ee58: mov edi, eax; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x00000000004029d5: mov edi, eax; call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x000000000042512b: mov edi, eax; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000401e1a: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e4d: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e80: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ec3: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f06: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f49: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f8d: mov edi, eax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000043231f: mov edi, eax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000043250d: mov edi, eax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004326fc: mov edi, eax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328ef: mov edi, eax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432acb: mov edi, eax; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000431a70: mov edi, eax; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431ea0: mov edi, eax; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c70: mov edi, eax; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f4e: mov edi, eax; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed2e: mov edi, eax; call 0x38d20; mov rsp, rbp; pop rbp; ret; 
0x0000000000431fbe: mov edi, eax; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x000000000043366f: mov edi, eax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336ef: mov edi, eax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043377f: mov edi, eax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043380f: mov edi, eax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000439cbb: mov edi, eax; call 0x3aaa0; mov rsp, rbp; pop rbp; ret; 
0x000000000043b203: mov edi, eax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x0000000000445ed0: mov edi, eax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x0000000000452b4a: mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000452c8b: mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x00000000004559cc: mov edi, eax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000455a0f: mov edi, eax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000456f8c: mov edi, eax; call 0x56f50; lea rsp, [rsp + 8]; ret; 
0x00000000004594bf: mov edi, eax; call 0x59320; lea rsp, [rsp + 8]; ret; 
0x0000000000459cd1: mov edi, eax; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x000000000045bb4b: mov edi, eax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000045c7dc: mov edi, eax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000043b2a6: mov edi, eax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000041ef52: mov edi, eax; call qword ptr [rax + 0x38]; 
0x000000000041ef52: mov edi, eax; call qword ptr [rax + 0x38]; mov bl, 1; mov al, bl; pop rbx; ret; 
0x000000000041dae0: mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041f620: mov edi, eax; call qword ptr [rax + 0x40]; 
0x000000000041dae0: mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f620: mov edi, eax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004135d2: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000414849: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043c642: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043c78d: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043c913: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043caec: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043cc48: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043cd99: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043fb72: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043fcbd: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000043fe43: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044001c: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000440178: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x00000000004402c9: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044e642: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044e798: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044e8f1: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044ed62: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044eef2: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044f202: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044f8b2: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000044fab2: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000451539: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000045169b: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000451849: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x00000000004519bb: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000451b6d: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000451cef: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000451ead: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x000000000045202f: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x00000000004522d8: mov edi, eax; call qword ptr [rdx + 0x68]; 
0x0000000000416956: mov edi, eax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416925: mov edi, eax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168fe: mov edi, eax; call qword ptr [rip + 0x6d6f2]; mov rsp, rbp; pop rbp; ret; 
0x00000000004168c6: mov edi, eax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416896: mov edi, eax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041673f: mov edi, eax; call qword ptr [rip + 0x6d891]; lea rsp, [rsp + 8]; ret; 
0x0000000000416720: mov edi, eax; call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x0000000000416771: mov edi, eax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415996: mov edi, eax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415965: mov edi, eax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041593e: mov edi, eax; call qword ptr [rip + 0x6e6b2]; mov rsp, rbp; pop rbp; ret; 
0x0000000000415906: mov edi, eax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d6: mov edi, eax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041568f: mov edi, eax; call qword ptr [rip + 0x6e941]; lea rsp, [rsp + 8]; ret; 
0x00000000004156c1: mov edi, eax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415670: mov edi, eax; call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x000000000043934d: mov edi, eax; lea r8, [rip + 0x3c94a]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000431f7e: mov edi, eax; lea r8, [rip + 0x43d19]; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x000000000043928d: mov edi, eax; lea r9, [rip + 0x3ca0a]; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x000000000043915d: mov edi, eax; lea r9, [rip + 0x3cb3a]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000455bbb: mov edi, eax; lea rax, [rip + 0x2e2ac]; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x0000000000418d05: mov edi, eax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x0000000000415246: mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415246: mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415216: mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415216: mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151e6: mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e6: mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000043b21d: mov edi, eax; lea rcx, [rip + 0x3aa7a]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000043b1be: mov edi, eax; lea rdx, [rip + 0x3aad9]; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x0000000000438edd: mov edi, eax; lea rdx, [rip + 0x3cdba]; mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000438dad: mov edi, eax; lea rdx, [rip + 0x3ceea]; mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431f0e: mov edi, eax; lea rsi, [rip + 0x43d89]; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x000000000043925a: mov edi, eax; lea rsi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392ca: mov edi, eax; lea rsi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000040db2b: mov edi, eax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db9b: mov edi, eax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004169bc: mov edi, eax; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d68f]; lea rsp, [rsp + 8]; ret; 
0x000000000041669c: mov edi, eax; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d9af]; lea rsp, [rsp + 8]; ret; 
0x000000000041665d: mov edi, eax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x00000000004155ac: mov edi, eax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x000000000041660d: mov edi, eax; mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x000000000041555d: mov edi, eax; mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x000000000043b24c: mov edi, eax; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004165df: mov edi, eax; mov edx, 1; call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x000000000041552f: mov edi, eax; mov edx, 1; call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x0000000000434ebd: mov edi, eax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434edf: mov edi, eax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000041662f: mov edi, eax; mov edx, 2; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x000000000041557f: mov edi, eax; mov edx, 2; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f0c: mov edi, eax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f2f: mov edi, eax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000041667b: mov edi, eax; mov edx, 4; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f7b: mov edi, eax; mov edx, 8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x000000000040420c: mov edi, eax; mov esi, 0xff; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x000000000041372e: mov edi, eax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041372e: mov edi, eax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x0000000000453ce8: mov edi, eax; mov esi, ebx; call 0x53af0; pop rbx; ret; 
0x000000000044c696: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax + 0xe8]; lea rsp, [rsp + 8]; ret; 
0x000000000041300e: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041300e: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x0000000000413089: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130dc: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041321c: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041326c: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133bc: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041341c: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450b91: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bdd: mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041541f: mov edi, eax; mov rcx, r8; call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x000000000041697d: mov edi, eax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159bd: mov edi, eax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x000000000042e63c: mov edi, eax; xor ecx, ecx; call 0x2e650; mov rsp, rbp; pop rbp; ret; 
0x000000000043393f: mov edi, eax; xor ecx, ecx; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x000000000043f8ec: mov edi, eax; xor edx, edx; call 0x3f900; lea rsp, [rsp + 8]; ret; 
0x000000000044336c: mov edi, eax; xor edx, edx; call 0x43380; lea rsp, [rsp + 8]; ret; 
0x000000000042eb9c: mov edi, eax; xor r8, r8; call 0x2ebb0; mov rsp, rbp; pop rbp; ret; 
0x000000000040e0f5: mov edi, ebp; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000040ec5f: mov edi, ebp; mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000417174: mov edi, ebx; call 0x151b0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041727f: mov edi, ebx; call 0x151d0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417384: mov edi, ebx; call 0x15200; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418567: mov edi, ebx; call 0x184a0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417da0: mov edi, ebx; call 0x18540; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004185ca: mov edi, ebx; call 0x18540; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040baaa: mov edi, ebx; call 0x19140; pop rbx; ret; 
0x000000000040dcca: mov edi, ebx; call 0x19140; pop rbx; ret; 
0x000000000041394a: mov edi, ebx; call 0x19140; pop rbx; ret; 
0x0000000000456b23: mov edi, ebx; call 0x19140; pop rbx; ret; 
0x00000000004338d2: mov edi, ebx; call 0x19220; xor ebx, ebx; pop rbx; ret; 
0x000000000041adbd: mov edi, ebx; call 0x1add0; pop rbx; ret; 
0x000000000041d8a8: mov edi, ebx; call 0x1c7c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041db4b: mov edi, ebx; call 0x1d9a0; cmp qword ptr [rbx + 0x40], 0; je 0x1dbbb; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x00000000004226d8: mov edi, ebx; call 0x21fe0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004222a3: mov edi, ebx; call 0x21fe0; lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x000000000042981a: mov edi, ebx; call 0x297b0; pop rbx; ret; 
0x000000000042bc0a: mov edi, ebx; call 0x2bba0; pop rbx; ret; 
0x000000000043e39e: mov edi, ebx; call 0x3e370; pop rbx; ret; 
0x000000000043e6d0: mov edi, ebx; call 0x3f800; pop rbx; ret; 
0x000000000043f1e2: mov edi, ebx; call 0x3f800; pop rbx; ret; 
0x000000000045b1e6: mov edi, ebx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045b224: mov edi, ebx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000441f60: mov edi, ebx; call 0x43280; pop rbx; ret; 
0x0000000000442c62: mov edi, ebx; call 0x43280; pop rbx; ret; 
0x0000000000406cf0: mov edi, ebx; call 0x6ba0; pop r13; pop r12; pop rbx; ret; 
0x0000000000406f65: mov edi, ebx; call 0x6e30; pop r13; pop r12; pop rbx; ret; 
0x000000000042e5fa: mov edi, ebx; call 0xcd10; pop rbx; ret; 
0x000000000041caac: mov edi, ebx; call qword ptr [rbx + 0x30]; 
0x000000000041c9a6: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041cc89: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d274: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d3ce: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d544: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d6be: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041da87: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f130: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f6bc: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f7b4: mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041cc89: mov edi, ebx; call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x000000000041db5a: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f661: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f6d6: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f761: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041f7ce: mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000041c9bc: mov edi, ebx; call qword ptr [rbx + 0x48]; 
0x000000000041609a: mov edi, ebx; call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000415eca: mov edi, ebx; call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x000000000045c3eb: mov edi, ebx; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000045058f: mov edi, ebx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x0000000000450522: mov edi, ebx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x00000000004184c0: mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x0000000000417e63: mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000429938: mov edi, ebx; lea rdx, [rip + 0x3781f]; call 0xe180; pop rbx; ret; 
0x0000000000429a03: mov edi, ebx; lea rsi, [rip + 0x37754]; call 0xe180; pop rbx; ret; 
0x0000000000410422: mov edi, ebx; lea rsi, [rsp + 8]; call 0xdde0; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041927e: mov edi, ebx; mov ecx, 5; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000041cb23: mov edi, ebx; mov edx, 1; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x000000000041cbc3: mov edi, ebx; mov edx, 1; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000042be6c: mov edi, ebx; mov edx, 1; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a50: mov edi, ebx; mov edx, 1; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x000000000045386e: mov edi, ebx; mov esi, 0x10; call 0x535c0; xor eax, eax; pop rbx; ret; 
0x000000000043e3bc: mov edi, ebx; mov esi, 0x40; call 0x3f800; pop rbx; ret; 
0x0000000000441c4c: mov edi, ebx; mov esi, 0x40; call 0x43280; pop rbx; ret; 
0x00000000004211d3: mov edi, ebx; mov esi, 0x80; call 0x20fb0; pop rbx; ret; 
0x0000000000421223: mov edi, ebx; mov esi, 0x80; call 0x210a0; pop rbx; ret; 
0x000000000041473a: mov edi, ebx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x0000000000417363: mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x0000000000417168: mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x000000000041370a: mov edi, ebx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x00000000004147a2: mov edi, ebx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9f3: mov edi, ebx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000415182: mov edi, ebx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x0000000000417248: mov edi, ebx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x00000000004508e8: mov edi, ebx; mov rdx, r13; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x0000000000410398: mov edi, ebx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103d7: mov edi, ebx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410467: mov edi, ebx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104a7: mov edi, ebx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045650f: mov edi, ebx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004277b9: mov edi, ebx; xor dl, dl; call 0x275f0; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000041a3aa: mov edi, ebx; xor edx, edx; call 0x22e0; mov rax, rbx; pop rbx; ret; 
0x000000000041469e: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004325b3: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004327a3: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432993: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432b82: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d52: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432f33: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433133: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433323: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433523: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b58: mov edi, ebx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b80: mov edi, ebx; xor edx, edx; call 0xc590; pop rbx; ret; 
0x000000000041cb73: mov edi, ebx; xor edx, edx; mov esi, 0xd7b1; call 0x1ca10; pop rbx; ret; 
0x0000000000413232: mov edi, ebx; xor esi, esi; call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004133e6: mov edi, ebx; xor esi, esi; call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041452a: mov edi, ebx; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x0000000000450530: mov edi, ebx; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x000000000041c3fa: mov edi, edi; dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000044fcbc: mov edi, edi; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x00000000004137af: mov edi, edx; test rdi, rdi; je 0x137bd; cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x000000000040103e: mov edi, edx; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000042fc79: mov edi, esi; add rdx, 1; mov rsi, qword ptr [rax]; call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x00000000004310c9: mov edi, esi; add rdx, 1; mov rsi, qword ptr [rax]; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000041adb5: mov edi, esi; call 0x1ad90; mov rdi, rbx; call 0x1add0; pop rbx; ret; 
0x0000000000419085: mov edi, esi; call qword ptr [rip + 0x50abb]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x000000000041b919: mov edi, esi; dec dword ptr [rax - 0x77]; ret; 
0x000000000041b9b9: mov edi, esi; dec dword ptr [rax - 0x77]; ret; 
0x000000000042c426: mov edi, esi; inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000432dc9: mov edi, esi; mov esi, dword ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432bf9: mov edi, esi; mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432d79: mov edi, esi; mov esi, dword ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432ba9: mov edi, esi; mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432d99: mov edi, esi; mov esi, dword ptr [rax]; call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bc9: mov edi, esi; mov esi, dword ptr [rax]; call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x0000000000413cd3: mov edi, esi; mov rax, r15; call rax; 
0x0000000000413e30: mov edi, esi; mov rax, r15; call rax; 
0x00000000004149d9: mov edi, esi; mov rsi, qword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x00000000004302a9: mov edi, esi; mov rsi, qword ptr [rax]; and edx, 0xff; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x000000000042f208: mov edi, esi; mov rsi, qword ptr [rax]; call 0x2e7a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431299: mov edi, esi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312b9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x0000000000431259: mov edi, esi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000431279: mov edi, esi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312d9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312f9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x0000000000431319: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x0000000000430289: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432fa9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433399: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x00000000004331b9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335a9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f59: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433349: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433159: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000433549: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432f79: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433369: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433179: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000433569: mov edi, esi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042fcb9: mov edi, esi; mov rsi, qword ptr [rax]; call 0x3b3a0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000430459: mov edi, esi; mov rsi, qword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x0000000000447e75: mov edi, esi; mov rsi, rbx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x0000000000401f2d: mov edi, esi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401eed: mov edi, esi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401ead: mov edi, esi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e6d: mov edi, esi; mov rsi, rdx; syscall; 
0x0000000000431de9: mov edi, esi; movsd xmm0, qword ptr [rax]; lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319a9: mov edi, esi; movss xmm0, dword ptr [rax]; lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000432629: mov edi, esi; movsx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004325d9: mov edi, esi; movsx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325f9: mov edi, esi; movsx esi, byte ptr [rax]; call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x0000000000432819: mov edi, esi; movsx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004327c9: mov edi, esi; movsx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327e9: mov edi, esi; movsx esi, word ptr [rax]; call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x0000000000432439: mov edi, esi; movzx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323e9: mov edi, esi; movzx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432409: mov edi, esi; movzx esi, byte ptr [rax]; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x0000000000432a09: mov edi, esi; movzx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329b9: mov edi, esi; movzx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329d9: mov edi, esi; movzx esi, word ptr [rax]; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x0000000000401e3d: mov edi, esi; syscall; 
0x00000000004113cd: mov edi, esp; call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041143d: mov edi, esp; call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004191ea: mov edi, esp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x000000000040df92: mov edi, esp; call 0x1fd0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b39d: mov edi, esp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040dff8: mov edi, esp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f2b3: mov edi, esp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f4a3: mov edi, esp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040ffec: mov edi, esp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000044c0ca: mov edi, esp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x00000000004557c6: mov edi, esp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x0000000000459cc9: mov edi, esp; call 0x2a50; mov rdi, rax; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x00000000004546cc: mov edi, esp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000456f68: mov edi, esp; call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000404eb7: mov edi, esp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x0000000000452827: mov edi, esp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x00000000004527cc: mov edi, esp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000453339: mov edi, esp; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x0000000000453171: mov edi, esp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453171: mov edi, esp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000449d3b: mov edi, esp; lea rax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000043b545: mov edi, esp; lea rax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000041894d: mov edi, esp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004188fa: mov edi, esp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x00000000004182a7: mov edi, esp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000040e06c: mov edi, esp; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000041ee81: mov edi, esp; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x0000000000413034: mov edi, esp; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x000000000045c64e: mov edi, esp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4fe: mov edi, esp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x000000000040ea0c: mov edi, esp; mov rsi, rbx; mov rcx, rax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x00000000004479b1: mov edx, 0; test rdi, rdi; jne 0x479c4; xor eax, eax; ret; 
0x0000000000434f95: mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434fb5: mov edx, 0x10; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004160d5: mov edx, 0x10; call qword ptr [rip + 0x6df88]; lea rsp, [rsp + 8]; ret; 
0x0000000000416135: mov edx, 0x11; call qword ptr [rip + 0x6df28]; lea rsp, [rsp + 8]; ret; 
0x00000000004160f5: mov edx, 0x12; call qword ptr [rip + 0x6df68]; lea rsp, [rsp + 8]; ret; 
0x0000000000416115: mov edx, 0x13; call qword ptr [rip + 0x6df48]; lea rsp, [rsp + 8]; ret; 
0x0000000000458499: mov edx, 0x1b6; call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000407685: mov edx, 0x20; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000042ef65: mov edx, 0x27; call 0x2ef80; lea rsp, [rsp + 8]; ret; 
0x0000000000434595: mov edx, 0x27; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000455b0e: mov edx, 0x40; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000438ee2: mov edx, 0x480003cd; mov esi, dword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x00000000004390d2: mov edx, 0x48ffffe2; mov esp, ebp; pop rbp; ret; 
0x0000000000402e22: mov edx, 0x48fffff0; lea esp, [rsp + 8]; ret; 
0x0000000000459062: mov edx, 0x48fffffb; lea esp, [rsp + 8]; ret; 
0x0000000000459002: mov edx, 0x48fffffd; mov esp, ebp; pop rbp; ret; 
0x00000000004390a2: mov edx, 0x48fffffe; mov esp, ebp; pop rbp; ret; 
0x0000000000425dd6: mov edx, 0x63480004; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000429c62: mov edx, 0x66ffff9a; cmp dword ptr [r12], 0x940f0000; ret; 
0x0000000000439555: mov edx, 0x6ddffffd; call 0x5df01ea7; ret; 
0x0000000000459a81: mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000401d79: mov edx, 0x89480001; ret; 
0x0000000000401dac: mov edx, 0x89480001; ret; 
0x00000000004160b5: mov edx, 0xe; call qword ptr [rip + 0x6dfa8]; lea rsp, [rsp + 8]; ret; 
0x000000000041b1d2: mov edx, 0xebfffffd; or cl, byte ptr [rax - 0x73]; add eax, 0x4d6e1; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x00000000004330c4: mov edx, 0xf21f0460; cvtpi2ps xmm0, qword ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004334b4: mov edx, 0xf21f0460; cvtpi2ps xmm0, qword ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x0000000000433194: mov edx, 0xf31f0460; cvtpi2ps xmm0, qword ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000433584: mov edx, 0xf31f0460; cvtpi2ps xmm0, qword ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000406fac: mov edx, 0xff; mov byte ptr [rax], dl; ret; 
0x00000000004166d5: mov edx, 0xfffffff8; call qword ptr [rip + 0x6d978]; lea rsp, [rsp + 8]; ret; 
0x00000000004169be: mov edx, 0xfffffffc; call qword ptr [rip + 0x6d68f]; lea rsp, [rsp + 8]; ret; 
0x000000000041669e: mov edx, 0xfffffffc; call qword ptr [rip + 0x6d9af]; lea rsp, [rsp + 8]; ret; 
0x00000000004159f5: mov edx, 0xfffffffc; call qword ptr [rip + 0x6e5e0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155e5: mov edx, 0xfffffffc; call qword ptr [rip + 0x6e9f0]; lea rsp, [rsp + 8]; ret; 
0x000000000041665f: mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x00000000004155ae: mov edx, 0xfffffffe; call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x000000000041660f: mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x000000000041555f: mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x0000000000402643: mov edx, 0xffffffff; xchg rdx, rax; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x00000000004026b4: mov edx, 0xffffffff; xchg rdx, rax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x0000000000430a4e: mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ece: mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x00000000004396c5: mov edx, 1; call 0x36fa0; lea rsp, [rsp + 8]; ret; 
0x00000000004396e8: mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000416c3e: mov edx, 1; call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416aa8: mov edx, 1; call 0x7250; lea rsp, [rsp + 0x200]; pop rbx; ret; 
0x0000000000416a5b: mov edx, 1; call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416bfe: mov edx, 1; call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416bfd: mov edx, 1; call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042bdb2: mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b24e: mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000427a15: mov edx, 1; call 0xce80; lea rsp, [rsp + 8]; ret; 
0x00000000004165e1: mov edx, 1; call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x0000000000415531: mov edx, 1; call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x000000000044a295: mov edx, 1; lea rax, [rip + 0x39abf]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448555: mov edx, 1; lea rax, [rip + 0x3b7ff]; call qword ptr [rax + 0x20]; 
0x0000000000448535: mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; 
0x0000000000448535: mov edx, 1; lea rax, [rip + 0x3b81f]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x000000000045b9c5: mov edx, 1; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cb25: mov edx, 1; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x000000000041cbc5: mov edx, 1; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000042be6e: mov edx, 1; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a52: mov edx, 1; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x0000000000402663: mov edx, 1; xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026d4: mov edx, 1; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x0000000000434ebf: mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434ee1: mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000437308: mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000416631: mov edx, 2; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x0000000000415581: mov edx, 2; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000424330: mov edx, 2; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000434f0e: mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f31: mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000437348: mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000041667d: mov edx, 4; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x00000000004155c5: mov edx, 4; call qword ptr [rip + 0x6ea10]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f55: mov edx, 8; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f7d: mov edx, 8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004166b5: mov edx, 8; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x0000000000456e38: mov edx, 8; mov edi, 0x82; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004195bf: mov edx, dword ptr [rax + 0x10]; and rdx, 0xffffffffffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x0000000000444c70: mov edx, dword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444ce4: mov edx, dword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004470e0: mov edx, dword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x0000000000447120: mov edx, dword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c97: mov edx, dword ptr [rax + 0x10]; xor ecx, ecx; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d2b: mov edx, dword ptr [rax + 0x10]; xor ecx, ecx; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004470fd: mov edx, dword ptr [rax + 0x10]; xor ecx, ecx; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x000000000041d26a: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d28b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c4: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d3e5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d53a: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d55b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d6b4: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d6d8; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f126: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1f135; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f6b2: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1f6dd; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f7aa: mov edx, dword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1f7d5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000414ded: mov edx, dword ptr [rax + 0x1c]; mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414c9e: mov edx, dword ptr [rax + 0x1c]; mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000423b9c: mov edx, dword ptr [rax + 0x50]; mov qword ptr [rip + 0x6127a], rdx; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x000000000045b8f3: mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b913: mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000041a033: mov edx, dword ptr [rax + 8]; mov qword ptr [rdx + 0xb8], rax; lea rdi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x000000000041957b: mov edx, dword ptr [rax + 8]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x00000000004193b1: mov edx, dword ptr [rax + 8]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000043487c: mov edx, dword ptr [rax]; call 0x34890; lea rsp, [rsp + 8]; ret; 
0x000000000045907d: mov edx, dword ptr [rax]; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x0000000000419330: mov edx, dword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x0000000000416e62: mov edx, dword ptr [rax]; mov qword ptr [rsi], rdx; lea rcx, [rdx + 2]; movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x0000000000414278: mov edx, dword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414188: mov edx, dword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000041caa2: mov edx, dword ptr [rax]; mov word ptr [rbx + 0x374], dx; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x0000000000401074: mov edx, dword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x00000000004114a4: mov edx, dword ptr [rax]; test rdx, rdx; je 0x114bb; lea rax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415315: mov edx, dword ptr [rax]; test rdx, rdx; je 0x15329; lea rax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c09: mov edx, dword ptr [rax]; test rdx, rdx; je 0x17c20; lea rax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c33: mov edx, dword ptr [rax]; test rdx, rdx; je 0x17c47; lea rax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fdd: mov edx, dword ptr [rax]; test rdx, rdx; je 0x17ff1; lea rax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041800d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18024; lea rax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041803c: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18050; lea rax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d83: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18d9a; lea rax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db4: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18dcb; lea rax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e4f: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18e66; lea rax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e83: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18e9a; lea rax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f56: mov edx, dword ptr [rax]; test rdx, rdx; je 0x18f6d; lea rax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe5: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1affc; lea rax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b5: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1b7cc; lea rax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c184: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1c198; lea rax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5c8: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1c5dc; lea rax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca4d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1ca61; lea rax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbec: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1cc00; lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc34: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1cc48; lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc9c: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd5d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1cd71; lea rax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec1: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1ced5; lea rax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfa8: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1cfbc; lea rax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d23d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1d251; lea rax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d38d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1d3a1; lea rax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d493: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1d4a7; lea rax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d67d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1d691; lea rax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d93c: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1d950; lea rax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dafc: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1db10; lea rax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db69: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1db7d; lea rax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc54: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1dc68; lea rax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd68: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1dd7c; lea rax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf4: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1de08; lea rax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de94: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1dea8; lea rax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df34: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1df48; lea rax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff3: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e007; lea rax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e086: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e09a; lea rax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e0ff: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e113; lea rax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2ac: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e2c0; lea rax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e450: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e464; lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e74b: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e75f; lea rax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e81b: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e82f; lea rax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e911: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e925; lea rax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e95e: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1e972; lea rax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edae: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1edc2; lea rax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edfa: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1ee0e; lea rax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fde8: mov edx, dword ptr [rax]; test rdx, rdx; je 0x1fdfc; lea rax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202dd: mov edx, dword ptr [rax]; test rdx, rdx; je 0x202f1; lea rax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204d6: mov edx, dword ptr [rax]; test rdx, rdx; je 0x204ea; lea rax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fc6: mov edx, dword ptr [rax]; test rdx, rdx; je 0x20fda; lea rax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212d7: mov edx, dword ptr [rax]; test rdx, rdx; je 0x212eb; lea rax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421421: mov edx, dword ptr [rax]; test rdx, rdx; je 0x21435; lea rax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421527: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2153b; lea rax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421672: mov edx, dword ptr [rax]; test rdx, rdx; je 0x21686; lea rax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421abc: mov edx, dword ptr [rax]; test rdx, rdx; je 0x21ad0; lea rax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b7d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x21b91; lea rax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce1: mov edx, dword ptr [rax]; test rdx, rdx; je 0x21cf5; lea rax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f4: mov edx, dword ptr [rax]; test rdx, rdx; je 0x22508; lea rax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422565: mov edx, dword ptr [rax]; test rdx, rdx; je 0x22579; lea rax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422600: mov edx, dword ptr [rax]; test rdx, rdx; je 0x22614; lea rax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042275c: mov edx, dword ptr [rax]; test rdx, rdx; je 0x22770; lea rax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422893: mov edx, dword ptr [rax]; test rdx, rdx; je 0x228a7; lea rax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000423369: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2337d; lea rax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042451c: mov edx, dword ptr [rax]; test rdx, rdx; je 0x24530; lea rax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427147: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c1: mov edx, dword ptr [rax]; test rdx, rdx; je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427324: mov edx, dword ptr [rax]; test rdx, rdx; je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427351: mov edx, dword ptr [rax]; test rdx, rdx; je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f3: mov edx, dword ptr [rax]; test rdx, rdx; je 0x28407; lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042841e: mov edx, dword ptr [rax]; test rdx, rdx; je 0x28432; lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428455: mov edx, dword ptr [rax]; test rdx, rdx; je 0x28469; lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c30: mov edx, dword ptr [rax]; test rdx, rdx; je 0x29c47; lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc0: mov edx, dword ptr [rax]; test rdx, rdx; je 0x29cd7; lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d50: mov edx, dword ptr [rax]; test rdx, rdx; je 0x29d67; lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b3: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2a5c7; lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c030: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c0: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c150: mov edx, dword ptr [rax]; test rdx, rdx; je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004500c7: mov edx, dword ptr [rax]; test rdx, rdx; je 0x500db; lea rax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a2: mov edx, dword ptr [rax]; test rdx, rdx; je 0x50b9; lea rax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452616: mov edx, dword ptr [rax]; test rdx, rdx; je 0x5262a; lea rax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452642: mov edx, dword ptr [rax]; test rdx, rdx; je 0x52656; lea rax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045aba4: mov edx, dword ptr [rax]; test rdx, rdx; je 0x5abbb; lea rax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abfa: mov edx, dword ptr [rax]; test rdx, rdx; je 0x5ac11; lea rax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf2: mov edx, dword ptr [rax]; test rdx, rdx; je 0x5cd09; lea rax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd3d: mov edx, dword ptr [rax]; test rdx, rdx; je 0x5cd54; lea rax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045905d: mov edx, dword ptr [rax]; xor cl, cl; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x00000000004094d9: mov edx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451697: mov edx, dword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519b7: mov edx, dword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ceb: mov edx, dword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045202b: mov edx, dword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045c8d1: mov edx, dword ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450f06: mov edx, dword ptr [rbp - 8]; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417c53: mov edx, dword ptr [rbx]; mov rax, qword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x0000000000429a00: mov edx, dword ptr [rbx]; mov rdi, rbx; lea rsi, [rip + 0x37754]; call 0xe180; pop rbx; ret; 
0x0000000000417c7c: mov edx, dword ptr [rcx + 8]; mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x000000000041d805: mov edx, dword ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x00000000004189aa: mov edx, dword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004039a6: mov edx, dword ptr [rdi]; cmp edx, dword ptr [rsi]; jbe 0x39b2; mov eax, 1; ret; 
0x000000000042e341: mov edx, dword ptr [rdi]; lea rax, [rsi + 1]; movzx eax, byte ptr [rdx + rax - 1]; ret; 
0x00000000004193a8: mov edx, dword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x0000000000419368: mov edx, dword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000044b9ae: mov edx, dword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac2: mov edx, dword ptr [rdx - 8]; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x00000000004364ca: mov edx, dword ptr [rdx]; mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044947c: mov edx, dword ptr [rdx]; mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b21c: mov edx, dword ptr [rdx]; mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000414844: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc43: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd94: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440173: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c4: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e793: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451534: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451844: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d3: mov edx, dword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c788: mov edx, dword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae7: mov edx, dword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb8: mov edx, dword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440017: mov edx, dword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b68: mov edx, dword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea8: mov edx, dword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000040a00d: mov edx, dword ptr [rsp + 0x18]; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x000000000044e8ec: mov edx, dword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c90e: mov edx, dword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe3e: mov edx, dword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000042de85: mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deb2: mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df88: mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e192: mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dccf: mov edx, dword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004135cd: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c63d: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb6d: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e63d: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed5d: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eeed: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1fd: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8ad: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faad: mov edx, dword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000459a43: mov edx, dword ptr [rsp]; add qword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512eb: mov edx, dword ptr [rsp]; add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000043b227: mov edx, dword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000042f65c: mov edx, dword ptr [rsp]; cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x000000000041708c: mov edx, dword ptr [rsp]; lea rdi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x0000000000447a75: mov edx, eax; add byte ptr [rdx + rsi], 0x20; add rsi, 1; cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x000000000040b9bf: mov edx, eax; add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000041a365: mov edx, eax; and rdx, 1; jne 0x1a376; and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x0000000000444bfb: mov edx, eax; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c3f: mov edx, eax; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f9f: mov edx, eax; mov edi, 0x10; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c912: mov edx, eax; mov edi, 0x115; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576b2: mov edx, eax; mov edi, 0x11; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045770f: mov edx, eax; mov edi, 0x13; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457555: mov edx, eax; mov edi, 0x17; call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x000000000045ca7f: mov edx, eax; mov edi, 0x9a; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c8a2: mov edx, eax; mov edi, 0xe8; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b1f: mov edx, eax; mov edi, 1; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402acf: mov edx, eax; mov edi, 8; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000456d9b: mov edx, eax; mov qword ptr [rdi + rdx*8], 0xffffffffffffffff; cmp eax, 0xf; jl 0x56d98; xor eax, eax; ret; 
0x0000000000456c6b: mov edx, eax; mov qword ptr [rdi + rdx*8], 0xffffffffffffffff; cmp eax, 1; jl 0x56c68; xor eax, eax; ret; 
0x0000000000401f76: mov edx, eax; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f36: mov edx, eax; mov r8, r9; syscall; 
0x0000000000402e14: mov edx, eax; mov r8d, 8; mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000040300f: mov edx, eax; mov r8d, 8; mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045930c: mov edx, eax; mov rax, qword ptr [rip + 0x25d3b]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x0000000000419361: mov edx, eax; mov rcx, qword ptr [rdx + 0x10]; mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000041ef45: mov edx, eax; mov rcx, qword ptr [rdx + 0x18]; cmp rcx, qword ptr [rdx + 0x20]; jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x00000000004193a1: mov edx, eax; mov rcx, qword ptr [rdx + 0x20]; mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x000000000044f0f4: mov edx, eax; shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x000000000044f4a4: mov edx, eax; shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x0000000000401ef6: mov edx, eax; syscall; 
0x0000000000402aff: mov edx, eax; xor edi, edi; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e9f: mov edx, eax; xor r8, r8; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000412f2b: mov edx, ebp; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000403a0d: mov edx, ebp; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x00000000004302e3: mov edx, ebp; call 0x302f0; pop r13; pop r12; pop rbx; ret; 
0x00000000004310b3: mov edx, ebp; call 0x310c0; pop r13; pop r12; pop rbx; ret; 
0x0000000000430315: mov edx, ebp; call 0xd400; pop r13; pop r12; pop rbx; ret; 
0x0000000000415450: mov edx, ebp; call qword ptr [rip + 0x6eb78]; pop r13; pop r12; pop rbx; ret; 
0x000000000040ef51: mov edx, ebp; mov edi, 0xc9; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040dc0d: mov edx, ebp; mov edi, 0xcc; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cd3: mov edx, ebp; mov edi, 0xd3; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417cfd: mov edx, ebp; mov edi, 0xd7; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d3d: mov edx, ebp; mov edi, 0xd8; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418d1b: mov edx, ebp; mov edi, 0xe3; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d1d: mov edx, ebp; mov edi, 0xec; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x00000000004508eb: mov edx, ebp; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x00000000004184bb: mov edx, ebp; mov rsi, r12; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x000000000041517c: mov edx, ebp; mov rsi, r12; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x0000000000426c91: mov edx, ebx; call 0x2f90; pop rbx; ret; 
0x00000000004587f3: mov edx, ecx; call 0x57540; lea rsp, [rsp + 0x18]; ret; 
0x0000000000403558: mov edx, ecx; lea rdi, [rax + 1]; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f73: mov edx, ecx; mov r10, r8; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f33: mov edx, ecx; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401ef3: mov edx, ecx; mov r10, r8; syscall; 
0x000000000041541c: mov edx, ecx; mov rdi, rax; mov rcx, r8; call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x0000000000401eb3: mov edx, ecx; syscall; 
0x000000000045a0a0: mov edx, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041ab02: mov edx, edi; xor r8d, r8d; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000045b866: mov edx, esi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a6: mov edx, esi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000404209: mov edx, esi; mov rdi, rax; mov esi, 0xff; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x0000000000403036: mov edx, esi; mov rsi, rdi; mov edi, 0x23; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574d9: mov edx, esi; mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403056: mov edx, esi; mov rsi, rdi; mov edi, 0x4f; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b66: mov edx, esi; mov rsi, rdi; mov edi, 0x52; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402fe9: mov edx, esi; mov rsi, rdi; mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403076: mov edx, esi; mov rsi, rdi; mov edi, 0x60; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8c6: mov edx, esi; mov rsi, rdi; mov edi, 0x7d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8e6: mov edx, esi; mov rsi, rdi; mov edi, 0x7e; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457436: mov edx, esi; mov rsi, rdi; mov edi, 0x84; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f79: mov edx, esi; mov rsi, rdi; mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f56: mov edx, esi; mov rsi, rdi; mov edi, 0xb; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b86: mov edx, esi; mov rsi, rdi; mov edi, 4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457596: mov edx, esi; mov rsi, rdi; mov edi, 6; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457578: mov edx, esi; mov rsi, rdi; mov edi, 7; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f33: mov edx, esi; mov rsi, rdi; mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e89: mov edx, esi; movsxd rsi, edi; mov edi, 0x26; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e36: mov edx, esi; movsxd rsi, edi; mov edi, 0x4d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403096: mov edx, esi; movsxd rsi, edi; mov edi, 0x61; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004030b6: mov edx, esi; movsxd rsi, edi; mov edi, 0xa0; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb96: mov edx, esi; movsxd rsi, edi; mov edi, 0xe3; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb76: mov edx, esi; movsxd rsi, edi; mov edi, 0xe4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e56: mov edx, esi; movsxd rsi, edi; mov edi, 5; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000042e3e5: mov edx, esi; xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000044bf4a: mov edx, esp; call 0x4d8d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c00a: mov edx, esp; call 0x4e0f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450cb6: mov edx, esp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x000000000041fda9: mov edx, esp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x000000000040f22a: mov edx, esp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x0000000000450b87: mov edx, esp; lea rsi, [rip + 0x17ec0]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413412: mov edx, esp; lea rsi, [rip + 0x55635]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413262: mov edx, esp; lea rsi, [rip + 0x557e5]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130d2: mov edx, esp; lea rsi, [rip + 0x55975]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000424614: mov edx, esp; mov esi, 0xff; call 0x3d10; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000041d7c4: mov edx, esp; mov esi, 3; call 0x3d10; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000450c43: mov edx, esp; mov rsi, rsp; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000443d9e: mov es, word ptr [rbx]; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041b7ee: mov es, word ptr [rcx + 0x3a8b0006]; call rax; 
0x0000000000424bbd: mov esi, 0x10; call 0x3d10; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000453870: mov esi, 0x10; call 0x535c0; xor eax, eax; pop rbx; ret; 
0x00000000004151b7: mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000043262c: mov esi, 0x249de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004325dc: mov esi, 0x267de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004514f1: mov esi, 0x26; call 0x36bc0; lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x00000000004325fc: mov esi, 0x28ade830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000427394: mov esi, 0x3a8b0005; call rax; 
0x000000000042740c: mov esi, 0x3a8b0005; call rax; 
0x0000000000417ebf: mov esi, 0x3a8b0006; call rax; 
0x000000000041aa70: mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aaa1: mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aad1: mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000043e3be: mov esi, 0x40; call 0x3f800; pop rbx; ret; 
0x0000000000441c4e: mov esi, 0x40; call 0x43280; pop rbx; ret; 
0x0000000000423f5e: mov esi, 0x44fffdea; mov al, ah; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000045736e: mov esi, 0x48fffaaa; lea esp, [rsp + 8]; ret; 
0x000000000042d8ee: mov esi, 0x48fffe76; mov esp, ebp; pop rbp; ret; 
0x0000000000444bfe: mov esi, 0x48fffffd; lea esp, [rsp + 8]; ret; 
0x0000000000426cd9: mov esi, 0x4b2f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000426c8b: mov esi, 0x4b2f; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x000000000045b868: mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b867: mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b968: mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9ca: mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e8: mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba08: mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a8: mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a7: mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b988: mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000415a3c: mov esi, 0x648d48c0; and al, 8; ret; 
0x000000000041627c: mov esi, 0x648d48c0; and al, 8; ret; 
0x00000000004324db: mov esi, 0x648d48c0; and al, 8; ret; 
0x000000000040d85e: mov esi, 0x66000752; mov eax, dword ptr [rdx]; and eax, 0xffff; ret; 
0x0000000000433d01: mov esi, 0x7ed0394d; adc byte ptr [rip + 0xff], ah; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b411: mov esi, 0x7ed0394d; adc byte ptr [rip + 0xff], ah; and r11d, 0xff; sub rax, r11; ret; 
0x00000000004211d5: mov esi, 0x80; call 0x20fb0; pop rbx; ret; 
0x0000000000421225: mov esi, 0x80; call 0x210a0; pop rbx; ret; 
0x000000000045a29e: mov esi, 0x88fffad0; ret; 
0x0000000000401950: mov esi, 0x89480001; ret; 
0x0000000000401986: mov esi, 0x89480001; ret; 
0x00000000004019ee: mov esi, 0x89480001; ret; 
0x0000000000418f52: mov esi, 0x8b480006; adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f8a: mov esi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6a9e4; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f23: mov esi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa4b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eeb: mov esi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eea: mov esi, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x000000000042fc55: mov esi, 0x8d48fffd; and al, 8; pop r12; pop rbx; ret; 
0x00000000004241fe: mov esi, 0xbf00060d; add al, 0; add byte ptr [rax], al; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x000000000043250a: mov esi, 0xc78948f6; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000041660a: mov esi, 0xc78948f6; mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x000000000041555a: mov esi, 0xc78948f6; mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x0000000000434eba: mov esi, 0xc78948f6; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000041cb77: mov esi, 0xd7b1; call 0x1ca10; pop rbx; ret; 
0x000000000041cb2a: mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x0000000000424335: mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x000000000041cbca: mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000041a6c6: mov esi, 0xe8; call 0x22e0; pop rbx; ret; 
0x000000000044e74e: mov esi, 0xe8fffc69; cdq; imul edi, esp, 0x448b48ff; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000424616: mov esi, 0xff; call 0x3d10; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004183d1: mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000459537: mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000040420e: mov esi, 0xff; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x000000000044ba77: mov esi, 0xffffffff; call 0x2480; shl rax, 1; add rax, rbx; pop rbx; ret; 
0x00000000004571fe: mov esi, 0xffffffff; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000041500b: mov esi, 1; call 0x2950; pop rbx; ret; 
0x000000000042be73: mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a57: mov esi, 1; call 0xfb70; pop rbx; ret; 
0x0000000000425604: mov esi, 1; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x0000000000413730: mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413730: mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x000000000041473c: mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x00000000004546c6: mov esi, 1; mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x000000000041d7c6: mov esi, 3; call 0x3d10; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004149dc: mov esi, dword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x0000000000414df1: mov esi, dword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca2: mov esi, dword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x00000000004188f6: mov esi, dword ptr [rax + 8]; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x00000000004302ac: mov esi, dword ptr [rax]; and edx, 0xff; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac6: mov esi, dword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x000000000042f20b: mov esi, dword ptr [rax]; call 0x2e7a0; mov rsp, rbp; pop rbp; ret; 
0x000000000043129c: mov esi, dword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312bc: mov esi, dword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000043125c: mov esi, dword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043127c: mov esi, dword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312dc: mov esi, dword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312fc: mov esi, dword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x000000000043131c: mov esi, dword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x000000000043028c: mov esi, dword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432dcb: mov esi, dword ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432fac: mov esi, dword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043339c: mov esi, dword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000432bfb: mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004331bc: mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335ac: mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432d7b: mov esi, dword ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432f5c: mov esi, dword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x000000000043334c: mov esi, dword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000432bab: mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043315c: mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043354c: mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432d9b: mov esi, dword ptr [rax]; call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bcb: mov esi, dword ptr [rax]; call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f7c: mov esi, dword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x000000000043336c: mov esi, dword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x000000000043317c: mov esi, dword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000043356c: mov esi, dword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042fcbc: mov esi, dword ptr [rax]; call 0x3b3a0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043045c: mov esi, dword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x000000000042fc80: mov esi, dword ptr [rax]; call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x0000000000455bc5: mov esi, dword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x00000000004310d0: mov esi, dword ptr [rax]; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000417000: mov esi, dword ptr [rax]; mov rax, r14; call rax; 
0x00000000004480c1: mov esi, dword ptr [rax]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf11: mov esi, dword ptr [rax]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000043393c: mov esi, dword ptr [rax]; mov rdi, rax; xor ecx, ecx; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x00000000004182a4: mov esi, dword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000418948: mov esi, dword ptr [rbp + rax*8]; mov rdi, rsp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x000000000040c6e8: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041def3: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e052: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300ab: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430569: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430689: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418ac4: mov esi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bb3: mov esi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc14: mov esi, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000454461: mov esi, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e7c6: mov esi, dword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e894: mov esi, dword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004086f3: mov esi, dword ptr [rbp - 0x120]; mov r15, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404078: mov esi, dword ptr [rbp - 0x138]; mov r15, qword ptr [rbp - 0x130]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418739: mov esi, dword ptr [rbp - 0x18]; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x000000000042f7b4: mov esi, dword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f99e: mov esi, dword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a3: mov esi, dword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000431559: mov esi, dword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c48: mov esi, dword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418498: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304d1: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d079: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e641: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004405a9: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ed1: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004513c4: mov esi, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb7d: mov esi, dword ptr [rbp - 0x1a8]; mov r15, qword ptr [rbp - 0x1a0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000438be3: mov esi, dword ptr [rbp - 0x1d8]; mov r15, qword ptr [rbp - 0x1d0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436336: mov esi, dword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044926a: mov esi, dword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b002: mov esi, dword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7c7: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa13: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b38e: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa65: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434e6: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3c6: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d514: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d6fc: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc0a: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb2: mov esi, dword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414c51: mov esi, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e44f: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043078e: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b6f: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bee: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043a6e9: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d34b: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f38c: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440881: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e0f: mov esi, dword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f92e: mov esi, dword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb58: mov esi, dword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d23b: mov esi, dword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e58e: mov esi, dword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000044076e: mov esi, dword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e21: mov esi, dword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x00000000004517db: mov esi, dword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451afe: mov esi, dword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000042fc1b: mov esi, dword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d561: mov esi, dword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a97: mov esi, dword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c4: mov esi, dword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db12: mov esi, dword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044deec: mov esi, dword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451e39: mov esi, dword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045217c: mov esi, dword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000412afb: mov esi, dword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000045588c: mov esi, dword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fbc: mov esi, dword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f79c: mov esi, dword ptr [rbp - 0x48]; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443220: mov esi, dword ptr [rbp - 0x48]; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e075: mov esi, dword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412047: mov esi, dword ptr [rbp - 0x50]; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd2: mov esi, dword ptr [rbp - 0x50]; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de52: mov esi, dword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb5: mov esi, dword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5e9: mov esi, dword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000044306b: mov esi, dword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000446cb7: mov esi, dword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000408d2f: mov esi, dword ptr [rbp - 0x70]; mov r15, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc8: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ece2: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040edf1: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313e1: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e299: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e359: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b62: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b902: mov esi, dword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad17: mov esi, dword ptr [rbp - 0x778]; mov r15, qword ptr [rbp - 0x770]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e987: mov esi, dword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b02: mov esi, dword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bd7: mov esi, dword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfdc: mov esi, dword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d00a: mov esi, dword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a83: mov esi, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b83: mov esi, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x00000000004535b5: mov esi, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a88: mov esi, dword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b828: mov esi, dword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044577d: mov esi, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a12: mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e122: mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441812: mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444aba: mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf8c: mov esi, dword ptr [rbp - 0x98]; mov r15, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x000000000040913a: mov esi, dword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fb0: mov esi, dword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x000000000045b1a4: mov esi, dword ptr [rbp - 0xaf8]; mov r15, qword ptr [rbp - 0xaf0]; mov rsp, rbp; pop rbp; ret; 
0x00000000004309de: mov esi, dword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e69: mov esi, dword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c31e: mov esi, dword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e5b: mov esi, dword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x000000000043905f: mov esi, dword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x000000000040447f: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea3a: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298ed: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcda: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6ab: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f70e: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f861: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffaa: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043000e: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305ff: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a58: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc8: mov esi, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045c648: mov esi, dword ptr [rbx]; mov r8, r15; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4f8: mov esi, dword ptr [rbx]; mov r8, r15; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x0000000000445412: mov esi, dword ptr [rbx]; mov rdi, qword ptr [rsp + 0x168]; lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000429935: mov esi, dword ptr [rbx]; mov rdi, rbx; lea rdx, [rip + 0x3781f]; call 0xe180; pop rbx; ret; 
0x000000000041859e: mov esi, dword ptr [rcx + 8]; mov edi, eax; call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x0000000000405121: mov esi, dword ptr [rcx + rax]; add bl, ch; cmp dh, bh; ret; 
0x0000000000402968: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402968: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x0000000000452823: mov esi, dword ptr [rdx + rax*8]; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x0000000000456afe: mov esi, dword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000040b992: mov esi, dword ptr [rsi]; add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045bb48: mov esi, dword ptr [rsi]; mov rdi, rax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000045c7d9: mov esi, dword ptr [rsi]; mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000413e28: mov esi, dword ptr [rsp + 0x108]; mov rdi, r14; mov rax, r15; call rax; 
0x0000000000417522: mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000041762a: mov esi, dword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x000000000043b52e: mov esi, dword ptr [rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x0000000000443fe2: mov esi, dword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000453676: mov esi, dword ptr [rsp + 8]; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x0000000000413cce: mov esi, dword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x0000000000418874: mov esi, dword ptr [rsp + rax*8 + 0x18]; lea rdi, [rsp + 0x878]; lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x0000000000438db7: mov esi, dword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000438ee7: mov esi, dword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000439167: mov esi, dword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439297: mov esi, dword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439357: mov esi, dword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000416980: mov esi, dword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159c0: mov esi, dword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x0000000000439326: mov esi, dword ptr [rsp]; mov ecx, 0x13; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000418564: mov esi, dword ptr [rsp]; mov edi, ebx; call 0x184a0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413cca: mov esi, dword ptr [rsp]; mov rsi, qword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x000000000041527e: mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041527e: mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040db5d: mov esi, eax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db7b: mov esi, eax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbcd: mov esi, eax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbeb: mov esi, eax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a2b: mov esi, eax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239eb: mov esi, eax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041903b: mov esi, eax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b71b: mov esi, eax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b74d: mov esi, eax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000458768: mov esi, eax; mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x000000000043e6cd: mov esi, eax; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000441f5d: mov esi, eax; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000455b7d: mov esi, eax; mov rdi, rbx; xor edx, edx; call 0xc590; pop rbx; ret; 
0x0000000000422471: mov esi, ebp; call 0x20fb0; pop r13; pop r12; pop rbx; ret; 
0x0000000000417e61: mov esi, ebp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417094: mov esi, ebp; mov rax, r15; call rax; 
0x0000000000447e78: mov esi, ebx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x000000000044b93b: mov esi, ebx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x0000000000453cea: mov esi, ebx; call 0x53af0; pop rbx; ret; 
0x0000000000458624: mov esi, ebx; lea rdi, [rsp + 1]; call 0x2b80; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000458497: mov esi, ebx; mov edx, 0x1b6; call 0x2a70; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c3c: mov esi, ebx; mov edx, 1; call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000040d734: mov esi, ebx; mov rcx, r12; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000040ea0f: mov esi, ebx; mov rcx, rax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x0000000000449d38: mov esi, ebx; mov rdi, rsp; lea rax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000043b542: mov esi, ebx; mov rdi, rsp; lea rax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000040e065: mov esi, ebx; movzx edx, r13w; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000042c5c4: mov esi, edi; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000402ec9: mov esi, edi; mov edi, 0x15; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457456: mov esi, edi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000403039: mov esi, edi; mov edi, 0x23; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574dc: mov esi, edi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457503: mov esi, edi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403059: mov esi, edi; mov edi, 0x4f; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba6: mov esi, edi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b69: mov esi, edi; mov edi, 0x52; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402bc9: mov esi, edi; mov edi, 0x53; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402be6: mov esi, edi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b46: mov esi, edi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402fec: mov esi, edi; mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403079: mov esi, edi; mov edi, 0x60; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c806: mov esi, edi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457526: mov esi, edi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004572e5: mov esi, edi; mov edi, 0x6a; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c8c9: mov esi, edi; mov edi, 0x7d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8e9: mov esi, edi; mov edi, 0x7e; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e16: mov esi, edi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457439: mov esi, edi; mov edi, 0x84; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f7c: mov esi, edi; mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f59: mov esi, edi; mov edi, 0xb; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402a56: mov esi, edi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c96c: mov esi, edi; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000402a85: mov esi, edi; mov edi, 2; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b89: mov esi, edi; mov edi, 4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457599: mov esi, edi; mov edi, 6; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045757b: mov esi, edi; mov edi, 7; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f36: mov esi, edi; mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e36: mov esi, edi; mov edx, 8; mov edi, 0x82; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403a3d: mov esi, edi; mov r9, rcx; sub r9, rsi; mov rax, r9; ret; 
0x00000000004573d1: mov esi, edi; xor ecx, ecx; mov edi, 0x85; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004532b6: mov esi, edi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x0000000000439cb8: mov esi, edx; mov rdi, rax; call 0x3aaa0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f70: mov esi, edx; mov rdx, rcx; mov r10, r8; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f30: mov esi, edx; mov rdx, rcx; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401ef0: mov esi, edx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401eb0: mov esi, edx; mov rdx, rcx; syscall; 
0x0000000000431dcc: mov esi, edx; movsd xmm0, qword ptr [rax]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043198c: mov esi, edx; movss xmm0, dword ptr [rax]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000401e70: mov esi, edx; syscall; 
0x000000000042238e: mov esi, esp; call 0x20fb0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042db0a: mov esi, esp; call 0x2da60; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f320: mov esi, esp; call 0x2f3e0; pop r13; pop r12; pop rbx; ret; 
0x0000000000433afa: mov esi, esp; call 0x342c0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000439796: mov esi, esp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x00000000004588db: mov esi, esp; call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ef9: mov esi, esp; call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x000000000041039b: mov esi, esp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103da: mov esi, esp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041046a: mov esi, esp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104aa: mov esi, esp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410045: mov esi, esp; call 0xef70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004508ee: mov esi, esp; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x00000000004594bd: mov esi, esp; mov edi, eax; call 0x59320; lea rsp, [rsp + 8]; ret; 
0x00000000004184be: mov esi, esp; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x0000000000450c46: mov esi, esp; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413165: mov esi, esp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004132fe: mov esi, esp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134be: mov esi, esp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000040e0f2: mov esi, esp; mov rdi, r13; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000041676e: mov esi, esp; mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156be: mov esi, esp; mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000413086: mov esi, esp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413219: mov esi, esp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b9: mov esi, esp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bda: mov esi, esp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041d8a5: mov esi, esp; mov rdi, rbx; call 0x1c7c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004226d5: mov esi, esp; mov rdi, rbx; call 0x21fe0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004222a0: mov esi, esp; mov rdi, rbx; call 0x21fe0; lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x000000000041517f: mov esi, esp; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x00000000004527c9: mov esi, esp; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x000000000042238d: mov esi, r12d; call 0x20fb0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000422470: mov esi, r13d; call 0x20fb0; pop r13; pop r12; pop rbx; ret; 
0x0000000000458767: mov esi, r8d; mov edi, dword ptr [rax]; call 0x2f00; lea rsp, [rsp + 8]; ret; 
0x00000000004145f2: mov esp, 0x16824; add al, ch; ret; 
0x0000000000445416: mov esp, 0x16824; add byte ptr [rax - 0x73], cl; add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x0000000000445499: mov esp, 0x17024; add byte ptr [rax - 0x73], cl; add eax, 0x3e8ba; call qword ptr [rax + 0x50]; 
0x000000000042723c: mov esp, 0x3a8b0005; call rax; 
0x000000000042726b: mov esp, 0x3a8b0005; call rax; 
0x000000000042729f: mov esp, 0x3a8b0005; call rax; 
0x000000000042b905: mov esp, 0x410c4; add al, ch; nop; ret; 
0x0000000000403a10: mov esp, 0x41ffffe5; pop rbp; pop r12; pop rbx; ret; 
0x0000000000402471: mov esp, 0x448d48c0; add eax, esi; cmp rdx, rax; jbe 0x246b; ret; 
0x0000000000402565: mov esp, 0x448d48c0; add eax, esi; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x0000000000432510: mov esp, 0x48000025; lea esp, [rsp + 8]; ret; 
0x000000000041a620: mov esp, 0x480006a7; mov eax, dword ptr [rax]; test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x00000000004024f1: mov esp, 0x48e8d1c0; lea eax, [rcx + rax - 8]; cmp rdx, rax; jbe 0x24eb; ret; 
0x000000000045b9d0: mov esp, 0x48fffa75; lea esp, [rsp + 8]; ret; 
0x0000000000451b30: mov esp, 0x48fffc35; mov eax, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000423ec0: mov esp, 0x48fffffd; mov eax, dword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x000000000041d2f0: mov esp, 0x48fffffe; lea esp, [rsp + 8]; ret; 
0x000000000041887a: mov esp, 0x87824; add byte ptr [rax - 0x73], cl; add eax, 0x50129; call qword ptr [rax]; 
0x0000000000401b77: mov esp, 0x89480001; ret; 
0x0000000000401bbb: mov esp, 0x89480001; ret; 
0x0000000000401c22: mov esp, 0x89480001; ret; 
0x000000000042b866: mov esp, 0x89824; add al, ch; syscall; 
0x0000000000439be0: mov esp, 0x8b480004; cmp al, ch; cmc; jle 0x39be7; dec dword ptr [rax - 0x77]; ret; 
0x0000000000439b7d: mov esp, 0x8b480004; cmp al, ch; pop rax; jg 0x39b84; dec dword ptr [rax - 0x77]; ret; 
0x00000000004310d4: mov esp, 0x8d48fffd; and al, 8; ret; 
0x000000000044795e: mov esp, 0xff2ffff; adc dword ptr [rbx], eax; pop rbx; ret; 
0x000000000040680a: mov esp, 0xffffc002; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406ac1: mov esp, 0xfffffc02; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406daf: mov esp, 0xffffff82; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040a91e: mov esp, dword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a99d: mov esp, dword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044f9: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4f0: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b5: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c761: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7e8: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e865: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab5: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee67: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411b9e: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa3e: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6ae: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7fe: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd6: mov esp, dword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa26: mov esp, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a8a5: mov esp, dword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040d1bb: mov esp, dword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000454453: mov esp, dword ptr [rbp - 0x120]; mov r13, qword ptr [rbp - 0x118]; mov r14, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e7b8: mov esp, dword ptr [rbp - 0x128]; mov r13, qword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e886: mov esp, dword ptr [rbp - 0x128]; mov r13, qword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404477: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea32: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298e5: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd2: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6a3: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f706: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f859: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa2: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430006: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305f7: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a50: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc0: mov esp, dword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e16c: mov esp, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f8cc: mov esp, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044334c: mov esp, dword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436328: mov esp, dword ptr [rbp - 0x208]; mov r13, qword ptr [rbp - 0x200]; mov r14, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418abc: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bab: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc0c: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d0f9: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440629: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004396b8: mov esp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004398a3: mov esp, dword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a71f: mov esp, dword ptr [rbp - 0x210]; mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a7ff: mov esp, dword ptr [rbp - 0x210]; mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418490: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304c9: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d071: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e639: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004405a1: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ec9: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004513bc: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042df61: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435080: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435110: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004351c8: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435268: mov esp, dword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d03: mov esp, dword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414c49: mov esp, dword ptr [rbp - 0x30]; mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e0f9: mov esp, dword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e06d: mov esp, dword ptr [rbp - 0x58]; mov r13, qword ptr [rbp - 0x50]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae2: mov esp, dword ptr [rbp - 0x58]; mov r13, qword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de4a: mov esp, dword ptr [rbp - 0x68]; mov r13, qword ptr [rbp - 0x60]; mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab2d: mov esp, dword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bad: mov esp, dword ptr [rbp - 0x70]; mov r13, qword ptr [rbp - 0x68]; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc0: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecda: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ede9: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313d9: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e291: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e351: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b5a: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8fa: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b4: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a74: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429ee7: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2e7: mov esp, dword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435596: mov esp, dword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0dd: mov esp, dword ptr [rbp - 0x88]; mov r13, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444bd0: mov esp, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000044588c: mov esp, dword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a75: mov esp, dword ptr [rbp - 0x90]; mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b75: mov esp, dword ptr [rbp - 0x90]; mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x00000000004535a7: mov esp, dword ptr [rbp - 0x90]; mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000452c68: mov esp, dword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403bac: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403d06: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b654: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6d1: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b8b4: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411794: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004161bd: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041621d: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d683: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440be5: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044febc: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffb3: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450068: mov esp, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402960: mov esp, dword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402970: mov esp, dword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402970: mov esp, dword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x000000000040d0ba: mov esp, eax; mov rax, r12; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041025e: mov esp, eax; mov rax, r12; lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000406a3c: mov esp, eax; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f92: mov esp, eax; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040108a: mov esp, ebp; pop rbp; ret; 
0x00000000004010d3: mov esp, ebp; pop rbp; ret; 
0x000000000040122d: mov esp, ebp; pop rbp; ret; 
0x0000000000401378: mov esp, ebp; pop rbp; ret; 
0x0000000000401401: mov esp, ebp; pop rbp; ret; 
0x0000000000401503: mov esp, ebp; pop rbp; ret; 
0x0000000000401648: mov esp, ebp; pop rbp; ret; 
0x0000000000401df6: mov esp, ebp; pop rbp; ret; 
0x0000000000401e29: mov esp, ebp; pop rbp; ret; 
0x0000000000401e5c: mov esp, ebp; pop rbp; ret; 
0x0000000000401e8f: mov esp, ebp; pop rbp; ret; 
0x0000000000401ed2: mov esp, ebp; pop rbp; ret; 
0x0000000000401f15: mov esp, ebp; pop rbp; ret; 
0x0000000000401f58: mov esp, ebp; pop rbp; ret; 
0x0000000000401f9c: mov esp, ebp; pop rbp; ret; 
0x00000000004027b6: mov esp, ebp; pop rbp; ret; 
0x00000000004027d1: mov esp, ebp; pop rbp; ret; 
0x000000000040284d: mov esp, ebp; pop rbp; ret; 
0x0000000000402890: mov esp, ebp; pop rbp; ret; 
0x00000000004028c8: mov esp, ebp; pop rbp; ret; 
0x00000000004028fc: mov esp, ebp; pop rbp; ret; 
0x0000000000402915: mov esp, ebp; pop rbp; ret; 
0x00000000004033ee: mov esp, ebp; pop rbp; ret; 
0x0000000000403564: mov esp, ebp; pop rbp; ret; 
0x0000000000403bb0: mov esp, ebp; pop rbp; ret; 
0x0000000000403c77: mov esp, ebp; pop rbp; ret; 
0x0000000000403d0a: mov esp, ebp; pop rbp; ret; 
0x0000000000404086: mov esp, ebp; pop rbp; ret; 
0x0000000000404483: mov esp, ebp; pop rbp; ret; 
0x0000000000404501: mov esp, ebp; pop rbp; ret; 
0x0000000000404f31: mov esp, ebp; pop rbp; ret; 
0x0000000000404f5d: mov esp, ebp; pop rbp; ret; 
0x0000000000404fac: mov esp, ebp; pop rbp; ret; 
0x0000000000404fcc: mov esp, ebp; pop rbp; ret; 
0x0000000000404fec: mov esp, ebp; pop rbp; ret; 
0x000000000040500c: mov esp, ebp; pop rbp; ret; 
0x000000000040502c: mov esp, ebp; pop rbp; ret; 
0x000000000040504c: mov esp, ebp; pop rbp; ret; 
0x000000000040506c: mov esp, ebp; pop rbp; ret; 
0x0000000000405177: mov esp, ebp; pop rbp; ret; 
0x0000000000406767: mov esp, ebp; pop rbp; ret; 
0x0000000000408701: mov esp, ebp; pop rbp; ret; 
0x0000000000408d37: mov esp, ebp; pop rbp; ret; 
0x0000000000409148: mov esp, ebp; pop rbp; ret; 
0x00000000004094dd: mov esp, ebp; pop rbp; ret; 
0x0000000000409551: mov esp, ebp; pop rbp; ret; 
0x000000000040a049: mov esp, ebp; pop rbp; ret; 
0x000000000040a72d: mov esp, ebp; pop rbp; ret; 
0x000000000040a80d: mov esp, ebp; pop rbp; ret; 
0x000000000040a8ac: mov esp, ebp; pop rbp; ret; 
0x000000000040a925: mov esp, ebp; pop rbp; ret; 
0x000000000040a9a4: mov esp, ebp; pop rbp; ret; 
0x000000000040aa2d: mov esp, ebp; pop rbp; ret; 
0x000000000040b4f8: mov esp, ebp; pop rbp; ret; 
0x000000000040b5bd: mov esp, ebp; pop rbp; ret; 
0x000000000040b658: mov esp, ebp; pop rbp; ret; 
0x000000000040b6d5: mov esp, ebp; pop rbp; ret; 
0x000000000040b7cf: mov esp, ebp; pop rbp; ret; 
0x000000000040b8b8: mov esp, ebp; pop rbp; ret; 
0x000000000040c32c: mov esp, ebp; pop rbp; ret; 
0x000000000040c6f0: mov esp, ebp; pop rbp; ret; 
0x000000000040c769: mov esp, ebp; pop rbp; ret; 
0x000000000040cb6e: mov esp, ebp; pop rbp; ret; 
0x000000000040d1c2: mov esp, ebp; pop rbp; ret; 
0x000000000040dc1a: mov esp, ebp; pop rbp; ret; 
0x000000000040e457: mov esp, ebp; pop rbp; ret; 
0x000000000040e7f0: mov esp, ebp; pop rbp; ret; 
0x000000000040e86d: mov esp, ebp; pop rbp; ret; 
0x000000000040e98f: mov esp, ebp; pop rbp; ret; 
0x000000000040ea3e: mov esp, ebp; pop rbp; ret; 
0x000000000040eabd: mov esp, ebp; pop rbp; ret; 
0x000000000040ebcc: mov esp, ebp; pop rbp; ret; 
0x000000000040ece6: mov esp, ebp; pop rbp; ret; 
0x000000000040edf5: mov esp, ebp; pop rbp; ret; 
0x000000000040ee6f: mov esp, ebp; pop rbp; ret; 
0x000000000040ef5e: mov esp, ebp; pop rbp; ret; 
0x0000000000410360: mov esp, ebp; pop rbp; ret; 
0x0000000000411548: mov esp, ebp; pop rbp; ret; 
0x0000000000411798: mov esp, ebp; pop rbp; ret; 
0x00000000004119bc: mov esp, ebp; pop rbp; ret; 
0x0000000000411a7c: mov esp, ebp; pop rbp; ret; 
0x0000000000411aad: mov esp, ebp; pop rbp; ret; 
0x0000000000411ba6: mov esp, ebp; pop rbp; ret; 
0x0000000000411bf6: mov esp, ebp; pop rbp; ret; 
0x000000000041204f: mov esp, ebp; pop rbp; ret; 
0x0000000000412b03: mov esp, ebp; pop rbp; ret; 
0x0000000000412ef2: mov esp, ebp; pop rbp; ret; 
0x0000000000412f33: mov esp, ebp; pop rbp; ret; 
0x0000000000412fd4: mov esp, ebp; pop rbp; ret; 
0x0000000000414c55: mov esp, ebp; pop rbp; ret; 
0x0000000000415947: mov esp, ebp; pop rbp; ret; 
0x00000000004161c1: mov esp, ebp; pop rbp; ret; 
0x0000000000416221: mov esp, ebp; pop rbp; ret; 
0x0000000000416907: mov esp, ebp; pop rbp; ret; 
0x0000000000417caa: mov esp, ebp; pop rbp; ret; 
0x0000000000417cca: mov esp, ebp; pop rbp; ret; 
0x0000000000417cea: mov esp, ebp; pop rbp; ret; 
0x0000000000417d0a: mov esp, ebp; pop rbp; ret; 
0x0000000000417d2a: mov esp, ebp; pop rbp; ret; 
0x0000000000417d4a: mov esp, ebp; pop rbp; ret; 
0x0000000000417dac: mov esp, ebp; pop rbp; ret; 
0x0000000000417e8a: mov esp, ebp; pop rbp; ret; 
0x000000000041849c: mov esp, ebp; pop rbp; ret; 
0x00000000004185d6: mov esp, ebp; pop rbp; ret; 
0x000000000041863c: mov esp, ebp; pop rbp; ret; 
0x00000000004187c5: mov esp, ebp; pop rbp; ret; 
0x0000000000418ac8: mov esp, ebp; pop rbp; ret; 
0x0000000000418ce0: mov esp, ebp; pop rbp; ret; 
0x0000000000418d28: mov esp, ebp; pop rbp; ret; 
0x000000000041defb: mov esp, ebp; pop rbp; ret; 
0x000000000041e05a: mov esp, ebp; pop rbp; ret; 
0x000000000041e7cd: mov esp, ebp; pop rbp; ret; 
0x000000000041e89b: mov esp, ebp; pop rbp; ret; 
0x000000000041fa46: mov esp, ebp; pop rbp; ret; 
0x0000000000426e07: mov esp, ebp; pop rbp; ret; 
0x00000000004298f1: mov esp, ebp; pop rbp; ret; 
0x0000000000429bdf: mov esp, ebp; pop rbp; ret; 
0x0000000000429eef: mov esp, ebp; pop rbp; ret; 
0x000000000042bcde: mov esp, ebp; pop rbp; ret; 
0x000000000042bfe4: mov esp, ebp; pop rbp; ret; 
0x000000000042c2ef: mov esp, ebp; pop rbp; ret; 
0x000000000042d8f3: mov esp, ebp; pop rbp; ret; 
0x000000000042d9a3: mov esp, ebp; pop rbp; ret; 
0x000000000042dc8b: mov esp, ebp; pop rbp; ret; 
0x000000000042de56: mov esp, ebp; pop rbp; ret; 
0x000000000042df69: mov esp, ebp; pop rbp; ret; 
0x000000000042e079: mov esp, ebp; pop rbp; ret; 
0x000000000042e0fd: mov esp, ebp; pop rbp; ret; 
0x000000000042e170: mov esp, ebp; pop rbp; ret; 
0x000000000042e339: mov esp, ebp; pop rbp; ret; 
0x000000000042e646: mov esp, ebp; pop rbp; ret; 
0x000000000042e6af: mov esp, ebp; pop rbp; ret; 
0x000000000042e7aa: mov esp, ebp; pop rbp; ret; 
0x000000000042eb8b: mov esp, ebp; pop rbp; ret; 
0x000000000042eba7: mov esp, ebp; pop rbp; ret; 
0x000000000042ecda: mov esp, ebp; pop rbp; ret; 
0x000000000042ed36: mov esp, ebp; pop rbp; ret; 
0x000000000042ee60: mov esp, ebp; pop rbp; ret; 
0x000000000042f213: mov esp, ebp; pop rbp; ret; 
0x000000000042f6b6: mov esp, ebp; pop rbp; ret; 
0x000000000042f712: mov esp, ebp; pop rbp; ret; 
0x000000000042f7bc: mov esp, ebp; pop rbp; ret; 
0x000000000042f806: mov esp, ebp; pop rbp; ret; 
0x000000000042f865: mov esp, ebp; pop rbp; ret; 
0x000000000042f883: mov esp, ebp; pop rbp; ret; 
0x000000000042f936: mov esp, ebp; pop rbp; ret; 
0x000000000042f9a6: mov esp, ebp; pop rbp; ret; 
0x000000000042fa1b: mov esp, ebp; pop rbp; ret; 
0x000000000042fb60: mov esp, ebp; pop rbp; ret; 
0x000000000042fc23: mov esp, ebp; pop rbp; ret; 
0x000000000042ffae: mov esp, ebp; pop rbp; ret; 
0x0000000000430012: mov esp, ebp; pop rbp; ret; 
0x00000000004300b3: mov esp, ebp; pop rbp; ret; 
0x00000000004304d5: mov esp, ebp; pop rbp; ret; 
0x0000000000430507: mov esp, ebp; pop rbp; ret; 
0x0000000000430571: mov esp, ebp; pop rbp; ret; 
0x00000000004305a4: mov esp, ebp; pop rbp; ret; 
0x0000000000430603: mov esp, ebp; pop rbp; ret; 
0x000000000043061d: mov esp, ebp; pop rbp; ret; 
0x0000000000430691: mov esp, ebp; pop rbp; ret; 
0x00000000004306c4: mov esp, ebp; pop rbp; ret; 
0x00000000004306e5: mov esp, ebp; pop rbp; ret; 
0x000000000043071a: mov esp, ebp; pop rbp; ret; 
0x0000000000430796: mov esp, ebp; pop rbp; ret; 
0x00000000004307d3: mov esp, ebp; pop rbp; ret; 
0x00000000004309ec: mov esp, ebp; pop rbp; ret; 
0x0000000000430af5: mov esp, ebp; pop rbp; ret; 
0x0000000000430b77: mov esp, ebp; pop rbp; ret; 
0x0000000000430bf6: mov esp, ebp; pop rbp; ret; 
0x0000000000430c33: mov esp, ebp; pop rbp; ret; 
0x0000000000430e69: mov esp, ebp; pop rbp; ret; 
0x00000000004313e5: mov esp, ebp; pop rbp; ret; 
0x00000000004314ab: mov esp, ebp; pop rbp; ret; 
0x0000000000431561: mov esp, ebp; pop rbp; ret; 
0x000000000043157a: mov esp, ebp; pop rbp; ret; 
0x000000000043158a: mov esp, ebp; pop rbp; ret; 
0x0000000000431e24: mov esp, ebp; pop rbp; ret; 
0x0000000000431e47: mov esp, ebp; pop rbp; ret; 
0x0000000000431e64: mov esp, ebp; pop rbp; ret; 
0x0000000000431e84: mov esp, ebp; pop rbp; ret; 
0x0000000000431f1d: mov esp, ebp; pop rbp; ret; 
0x0000000000431f56: mov esp, ebp; pop rbp; ret; 
0x0000000000431f8d: mov esp, ebp; pop rbp; ret; 
0x0000000000431fc6: mov esp, ebp; pop rbp; ret; 
0x0000000000435088: mov esp, ebp; pop rbp; ret; 
0x0000000000435118: mov esp, ebp; pop rbp; ret; 
0x00000000004351d0: mov esp, ebp; pop rbp; ret; 
0x0000000000435270: mov esp, ebp; pop rbp; ret; 
0x000000000043541c: mov esp, ebp; pop rbp; ret; 
0x000000000043559a: mov esp, ebp; pop rbp; ret; 
0x000000000043633d: mov esp, ebp; pop rbp; ret; 
0x00000000004368d1: mov esp, ebp; pop rbp; ret; 
0x0000000000436a20: mov esp, ebp; pop rbp; ret; 
0x0000000000436a4a: mov esp, ebp; pop rbp; ret; 
0x0000000000436b0a: mov esp, ebp; pop rbp; ret; 
0x0000000000436b21: mov esp, ebp; pop rbp; ret; 
0x0000000000436b41: mov esp, ebp; pop rbp; ret; 
0x0000000000436bb7: mov esp, ebp; pop rbp; ret; 
0x0000000000436bd1: mov esp, ebp; pop rbp; ret; 
0x0000000000436c50: mov esp, ebp; pop rbp; ret; 
0x0000000000436d07: mov esp, ebp; pop rbp; ret; 
0x0000000000436d43: mov esp, ebp; pop rbp; ret; 
0x0000000000436d85: mov esp, ebp; pop rbp; ret; 
0x0000000000436f7a: mov esp, ebp; pop rbp; ret; 
0x00000000004372d8: mov esp, ebp; pop rbp; ret; 
0x0000000000438bf1: mov esp, ebp; pop rbp; ret; 
0x0000000000438d1a: mov esp, ebp; pop rbp; ret; 
0x0000000000438d4d: mov esp, ebp; pop rbp; ret; 
0x000000000043906d: mov esp, ebp; pop rbp; ret; 
0x00000000004390a7: mov esp, ebp; pop rbp; ret; 
0x00000000004390d7: mov esp, ebp; pop rbp; ret; 
0x000000000043910d: mov esp, ebp; pop rbp; ret; 
0x00000000004393f7: mov esp, ebp; pop rbp; ret; 
0x000000000043945d: mov esp, ebp; pop rbp; ret; 
0x000000000043955c: mov esp, ebp; pop rbp; ret; 
0x000000000043962e: mov esp, ebp; pop rbp; ret; 
0x00000000004396bc: mov esp, ebp; pop rbp; ret; 
0x0000000000439820: mov esp, ebp; pop rbp; ret; 
0x00000000004398a7: mov esp, ebp; pop rbp; ret; 
0x0000000000439cc3: mov esp, ebp; pop rbp; ret; 
0x000000000043a6f1: mov esp, ebp; pop rbp; ret; 
0x000000000043ab31: mov esp, ebp; pop rbp; ret; 
0x000000000043b11b: mov esp, ebp; pop rbp; ret; 
0x000000000043b196: mov esp, ebp; pop rbp; ret; 
0x000000000043b1cd: mov esp, ebp; pop rbp; ret; 
0x000000000043b396: mov esp, ebp; pop rbp; ret; 
0x000000000043bf9a: mov esp, ebp; pop rbp; ret; 
0x000000000043c0f3: mov esp, ebp; pop rbp; ret; 
0x000000000043d07d: mov esp, ebp; pop rbp; ret; 
0x000000000043d101: mov esp, ebp; pop rbp; ret; 
0x000000000043d243: mov esp, ebp; pop rbp; ret; 
0x000000000043d353: mov esp, ebp; pop rbp; ret; 
0x000000000043d569: mov esp, ebp; pop rbp; ret; 
0x000000000043d687: mov esp, ebp; pop rbp; ret; 
0x000000000043dfe1: mov esp, ebp; pop rbp; ret; 
0x000000000043e130: mov esp, ebp; pop rbp; ret; 
0x000000000043e29d: mov esp, ebp; pop rbp; ret; 
0x000000000043e35d: mov esp, ebp; pop rbp; ret; 
0x000000000043e596: mov esp, ebp; pop rbp; ret; 
0x000000000043e645: mov esp, ebp; pop rbp; ret; 
0x000000000043efeb: mov esp, ebp; pop rbp; ret; 
0x000000000043f011: mov esp, ebp; pop rbp; ret; 
0x000000000043f394: mov esp, ebp; pop rbp; ret; 
0x000000000043f5f1: mov esp, ebp; pop rbp; ret; 
0x000000000043f7a4: mov esp, ebp; pop rbp; ret; 
0x000000000043f8d0: mov esp, ebp; pop rbp; ret; 
0x000000000043fa6d: mov esp, ebp; pop rbp; ret; 
0x00000000004405ad: mov esp, ebp; pop rbp; ret; 
0x0000000000440631: mov esp, ebp; pop rbp; ret; 
0x0000000000440776: mov esp, ebp; pop rbp; ret; 
0x0000000000440889: mov esp, ebp; pop rbp; ret; 
0x0000000000440a9f: mov esp, ebp; pop rbp; ret; 
0x0000000000440be9: mov esp, ebp; pop rbp; ret; 
0x00000000004416d1: mov esp, ebp; pop rbp; ret; 
0x0000000000441820: mov esp, ebp; pop rbp; ret; 
0x0000000000441a87: mov esp, ebp; pop rbp; ret; 
0x0000000000441b87: mov esp, ebp; pop rbp; ret; 
0x0000000000441e29: mov esp, ebp; pop rbp; ret; 
0x0000000000441ed5: mov esp, ebp; pop rbp; ret; 
0x0000000000442a0b: mov esp, ebp; pop rbp; ret; 
0x0000000000442a31: mov esp, ebp; pop rbp; ret; 
0x0000000000442e17: mov esp, ebp; pop rbp; ret; 
0x0000000000443073: mov esp, ebp; pop rbp; ret; 
0x0000000000443228: mov esp, ebp; pop rbp; ret; 
0x0000000000443350: mov esp, ebp; pop rbp; ret; 
0x00000000004434ee: mov esp, ebp; pop rbp; ret; 
0x0000000000443aea: mov esp, ebp; pop rbp; ret; 
0x0000000000443bb9: mov esp, ebp; pop rbp; ret; 
0x0000000000444ac8: mov esp, ebp; pop rbp; ret; 
0x0000000000444bd7: mov esp, ebp; pop rbp; ret; 
0x0000000000445784: mov esp, ebp; pop rbp; ret; 
0x0000000000445893: mov esp, ebp; pop rbp; ret; 
0x0000000000446cbf: mov esp, ebp; pop rbp; ret; 
0x0000000000449278: mov esp, ebp; pop rbp; ret; 
0x0000000000449951: mov esp, ebp; pop rbp; ret; 
0x0000000000449a93: mov esp, ebp; pop rbp; ret; 
0x0000000000449aba: mov esp, ebp; pop rbp; ret; 
0x0000000000449b66: mov esp, ebp; pop rbp; ret; 
0x0000000000449b81: mov esp, ebp; pop rbp; ret; 
0x000000000044b010: mov esp, ebp; pop rbp; ret; 
0x000000000044b6f1: mov esp, ebp; pop rbp; ret; 
0x000000000044b833: mov esp, ebp; pop rbp; ret; 
0x000000000044b85a: mov esp, ebp; pop rbp; ret; 
0x000000000044b906: mov esp, ebp; pop rbp; ret; 
0x000000000044b921: mov esp, ebp; pop rbp; ret; 
0x000000000044d012: mov esp, ebp; pop rbp; ret; 
0x000000000044d3ce: mov esp, ebp; pop rbp; ret; 
0x000000000044d51c: mov esp, ebp; pop rbp; ret; 
0x000000000044d704: mov esp, ebp; pop rbp; ret; 
0x000000000044d8cc: mov esp, ebp; pop rbp; ret; 
0x000000000044db1a: mov esp, ebp; pop rbp; ret; 
0x000000000044dc12: mov esp, ebp; pop rbp; ret; 
0x000000000044ddba: mov esp, ebp; pop rbp; ret; 
0x000000000044def4: mov esp, ebp; pop rbp; ret; 
0x000000000044e0e8: mov esp, ebp; pop rbp; ret; 
0x000000000044fdde: mov esp, ebp; pop rbp; ret; 
0x000000000044fec0: mov esp, ebp; pop rbp; ret; 
0x000000000044ffb7: mov esp, ebp; pop rbp; ret; 
0x000000000045006c: mov esp, ebp; pop rbp; ret; 
0x0000000000450f0e: mov esp, ebp; pop rbp; ret; 
0x00000000004513c8: mov esp, ebp; pop rbp; ret; 
0x0000000000451816: mov esp, ebp; pop rbp; ret; 
0x0000000000451b39: mov esp, ebp; pop rbp; ret; 
0x0000000000451e74: mov esp, ebp; pop rbp; ret; 
0x00000000004521b7: mov esp, ebp; pop rbp; ret; 
0x0000000000452c6f: mov esp, ebp; pop rbp; ret; 
0x00000000004531d7: mov esp, ebp; pop rbp; ret; 
0x00000000004531fb: mov esp, ebp; pop rbp; ret; 
0x00000000004535b9: mov esp, ebp; pop rbp; ret; 
0x0000000000453a5c: mov esp, ebp; pop rbp; ret; 
0x0000000000454468: mov esp, ebp; pop rbp; ret; 
0x0000000000455894: mov esp, ebp; pop rbp; ret; 
0x0000000000455e77: mov esp, ebp; pop rbp; ret; 
0x0000000000455fc4: mov esp, ebp; pop rbp; ret; 
0x0000000000458fbe: mov esp, ebp; pop rbp; ret; 
0x0000000000458fdd: mov esp, ebp; pop rbp; ret; 
0x0000000000459007: mov esp, ebp; pop rbp; ret; 
0x0000000000459027: mov esp, ebp; pop rbp; ret; 
0x000000000045903d: mov esp, ebp; pop rbp; ret; 
0x000000000045ad25: mov esp, ebp; pop rbp; ret; 
0x000000000045b1b2: mov esp, ebp; pop rbp; ret; 
0x000000000045bc18: mov esp, ebp; pop rbp; ret; 
0x000000000045bfcc: mov esp, ebp; pop rbp; ret; 
0x000000000041829a: mov esp, ebx; lea rax, [rip + 0x505dd]; mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000041302c: mov esp, esi; test rsi, rsi; je 0x1303d; mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000401039: mov qword ptr [r10 + 0x60], rax; mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x0000000000424158: mov qword ptr [r12 + 0xa8], rax; pop r13; pop r12; pop rbx; ret; 
0x0000000000414b2a: mov qword ptr [r13], rax; mov dword ptr [r13 + 0x10], ebx; pop r13; pop r12; pop rbx; ret; 
0x000000000041d78b: mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x000000000041d793: mov qword ptr [rax + 0x20], 0; ret; 
0x000000000041d783: mov qword ptr [rax + 0x28], rsi; mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000426b8d: mov qword ptr [rax + 0x40], rdx; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x0000000000426b98: mov qword ptr [rax + 0x48], rdx; ret; 
0x000000000041d787: mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000450b5b: mov qword ptr [rax], 0; call 0x19140; lea rsp, [rsp + 8]; ret; 
0x0000000000452e8e: mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004150dc: mov qword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004181ad: mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x0000000000403c24: mov qword ptr [rax], 0; pop r13; pop r12; pop rbx; ret; 
0x000000000041b3cc: mov qword ptr [rax], 1; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x0000000000419695: mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x000000000041a9c3: mov qword ptr [rax], rbx; pop rbx; ret; 
0x0000000000419336: mov qword ptr [rax], rdi; ret; 
0x0000000000401057: mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x0000000000456948: mov qword ptr [rax], rdx; lea rsp, [rsp + 8]; ret; 
0x000000000040a009: mov qword ptr [rax], rdx; mov dx, word ptr [rsp + 0x18]; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x00000000004189ad: mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004189ad: mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; pop rbx; ret; 
0x00000000004189ff: mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000406b21: mov qword ptr [rax], rdx; ret; 
0x0000000000406b20: mov qword ptr [rax], rdx; ret; 
0x0000000000406b70: mov qword ptr [rax], rdx; ret; 
0x0000000000406b6f: mov qword ptr [rax], rdx; ret; 
0x0000000000406bc3: mov qword ptr [rax], rdx; ret; 
0x0000000000406bc2: mov qword ptr [rax], rdx; ret; 
0x0000000000432103: mov qword ptr [rax], rsi; ret; 
0x0000000000450219: mov qword ptr [rbx + 0x10], 0xffffffffffffffff; call 0x2750; mov eax, dword ptr [rip + 0x28334]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x00000000004206d2: mov qword ptr [rbx + 0x18], 0; pop r13; pop r12; pop rbx; ret; 
0x000000000041c509: mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041c56e: mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041c505: mov qword ptr [rbx + 0x20], rax; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x0000000000426bb7: mov qword ptr [rbx + 0x30], rax; pop rbx; ret; 
0x000000000041c676: mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004209cd: mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420a1f: mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000420b8f: mov qword ptr [rbx + 0x40], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042096d: mov qword ptr [rbx + 0x40], rax; pop r13; pop r12; pop rbx; ret; 
0x000000000041a659: mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x0000000000421093: mov qword ptr [rbx + 8], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421188: mov qword ptr [rbx + 8], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456bcf: mov qword ptr [rbx + r12*8], rsi; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456c31: mov qword ptr [rbx + r12*8], rsi; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000412ff6: mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000454b70: mov qword ptr [rbx], 0; pop rbx; ret; 
0x000000000040bb22: mov qword ptr [rbx], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040e16d: mov qword ptr [rbx], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041304f: mov qword ptr [rbx], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041a5d5: mov qword ptr [rbx], r12; mov rax, qword ptr [rbx]; pop r13; pop r12; pop rbx; ret; 
0x0000000000411c21: mov qword ptr [rbx], r12; pop r13; pop r12; pop rbx; ret; 
0x0000000000447995: mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000040cd05: mov qword ptr [rbx], rax; pop r13; pop r12; pop rbx; ret; 
0x0000000000414e5d: mov qword ptr [rbx], rax; pop rbx; ret; 
0x000000000041908d: mov qword ptr [rbx], rax; pop rbx; ret; 
0x00000000004193ab: mov qword ptr [rcx + 0x18], rdx; ret; 
0x0000000000419691: mov qword ptr [rcx + 0x20], r8; mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x000000000041936b: mov qword ptr [rcx + 8], rdx; ret; 
0x000000000040293c: mov qword ptr [rdi + 0x30], rax; mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000402944: mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000456d9d: mov qword ptr [rdi + rdx*8], 0xffffffffffffffff; cmp eax, 0xf; jl 0x56d98; xor eax, eax; ret; 
0x0000000000456c6d: mov qword ptr [rdi + rdx*8], 0xffffffffffffffff; cmp eax, 1; jl 0x56c68; xor eax, eax; ret; 
0x0000000000417c7f: mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x0000000000432fcf: mov qword ptr [rdi], rax; ret; 
0x0000000000432ff2: mov qword ptr [rdi], rax; ret; 
0x000000000043300f: mov qword ptr [rdi], rax; ret; 
0x00000000004331df: mov qword ptr [rdi], rax; ret; 
0x0000000000433202: mov qword ptr [rdi], rax; ret; 
0x000000000043321f: mov qword ptr [rdi], rax; ret; 
0x00000000004333bf: mov qword ptr [rdi], rax; ret; 
0x00000000004333e2: mov qword ptr [rdi], rax; ret; 
0x00000000004333ff: mov qword ptr [rdi], rax; ret; 
0x00000000004335cf: mov qword ptr [rdi], rax; ret; 
0x00000000004335f2: mov qword ptr [rdi], rax; ret; 
0x000000000043360f: mov qword ptr [rdi], rax; ret; 
0x00000000004036b0: mov qword ptr [rdi], rdx; add rdi, 8; cmp rax, rdi; ja 0x36b0; ret; 
0x0000000000419332: mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x00000000004116e2: mov qword ptr [rdx + 0x30], rax; lea rax, [rip - 0x3bfd]; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x000000000044824a: mov qword ptr [rdx + 0x80], rax; lea rsp, [rsp + 8]; ret; 
0x0000000000419582: mov qword ptr [rdx + 0xa8], rax; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x000000000041972a: mov qword ptr [rdx + 0xa8], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004193b8: mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000041a036: mov qword ptr [rdx + 0xb8], rax; lea rdi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x00000000004116f4: mov qword ptr [rdx + 0xc0], rax; ret; 
0x0000000000453218: mov qword ptr [rdx + 8], rcx; mov qword ptr [rdx], rbx; mov qword ptr [rip + 0x2568a], rax; pop rbx; ret; 
0x00000000004557a8: mov qword ptr [rdx + rax*8 - 0x20], 0; cmp ebx, 0x1a; jl 0x55778; pop rbx; ret; 
0x000000000041b4ee: mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x0000000000407de9: mov qword ptr [rdx], rax; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x0000000000409ebf: mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x000000000045321c: mov qword ptr [rdx], rbx; mov qword ptr [rip + 0x2568a], rax; pop rbx; ret; 
0x00000000004029d1: mov qword ptr [rdx], rcx; mov rdi, rax; call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x00000000004087af: mov qword ptr [rdx], rsi; mov dword ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000045321f: mov qword ptr [rip + 0x2568a], rax; pop rbx; ret; 
0x0000000000423baa: mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000423b67: mov qword ptr [rip + 0x461e2], rdi; ret; 
0x00000000004189ea: mov qword ptr [rip + 0x5113f], rax; lea rdx, [rip - 0x68]; lea rax, [rip + 0x4fe71]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000423b9f: mov qword ptr [rip + 0x6127a], rdx; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000419279: mov qword ptr [rsi + 0x20], rdx; mov rdi, rbx; mov ecx, 5; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x0000000000456d1d: mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000456d60: mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000407948: mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x000000000040783f: mov qword ptr [rsi], 0; ret; 
0x000000000040790a: mov qword ptr [rsi], r8; cmp dx, 0x20; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x00000000004077d8: mov qword ptr [rsi], rax; ret; 
0x0000000000419374: mov qword ptr [rsi], rax; ret; 
0x0000000000407817: mov qword ptr [rsi], rcx; ret; 
0x00000000004078dd: mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x0000000000407943: mov qword ptr [rsi], rdi; jmp 0x794f; mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x0000000000416e64: mov qword ptr [rsi], rdx; lea rcx, [rdx + 2]; movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x0000000000417c82: mov qword ptr [rsi], rdx; ret; 
0x0000000000439726: mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439769: mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042de7b: mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dea8: mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df7e: mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004588d5: mov qword ptr [rsp + 8], rdx; mov rsi, rsp; call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ef3: mov qword ptr [rsp + 8], rdx; mov rsi, rsp; call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432268: mov qword ptr [rsp], r9; mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436a40: mov qword ptr [rsp], rax; call 0x368e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449ab0: mov qword ptr [rsp], rax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000044b850: mov qword ptr [rsp], rax; call 0x4b700; mov rsp, rbp; pop rbp; ret; 
0x000000000044bede: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044c5f9: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c86b: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c916: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cbc6: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc66: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd06: mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000042de77: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dea4: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df7a: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rdx; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443643: mov qword ptr [rsp], rax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000456f63: mov qword ptr [rsp], rbx; mov rdi, rsp; call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000407b55: mov qword ptr [rsp], rdi; mov eax, esi; and edx, edx; imul rax, rdx; lea rsp, [rsp + 8]; ret; 
0x00000000004559c7: mov qword ptr [rsp], rdi; mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004191e5: mov qword ptr [rsp], rdi; mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x0000000000432291: mov qword ptr [rsp], rdx; mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416978: mov qword ptr [rsp], rsi; mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159b8: mov qword ptr [rsp], rsi; mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x0000000000401f75: mov r10, r8; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f35: mov r10, r8; mov r8, r9; syscall; 
0x0000000000401ef5: mov r10, r8; syscall; 
0x0000000000401d05: mov r11d, 0x89480001; ret; 
0x000000000040a91d: mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a99c: mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044f8: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4ef: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b4: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c760: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7e7: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e864: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab4: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee66: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411b9d: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa3d: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6ad: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7fd: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd5: mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa25: mov r12, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a8a4: mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040d1ba: mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000454452: mov r12, qword ptr [rbp - 0x120]; mov r13, qword ptr [rbp - 0x118]; mov r14, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e7b7: mov r12, qword ptr [rbp - 0x128]; mov r13, qword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e885: mov r12, qword ptr [rbp - 0x128]; mov r13, qword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404476: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea31: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298e4: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd1: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6a2: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f705: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f858: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa1: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430005: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305f6: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a4f: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfbf: mov r12, qword ptr [rbp - 0x18]; mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e16b: mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f8cb: mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044334b: mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436327: mov r12, qword ptr [rbp - 0x208]; mov r13, qword ptr [rbp - 0x200]; mov r14, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418abb: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436baa: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc0b: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d0f8: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440628: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004396b7: mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004398a2: mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a71e: mov r12, qword ptr [rbp - 0x210]; mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a7fe: mov r12, qword ptr [rbp - 0x210]; mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000041848f: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304c8: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d070: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e638: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004405a0: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ec8: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004513bb: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042df60: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043507f: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043510f: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004351c7: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435267: mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d02: mov r12, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414c48: mov r12, qword ptr [rbp - 0x30]; mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e0f8: mov r12, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e06c: mov r12, qword ptr [rbp - 0x58]; mov r13, qword ptr [rbp - 0x50]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae1: mov r12, qword ptr [rbp - 0x58]; mov r13, qword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de49: mov r12, qword ptr [rbp - 0x68]; mov r13, qword ptr [rbp - 0x60]; mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab2c: mov r12, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bac: mov r12, qword ptr [rbp - 0x70]; mov r13, qword ptr [rbp - 0x68]; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebbf: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecd9: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ede8: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313d8: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e290: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e350: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b59: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8f9: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b3: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a73: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429ee6: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2e6: mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435595: mov r12, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0dc: mov r12, qword ptr [rbp - 0x88]; mov r13, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444bcf: mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000044588b: mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a74: mov r12, qword ptr [rbp - 0x90]; mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b74: mov r12, qword ptr [rbp - 0x90]; mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x00000000004535a6: mov r12, qword ptr [rbp - 0x90]; mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000452c67: mov r12, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403bab: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403d05: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b653: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6d0: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b8b3: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411793: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004161bc: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041621c: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d682: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440be4: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044febb: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffb2: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450067: mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040295f: mov r12, qword ptr [rdi + 0x10]; mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000040d0b9: mov r12, rax; mov rax, r12; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041025d: mov r12, rax; mov rax, r12; lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x0000000000406a3b: mov r12, rax; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f91: mov r12, rax; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418299: mov r12, rbx; lea rax, [rip + 0x505dd]; mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000041302b: mov r12, rsi; test rsi, rsi; je 0x1303d; mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x000000000041eff7: mov r12b, 1; mov al, r12b; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x000000000041a2aa: mov r12b, 1; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041ae18: mov r12b, al; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406809: mov r12d, 0xffffc002; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406ac0: mov r12d, 0xfffffc02; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406dae: mov r12d, 0xffffff82; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040447a: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea35: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298e8: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd5: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6a6: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f709: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f85c: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa5: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430009: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305fa: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a53: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc3: mov r13, qword ptr [rbp - 0x10]; mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000454459: mov r13, qword ptr [rbp - 0x118]; mov r14, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e7be: mov r13, qword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e88c: mov r13, qword ptr [rbp - 0x120]; mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004086eb: mov r13, qword ptr [rbp - 0x128]; mov r14, qword ptr [rbp - 0x120]; mov r15, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404070: mov r13, qword ptr [rbp - 0x140]; mov r14, qword ptr [rbp - 0x138]; mov r15, qword ptr [rbp - 0x130]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6e3: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041deee: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e04d: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300a6: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430564: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430684: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418abf: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bae: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc0f: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d0fc: mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044062c: mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb75: mov r13, qword ptr [rbp - 0x1b0]; mov r14, qword ptr [rbp - 0x1a8]; mov r15, qword ptr [rbp - 0x1a0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000438bdb: mov r13, qword ptr [rbp - 0x1e0]; mov r14, qword ptr [rbp - 0x1d8]; mov r15, qword ptr [rbp - 0x1d0]; mov rsp, rbp; pop rbp; ret; 
0x000000000043632e: mov r13, qword ptr [rbp - 0x200]; mov r14, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449262: mov r13, qword ptr [rbp - 0x208]; mov r14, qword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044affa: mov r13, qword ptr [rbp - 0x208]; mov r14, qword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a725: mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a805: mov r13, qword ptr [rbp - 0x208]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7af: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f999: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043149e: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000431554: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c43: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418493: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304cc: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d074: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e63c: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004405a4: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ecc: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004513bf: mov r13, qword ptr [rbp - 0x20]; mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042df64: mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435083: mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435113: mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004351cb: mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043526b: mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7c2: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa0e: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b389: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa60: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434e1: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3c1: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d50f: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d6f7: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc05: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddad: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414c4c: mov r13, qword ptr [rbp - 0x28]; mov r14, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e44a: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430789: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b6a: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430be9: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043a6e4: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d346: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f387: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000044087c: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e0a: mov r13, qword ptr [rbp - 0x30]; mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f929: mov r13, qword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb53: mov r13, qword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d236: mov r13, qword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e589: mov r13, qword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440769: mov r13, qword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e1c: mov r13, qword ptr [rbp - 0x38]; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc16: mov r13, qword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d55c: mov r13, qword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a92: mov r13, qword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8bf: mov r13, qword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db0d: mov r13, qword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dee7: mov r13, qword ptr [rbp - 0x40]; mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412af6: mov r13, qword ptr [rbp - 0x48]; mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455887: mov r13, qword ptr [rbp - 0x48]; mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fb7: mov r13, qword ptr [rbp - 0x48]; mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e070: mov r13, qword ptr [rbp - 0x50]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae5: mov r13, qword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de4d: mov r13, qword ptr [rbp - 0x60]; mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb0: mov r13, qword ptr [rbp - 0x68]; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad0f: mov r13, qword ptr [rbp - 0x780]; mov r14, qword ptr [rbp - 0x778]; mov r15, qword ptr [rbp - 0x770]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc3: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecdd: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040edec: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313dc: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e294: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e354: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b5d: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8fd: mov r13, qword ptr [rbp - 0x78]; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b7: mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a77: mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429eea: mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2ea: mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e982: mov r13, qword ptr [rbp - 0x80]; mov r14, qword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436afd: mov r13, qword ptr [rbp - 0x80]; mov r14, qword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0e3: mov r13, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bcf: mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfd4: mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d002: mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a7b: mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b7b: mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x00000000004535ad: mov r13, qword ptr [rbp - 0x88]; mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a80: mov r13, qword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b820: mov r13, qword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445775: mov r13, qword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf84: mov r13, qword ptr [rbp - 0xa0]; mov r14, qword ptr [rbp - 0x98]; mov r15, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000409132: mov r13, qword ptr [rbp - 0xa8]; mov r14, qword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fa8: mov r13, qword ptr [rbp - 0xa8]; mov r14, qword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x000000000045b19c: mov r13, qword ptr [rbp - 0xb00]; mov r14, qword ptr [rbp - 0xaf8]; mov r15, qword ptr [rbp - 0xaf0]; mov rsp, rbp; pop rbp; ret; 
0x00000000004309d6: mov r13, qword ptr [rbp - 0xb8]; mov r14, qword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e61: mov r13, qword ptr [rbp - 0xb8]; mov r14, qword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c316: mov r13, qword ptr [rbp - 0xc0]; mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e53: mov r13, qword ptr [rbp - 0xc0]; mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439057: mov r13, qword ptr [rbp - 0xc0]; mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044fc: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4f3: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b8: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c764: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7eb: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e868: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab8: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee6a: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411ba1: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa41: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6b1: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f801: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd9: mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402963: mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402963: mov r13, qword ptr [rdi + 0x18]; mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x000000000040eedd: mov r13, rax; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000040936a: mov r13d, 0xbf0f0001; ret; 
0x0000000000457615: mov r13d, eax; mov eax, r13d; pop r13; pop r12; pop rbx; ret; 
0x000000000040e061: mov r13d, eax; mov rsi, rbx; movzx edx, r13w; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000040e060: mov r13w, ax; mov rsi, rbx; movzx edx, r13w; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000040c6e7: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041def2: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e051: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300aa: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430568: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430688: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418ac3: mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bb2: mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bc13: mov r14, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000454460: mov r14, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e7c5: mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e893: mov r14, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004086f2: mov r14, qword ptr [rbp - 0x120]; mov r15, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404077: mov r14, qword ptr [rbp - 0x138]; mov r15, qword ptr [rbp - 0x130]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7b3: mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f99d: mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a2: mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000431558: mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c47: mov r14, qword ptr [rbp - 0x18]; mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000418497: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004304d0: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d078: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e640: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004405a8: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441ed0: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004513c3: mov r14, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb7c: mov r14, qword ptr [rbp - 0x1a8]; mov r15, qword ptr [rbp - 0x1a0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000438be2: mov r14, qword ptr [rbp - 0x1d8]; mov r15, qword ptr [rbp - 0x1d0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436335: mov r14, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449269: mov r14, qword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b001: mov r14, qword ptr [rbp - 0x200]; mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7c6: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa12: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b38d: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa64: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434e5: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3c5: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d513: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d6fb: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc09: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb1: mov r14, qword ptr [rbp - 0x20]; mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414c50: mov r14, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e44e: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043078d: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b6e: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bed: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043a6e8: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d34a: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f38b: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440880: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e0e: mov r14, qword ptr [rbp - 0x28]; mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f92d: mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb57: mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d23a: mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e58d: mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000044076d: mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e20: mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc1a: mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d560: mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a96: mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c3: mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db11: mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044deeb: mov r14, qword ptr [rbp - 0x38]; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412afa: mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000045588b: mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fbb: mov r14, qword ptr [rbp - 0x40]; mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f79b: mov r14, qword ptr [rbp - 0x48]; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000044321f: mov r14, qword ptr [rbp - 0x48]; mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e074: mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412046: mov r14, qword ptr [rbp - 0x50]; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd1: mov r14, qword ptr [rbp - 0x50]; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042de51: mov r14, qword ptr [rbp - 0x58]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb4: mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5e8: mov r14, qword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000044306a: mov r14, qword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000446cb6: mov r14, qword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000408d2e: mov r14, qword ptr [rbp - 0x70]; mov r15, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebc7: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ece1: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040edf0: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313e0: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e298: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e358: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b61: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b901: mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad16: mov r14, qword ptr [rbp - 0x778]; mov r15, qword ptr [rbp - 0x770]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e986: mov r14, qword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b01: mov r14, qword ptr [rbp - 0x78]; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bd6: mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfdb: mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d009: mov r14, qword ptr [rbp - 0x80]; mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441a82: mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441b82: mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x00000000004535b4: mov r14, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a87: mov r14, qword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b827: mov r14, qword ptr [rbp - 0x88]; mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044577c: mov r14, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a11: mov r14, qword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e121: mov r14, qword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441811: mov r14, qword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444ab9: mov r14, qword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf8b: mov r14, qword ptr [rbp - 0x98]; mov r15, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000409139: mov r14, qword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x0000000000458faf: mov r14, qword ptr [rbp - 0xa0]; mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x000000000045b1a3: mov r14, qword ptr [rbp - 0xaf8]; mov r15, qword ptr [rbp - 0xaf0]; mov rsp, rbp; pop rbp; ret; 
0x00000000004309dd: mov r14, qword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e68: mov r14, qword ptr [rbp - 0xb0]; mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c31d: mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e5a: mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x000000000043905e: mov r14, qword ptr [rbp - 0xb8]; mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x000000000040447e: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ea39: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004298ec: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bcd9: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e6aa: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f70d: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f860: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ffa9: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043000d: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004305fe: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000453a57: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045bfc7: mov r14, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402967: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x0000000000402967: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x0000000000413cc9: mov r14, qword ptr [rsp]; mov rsi, qword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x000000000042c763: mov r14b, dil; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042f7b7: mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f9a1: mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004314a6: mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000043155c: mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436c4b: mov r15, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004086f9: mov r15, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040407e: mov r15, qword ptr [rbp - 0x130]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b7ca: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fa16: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b391: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043fa68: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004434e9: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d3c9: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d517: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d6ff: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044dc0d: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb5: mov r15, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042eb83: mov r15, qword ptr [rbp - 0x1a0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000438be9: mov r15, qword ptr [rbp - 0x1d0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449270: mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b008: mov r15, qword ptr [rbp - 0x1f8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e452: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430791: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430b72: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430bf1: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043a6ec: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d34e: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f38f: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440884: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442e12: mov r15, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f931: mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb5b: mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d23e: mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e591: mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440771: mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e24: mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc1e: mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d564: mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a9a: mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c7: mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db15: mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044deef: mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412afe: mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000045588f: mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fbf: mov r15, qword ptr [rbp - 0x38]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f79f: mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443223: mov r15, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000041204a: mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd5: mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5ec: mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000044306e: mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000446cba: mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000408d32: mov r15, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e98a: mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b05: mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000045ad1d: mov r15, qword ptr [rbp - 0x770]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bda: mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfdf: mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d00d: mov r15, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449a8e: mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b82e: mov r15, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a18: mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e128: mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441818: mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444ac0: mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf92: mov r15, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000409140: mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fb6: mov r15, qword ptr [rbp - 0x98]; mov rsp, rbp; pop rbp; ret; 
0x00000000004309e4: mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000455e6f: mov r15, qword ptr [rbp - 0xa8]; mov rsp, rbp; pop rbp; ret; 
0x000000000045b1aa: mov r15, qword ptr [rbp - 0xaf0]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c324: mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000430e61: mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439065: mov r15, qword ptr [rbp - 0xb0]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c6eb: mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041def6: mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041e055: mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004300ae: mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043056c: mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043068c: mov r15, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040296b: mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000040296b: mov r15, qword ptr [rdi + 0x28]; mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x000000000045c64a: mov r8, r15; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4fa: mov r8, r15; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x0000000000401f78: mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000431da2: mov r8, r9; movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431962: mov r8, r9; movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000401f38: mov r8, r9; syscall; 
0x000000000045c968: mov r8, rax; mov rsi, rdi; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000042e591: mov r8, rax; xor ecx, ecx; xor esi, esi; call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x00000000004587ef: mov r8, rsp; mov rdx, r9; call 0x57540; lea rsp, [rsp + 0x18]; ret; 
0x0000000000408cb7: mov r8b, 0x29; ret; 
0x000000000045901e: mov r8b, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000459034: mov r8b, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000404d18: mov r8b, byte ptr [rsi + rcx]; and r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d10; ret; 
0x0000000000404ce8: mov r8b, byte ptr [rsi + rcx]; or r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4ce0; ret; 
0x0000000000404d78: mov r8b, byte ptr [rsi + rcx]; xor r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d70; ret; 
0x0000000000426be9: mov r8d, 1; call 0x25880; lea rsp, [rsp + 8]; ret; 
0x0000000000426c29: mov r8d, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000430341: mov r8d, 1; call 0x30360; lea rsp, [rsp + 8]; ret; 
0x0000000000430435: mov r8d, 1; call 0x30450; lea rsp, [rsp + 8]; ret; 
0x0000000000402e16: mov r8d, 8; mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000403011: mov r8d, 8; mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000040780c: mov r8d, dword ptr [rax]; add r8d, r9d; add edi, r8d; mov dword ptr [rax], edi; mov qword ptr [rsi], rcx; ret; 
0x000000000040791f: mov r8d, dword ptr [rax]; mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x000000000043f7e5: mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x0000000000443265: mov r8d, dword ptr [rdi + 0x10]; xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000403908: mov r8d, dword ptr [rdi]; cmp r8d, dword ptr [rsi]; jbe 0x3916; mov eax, 1; ret; 
0x0000000000439322: mov r8d, ecx; mov rsi, qword ptr [rsp]; mov ecx, 0x13; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000447d20: mov r9, 0; test rdx, rdx; jne 0x47d2f; xor eax, eax; ret; 
0x0000000000401f7b: mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000403a3f: mov r9, rcx; sub r9, rsi; mov rax, r9; ret; 
0x000000000043b425: mov r9, rsp; call 0x3b440; lea rsp, [rsp + 8]; ret; 
0x0000000000449c15: mov r9, rsp; call 0x49c30; lea rsp, [rsp + 8]; ret; 
0x000000000044c0f5: mov r9, rsp; call 0x4c110; lea rsp, [rsp + 8]; ret; 
0x0000000000439139: mov r9d, 1; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439209: mov r9d, 2; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004391a9: mov r9d, 4; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000439261: mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392d1: mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000401fa0: mov rax, 0xf; syscall; 
0x0000000000401fa0: mov rax, 0xf; syscall; ret; 
0x000000000041b09a: mov rax, 0xffffffffffffffff; lea rsp, [rsp + 8]; ret; 
0x0000000000401e21: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e54: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e87: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401eca: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f0d: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f50: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f94: mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000040372c: mov rax, 0xffffffffffffffff; ret; 
0x00000000004037ad: mov rax, 0xffffffffffffffff; ret; 
0x0000000000403808: mov rax, 0xffffffffffffffff; ret; 
0x00000000004038a7: mov rax, 0xffffffffffffffff; ret; 
0x0000000000403916: mov rax, 0xffffffffffffffff; ret; 
0x00000000004039b2: mov rax, 0xffffffffffffffff; ret; 
0x0000000000403a57: mov rax, 0xffffffffffffffff; ret; 
0x0000000000403a7b: mov rax, 0xffffffffffffffff; ret; 
0x0000000000411aea: mov rax, 0xffffffffffffffff; ret; 
0x000000000042fde8: mov rax, 0xffffffffffffffff; ret; 
0x0000000000434001: mov rax, 0xffffffffffffffff; ret; 
0x000000000043404b: mov rax, 0xffffffffffffffff; ret; 
0x0000000000434075: mov rax, 0xffffffffffffffff; ret; 
0x00000000004340d4: mov rax, 0xffffffffffffffff; ret; 
0x0000000000434106: mov rax, 0xffffffffffffffff; ret; 
0x0000000000434166: mov rax, 0xffffffffffffffff; ret; 
0x0000000000434165: mov rax, 0xffffffffffffffff; ret; 
0x0000000000417365: mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x000000000041716a: mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000419725: mov rax, qword ptr [r12 + 0x18]; mov qword ptr [rdx + 0xa8], rax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000413036: mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000415077: mov rax, qword ptr [r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044fcbe: mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x0000000000414319: mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000044cbc2: mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000041957e: mov rax, qword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x00000000004193b4: mov rax, qword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000044c912: mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cc62: mov rax, qword ptr [rax + 0x20]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd02: mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000423ba6: mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x000000000041702b: mov rax, qword ptr [rax + 0xc]; ret; 
0x0000000000414e59: mov rax, qword ptr [rax + 8]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000419370: mov rax, qword ptr [rax + 8]; mov qword ptr [rsi], rax; ret; 
0x000000000044c867: mov rax, qword ptr [rax + 8]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x00000000004149bc: mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149bc: mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x000000000041499c: mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041499c: mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x000000000041497c: mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041497c: mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000043ced9: mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000440409: mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x000000000043b868: mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b898: mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000042e358: mov rax, qword ptr [rax - 8]; ret; 
0x000000000044c0e8: mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x00000000004365f8: mov rax, qword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000417c55: mov rax, qword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x0000000000412ff0: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413049: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004130ac: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131ac: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149c0: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004149c0: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; lea rsp, [rsp + 8]; ret; 
0x00000000004130ac: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004131ac: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; mov al, bl; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000412ff0: mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000413697: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413735: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000414930: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c71d: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c896: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca77: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbe5: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd2a: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce7c: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc4d: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc6: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa7: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440115: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044025a: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403ac: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e72b: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e883: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea1d: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee41: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efd1: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e8: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f985: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbeb: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451625: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004517e6: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451938: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b09: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c6b: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451e44: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fae: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452187: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452598: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413735: mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x000000000044c698: mov rax, qword ptr [rax]; call qword ptr [rax + 0xe8]; lea rsp, [rsp + 8]; ret; 
0x0000000000413010: mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041431c: mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x00000000004149a0: mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000413010: mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x00000000004149a0: mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x000000000041308b: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130de: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413171: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041321e: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041326e: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041330a: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133be: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041341e: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134ca: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000414980: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450b93: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bdf: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450c52: mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000414980: mov rax, qword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414a45: mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000417e2c: mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000436558: mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044950a: mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2aa: mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041a656: mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x000000000044c5f6: mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000443640: mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041356b: mov rax, qword ptr [rax]; ret; 
0x0000000000413589: mov rax, qword ptr [rax]; ret; 
0x000000000041359b: mov rax, qword ptr [rax]; ret; 
0x000000000041386b: mov rax, qword ptr [rax]; ret; 
0x0000000000416e3b: mov rax, qword ptr [rax]; ret; 
0x000000000041146b: mov rax, qword ptr [rax]; test rax, rax; je 0x11483; lea rdx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d2: mov rax, qword ptr [rax]; test rax, rax; je 0x114ea; lea rdx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041150a: mov rax, qword ptr [rax]; test rax, rax; je 0x11522; lea rdx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000414a2c: mov rax, qword ptr [rax]; test rax, rax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000414a58: mov rax, qword ptr [rax]; test rax, rax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414aac: mov rax, qword ptr [rax]; test rax, rax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414b04: mov rax, qword ptr [rax]; test rax, rax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414b69: mov rax, qword ptr [rax]; test rax, rax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414c6c: mov rax, qword ptr [rax]; test rax, rax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414d05: mov rax, qword ptr [rax]; test rax, rax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414d34: mov rax, qword ptr [rax]; test rax, rax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d68: mov rax, qword ptr [rax]; test rax, rax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d8e: mov rax, qword ptr [rax]; test rax, rax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414dbb: mov rax, qword ptr [rax]; test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414e28: mov rax, qword ptr [rax]; test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414e7f: mov rax, qword ptr [rax]; test rax, rax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414ec1: mov rax, qword ptr [rax]; test rax, rax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414f2c: mov rax, qword ptr [rax]; test rax, rax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414fb8: mov rax, qword ptr [rax]; test rax, rax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414fe5: mov rax, qword ptr [rax]; test rax, rax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000415032: mov rax, qword ptr [rax]; test rax, rax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x000000000041509c: mov rax, qword ptr [rax]; test rax, rax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x00000000004150c3: mov rax, qword ptr [rax]; test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x000000000041513f: mov rax, qword ptr [rax]; test rax, rax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004152a4: mov rax, qword ptr [rax]; test rax, rax; je 0x152b9; lea rdx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415342: mov rax, qword ptr [rax]; test rax, rax; je 0x15357; lea rdx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d64: mov rax, qword ptr [rax]; test rax, rax; je 0x17d79; lea rdx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dbc: mov rax, qword ptr [rax]; test rax, rax; je 0x17dd4; lea rdx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e0c: mov rax, qword ptr [rax]; test rax, rax; je 0x17e21; lea rdx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb3: mov rax, qword ptr [rax]; test rax, rax; je 0x17ec8; lea rdx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041806b: mov rax, qword ptr [rax]; test rax, rax; je 0x18083; lea rdx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041809a: mov rax, qword ptr [rax]; test rax, rax; je 0x180af; lea rdx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180ca: mov rax, qword ptr [rax]; test rax, rax; je 0x180e2; lea rdx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180f9: mov rax, qword ptr [rax]; test rax, rax; je 0x1810e; lea rdx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418129: mov rax, qword ptr [rax]; test rax, rax; je 0x18141; lea rdx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418177: mov rax, qword ptr [rax]; test rax, rax; je 0x1818c; lea rdx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181d9: mov rax, qword ptr [rax]; test rax, rax; je 0x181f1; lea rdx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418205: mov rax, qword ptr [rax]; test rax, rax; je 0x1821a; lea rdx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004184f3: mov rax, qword ptr [rax]; test rax, rax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x0000000000418d4a: mov rax, qword ptr [rax]; test rax, rax; je 0x18d62; lea rdx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418de7: mov rax, qword ptr [rax]; test rax, rax; je 0x18dff; lea rdx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e16: mov rax, qword ptr [rax]; test rax, rax; je 0x18e2e; lea rdx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eba: mov rax, qword ptr [rax]; test rax, rax; je 0x18ed2; lea rdx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418eee: mov rax, qword ptr [rax]; test rax, rax; je 0x18f06; lea rdx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f26: mov rax, qword ptr [rax]; test rax, rax; je 0x18f3e; lea rdx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f8d: mov rax, qword ptr [rax]; test rax, rax; je 0x18fa5; lea rdx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041924b: mov rax, qword ptr [rax]; test rax, rax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x000000000041929b: mov rax, qword ptr [rax]; test rax, rax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419d03: mov rax, qword ptr [rax]; test rax, rax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419e3c: mov rax, qword ptr [rax]; test rax, rax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x000000000041a1ba: mov rax, qword ptr [rax]; test rax, rax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x000000000041a461: mov rax, qword ptr [rax]; test rax, rax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x000000000041a624: mov rax, qword ptr [rax]; test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a681: mov rax, qword ptr [rax]; test rax, rax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a70c: mov rax, qword ptr [rax]; test rax, rax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a77a: mov rax, qword ptr [rax]; test rax, rax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a8dd: mov rax, qword ptr [rax]; test rax, rax; je 0x1a8f2; lea rdx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a914: mov rax, qword ptr [rax]; test rax, rax; je 0x1a929; lea rdx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a946: mov rax, qword ptr [rax]; test rax, rax; je 0x1a95b; lea rdx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a970: mov rax, qword ptr [rax]; test rax, rax; je 0x1a985; lea rdx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a3: mov rax, qword ptr [rax]; test rax, rax; je 0x1a9b8; lea rdx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa14: mov rax, qword ptr [rax]; test rax, rax; je 0x1aa29; lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afac: mov rax, qword ptr [rax]; test rax, rax; je 0x1afc4; lea rdx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b013: mov rax, qword ptr [rax]; test rax, rax; je 0x1b02b; lea rdx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b04b: mov rax, qword ptr [rax]; test rax, rax; je 0x1b063; lea rdx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3ac: mov rax, qword ptr [rax]; test rax, rax; je 0x1b3c1; lea rdx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b77c: mov rax, qword ptr [rax]; test rax, rax; je 0x1b794; lea rdx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e3: mov rax, qword ptr [rax]; test rax, rax; je 0x1b7fb; lea rdx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b81b: mov rax, qword ptr [rax]; test rax, rax; je 0x1b833; lea rdx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc29: mov rax, qword ptr [rax]; test rax, rax; je 0x1bc3e; lea rdx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc6a: mov rax, qword ptr [rax]; test rax, rax; je 0x1bc7f; lea rdx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcbc: mov rax, qword ptr [rax]; test rax, rax; je 0x1bcd1; lea rdx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd0c: mov rax, qword ptr [rax]; test rax, rax; je 0x1bd21; lea rdx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd98: mov rax, qword ptr [rax]; test rax, rax; je 0x1bdad; lea rdx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be28: mov rax, qword ptr [rax]; test rax, rax; je 0x1be3d; lea rdx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be83: mov rax, qword ptr [rax]; test rax, rax; je 0x1be98; lea rdx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041becf: mov rax, qword ptr [rax]; test rax, rax; je 0x1bee4; lea rdx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf23: mov rax, qword ptr [rax]; test rax, rax; je 0x1bf38; lea rdx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf80: mov rax, qword ptr [rax]; test rax, rax; je 0x1bf95; lea rdx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c00c: mov rax, qword ptr [rax]; test rax, rax; je 0x1c021; lea rdx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c549: mov rax, qword ptr [rax]; test rax, rax; je 0x1c55e; lea rdx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c63d: mov rax, qword ptr [rax]; test rax, rax; je 0x1c652; lea rdx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c95b: mov rax, qword ptr [rax]; test rax, rax; je 0x1c970; lea rdx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e1: mov rax, qword ptr [rax]; test rax, rax; je 0x1c9f6; lea rdx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cab8: mov rax, qword ptr [rax]; test rax, rax; je 0x1cacd; lea rdx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cafb: mov rax, qword ptr [rax]; test rax, rax; je 0x1cb10; lea rdx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb4b: mov rax, qword ptr [rax]; test rax, rax; je 0x1cb60; lea rdx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb9b: mov rax, qword ptr [rax]; test rax, rax; je 0x1cbb0; lea rdx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc61: mov rax, qword ptr [rax]; test rax, rax; je 0x1cc76; lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd2: mov rax, qword ptr [rax]; test rax, rax; je 0x1cce7; lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd97: mov rax, qword ptr [rax]; test rax, rax; je 0x1cdac; lea rdx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf0: mov rax, qword ptr [rax]; test rax, rax; je 0x1ce05; lea rdx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cefb: mov rax, qword ptr [rax]; test rax, rax; je 0x1cf10; lea rdx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c2: mov rax, qword ptr [rax]; test rax, rax; je 0x1d1d7; lea rdx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d20e: mov rax, qword ptr [rax]; test rax, rax; je 0x1d223; lea rdx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2cc: mov rax, qword ptr [rax]; test rax, rax; je 0x1d2e4; lea rdx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d312: mov rax, qword ptr [rax]; test rax, rax; je 0x1d327; lea rdx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d35e: mov rax, qword ptr [rax]; test rax, rax; je 0x1d373; lea rdx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d44c: mov rax, qword ptr [rax]; test rax, rax; je 0x1d464; lea rdx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4de: mov rax, qword ptr [rax]; test rax, rax; je 0x1d4f3; lea rdx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d50c: mov rax, qword ptr [rax]; test rax, rax; je 0x1d521; lea rdx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5bc: mov rax, qword ptr [rax]; test rax, rax; je 0x1d5d4; lea rdx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d602: mov rax, qword ptr [rax]; test rax, rax; je 0x1d617; lea rdx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d64e: mov rax, qword ptr [rax]; test rax, rax; je 0x1d663; lea rdx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d74c: mov rax, qword ptr [rax]; test rax, rax; je 0x1d764; lea rdx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d81c: mov rax, qword ptr [rax]; test rax, rax; je 0x1d831; lea rdx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d85c: mov rax, qword ptr [rax]; test rax, rax; je 0x1d871; lea rdx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d96f: mov rax, qword ptr [rax]; test rax, rax; je 0x1d984; lea rdx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db96: mov rax, qword ptr [rax]; test rax, rax; je 0x1dbab; lea rdx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd4: mov rax, qword ptr [rax]; test rax, rax; je 0x1dbe9; lea rdx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc81: mov rax, qword ptr [rax]; test rax, rax; je 0x1dc96; lea rdx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc4: mov rax, qword ptr [rax]; test rax, rax; je 0x1dcd9; lea rdx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd95: mov rax, qword ptr [rax]; test rax, rax; je 0x1ddaa; lea rdx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec1: mov rax, qword ptr [rax]; test rax, rax; je 0x1ded6; lea rdx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e020: mov rax, qword ptr [rax]; test rax, rax; je 0x1e035; lea rdx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e12c: mov rax, qword ptr [rax]; test rax, rax; je 0x1e141; lea rdx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b0: mov rax, qword ptr [rax]; test rax, rax; je 0x1e1c5; lea rdx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2d9: mov rax, qword ptr [rax]; test rax, rax; je 0x1e2ee; lea rdx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e389: mov rax, qword ptr [rax]; test rax, rax; je 0x1e39e; lea rdx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e47d: mov rax, qword ptr [rax]; test rax, rax; je 0x1e492; lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4ec: mov rax, qword ptr [rax]; test rax, rax; je 0x1e501; lea rdx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e56c: mov rax, qword ptr [rax]; test rax, rax; je 0x1e581; lea rdx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5ec: mov rax, qword ptr [rax]; test rax, rax; je 0x1e601; lea rdx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e68c: mov rax, qword ptr [rax]; test rax, rax; je 0x1e6a1; lea rdx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8df: mov rax, qword ptr [rax]; test rax, rax; je 0x1e8f4; lea rdx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e987: mov rax, qword ptr [rax]; test rax, rax; je 0x1e99c; lea rdx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea00: mov rax, qword ptr [rax]; test rax, rax; je 0x1ea15; lea rdx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea74: mov rax, qword ptr [rax]; test rax, rax; je 0x1ea89; lea rdx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae4: mov rax, qword ptr [rax]; test rax, rax; je 0x1eaf9; lea rdx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb64: mov rax, qword ptr [rax]; test rax, rax; je 0x1eb79; lea rdx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb0: mov rax, qword ptr [rax]; test rax, rax; je 0x1ebc5; lea rdx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebde: mov rax, qword ptr [rax]; test rax, rax; je 0x1ebf3; lea rdx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec64: mov rax, qword ptr [rax]; test rax, rax; je 0x1ec79; lea rdx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb0: mov rax, qword ptr [rax]; test rax, rax; je 0x1ecc5; lea rdx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece1: mov rax, qword ptr [rax]; test rax, rax; je 0x1ecf6; lea rdx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee2a: mov rax, qword ptr [rax]; test rax, rax; je 0x1ee3f; lea rdx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f075: mov rax, qword ptr [rax]; test rax, rax; je 0x1f08a; lea rdx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0ca: mov rax, qword ptr [rax]; test rax, rax; je 0x1f0df; lea rdx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0fb: mov rax, qword ptr [rax]; test rax, rax; je 0x1f110; lea rdx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f13c: mov rax, qword ptr [rax]; test rax, rax; je 0x1f151; lea rdx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420026: mov rax, qword ptr [rax]; test rax, rax; je 0x2003b; lea rdx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c0: mov rax, qword ptr [rax]; test rax, rax; je 0x200d5; lea rdx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420190: mov rax, qword ptr [rax]; test rax, rax; je 0x201a5; lea rdx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042022b: mov rax, qword ptr [rax]; test rax, rax; je 0x20240; lea rdx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042036b: mov rax, qword ptr [rax]; test rax, rax; je 0x20380; lea rdx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042041c: mov rax, qword ptr [rax]; test rax, rax; je 0x20431; lea rdx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420574: mov rax, qword ptr [rax]; test rax, rax; je 0x20589; lea rdx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421023: mov rax, qword ptr [rax]; test rax, rax; je 0x21038; lea rdx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421056: mov rax, qword ptr [rax]; test rax, rax; je 0x2106b; lea rdx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210b5: mov rax, qword ptr [rax]; test rax, rax; je 0x210ca; lea rdx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421113: mov rax, qword ptr [rax]; test rax, rax; je 0x21128; lea rdx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421146: mov rax, qword ptr [rax]; test rax, rax; je 0x2115b; lea rdx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211ab: mov rax, qword ptr [rax]; test rax, rax; je 0x211c0; lea rdx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211fb: mov rax, qword ptr [rax]; test rax, rax; je 0x21210; lea rdx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421266: mov rax, qword ptr [rax]; test rax, rax; je 0x2127b; lea rdx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421304: mov rax, qword ptr [rax]; test rax, rax; je 0x21319; lea rdx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042145b: mov rax, qword ptr [rax]; test rax, rax; je 0x21470; lea rdx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214b6: mov rax, qword ptr [rax]; test rax, rax; je 0x214cb; lea rdx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421554: mov rax, qword ptr [rax]; test rax, rax; je 0x21569; lea rdx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216aa: mov rax, qword ptr [rax]; test rax, rax; je 0x216bf; lea rdx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216f5: mov rax, qword ptr [rax]; test rax, rax; je 0x2170a; lea rdx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421750: mov rax, qword ptr [rax]; test rax, rax; je 0x21765; lea rdx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217a5: mov rax, qword ptr [rax]; test rax, rax; je 0x217ba; lea rdx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042180b: mov rax, qword ptr [rax]; test rax, rax; je 0x21820; lea rdx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421852: mov rax, qword ptr [rax]; test rax, rax; je 0x21867; lea rdx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218bb: mov rax, qword ptr [rax]; test rax, rax; je 0x218d0; lea rdx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421905: mov rax, qword ptr [rax]; test rax, rax; je 0x2191a; lea rdx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421962: mov rax, qword ptr [rax]; test rax, rax; je 0x21977; lea rdx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042199b: mov rax, qword ptr [rax]; test rax, rax; je 0x219b0; lea rdx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219f6: mov rax, qword ptr [rax]; test rax, rax; je 0x21a0b; lea rdx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a2b: mov rax, qword ptr [rax]; test rax, rax; je 0x21a40; lea rdx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a84: mov rax, qword ptr [rax]; test rax, rax; je 0x21a99; lea rdx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af2: mov rax, qword ptr [rax]; test rax, rax; je 0x21b07; lea rdx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bb7: mov rax, qword ptr [rax]; test rax, rax; je 0x21bcc; lea rdx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c10: mov rax, qword ptr [rax]; test rax, rax; je 0x21c25; lea rdx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d1b: mov rax, qword ptr [rax]; test rax, rax; je 0x21d30; lea rdx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db4: mov rax, qword ptr [rax]; test rax, rax; je 0x21dc9; lea rdx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222d5: mov rax, qword ptr [rax]; test rax, rax; je 0x222ea; lea rdx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422355: mov rax, qword ptr [rax]; test rax, rax; je 0x2236a; lea rdx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223b5: mov rax, qword ptr [rax]; test rax, rax; je 0x223ca; lea rdx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422435: mov rax, qword ptr [rax]; test rax, rax; je 0x2244a; lea rdx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422494: mov rax, qword ptr [rax]; test rax, rax; je 0x224a9; lea rdx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422521: mov rax, qword ptr [rax]; test rax, rax; je 0x22536; lea rdx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d1: mov rax, qword ptr [rax]; test rax, rax; je 0x225e6; lea rdx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042262d: mov rax, qword ptr [rax]; test rax, rax; je 0x22642; lea rdx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042278f: mov rax, qword ptr [rax]; test rax, rax; je 0x227a4; lea rdx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042295f: mov rax, qword ptr [rax]; test rax, rax; je 0x22974; lea rdx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042298d: mov rax, qword ptr [rax]; test rax, rax; je 0x229a2; lea rdx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e64: mov rax, qword ptr [rax]; test rax, rax; je 0x22e79; lea rdx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f14: mov rax, qword ptr [rax]; test rax, rax; je 0x22f29; lea rdx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fc4: mov rax, qword ptr [rax]; test rax, rax; je 0x22fd9; lea rdx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423124: mov rax, qword ptr [rax]; test rax, rax; je 0x23139; lea rdx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231d4: mov rax, qword ptr [rax]; test rax, rax; je 0x231e9; lea rdx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423284: mov rax, qword ptr [rax]; test rax, rax; je 0x23299; lea rdx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423604: mov rax, qword ptr [rax]; test rax, rax; je 0x23619; lea rdx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004236b4: mov rax, qword ptr [rax]; test rax, rax; je 0x236c9; lea rdx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423764: mov rax, qword ptr [rax]; test rax, rax; je 0x23779; lea rdx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042422c: mov rax, qword ptr [rax]; test rax, rax; je 0x24244; lea rdx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424262: mov rax, qword ptr [rax]; test rax, rax; je 0x2427a; lea rdx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042429b: mov rax, qword ptr [rax]; test rax, rax; je 0x242b3; lea rdx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d4: mov rax, qword ptr [rax]; test rax, rax; je 0x242ec; lea rdx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042430d: mov rax, qword ptr [rax]; test rax, rax; je 0x24325; lea rdx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f1: mov rax, qword ptr [rax]; test rax, rax; je 0x24506; lea rdx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424557: mov rax, qword ptr [rax]; test rax, rax; je 0x2456c; lea rdx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042459f: mov rax, qword ptr [rax]; test rax, rax; je 0x245b4; lea rdx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c69: mov rax, qword ptr [rax]; test rax, rax; je 0x26c7e; lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb5: mov rax, qword ptr [rax]; test rax, rax; je 0x26cca; lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427230: mov rax, qword ptr [rax]; test rax, rax; je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042725f: mov rax, qword ptr [rax]; test rax, rax; je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427293: mov rax, qword ptr [rax]; test rax, rax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272ef: mov rax, qword ptr [rax]; test rax, rax; je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427388: mov rax, qword ptr [rax]; test rax, rax; je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273cc: mov rax, qword ptr [rax]; test rax, rax; je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427400: mov rax, qword ptr [rax]; test rax, rax; je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c77: mov rax, qword ptr [rax]; test rax, rax; je 0x29c8c; lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d07: mov rax, qword ptr [rax]; test rax, rax; je 0x29d1c; lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d97: mov rax, qword ptr [rax]; test rax, rax; je 0x29dac; lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004029fc: mov rax, qword ptr [rax]; test rax, rax; je 0x2a0e; mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000402a2a: mov rax, qword ptr [rax]; test rax, rax; je 0x2a3c; mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x000000000042a5dd: mov rax, qword ptr [rax]; test rax, rax; je 0x2a5f2; lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a628: mov rax, qword ptr [rax]; test rax, rax; je 0x2a63d; lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c077: mov rax, qword ptr [rax]; test rax, rax; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c107: mov rax, qword ptr [rax]; test rax, rax; je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c197: mov rax, qword ptr [rax]; test rax, rax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c3d: mov rax, qword ptr [rax]; test rax, rax; je 0x2c4f; mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x0000000000402cf5: mov rax, qword ptr [rax]; test rax, rax; je 0x2d07; mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x000000000040329d: mov rax, qword ptr [rax]; test rax, rax; je 0x32b5; lea rdx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032e7: mov rax, qword ptr [rax]; test rax, rax; je 0x32ff; lea rdx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004050d3: mov rax, qword ptr [rax]; test rax, rax; je 0x50e8; lea rdx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452af2: mov rax, qword ptr [rax]; test rax, rax; je 0x52b07; lea rdx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e1: mov rax, qword ptr [rax]; test rax, rax; je 0x566f9; lea rdx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a34b: mov rax, qword ptr [rax]; test rax, rax; je 0x5a363; lea rdx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3cf: mov rax, qword ptr [rax]; test rax, rax; je 0x5a3e7; lea rdx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af9a: mov rax, qword ptr [rax]; test rax, rax; je 0x5afb2; lea rdx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff0: mov rax, qword ptr [rax]; test rax, rax; je 0x5b008; lea rdx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b046: mov rax, qword ptr [rax]; test rax, rax; je 0x5b05e; lea rdx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccb8: mov rax, qword ptr [rax]; test rax, rax; je 0x5ccd0; lea rdx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd75: mov rax, qword ptr [rax]; test rax, rax; je 0x5cd8d; lea rdx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000450f01: mov rax, qword ptr [rbp - 0x10]; mov rdx, qword ptr [rbp - 8]; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402910: mov rax, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004028f4: mov rax, qword ptr [rbp - 0x18]; fldcw word ptr [rbp - 0xc]; mov rsp, rbp; pop rbp; ret; 
0x00000000004094d4: mov rax, qword ptr [rbp - 0x18]; mov rdx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004517e2: mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b05: mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451692: mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519b2: mov rax, qword ptr [rbp - 0x28]; mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451811: mov rax, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451b34: mov rax, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451e40: mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452183: mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451ce6: mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000452026: mov rax, qword ptr [rbp - 0x30]; mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451e6f: mov rax, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x00000000004521b2: mov rax, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000041752b: mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x0000000000416ff4: mov rax, qword ptr [rbx + 8]; lea rdi, [rax + r15]; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x0000000000414741: mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x000000000041370c: mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x00000000004147a4: mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9f5: mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000415184: mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x000000000043e1d4: mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043e37b: mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x00000000004418e4: mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000441b9b: mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043e394: mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rdi, rbx; call 0x3e370; pop rbx; ret; 
0x000000000044f4f1: mov rax, qword ptr [rbx]; mov byte ptr [rax + 1], 0xfe; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f831: mov rax, qword ptr [rbx]; mov byte ptr [rax + 1], 0xff; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044f098: mov rax, qword ptr [rbx]; mov byte ptr [rax + 2], 0xbf; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000427b8d: mov rax, qword ptr [rbx]; mov byte ptr [rax], r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414e56: mov rax, qword ptr [rbx]; mov rax, qword ptr [rax + 8]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000412fed: mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413046: mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000412fed: mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000416ffc: mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000041a5d8: mov rax, qword ptr [rbx]; pop r13; pop r12; pop rbx; ret; 
0x0000000000413567: mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413867: mov rax, qword ptr [rdi + 0x10]; mov rax, qword ptr [rax]; ret; 
0x0000000000413597: mov rax, qword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x0000000000413b90: mov rax, qword ptr [rdi + 0x38]; ret; 
0x00000000004144f0: mov rax, qword ptr [rdi + 0x50]; ret; 
0x0000000000413c20: mov rax, qword ptr [rdi + 0x58]; ret; 
0x0000000000423f7a: mov rax, qword ptr [rdi + 0xe0]; mov ax, word ptr [rax + 2]; jmp 0x23f8a; xor ax, ax; and eax, 0xffff; ret; 
0x0000000000423f9a: mov rax, qword ptr [rdi + 0xe0]; mov eax, dword ptr [rax + 0x18]; ret; 
0x0000000000403358: mov rax, qword ptr [rdi + 8]; ret; 
0x000000000043ced0: mov rax, qword ptr [rdi + 8]; test rax, rax; je 0x3cee1; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000440400: mov rax, qword ptr [rdi + 8]; test rax, rax; je 0x40411; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x000000000040d895: mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000411575: mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000411ac5: mov rax, qword ptr [rdi - 8]; add rax, 1; ret; 
0x0000000000411ae5: mov rax, qword ptr [rdi - 8]; ret; 
0x0000000000413586: mov rax, qword ptr [rdi]; mov rax, qword ptr [rax]; ret; 
0x0000000000406b30: mov rax, qword ptr [rdi]; movabs rdx, 0x8000000000000000; and rax, rdx; setne al; ret; 
0x0000000000403368: mov rax, qword ptr [rdi]; ret; 
0x0000000000406775: mov rax, qword ptr [rdi]; ret; 
0x0000000000413750: mov rax, qword ptr [rdi]; ret; 
0x0000000000432070: mov rax, qword ptr [rdi]; ret; 
0x000000000042e350: mov rax, qword ptr [rdi]; test rax, rax; je 0x2e35c; mov rax, qword ptr [rax - 8]; ret; 
0x000000000041724a: mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x000000000041427a: mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041418a: mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000045930e: mov rax, qword ptr [rip + 0x25d3b]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x0000000000452ebc: mov rax, qword ptr [rip + 0x32d0d]; mov byte ptr [rax + 0x18], 1; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000423ec4: mov rax, qword ptr [rip + 0x44cb5]; lea rsp, [rsp + 8]; ret; 
0x0000000000423b60: mov rax, qword ptr [rip + 0x461e9]; mov qword ptr [rip + 0x461e2], rdi; ret; 
0x000000000041495c: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cd56: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cea8: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440286: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403d8: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8af: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451651: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451964: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004525c4: mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004130a7: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a7: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x000000000041492b: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd25: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce77: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440255: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a7: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e87e: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451620: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451933: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000452593: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c4d: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041426a: mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041417a: mov rax, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000414272: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414182: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000041483e: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc3d: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd8e: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044016d: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402be: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e78d: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045152e: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045183e: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522cd: mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045c650: mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000043c8c2: mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc11: mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf2: mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440141: mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451c97: mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000451fda: mov rax, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c891: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbe0: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc1: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440110: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c66: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa9: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041316c: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413305: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c5: mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000043c782: mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae1: mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb2: mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440011: mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b62: mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea2: mov rax, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ea49: mov rax, qword ptr [rsp + 0x20]; lea rsp, [rsp + 0xf8]; ret; 
0x000000000044ea18: mov rax, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e8e6: mov rax, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043caa3: mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd3: mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000458362: mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x000000000043ca72: mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa2: mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c908: mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe38: mov rax, qword ptr [rsp + 0x28]; mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000422826: mov rax, qword ptr [rsp + 0x60]; test rax, rax; je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228e4: mov rax, qword ptr [rsp + 0x60]; test rax, rax; je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004229bf: mov rax, qword ptr [rsp + 0x60]; test rax, rax; je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x000000000044960d: mov rax, qword ptr [rsp + 0x60]; test rax, rax; je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b3ad: mov rax, qword ptr [rsp + 0x60]; test rax, rax; je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000045c500: mov rax, qword ptr [rsp + 0x68]; call rax; 
0x0000000000443852: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000041b57a: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x78]; ret; 
0x00000000004136c3: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043c749: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc79: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e757: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044ee6d: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044effd: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f314: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044f9b1: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044fc17: mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000413692: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c718: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc48: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e726: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee3c: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efcc: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e3: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f980: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe6: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004135c7: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c637: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb67: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e637: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed57: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eee7: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1f7: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8a7: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faa7: mov rax, qword ptr [rsp + 8]; mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000446da0: mov rax, qword ptr [rsp]; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446e01: mov rax, qword ptr [rsp]; add dword ptr [rax + 0x18], ebx; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043a929: mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x000000000043a9bf: mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x000000000045126f: mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000044bed6: mov rax, qword ptr [rsp]; add rax, 4; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004267e0: mov rax, qword ptr [rsp]; cmp dword ptr [rax + 0xc], 0; jg 0x26748; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041328a: mov rax, qword ptr [rsp]; jmp 0x13292; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413376: mov rax, qword ptr [rsp]; jmp 0x1337e; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000413444: mov rax, qword ptr [rsp]; jmp 0x1344c; xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413548: mov rax, qword ptr [rsp]; jmp 0x13550; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000456abd: mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc86: mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000447fd0: mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000044cb18: mov rax, qword ptr [rsp]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000040ba67: mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044379b: mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000451268: mov rax, qword ptr [rsp]; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; add qword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x000000000040ba60: mov rax, qword ptr [rsp]; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043a5b5: mov rax, qword ptr [rsp]; mov dword ptr [rax + 0x80], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000436509: mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b9: mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b259: mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004364cc: mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044947e: mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b21e: mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000459a77: mov rax, qword ptr [rsp]; mov edi, dword ptr [rax + 0x808]; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000447991: mov rax, qword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000402940: mov rax, qword ptr [rsp]; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000439722: mov rax, qword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439765: mov rax, qword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004365f4: mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; add qword ptr [rax - 0x30], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000436554: mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000449506: mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2a6: mov rax, qword ptr [rsp]; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000042de80: mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dead: mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df83: mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e18d: mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dcca: mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000401fc0: mov rax, qword ptr [rsp]; ret; 
0x000000000040d0bc: mov rax, r12; lea rsp, [rsp + 0x108]; pop r12; pop rbx; ret; 
0x0000000000410260: mov rax, r12; lea rsp, [rsp + 0x208]; pop r12; pop rbx; ret; 
0x000000000040652e: mov rax, r12; lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000406a3e: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406d2f: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000414f07: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041fcd8: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421775: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421830: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004338a9: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459f94: mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043d67b: mov rax, r12; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440bdd: mov rax, r12; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000414f9a: mov rax, r12; pop r13; pop r12; pop rbx; ret; 
0x0000000000448023: mov rax, r12; pop r13; pop r12; pop rbx; ret; 
0x000000000040ae6c: mov rax, r13; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000416fad: mov rax, r13; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000042ef4a: mov rax, r13; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040cd02: mov rax, r13; mov qword ptr [rbx], rax; pop r13; pop r12; pop rbx; ret; 
0x000000000040eee0: mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000041960a: mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000041a0d9: mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000044be9f: mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x0000000000417002: mov rax, r14; call rax; 
0x0000000000413cd5: mov rax, r15; call rax; 
0x0000000000413e32: mov rax, r15; call rax; 
0x0000000000417096: mov rax, r15; call rax; 
0x000000000040371f: mov rax, r9; ret; 
0x00000000004037a0: mov rax, r9; ret; 
0x0000000000403a45: mov rax, r9; ret; 
0x00000000004181b4: mov rax, rbx; call rax; 
0x000000000041b4e4: mov rax, rbx; lea rdx, [rip + 0x698f2]; mov qword ptr [rdx], rax; call 0x1a6e0; pop rbx; ret; 
0x0000000000430f7d: mov rax, rbx; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x0000000000424456: mov rax, rbx; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000453ade: mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000416b3e: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416bce: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416cde: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000416d6e: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043da6c: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043db8b: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043de2e: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000043e1bb: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044105b: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000441979: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000441c34: mov rax, rbx; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000040f282: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d0: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040fa60: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000040faf0: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043d922: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043e766: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ebb4: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000043ef53: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000440eed: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442018: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442523: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x0000000000442975: mov rax, rbx; lea rsp, [rsp + 0x70]; pop r13; pop r12; pop rbx; ret; 
0x000000000041b650: mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043d70d: mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dafb: mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000043dcdd: mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000458588: mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040c826: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000040ca58: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000416e24: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043e8c5: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043eb23: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x000000000043ed25: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004411bd: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004414e0: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004418cd: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004421c7: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000442485: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x00000000004426d7: mov rax, rbx; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000440c8f: mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044110d: mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044134f: mov rax, rbx; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000041bfa5: mov rax, rbx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x0000000000455633: mov rax, rbx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x0000000000455763: mov rax, rbx; lea rsp, [rsp + 0xe0]; pop rbx; ret; 
0x00000000004197ac: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419fa7: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000430ad2: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004479fe: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447a50: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447e21: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004480a0: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044b987: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bab1: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044dfd0: mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b8ac: mov rax, rbx; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412fcc: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfd9: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe3: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f009: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004416c9: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a03: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a29: mov rax, rbx; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004279bb: mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x0000000000447e5f: mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bc3c: mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bcf1: mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000044bd41: mov rax, rbx; pop r13; pop r12; pop rbx; ret; 
0x000000000040cd2c: mov rax, rbx; pop rbx; ret; 
0x000000000040ef28: mov rax, rbx; pop rbx; ret; 
0x0000000000414a8c: mov rax, rbx; pop rbx; ret; 
0x0000000000419002: mov rax, rbx; pop rbx; ret; 
0x000000000041a352: mov rax, rbx; pop rbx; ret; 
0x000000000041a3b3: mov rax, rbx; pop rbx; ret; 
0x000000000041bea8: mov rax, rbx; pop rbx; ret; 
0x000000000041bf48: mov rax, rbx; pop rbx; ret; 
0x000000000043e1dd: mov rax, rbx; pop rbx; ret; 
0x000000000043e384: mov rax, rbx; pop rbx; ret; 
0x000000000043e8ed: mov rax, rbx; pop rbx; ret; 
0x00000000004418ed: mov rax, rbx; pop rbx; ret; 
0x0000000000441ba4: mov rax, rbx; pop rbx; ret; 
0x00000000004421ed: mov rax, rbx; pop rbx; ret; 
0x0000000000447e7f: mov rax, rbx; pop rbx; ret; 
0x000000000044b942: mov rax, rbx; pop rbx; ret; 
0x0000000000452ef7: mov rax, rbx; pop rbx; ret; 
0x0000000000452f18: mov rax, rbx; pop rbx; ret; 
0x0000000000452f58: mov rax, rbx; pop rbx; ret; 
0x0000000000417b72: mov rax, rcx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b04a: mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x000000000040b64c: mov rax, rcx; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa50: mov rax, rcx; ret; 
0x000000000040ab45: mov rax, rcx; ret; 
0x0000000000447d5f: mov rax, rcx; ret; 
0x000000000044bb44: mov rax, rcx; ret; 
0x00000000004045e0: mov rax, rcx; sub rax, rdx; ret; 
0x0000000000404600: mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045d8: mov rax, rcx; xor edx, edx; div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045f8: mov rax, rcx; xor edx, edx; div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x0000000000404580: mov rax, rdi; and eax, 1; ret; 
0x0000000000404590: mov rax, rdi; and eax, 1; ret; 
0x0000000000432315: mov rax, rdi; and esi, 0xff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328e5: mov rax, rdi; and esi, 0xffff; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432ac5: mov rax, rdi; and esi, esi; mov rdi, rax; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000402780: mov rax, rdi; bswap rax; ret; 
0x0000000000402790: mov rax, rdi; bswap rax; ret; 
0x00000000004115a5: mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x00000000004115d5: mov rax, rdi; call 0x11450; lea rsp, [rsp + 8]; ret; 
0x0000000000456865: mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x0000000000456885: mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568b5: mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x00000000004568f5: mov rax, rdi; call 0x18cb0; lea rsp, [rsp + 8]; ret; 
0x000000000041b185: mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b1a5: mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b225: mov rax, rdi; call 0x1af90; lea rsp, [rsp + 8]; ret; 
0x000000000041b8a5: mov rax, rdi; call 0x1b760; lea rsp, [rsp + 8]; ret; 
0x000000000041dad5: mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1dae5; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f615: mov rax, rdi; cmp qword ptr [rax + 0x40], 0; je 0x1f625; mov rdi, rax; call qword ptr [rax + 0x40]; 
0x0000000000432d00: mov rax, rdi; cvtsi2sd xmm0, dword ptr [rax]; ret; 
0x0000000000432ee0: mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x00000000004332d0: mov rax, rdi; cvtsi2sd xmm0, qword ptr [rax]; ret; 
0x0000000000432db0: mov rax, rdi; cvtsi2ss xmm0, dword ptr [rax]; ret; 
0x0000000000432f90: mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000433380: mov rax, rdi; cvtsi2ss xmm0, qword ptr [rax]; ret; 
0x0000000000432d15: mov rax, rdi; fild dword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432ef5: mov rax, rdi; fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332e5: mov rax, rdi; fild qword ptr [rax]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004045b0: mov rax, rdi; imul rax, rdi; ret; 
0x00000000004045c0: mov rax, rdi; imul rax, rdi; ret; 
0x000000000044fa55: mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad30; lea rsp, [rsp + 8]; ret; 
0x000000000044fa35: mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000044fa75: mov rax, rdi; lea rdi, [rax + 0x18]; call 0x1ad70; lea rsp, [rsp + 8]; ret; 
0x000000000042d7b5: mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x000000000042d7d5: mov rax, rdi; lea rdi, [rax + 0x28]; call 0x54b30; lea rsp, [rsp + 8]; ret; 
0x0000000000420a35: mov rax, rdi; lea rdi, [rax + 0x50]; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004147c5: mov rax, rdi; lea rdi, [rax + 8]; call 0x25c0; lea rsp, [rsp + 8]; ret; 
0x00000000004239e0: mov rax, rdi; lea rdi, [rip + 0x46306]; mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419030: mov rax, rdi; lea rdi, [rip + 0x50b06]; mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b710: mov rax, rdi; lea rdi, [rip + 0x696d6]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a20: mov rax, rdi; lea rdi, [rip + 0x6d546]; mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbe0: mov rax, rdi; lea rdi, [rip + 0x76176]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db70: mov rax, rdi; lea rdi, [rip + 0x761e6]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000445ec5: mov rax, rdi; lea rsi, [rip + 0x2fdd1]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x000000000040db90: mov rax, rdi; lea rsi, [rip + 0x761c6]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db20: mov rax, rdi; lea rsi, [rip + 0x76236]; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000426b40: mov rax, rdi; mov dword ptr [rax + 4], 0xd7b0; ret; 
0x00000000004051a0: mov rax, rdi; mov dword ptr [rax + 4], esi; ret; 
0x00000000004051d0: mov rax, rdi; mov dword ptr [rax], esi; ret; 
0x000000000042d7f5: mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x000000000042d815: mov rax, rdi; mov edi, dword ptr [rax]; call 0x46ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402640: mov rax, rdi; mov edx, 0xffffffff; xchg rdx, rax; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x0000000000402660: mov rax, rdi; mov edx, 1; xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x000000000045b8f0: mov rax, rdi; mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b910: mov rax, rdi; mov edx, dword ptr [rax + 8]; and edx, 0xffffeff0; or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045bb45: mov rax, rdi; mov esi, dword ptr [rsi]; mov rdi, rax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000041d780: mov rax, rdi; mov qword ptr [rax + 0x28], rsi; mov qword ptr [rax + 8], rdx; mov qword ptr [rax + 0x18], 0; mov qword ptr [rax + 0x20], 0; ret; 
0x0000000000432100: mov rax, rdi; mov qword ptr [rax], rsi; ret; 
0x00000000004149b5: mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414995: mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414975: mov rax, rdi; mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000433915: mov rax, rdi; mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000432dc5: mov rax, rdi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432bf5: mov rax, rdi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432d75: mov rax, rdi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432ba5: mov rax, rdi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432d95: mov rax, rdi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bc5: mov rax, rdi; mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x00000000004149d5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x0000000000431295: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312b5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x0000000000431255: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000431275: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312d5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312f5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x0000000000431315: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x0000000000430285: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432fa5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433395: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x00000000004331b5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335a5: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f55: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433345: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433155: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000433545: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432f75: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433365: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433175: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000433565: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000430455: mov rax, rdi; mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x0000000000401ee9: mov rax, rdi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401ea9: mov rax, rdi; mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e69: mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000432625: mov rax, rdi; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004325d5: mov rax, rdi; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325f5: mov rax, rdi; mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x0000000000432815: mov rax, rdi; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004327c5: mov rax, rdi; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327e5: mov rax, rdi; mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x0000000000432435: mov rax, rdi; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323e5: mov rax, rdi; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432405: mov rax, rdi; mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x0000000000432a05: mov rax, rdi; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329b5: mov rax, rdi; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329d5: mov rax, rdi; mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x0000000000401e39: mov rax, rdi; mov rdi, rsi; syscall; 
0x00000000004026b0: mov rax, rdi; mov rdx, 0xffffffffffffffff; xchg rdx, rax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026d0: mov rax, rdi; mov rdx, 1; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000045c7d5: mov rax, rdi; mov rsi, qword ptr [rsi]; mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004326f5: mov rax, rdi; movsx esi, si; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432505: mov rax, rdi; movsx esi, sil; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000402708: mov rax, rdi; ret; 
0x0000000000402707: mov rax, rdi; ret; 
0x0000000000404930: mov rax, rdi; ret; 
0x0000000000404940: mov rax, rdi; ret; 
0x0000000000404a10: mov rax, rdi; ret; 
0x0000000000404a20: mov rax, rdi; ret; 
0x0000000000406f80: mov rax, rdi; ret; 
0x0000000000406f90: mov rax, rdi; ret; 
0x0000000000413960: mov rax, rdi; ret; 
0x0000000000413eb0: mov rax, rdi; ret; 
0x0000000000413ec0: mov rax, rdi; ret; 
0x0000000000413f20: mov rax, rdi; ret; 
0x0000000000413f30: mov rax, rdi; ret; 
0x0000000000414670: mov rax, rdi; ret; 
0x0000000000426b30: mov rax, rdi; ret; 
0x0000000000404e80: mov rax, rdi; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e90: mov rax, rdi; shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000401e09: mov rax, rdi; syscall; 
0x0000000000413005: mov rax, rdi; test rdi, rdi; je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000403350: mov rax, rdi; test rdi, rdi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x0000000000403360: mov rax, rdi; test rdi, rdi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x000000000044c0e0: mov rax, rdi; test rdi, rdi; je 0x4c0ec; mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x000000000040fb61: mov rax, rdx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447b97: mov rax, rdx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bc98: mov rax, rdx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000402710: mov rax, rdx; lock cmpxchg qword ptr [rdi], rsi; ret; 
0x000000000040b6c9: mov rax, rdx; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000406789: mov rax, rdx; ret; 
0x0000000000407301: mov rax, rdx; ret; 
0x000000000040b42a: mov rax, rdx; ret; 
0x000000000040cf79: mov rax, rdx; ret; 
0x000000000040f939: mov rax, rdx; ret; 
0x000000000041969c: mov rax, rdx; ret; 
0x0000000000433f75: mov rax, rdx; ret; 
0x0000000000433fe6: mov rax, rdx; ret; 
0x0000000000456738: mov rax, rdx; ret; 
0x000000000040b800: mov rax, rsi; imul rax, rdi; ret; 
0x00000000004026f3: mov rax, rsi; ret; 
0x0000000000419698: mov rax, rsi; ret; 
0x000000000043b880: mov rax, rsi; ret; 
0x000000000043b8b0: mov rax, rsi; ret; 
0x0000000000401fb0: mov rax, rsp; ret; 
0x0000000000431581: mov rbp, rsp; call 0x313f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431571: mov rbp, rsp; call 0x314b0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e7a1: mov rbp, rsp; call 0x368c0; mov rsp, rbp; pop rbp; ret; 
0x000000000044b911: mov rbp, rsp; lea r8, [rip + 0x2a385]; call 0x4b860; mov rsp, rbp; pop rbp; ret; 
0x000000000044b6e1: mov rbp, rsp; lea r8, [rip + 0x2a5b5]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b71: mov rbp, rsp; lea r8, [rip + 0x2c125]; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b31: mov rbp, rsp; lea r8, [rip + 0x3f165]; call 0x36b50; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b11: mov rbp, rsp; lea r8, [rip + 0x3f185]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x00000000004368c1: mov rbp, rsp; lea r8, [rip + 0x3f3d5]; call 0x355a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000436bc1: mov rbp, rsp; lea r9, [rip + 0x3f0d5]; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cb1: mov rbp, rsp; lea rax, [rip + 0x4fd15]; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000401e61: mov rbp, rsp; lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000401e31: mov rbp, rsp; lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e01: mov rbp, rsp; lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x0000000000405171: mov rbp, rsp; mov al, 1; mov rsp, rbp; pop rbp; ret; 
0x0000000000459031: mov rbp, rsp; mov r8b, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000435411: mov rbp, rsp; xor esi, esi; call 0xbaf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fd1: mov rbp, rsp; xor r8b, r8b; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430611: mov rbp, rsp; xor r9d, r9d; call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000452f54: mov rbx, qword ptr [rax + 0x20]; mov rax, rbx; pop rbx; ret; 
0x0000000000452f14: mov rbx, qword ptr [rax + 8]; mov rax, rbx; pop rbx; ret; 
0x00000000004181a3: mov rbx, qword ptr [rax]; lea rax, [rip + 0x506c3]; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x0000000000452ef4: mov rbx, qword ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000403ba7: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000403d01: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b64f: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6cc: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b8af: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041178f: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004161b8: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000416218: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d67e: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440be0: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044feb7: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044ffae: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450063: mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401228: mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401373: mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004013fc: mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004014fe: mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401643: mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000401df1: mov rbx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a916: mov rbx, qword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a995: mov rbx, qword ptr [rbp - 0x110]; mov r12, qword ptr [rbp - 0x108]; mov rsp, rbp; pop rbp; ret; 
0x000000000040aa1e: mov rbx, qword ptr [rbp - 0x118]; mov r12, qword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x0000000000410358: mov rbx, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a89d: mov rbx, qword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x000000000040d1b3: mov rbx, qword ptr [rbp - 0x120]; mov r12, qword ptr [rbp - 0x118]; mov rsp, rbp; pop rbp; ret; 
0x00000000004044f4: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4eb: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b0: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c75c: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7e3: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e860: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab0: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee62: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411b99: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa39: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6a9: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7f9: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd1: mov rbx, qword ptr [rbp - 0x18]; mov r12, qword ptr [rbp - 0x10]; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040954c: mov rbx, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e167: mov rbx, qword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f8c7: mov rbx, qword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443347: mov rbx, qword ptr [rbp - 0x20]; mov r12, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000439629: mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043981b: mov rbx, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d0f4: mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440624: mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov rsp, rbp; pop rbp; ret; 
0x00000000004396b3: mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043989e: mov rbx, qword ptr [rbp - 0x28]; mov r12, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043c0ee: mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000450f09: mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042df5c: mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043507b: mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x000000000043510b: mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x00000000004351c3: mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435263: mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov r13, qword ptr [rbp - 0x20]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436cfe: mov rbx, qword ptr [rbp - 0x30]; mov r12, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e0f4: mov rbx, qword ptr [rbp - 0x48]; mov r12, qword ptr [rbp - 0x40]; mov rsp, rbp; pop rbp; ret; 
0x000000000043b18e: mov rbx, qword ptr [rbp - 0x598]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443add: mov rbx, qword ptr [rbp - 0x60]; mov r12, qword ptr [rbp - 0x58]; mov r13, qword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab28: mov rbx, qword ptr [rbp - 0x70]; mov r12, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119ac: mov rbx, qword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a6c: mov rbx, qword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429edf: mov rbx, qword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2df: mov rbx, qword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov r13, qword ptr [rbp - 0x78]; mov rsp, rbp; pop rbp; ret; 
0x000000000043558e: mov rbx, qword ptr [rbp - 0x88]; mov r12, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x000000000044e0d5: mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov r13, qword ptr [rbp - 0x80]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444bc8: mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445884: mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000452c60: mov rbx, qword ptr [rbp - 0x98]; mov r12, qword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010ce: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411bf1: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412eed: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412fcf: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417da7: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417e85: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004185d1: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfdc: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe6: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f00c: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004416cc: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a06: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a2c: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004531d2: mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004189b0: mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x00000000004189b0: mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; pop rbx; ret; 
0x00000000004197a9: mov rbx, r12; mov rax, rbx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004527c5: mov rbx, r14; mov rsi, r12; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000416091: mov rbx, rdi; call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000415ec1: mov rbx, rdi; call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x0000000000423bc1: mov rbx, rdi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x0000000000423bc1: mov rbx, rdi; call 0x2990; call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x000000000043b901: mov rbx, rdi; call 0x3b8e0; add rax, rbx; pop rbx; ret; 
0x000000000042bc01: mov rbx, rdi; call 0xbaf0; mov rdi, rbx; call 0x2bba0; pop rbx; ret; 
0x000000000042e5f1: mov rbx, rdi; call 0xbaf0; mov rdi, rbx; call 0xcd10; pop rbx; ret; 
0x0000000000429811: mov rbx, rdi; call 0xe140; mov rdi, rbx; call 0x297b0; pop rbx; ret; 
0x00000000004169f1: mov rbx, rdi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169f1: mov rbx, rdi; lea rax, [rip + 0x52065]; call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x00000000004169d1: mov rbx, rdi; lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x00000000004169d1: mov rbx, rdi; lea rax, [rip + 0x52085]; call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x000000000041c4d1: mov rbx, rdi; mov edi, dword ptr [rbx]; call 0x1bbb0; mov dword ptr [rbx], 0xffffffff; pop rbx; ret; 
0x000000000043e1d1: mov rbx, rdi; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x00000000004418e1: mov rbx, rdi; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000419081: mov rbx, rdi; mov rdi, rsi; call qword ptr [rip + 0x50abb]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000414de9: mov rcx, qword ptr [rax + 0x20]; mov edx, dword ptr [rax + 0x1c]; mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414c9a: mov rcx, qword ptr [rax + 0x20]; mov edx, dword ptr [rax + 0x1c]; mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x00000000004029cd: mov rcx, qword ptr [rax + 0x20]; mov qword ptr [rdx], rcx; mov rdi, rax; call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x000000000041968e: mov rcx, qword ptr [rax]; mov qword ptr [rcx + 0x20], r8; mov qword ptr [rax], r8; mov rax, rsi; ret; 
0x000000000045901b: mov rcx, qword ptr [rax]; mov r8b, 1; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x00000000004574ff: mov rcx, qword ptr [rax]; mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000458ffb: mov rcx, qword ptr [rax]; xor r8b, r8b; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000434a18: mov rcx, qword ptr [rcx - 8]; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x0000000000417c78: mov rcx, qword ptr [rdi]; mov rdx, qword ptr [rcx + 8]; mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x0000000000419363: mov rcx, qword ptr [rdx + 0x10]; mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000041ef47: mov rcx, qword ptr [rdx + 0x18]; cmp rcx, qword ptr [rdx + 0x20]; jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x00000000004193a3: mov rcx, qword ptr [rdx + 0x20]; mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x000000000043a98a: mov rcx, qword ptr [rsp]; add dword ptr [rcx + 0x38], 1; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x000000000040d736: mov rcx, r12; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000042fcfc: mov rcx, r13; call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd3b: mov rcx, r13; call 0x2fe00; pop r13; pop r12; pop rbx; ret; 
0x000000000040ec61: mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000415421: mov rcx, r8; call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x0000000000403a73: mov rcx, r8; test rcx, rcx; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x000000000040ea11: mov rcx, rax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040260a: mov rcx, rdi; je 0x2614; lock inc dword ptr [rcx]; jmp 0x2616; inc dword ptr [rcx]; ret; 
0x000000000040262a: mov rcx, rdi; je 0x2635; lock inc qword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x00000000004396e5: mov rcx, rdx; mov edx, 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437305: mov rcx, rdx; mov edx, 2; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437345: mov rcx, rdx; mov edx, 4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x000000000045c90e: mov rcx, rdx; mov rdx, rax; mov edi, 0x115; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576ae: mov rcx, rdx; mov rdx, rax; mov edi, 0x11; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000457551: mov rcx, rdx; mov rdx, rax; mov edi, 0x17; call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x0000000000414316: mov rdi, qword ptr [r15]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x00000000004149b8: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414998: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000414978: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000414978: mov rdi, qword ptr [rax + 8]; mov rax, qword ptr [rax + 8]; mov rax, qword ptr [rax]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000430a45: mov rdi, qword ptr [rax - 0x30]; lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ec5: mov rdi, qword ptr [rax - 0x30]; lea rcx, [rsp + 8]; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000042757a: mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000420668: mov rdi, qword ptr [rax]; call 0x19140; pop rbx; ret; 
0x0000000000431168: mov rdi, qword ptr [rax]; call 0x36c60; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000455b9c: mov rdi, qword ptr [rax]; call 0x50240; lea rsp, [rsp + 8]; ret; 
0x0000000000433918: mov rdi, qword ptr [rax]; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000414df4: mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca5: mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x000000000041426f: mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x000000000041417f: mov rdi, qword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x000000000042720f: mov rdi, qword ptr [rax]; xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x00000000004517de: mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b01: mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451e3c: mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045217f: mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000456b19: mov rdi, qword ptr [rbx + 0x10]; call 0x19140; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x0000000000454b68: mov rdi, qword ptr [rbx]; call 0x19220; mov qword ptr [rbx], 0; pop rbx; ret; 
0x0000000000415008: mov rdi, qword ptr [rbx]; mov esi, 1; call 0x2950; pop rbx; ret; 
0x0000000000412fea: mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413043: mov rdi, qword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000413bc5: mov rdi, qword ptr [rdi + 0x18]; call 0xb3b0; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e7b5: mov rdi, qword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x0000000000431105: mov rdi, qword ptr [rdi]; call 0x35000; lea rsp, [rsp + 8]; ret; 
0x0000000000431125: mov rdi, qword ptr [rdi]; call 0x35090; lea rsp, [rsp + 8]; ret; 
0x000000000042f1e5: mov rdi, qword ptr [rdi]; call 0xca70; test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000452ec7: mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000407897: mov rdi, qword ptr [rsi]; shr rdi, cl; mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x000000000041762e: mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x00000000004130a2: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004131a2: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000414926: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cd20: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce72: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000440250: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a2: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e879: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045161b: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045192e: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045258e: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000450c48: mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000445414: mov rdi, qword ptr [rsp + 0x168]; lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000445497: mov rdi, qword ptr [rsp + 0x170]; lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x0000000000417526: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000043c88c: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbdb: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdbc: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044010b: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c61: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa4: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000413167: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413300: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c0: mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000044ea13: mov rdi, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ca6d: mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ff9d: mov rdi, qword ptr [rsp + 0x28]; mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041368d: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c713: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc43: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e721: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee37: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efc7: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2de: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f97b: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe1: mov rdi, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043a7b1: mov rdi, qword ptr [rsp]; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x0000000000446d23: mov rdi, qword ptr [rsp]; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000453672: mov rdi, qword ptr [rsp]; mov esi, dword ptr [rsp + 8]; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x0000000000443fdd: mov rdi, qword ptr [rsp]; mov rsi, qword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x000000000040103d: mov rdi, r10; xor rbp, rbp; call 0x23bc0; ret; 
0x00000000004113cc: mov rdi, r12; call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041143c: mov rdi, r12; call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df91: mov rdi, r12; call 0x1fd0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040b39c: mov rdi, r12; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040dff7: mov rdi, r12; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f2b2: mov rdi, r12; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f4a2: mov rdi, r12; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000040ffeb: mov rdi, r12; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x000000000044c0c9: mov rdi, r12; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x0000000000453338: mov rdi, r12; lea rax, [rip + 0x22bce]; call qword ptr [rax]; 
0x000000000040e06b: mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x0000000000413033: mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x000000000040ea0b: mov rdi, r12; mov rsi, rbx; mov rcx, rax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040e0f4: mov rdi, r13; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000040ec5e: mov rdi, r13; mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000413cd2: mov rdi, r14; mov rax, r15; call rax; 
0x0000000000413e2f: mov rdi, r14; mov rax, r15; call rax; 
0x000000000044fcbb: mov rdi, r15; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x000000000043978c: mov rdi, rax; and edx, 0xff; mov rsi, rsp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x000000000041511a: mov rdi, rax; call 0x13720; call 0x14fb0; lea rsp, [rsp + 8]; ret; 
0x00000000004150fa: mov rdi, rax; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000045229e: mov rdi, rax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x00000000004338f4: mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004480c3: mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf13: mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041f9ab: mov rdi, rax; call 0x1f820; mov byte ptr [rbx], al; pop rbx; ret; 
0x000000000042ee57: mov rdi, rax; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x00000000004029d4: mov rdi, rax; call 0x23b70; lea rsp, [rsp + 8]; ret; 
0x000000000042512a: mov rdi, rax; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000401e19: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e4c: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e7f: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401ec2: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f05: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f48: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f8c: mov rdi, rax; call 0x2a20; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000043231e: mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x000000000043250c: mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004326fb: mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004328ee: mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432aca: mov rdi, rax; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000431a6f: mov rdi, rax; call 0x36c90; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431e9f: mov rdi, rax; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c6f: mov rdi, rax; call 0x36c90; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f4d: mov rdi, rax; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x000000000042ed2d: mov rdi, rax; call 0x38d20; mov rsp, rbp; pop rbp; ret; 
0x0000000000431fbd: mov rdi, rax; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x000000000043366e: mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336ee: mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043377e: mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043380e: mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000439cba: mov rdi, rax; call 0x3aaa0; mov rsp, rbp; pop rbp; ret; 
0x000000000043b202: mov rdi, rax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x0000000000445ecf: mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x00000000004559cb: mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000455a0e: mov rdi, rax; call 0x557e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459cd0: mov rdi, rax; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x000000000045bb4a: mov rdi, rax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000045bb49: mov rdi, rax; call 0x5ba70; lea rsp, [rsp + 8]; ret; 
0x000000000045c7db: mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7da: mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000043b2a5: mov rdi, rax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000041ef51: mov rdi, rax; call qword ptr [rax + 0x38]; 
0x000000000041ef51: mov rdi, rax; call qword ptr [rax + 0x38]; mov bl, 1; mov al, bl; pop rbx; ret; 
0x000000000041dadf: mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041f61f: mov rdi, rax; call qword ptr [rax + 0x40]; 
0x000000000041dadf: mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x000000000041f61f: mov rdi, rax; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x00000000004135d1: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000414848: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c641: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c78c: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c912: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043caeb: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc47: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd98: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb71: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcbc: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe42: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044001b: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440177: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c8: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e641: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e797: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8f0: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed61: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eef1: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f201: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8b1: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044fab1: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451538: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045169a: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451848: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519ba: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b6c: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451cee: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451eac: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045202e: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d7: mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000416955: mov rdi, rax; call qword ptr [rip + 0x6d69a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416924: mov rdi, rax; call qword ptr [rip + 0x6d6cb]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004168fd: mov rdi, rax; call qword ptr [rip + 0x6d6f2]; mov rsp, rbp; pop rbp; ret; 
0x00000000004168c5: mov rdi, rax; call qword ptr [rip + 0x6d72a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416895: mov rdi, rax; call qword ptr [rip + 0x6d75a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041673e: mov rdi, rax; call qword ptr [rip + 0x6d891]; lea rsp, [rsp + 8]; ret; 
0x000000000041671f: mov rdi, rax; call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x0000000000416770: mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000415995: mov rdi, rax; call qword ptr [rip + 0x6e65a]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415964: mov rdi, rax; call qword ptr [rip + 0x6e68b]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041593d: mov rdi, rax; call qword ptr [rip + 0x6e6b2]; mov rsp, rbp; pop rbp; ret; 
0x0000000000415905: mov rdi, rax; call qword ptr [rip + 0x6e6ea]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004158d5: mov rdi, rax; call qword ptr [rip + 0x6e71a]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041568e: mov rdi, rax; call qword ptr [rip + 0x6e941]; lea rsp, [rsp + 8]; ret; 
0x00000000004156c0: mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x000000000041566f: mov rdi, rax; call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x000000000043934c: mov rdi, rax; lea r8, [rip + 0x3c94a]; mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000431f7d: mov rdi, rax; lea r8, [rip + 0x43d19]; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x000000000043928c: mov rdi, rax; lea r9, [rip + 0x3ca0a]; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x000000000043915c: mov rdi, rax; lea r9, [rip + 0x3cb3a]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000455bba: mov rdi, rax; lea rax, [rip + 0x2e2ac]; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x0000000000455bb9: mov rdi, rax; lea rax, [rip + 0x2e2ac]; mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x0000000000418d04: mov rdi, rax; lea rax, [rip + 0x4fcd2]; call qword ptr [rax]; 
0x0000000000415245: mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415245: mov rdi, rax; lea rax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415215: mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415215: mov rdi, rax; lea rax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151e5: mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e5: mov rdi, rax; lea rax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000043b21c: mov rdi, rax; lea rcx, [rip + 0x3aa7a]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000043b1bd: mov rdi, rax; lea rdx, [rip + 0x3aad9]; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x0000000000438edc: mov rdi, rax; lea rdx, [rip + 0x3cdba]; mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000438dac: mov rdi, rax; lea rdx, [rip + 0x3ceea]; mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000431f0d: mov rdi, rax; lea rsi, [rip + 0x43d89]; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000439259: mov rdi, rax; lea rsi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004392c9: mov rdi, rax; lea rsi, [rsp + 0x10]; mov r9d, 5; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x000000000040db2a: mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db9a: mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004169bb: mov rdi, rax; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d68f]; lea rsp, [rsp + 8]; ret; 
0x000000000041669b: mov rdi, rax; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d9af]; lea rsp, [rsp + 8]; ret; 
0x000000000041665c: mov rdi, rax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x00000000004155ab: mov rdi, rax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x000000000041660c: mov rdi, rax; mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x000000000041555c: mov rdi, rax; mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x000000000043b24b: mov rdi, rax; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x00000000004165de: mov rdi, rax; mov edx, 1; call qword ptr [rip + 0x6da6c]; lea rsp, [rsp + 8]; ret; 
0x000000000041552e: mov rdi, rax; mov edx, 1; call qword ptr [rip + 0x6eaa4]; lea rsp, [rsp + 8]; ret; 
0x0000000000434ebc: mov rdi, rax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434ede: mov rdi, rax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000041662e: mov rdi, rax; mov edx, 2; call qword ptr [rip + 0x6da1c]; lea rsp, [rsp + 8]; ret; 
0x000000000041557e: mov rdi, rax; mov edx, 2; call qword ptr [rip + 0x6ea54]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f0b: mov rdi, rax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f2e: mov rdi, rax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000041667a: mov rdi, rax; mov edx, 4; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f7a: mov rdi, rax; mov edx, 8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x000000000040420b: mov rdi, rax; mov esi, 0xff; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x000000000040420a: mov rdi, rax; mov esi, 0xff; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x000000000041372d: mov rdi, rax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041372d: mov rdi, rax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; lea rsp, [rsp + 8]; ret; 
0x000000000044c695: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 0xe8]; lea rsp, [rsp + 8]; ret; 
0x000000000041300d: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041300d: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x0000000000413088: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130db: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041321b: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041326b: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133bb: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041341b: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450b90: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bdc: mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041541e: mov rdi, rax; mov rcx, r8; call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x000000000041697c: mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159bc: mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x000000000042e63b: mov rdi, rax; xor ecx, ecx; call 0x2e650; mov rsp, rbp; pop rbp; ret; 
0x000000000043393e: mov rdi, rax; xor ecx, ecx; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x000000000043f8eb: mov rdi, rax; xor edx, edx; call 0x3f900; lea rsp, [rsp + 8]; ret; 
0x000000000044336b: mov rdi, rax; xor edx, edx; call 0x43380; lea rsp, [rsp + 8]; ret; 
0x000000000042eb9b: mov rdi, rax; xor r8, r8; call 0x2ebb0; mov rsp, rbp; pop rbp; ret; 
0x0000000000417173: mov rdi, rbx; call 0x151b0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041727e: mov rdi, rbx; call 0x151d0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000417383: mov rdi, rbx; call 0x15200; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040baa9: mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x000000000040dcc9: mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x0000000000413949: mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x0000000000456b22: mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x00000000004338d1: mov rdi, rbx; call 0x19220; xor ebx, ebx; pop rbx; ret; 
0x000000000041adbc: mov rdi, rbx; call 0x1add0; pop rbx; ret; 
0x000000000041d8a7: mov rdi, rbx; call 0x1c7c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041db4a: mov rdi, rbx; call 0x1d9a0; cmp qword ptr [rbx + 0x40], 0; je 0x1dbbb; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x00000000004226d7: mov rdi, rbx; call 0x21fe0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004222a2: mov rdi, rbx; call 0x21fe0; lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x0000000000429819: mov rdi, rbx; call 0x297b0; pop rbx; ret; 
0x000000000042bc09: mov rdi, rbx; call 0x2bba0; pop rbx; ret; 
0x000000000043e39d: mov rdi, rbx; call 0x3e370; pop rbx; ret; 
0x000000000043e6cf: mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x000000000043f1e1: mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x000000000045b1e5: mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045b223: mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x000000000045b222: mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x0000000000441f5f: mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000442c61: mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000406cef: mov rdi, rbx; call 0x6ba0; pop r13; pop r12; pop rbx; ret; 
0x0000000000406f64: mov rdi, rbx; call 0x6e30; pop r13; pop r12; pop rbx; ret; 
0x000000000042e5f9: mov rdi, rbx; call 0xcd10; pop rbx; ret; 
0x000000000041caab: mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x000000000041c9a5: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc88: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d273: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d3cd: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d543: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d6bd: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041da86: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f12f: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f6bb: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f7b3: mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc88: mov rdi, rbx; call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x000000000041db59: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f660: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6d5: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6d4: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f760: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7cd: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7cc: mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041c9bb: mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000416099: mov rdi, rbx; call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000415ec9: mov rdi, rbx; call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x000000000045058e: mov rdi, rbx; lea rax, [rip + 0x35238]; call qword ptr [rax]; 
0x0000000000450521: mov rdi, rbx; lea rax, [rip + 0x35295]; call qword ptr [rax]; 
0x0000000000429937: mov rdi, rbx; lea rdx, [rip + 0x3781f]; call 0xe180; pop rbx; ret; 
0x0000000000429a02: mov rdi, rbx; lea rsi, [rip + 0x37754]; call 0xe180; pop rbx; ret; 
0x0000000000410421: mov rdi, rbx; lea rsi, [rsp + 8]; call 0xdde0; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000041927d: mov rdi, rbx; mov ecx, 5; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000041cb22: mov rdi, rbx; mov edx, 1; mov esi, 0xd7b2; call 0x1ca10; pop rbx; ret; 
0x000000000041cbc2: mov rdi, rbx; mov edx, 1; mov esi, 0xd7b4; call 0x1ca10; pop rbx; ret; 
0x000000000042be6b: mov rdi, rbx; mov edx, 1; mov esi, 1; call 0xd400; pop rbx; ret; 
0x0000000000429a4f: mov rdi, rbx; mov edx, 1; mov esi, 1; call 0xfb70; pop rbx; ret; 
0x000000000045386d: mov rdi, rbx; mov esi, 0x10; call 0x535c0; xor eax, eax; pop rbx; ret; 
0x000000000043e3bb: mov rdi, rbx; mov esi, 0x40; call 0x3f800; pop rbx; ret; 
0x0000000000441c4b: mov rdi, rbx; mov esi, 0x40; call 0x43280; pop rbx; ret; 
0x00000000004211d2: mov rdi, rbx; mov esi, 0x80; call 0x20fb0; pop rbx; ret; 
0x0000000000421222: mov rdi, rbx; mov esi, 0x80; call 0x210a0; pop rbx; ret; 
0x0000000000414739: mov rdi, rbx; mov esi, 1; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x60]; 
0x0000000000417362: mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x0000000000417167: mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x0000000000413709: mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x00000000004147a1: mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9f2: mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000415181: mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x0000000000417247: mov rdi, rbx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x00000000004508e7: mov rdi, rbx; mov rdx, r13; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x0000000000410397: mov rdi, rbx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103d6: mov rdi, rbx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410466: mov rdi, rbx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104a6: mov rdi, rbx; mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000045650e: mov rdi, rbx; mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x000000000041a3a9: mov rdi, rbx; xor edx, edx; call 0x22e0; mov rax, rbx; pop rbx; ret; 
0x000000000041469d: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004325b2: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004327a2: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432992: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432b81: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d51: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432f32: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433132: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433322: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433522: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b57: mov rdi, rbx; xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b7f: mov rdi, rbx; xor edx, edx; call 0xc590; pop rbx; ret; 
0x000000000041cb72: mov rdi, rbx; xor edx, edx; mov esi, 0xd7b1; call 0x1ca10; pop rbx; ret; 
0x0000000000413231: mov rdi, rbx; xor esi, esi; call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004133e5: mov rdi, rbx; xor esi, esi; call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000414529: mov rdi, rbx; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x000000000045052f: mov rdi, rbx; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x00000000004137ae: mov rdi, rdx; test rdi, rdi; je 0x137bd; cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x000000000042fc78: mov rdi, rsi; add rdx, 1; mov rsi, qword ptr [rax]; call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x00000000004310c8: mov rdi, rsi; add rdx, 1; mov rsi, qword ptr [rax]; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000041adb4: mov rdi, rsi; call 0x1ad90; mov rdi, rbx; call 0x1add0; pop rbx; ret; 
0x0000000000419084: mov rdi, rsi; call qword ptr [rip + 0x50abb]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x0000000000432dc8: mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432bf8: mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432d78: mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432ba8: mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432d98: mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f50; lea rsp, [rsp + 8]; ret; 
0x0000000000432bc8: mov rdi, rsi; mov esi, dword ptr [rax]; call 0x34f70; lea rsp, [rsp + 8]; ret; 
0x00000000004149d8: mov rdi, rsi; mov rsi, qword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x00000000004302a8: mov rdi, rsi; mov rsi, qword ptr [rax]; and edx, 0xff; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x000000000042f207: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x2e7a0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431298: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312b8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x0000000000431258: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x0000000000431278: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312d8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312f8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x0000000000431318: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x0000000000430288: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432fa8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x0000000000433398: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x00000000004331b8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335a8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f58: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433348: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000433158: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000433548: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432f78: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433368: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x0000000000433178: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x0000000000433568: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042fcb8: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x3b3a0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000430458: mov rdi, rsi; mov rsi, qword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x0000000000447e74: mov rdi, rsi; mov rsi, rbx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x0000000000401f2c: mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401eec: mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401eac: mov rdi, rsi; mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000401e6c: mov rdi, rsi; mov rsi, rdx; syscall; 
0x0000000000431de8: mov rdi, rsi; movsd xmm0, qword ptr [rax]; lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319a8: mov rdi, rsi; movss xmm0, dword ptr [rax]; lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000432628: mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004325d8: mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325f8: mov rdi, rsi; movsx esi, byte ptr [rax]; call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x0000000000432818: mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004327c8: mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327e8: mov rdi, rsi; movsx esi, word ptr [rax]; call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x0000000000432438: mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323e8: mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000432408: mov rdi, rsi; movzx esi, byte ptr [rax]; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x0000000000432a08: mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329b8: mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329d8: mov rdi, rsi; movzx esi, word ptr [rax]; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x0000000000401e3c: mov rdi, rsi; syscall; 
0x00000000004191e9: mov rdi, rsp; call 0x191c0; lea rsp, [rsp + 8]; ret; 
0x00000000004557c5: mov rdi, rsp; call 0x2a50; lea rsp, [rsp + 8]; ret; 
0x0000000000459cc8: mov rdi, rsp; call 0x2a50; mov rdi, rax; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x00000000004546cb: mov rdi, rsp; call 0x546e0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000456f67: mov rdi, rsp; call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000404eb6: mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x0000000000452826: mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x00000000004527cb: mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000453170: mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453170: mov rdi, rsp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000449d3a: mov rdi, rsp; lea rax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000043b544: mov rdi, rsp; lea rax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000041894c: mov rdi, rsp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004188f9: mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x00000000004182a6: mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000041ee80: mov rdi, rsp; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000045c64d: mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4fd: mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x00000000004479b0: mov rdx, 0; test rdi, rdi; jne 0x479c4; xor eax, eax; ret; 
0x00000000004026b3: mov rdx, 0xffffffffffffffff; xchg rdx, rax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026d3: mov rdx, 1; xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x00000000004195be: mov rdx, qword ptr [rax + 0x10]; and rdx, 0xffffffffffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x0000000000444c6f: mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444ce3: mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004470df: mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x000000000044711f: mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c96: mov rdx, qword ptr [rax + 0x10]; xor ecx, ecx; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d2a: mov rdx, qword ptr [rax + 0x10]; xor ecx, ecx; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004470fc: mov rdx, qword ptr [rax + 0x10]; xor ecx, ecx; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x000000000041d269: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d28b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c3: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d3e5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d539: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d55b; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041d6b3: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1d6d8; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f125: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1f135; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f6b1: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1f6dd; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041f7a9: mov rdx, qword ptr [rax + 0x18]; cmp rdx, qword ptr [rax + 0x20]; jl 0x1f7d5; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000423b9b: mov rdx, qword ptr [rax + 0x50]; mov qword ptr [rip + 0x6127a], rdx; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x000000000041a032: mov rdx, qword ptr [rax + 8]; mov qword ptr [rdx + 0xb8], rax; lea rdi, [rip + 0x6ab4c]; call 0x1ad70; pop rbx; ret; 
0x000000000041957a: mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x00000000004193b0: mov rdx, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rdx + 0xa8], rax; ret; 
0x000000000045907c: mov rdx, qword ptr [rax]; mov cl, 1; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000041932f: mov rdx, qword ptr [rax]; mov qword ptr [rdx + 0x20], rdi; mov qword ptr [rax], rdi; ret; 
0x0000000000416e61: mov rdx, qword ptr [rax]; mov qword ptr [rsi], rdx; lea rcx, [rdx + 2]; movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x0000000000414277: mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 0x10]; 
0x0000000000414187: mov rdx, qword ptr [rax]; mov rax, qword ptr [rdx]; call qword ptr [rax + 8]; 
0x0000000000401073: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x00000000004114a3: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x114bb; lea rax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415314: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x15329; lea rax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c08: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x17c20; lea rax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c32: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x17c47; lea rax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fdc: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x17ff1; lea rax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041800c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18024; lea rax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041803b: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18050; lea rax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d82: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18d9a; lea rax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db3: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18dcb; lea rax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e4e: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18e66; lea rax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e82: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18e9a; lea rax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f55: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x18f6d; lea rax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe4: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1affc; lea rax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b4: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1b7cc; lea rax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c183: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1c198; lea rax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5c7: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1c5dc; lea rax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca4c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1ca61; lea rax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbeb: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1cc00; lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc33: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1cc48; lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc9b: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd5c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1cd71; lea rax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec0: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1ced5; lea rax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfa7: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1cfbc; lea rax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d23c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1d251; lea rax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d38c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1d3a1; lea rax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d492: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1d4a7; lea rax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d67c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1d691; lea rax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d93b: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1d950; lea rax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dafb: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1db10; lea rax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db68: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1db7d; lea rax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc53: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1dc68; lea rax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd67: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1dd7c; lea rax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf3: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1de08; lea rax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de93: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1dea8; lea rax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df33: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1df48; lea rax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff2: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e007; lea rax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e085: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e09a; lea rax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e0fe: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e113; lea rax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2ab: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e2c0; lea rax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e44f: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e464; lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e74a: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e75f; lea rax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e81a: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e82f; lea rax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e910: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e925; lea rax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e95d: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1e972; lea rax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edad: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1edc2; lea rax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edf9: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1ee0e; lea rax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fde7: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x1fdfc; lea rax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202dc: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x202f1; lea rax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204d5: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x204ea; lea rax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fc5: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x20fda; lea rax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212d6: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x212eb; lea rax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421420: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x21435; lea rax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421526: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2153b; lea rax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421671: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x21686; lea rax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421abb: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x21ad0; lea rax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b7c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x21b91; lea rax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce0: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x21cf5; lea rax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f3: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x22508; lea rax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422564: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x22579; lea rax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004225ff: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x22614; lea rax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042275b: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x22770; lea rax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422892: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x228a7; lea rax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000423368: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2337d; lea rax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042451b: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x24530; lea rax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427146: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c0: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427323: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427350: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f2: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x28407; lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042841d: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x28432; lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428454: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x28469; lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c2f: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x29c47; lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cbf: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x29cd7; lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d4f: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x29d67; lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b2: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2a5c7; lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c02f: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0bf: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c14f: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004500c6: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x500db; lea rax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a1: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x50b9; lea rax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452615: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x5262a; lea rax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452641: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x52656; lea rax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045aba3: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x5abbb; lea rax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abf9: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x5ac11; lea rax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf1: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x5cd09; lea rax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd3c: mov rdx, qword ptr [rax]; test rdx, rdx; je 0x5cd54; lea rax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045905c: mov rdx, qword ptr [rax]; xor cl, cl; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x00000000004094d8: mov rdx, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000451696: mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004519b6: mov rdx, qword ptr [rbp - 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451cea: mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045202a: mov rdx, qword ptr [rbp - 0x30]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000450f05: mov rdx, qword ptr [rbp - 8]; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417c52: mov rdx, qword ptr [rbx]; mov rax, qword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x00000000004299ff: mov rdx, qword ptr [rbx]; mov rdi, rbx; lea rsi, [rip + 0x37754]; call 0xe180; pop rbx; ret; 
0x0000000000417c7b: mov rdx, qword ptr [rcx + 8]; mov qword ptr [rdi], rax; mov qword ptr [rsi], rdx; ret; 
0x00000000004189a9: mov rdx, qword ptr [rdi + 8]; mov qword ptr [rax], rdx; mov rbx, qword ptr [rdi + 0x10]; call 0x19220; call rbx; 
0x000000000042e340: mov rdx, qword ptr [rdi]; lea rax, [rsi + 1]; movzx eax, byte ptr [rdx + rax - 1]; ret; 
0x00000000004193a7: mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x0000000000419367: mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000044b9ad: mov rdx, qword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac1: mov rdx, qword ptr [rdx - 8]; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x00000000004364c9: mov rdx, qword ptr [rdx]; mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044947b: mov rdx, qword ptr [rdx]; mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x000000000044b21b: mov rdx, qword ptr [rdx]; mov rax, qword ptr [rsp]; mov eax, dword ptr [rax + 8]; mov dword ptr [rdx - 0x70], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000414843: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc42: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd93: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440172: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c3: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e792: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451533: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451843: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d2: mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c787: mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae6: mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb7: mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440016: mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b67: mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea7: mov rdx, qword ptr [rsp + 0x18]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e8eb: mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c90d: mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe3d: mov rdx, qword ptr [rsp + 0x28]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000042de84: mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deb1: mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df87: mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e191: mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dcce: mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004135cc: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c63c: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb6c: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e63c: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed5c: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eeec: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1fc: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8ac: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faac: mov rdx, qword ptr [rsp + 8]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000459a42: mov rdx, qword ptr [rsp]; add qword ptr [rdx + 0x800], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512ea: mov rdx, qword ptr [rsp]; add qword ptr [rdx + 8], 1; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000043b226: mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x000000000042f65b: mov rdx, qword ptr [rsp]; cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x000000000041708b: mov rdx, qword ptr [rsp]; lea rdi, [rax + rdx]; mov rsi, r13; mov rax, r15; call rax; 
0x000000000044bf49: mov rdx, r12; call 0x4d8d0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044c009: mov rdx, r12; call 0x4e0f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450b86: mov rdx, r12; lea rsi, [rip + 0x17ec0]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450c42: mov rdx, r12; mov rsi, rsp; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000403a0c: mov rdx, r13; call 0x1fd0; pop r13; pop r12; pop rbx; ret; 
0x00000000004302e2: mov rdx, r13; call 0x302f0; pop r13; pop r12; pop rbx; ret; 
0x00000000004310b2: mov rdx, r13; call 0x310c0; pop r13; pop r12; pop rbx; ret; 
0x0000000000430314: mov rdx, r13; call 0xd400; pop r13; pop r12; pop rbx; ret; 
0x000000000041544f: mov rdx, r13; call qword ptr [rip + 0x6eb78]; pop r13; pop r12; pop rbx; ret; 
0x00000000004508ea: mov rdx, r13; mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x00000000004184ba: mov rdx, r13; mov rsi, r12; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x000000000041517b: mov rdx, r13; mov rsi, r12; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x000000000040b9be: mov rdx, r8; add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x0000000000444bfa: mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444c3e: mov rdx, r8; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004587f2: mov rdx, r9; call 0x57540; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447a74: mov rdx, rax; add byte ptr [rdx + rsi], 0x20; add rsi, 1; cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x000000000041a364: mov rdx, rax; and rdx, 1; jne 0x1a376; and rax, 0xffffffffffffffe0; sub rax, 0x18; ret; 
0x0000000000402f9e: mov rdx, rax; mov edi, 0x10; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c911: mov rdx, rax; mov edi, 0x115; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576b1: mov rdx, rax; mov edi, 0x11; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045770e: mov rdx, rax; mov edi, 0x13; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457554: mov rdx, rax; mov edi, 0x17; call 0x1f20; lea rsp, [rsp + 8]; ret; 
0x000000000045ca7e: mov rdx, rax; mov edi, 0x9a; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c8a1: mov rdx, rax; mov edi, 0xe8; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b1e: mov rdx, rax; mov edi, 1; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402ace: mov rdx, rax; mov edi, 8; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e13: mov rdx, rax; mov r8d, 8; mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000040300e: mov rdx, rax; mov r8d, 8; mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000419360: mov rdx, rax; mov rcx, qword ptr [rdx + 0x10]; mov rdx, qword ptr [rdx + 8]; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000041ef44: mov rdx, rax; mov rcx, qword ptr [rdx + 0x18]; cmp rcx, qword ptr [rdx + 0x20]; jl 0x1ef57; mov rdi, rax; call qword ptr [rax + 0x38]; 
0x00000000004193a0: mov rdx, rax; mov rcx, qword ptr [rdx + 0x20]; mov rdx, qword ptr [rdx + 0x18]; mov qword ptr [rcx + 0x18], rdx; ret; 
0x000000000044f0f3: mov rdx, rax; shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x000000000044f4a3: mov rdx, rax; shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x0000000000402afe: mov rdx, rax; xor edi, edi; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e9e: mov rdx, rax; xor r8, r8; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000412f2a: mov rdx, rbp; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040ef50: mov rdx, rbp; mov edi, 0xc9; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x000000000040dc0c: mov rdx, rbp; mov edi, 0xcc; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cd2: mov rdx, rbp; mov edi, 0xd3; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417cfc: mov rdx, rbp; mov edi, 0xd7; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d3c: mov rdx, rbp; mov edi, 0xd8; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000418d1a: mov rdx, rbp; mov edi, 0xe3; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000417d1c: mov rdx, rbp; mov edi, 0xec; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000426c90: mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x0000000000403557: mov rdx, rcx; lea rdi, [rax + 1]; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f72: mov rdx, rcx; mov r10, r8; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f32: mov rdx, rcx; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401ef2: mov rdx, rcx; mov r10, r8; syscall; 
0x000000000041541b: mov rdx, rcx; mov rdi, rax; mov rcx, r8; call qword ptr [rip + 0x6ec9e]; lea rsp, [rsp + 8]; ret; 
0x0000000000401eb2: mov rdx, rcx; syscall; 
0x000000000041ab01: mov rdx, rdi; xor r8d, r8d; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000045b865: mov rdx, rsi; mov esi, 0x5401; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9a5: mov rdx, rsi; mov esi, 0x540f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000404208: mov rdx, rsi; mov rdi, rax; mov esi, 0xff; call 0x4190; lea rsp, [rsp + 8]; ret; 
0x0000000000403035: mov rdx, rsi; mov rsi, rdi; mov edi, 0x23; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574d8: mov rdx, rsi; mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403055: mov rdx, rsi; mov rsi, rdi; mov edi, 0x4f; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b65: mov rdx, rsi; mov rsi, rdi; mov edi, 0x52; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402fe8: mov rdx, rsi; mov rsi, rdi; mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403075: mov rdx, rsi; mov rsi, rdi; mov edi, 0x60; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8c5: mov rdx, rsi; mov rsi, rdi; mov edi, 0x7d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8e5: mov rdx, rsi; mov rsi, rdi; mov edi, 0x7e; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457435: mov rdx, rsi; mov rsi, rdi; mov edi, 0x84; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f78: mov rdx, rsi; mov rsi, rdi; mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f55: mov rdx, rsi; mov rsi, rdi; mov edi, 0xb; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b85: mov rdx, rsi; mov rsi, rdi; mov edi, 4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457595: mov rdx, rsi; mov rsi, rdi; mov edi, 6; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f32: mov rdx, rsi; mov rsi, rdi; mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e88: mov rdx, rsi; movsxd rsi, edi; mov edi, 0x26; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e35: mov rdx, rsi; movsxd rsi, edi; mov edi, 0x4d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403095: mov rdx, rsi; movsxd rsi, edi; mov edi, 0x61; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004030b5: mov rdx, rsi; movsxd rsi, edi; mov edi, 0xa0; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb95: mov rdx, rsi; movsxd rsi, edi; mov edi, 0xe3; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb75: mov rdx, rsi; movsxd rsi, edi; mov edi, 0xe4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e55: mov rdx, rsi; movsxd rsi, edi; mov edi, 5; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000042e3e4: mov rdx, rsi; xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000450cb5: mov rdx, rsp; call 0x50b70; lea rsp, [rsp + 8]; ret; 
0x000000000041fda8: mov rdx, rsp; lea rax, [rip + 0x63fae]; call qword ptr [rax + 8]; 
0x000000000040f229: mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x0000000000413411: mov rdx, rsp; lea rsi, [rip + 0x55635]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413261: mov rdx, rsp; lea rsi, [rip + 0x557e5]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130d1: mov rdx, rsp; lea rsi, [rip + 0x55975]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000424613: mov rdx, rsp; mov esi, 0xff; call 0x3d10; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000041d7c3: mov rdx, rsp; mov esi, 3; call 0x3d10; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000044ba76: mov rsi, 0xffffffffffffffff; call 0x2480; shl rax, 1; add rax, rbx; pop rbx; ret; 
0x00000000004571fd: mov rsi, 0xffffffffffffffff; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000418947: mov rsi, qword ptr [r13 + rax*8]; mov rdi, rsp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004149db: mov rsi, qword ptr [rax + 8]; call 0x13020; lea rsp, [rsp + 8]; ret; 
0x0000000000414df0: mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca1: mov rsi, qword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x00000000004188f5: mov rsi, qword ptr [rax + 8]; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x00000000004302ab: mov rsi, qword ptr [rax]; and edx, 0xff; call 0x345b0; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac5: mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x000000000042f20a: mov rsi, qword ptr [rax]; call 0x2e7a0; mov rsp, rbp; pop rbp; ret; 
0x000000000043129b: mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x00000000004312bb: mov rsi, qword ptr [rax]; call 0x33a50; lea rsp, [rsp + 8]; ret; 
0x000000000043125b: mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x000000000043127b: mov rsi, qword ptr [rax]; call 0x33ab0; lea rsp, [rsp + 8]; ret; 
0x00000000004312db: mov rsi, qword ptr [rax]; call 0x344a0; lea rsp, [rsp + 8]; ret; 
0x00000000004312fb: mov rsi, qword ptr [rax]; call 0x34510; lea rsp, [rsp + 8]; ret; 
0x000000000043131b: mov rsi, qword ptr [rax]; call 0x34550; lea rsp, [rsp + 8]; ret; 
0x000000000043028b: mov rsi, qword ptr [rax]; call 0x34590; lea rsp, [rsp + 8]; ret; 
0x0000000000432fab: mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x000000000043339b: mov rsi, qword ptr [rax]; call 0x34b20; lea rsp, [rsp + 8]; ret; 
0x00000000004331bb: mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004335ab: mov rsi, qword ptr [rax]; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x0000000000432f5b: mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x000000000043334b: mov rsi, qword ptr [rax]; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x000000000043315b: mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043354b: mov rsi, qword ptr [rax]; call 0x34ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432f7b: mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x000000000043336b: mov rsi, qword ptr [rax]; call 0x34f90; lea rsp, [rsp + 8]; ret; 
0x000000000043317b: mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000043356b: mov rsi, qword ptr [rax]; call 0x34fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042fcbb: mov rsi, qword ptr [rax]; call 0x3b3a0; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043045b: mov rsi, qword ptr [rax]; call 0x3b420; lea rsp, [rsp + 8]; ret; 
0x000000000042fc7f: mov rsi, qword ptr [rax]; call 0x3b820; lea rsp, [rsp + 8]; ret; 
0x0000000000455bc4: mov rsi, qword ptr [rax]; call 0x50410; lea rsp, [rsp + 8]; ret; 
0x00000000004310cf: mov rsi, qword ptr [rax]; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000416fff: mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000043393b: mov rsi, qword ptr [rax]; mov rdi, rax; xor ecx, ecx; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x000000000043393a: mov rsi, qword ptr [rax]; mov rdi, rax; xor ecx, ecx; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x00000000004182a3: mov rsi, qword ptr [rax]; mov rdi, rsp; lea rax, [rip + 0x50700]; call qword ptr [rax]; 
0x0000000000418738: mov rsi, qword ptr [rbp - 0x18]; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x00000000004517da: mov rsi, qword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451afd: mov rsi, qword ptr [rbp - 0x30]; mov rdi, qword ptr [rbp - 0x28]; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451e38: mov rsi, qword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045217b: mov rsi, qword ptr [rbp - 0x38]; mov rdi, qword ptr [rbp - 0x30]; mov rax, qword ptr [rbp - 0x30]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045c647: mov rsi, qword ptr [rbx]; mov r8, r15; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4f7: mov rsi, qword ptr [rbx]; mov r8, r15; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x0000000000445411: mov rsi, qword ptr [rbx]; mov rdi, qword ptr [rsp + 0x168]; lea rax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000429934: mov rsi, qword ptr [rbx]; mov rdi, rbx; lea rdx, [rip + 0x3781f]; call 0xe180; pop rbx; ret; 
0x000000000041859d: mov rsi, qword ptr [rcx + 8]; mov edi, eax; call 0x184a0; lea rsp, [rsp + 8]; ret; 
0x0000000000452822: mov rsi, qword ptr [rdx + rax*8]; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x0000000000456afd: mov rsi, qword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000040b991: mov rsi, qword ptr [rsi]; add rsi, rcx; add rdi, rax; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x000000000045c7d8: mov rsi, qword ptr [rsi]; mov rdi, rax; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000413e27: mov rsi, qword ptr [rsp + 0x108]; mov rdi, r14; mov rax, r15; call rax; 
0x0000000000417521: mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x0000000000417629: mov rsi, qword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x000000000043b52d: mov rsi, qword ptr [rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x0000000000443fe1: mov rsi, qword ptr [rsp + 8]; call 0x43ea0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000413ccd: mov rsi, qword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x0000000000418873: mov rsi, qword ptr [rsp + rax*8 + 0x18]; lea rdi, [rsp + 0x878]; lea rax, [rip + 0x50129]; call qword ptr [rax]; 
0x0000000000438db6: mov rsi, qword ptr [rsp]; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000438ee6: mov rsi, qword ptr [rsp]; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000439166: mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439296: mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439356: mov rsi, qword ptr [rsp]; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x000000000041697f: mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159bf: mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x0000000000439325: mov rsi, qword ptr [rsp]; mov ecx, 0x13; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000418563: mov rsi, qword ptr [rsp]; mov edi, ebx; call 0x184a0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043b52c: mov rsi, qword ptr es:[rsp + 0x78]; lea rdi, [rsp + 8]; lea rax, [rip + 0x48822]; call qword ptr [rax + 0x38]; 
0x000000000042db09: mov rsi, r12; call 0x2da60; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042f31f: mov rsi, r12; call 0x2f3e0; pop r13; pop r12; pop rbx; ret; 
0x0000000000433af9: mov rsi, r12; call 0x342c0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000410044: mov rsi, r12; call 0xef70; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004508ed: mov rsi, r12; lea rax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x00000000004184bd: mov rsi, r12; mov edi, ebx; lea rax, [rip + 0x504f7]; call qword ptr [rax]; 
0x000000000041517e: mov rsi, r12; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x00000000004527c8: mov rsi, r12; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x00000000004527c7: mov rsi, r12; mov rdi, rsp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000417093: mov rsi, r13; mov rax, r15; call rax; 
0x000000000041527d: mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041527d: mov rsi, rax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000040db5c: mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db7a: mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbcc: mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbea: mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a2a: mov rsi, rax; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239ea: mov rsi, rax; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041903a: mov rsi, rax; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b71a: mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b74c: mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000043e6cc: mov rsi, rax; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000441f5c: mov rsi, rax; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000455b7c: mov rsi, rax; mov rdi, rbx; xor edx, edx; call 0xc590; pop rbx; ret; 
0x0000000000417e60: mov rsi, rbp; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000447e77: mov rsi, rbx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x000000000044b93a: mov rsi, rbx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x0000000000458623: mov rsi, rbx; lea rdi, [rsp + 1]; call 0x2b80; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000416c3b: mov rsi, rbx; mov edx, 1; call 0x7250; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000040d733: mov rsi, rbx; mov rcx, r12; movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000040ea0e: mov rsi, rbx; mov rcx, rax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x0000000000449d37: mov rsi, rbx; mov rdi, rsp; lea rax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000043b541: mov rsi, rbx; mov rdi, rsp; lea rax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000040e064: mov rsi, rbx; movzx edx, r13w; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x0000000000402ec8: mov rsi, rdi; mov edi, 0x15; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457455: mov rsi, rdi; mov edi, 0x16; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000403038: mov rsi, rdi; mov edi, 0x23; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403037: mov rsi, rdi; mov edi, 0x23; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574db: mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574da: mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457502: mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403058: mov rsi, rdi; mov edi, 0x4f; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403057: mov rsi, rdi; mov edi, 0x4f; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402ba5: mov rsi, rdi; mov edi, 0x50; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b68: mov rsi, rdi; mov edi, 0x52; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b67: mov rsi, rdi; mov edi, 0x52; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402bc8: mov rsi, rdi; mov edi, 0x53; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402be5: mov rsi, rdi; mov edi, 0x54; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402b45: mov rsi, rdi; mov edi, 0x57; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402feb: mov rsi, rdi; mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402fea: mov rsi, rdi; mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000403078: mov rsi, rdi; mov edi, 0x60; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403077: mov rsi, rdi; mov edi, 0x60; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c805: mov rsi, rdi; mov edi, 0x63; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457525: mov rsi, rdi; mov edi, 0x64; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c8c8: mov rsi, rdi; mov edi, 0x7d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8c7: mov rsi, rdi; mov edi, 0x7d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8e8: mov rsi, rdi; mov edi, 0x7e; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c8e7: mov rsi, rdi; mov edi, 0x7e; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e15: mov rsi, rdi; mov edi, 0x7f; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000457438: mov rsi, rdi; mov edi, 0x84; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457437: mov rsi, rdi; mov edi, 0x84; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f7b: mov rsi, rdi; mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f7a: mov rsi, rdi; mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f58: mov rsi, rdi; mov edi, 0xb; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f57: mov rsi, rdi; mov edi, 0xb; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402a55: mov rsi, rdi; mov edi, 0xc9; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045c96b: mov rsi, rdi; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000402a84: mov rsi, rdi; mov edi, 2; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b88: mov rsi, rdi; mov edi, 4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402b87: mov rsi, rdi; mov edi, 4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457598: mov rsi, rdi; mov edi, 6; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457597: mov rsi, rdi; mov edi, 6; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045757a: mov rsi, rdi; mov edi, 7; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457579: mov rsi, rdi; mov edi, 7; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f35: mov rsi, rdi; mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f34: mov rsi, rdi; mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e35: mov rsi, rdi; mov edx, 8; mov edi, 0x82; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403a3c: mov rsi, rdi; mov r9, rcx; sub r9, rsi; mov rax, r9; ret; 
0x00000000004573d0: mov rsi, rdi; xor ecx, ecx; mov edi, 0x85; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004532b5: mov rsi, rdi; xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x0000000000439cb7: mov rsi, rdx; mov rdi, rax; call 0x3aaa0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401f6f: mov rsi, rdx; mov rdx, rcx; mov r10, r8; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f2f: mov rsi, rdx; mov rdx, rcx; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401eef: mov rsi, rdx; mov rdx, rcx; mov r10, r8; syscall; 
0x0000000000401eaf: mov rsi, rdx; mov rdx, rcx; syscall; 
0x0000000000431dcb: mov rsi, rdx; movsd xmm0, qword ptr [rax]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043198b: mov rsi, rdx; movss xmm0, dword ptr [rax]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000401e6f: mov rsi, rdx; syscall; 
0x0000000000439795: mov rsi, rsp; call 0x347b0; lea rsp, [rsp + 8]; ret; 
0x00000000004588da: mov rsi, rsp; call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ef8: mov rsi, rsp; call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x000000000041039a: mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004103d9: mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000410469: mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004104a9: mov rsi, rsp; call 0xdde0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004594bc: mov rsi, rsp; mov edi, eax; call 0x59320; lea rsp, [rsp + 8]; ret; 
0x0000000000450c45: mov rsi, rsp; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413164: mov rsi, rsp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004132fd: mov rsi, rsp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134bd: mov rsi, rsp; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000040e0f1: mov rsi, rsp; mov rdi, r13; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000041676d: mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156bd: mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000413085: mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413218: mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b8: mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bd9: mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041d8a4: mov rsi, rsp; mov rdi, rbx; call 0x1c7c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004226d4: mov rsi, rsp; mov rdi, rbx; call 0x21fe0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042229f: mov rsi, rsp; mov rdi, rbx; call 0x21fe0; lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x000000000040296f: mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; 
0x000000000040296f: mov rsp, qword ptr [rdi + 0x30]; jmp qword ptr [rdi + 0x38]; ret; 
0x0000000000401089: mov rsp, rbp; pop rbp; ret; 
0x00000000004010d2: mov rsp, rbp; pop rbp; ret; 
0x000000000040122c: mov rsp, rbp; pop rbp; ret; 
0x0000000000401377: mov rsp, rbp; pop rbp; ret; 
0x0000000000401400: mov rsp, rbp; pop rbp; ret; 
0x0000000000401502: mov rsp, rbp; pop rbp; ret; 
0x0000000000401647: mov rsp, rbp; pop rbp; ret; 
0x0000000000401df5: mov rsp, rbp; pop rbp; ret; 
0x0000000000401e28: mov rsp, rbp; pop rbp; ret; 
0x0000000000401e5b: mov rsp, rbp; pop rbp; ret; 
0x0000000000401e8e: mov rsp, rbp; pop rbp; ret; 
0x0000000000401ed1: mov rsp, rbp; pop rbp; ret; 
0x0000000000401f14: mov rsp, rbp; pop rbp; ret; 
0x0000000000401f57: mov rsp, rbp; pop rbp; ret; 
0x0000000000401f9b: mov rsp, rbp; pop rbp; ret; 
0x00000000004027b5: mov rsp, rbp; pop rbp; ret; 
0x00000000004027d0: mov rsp, rbp; pop rbp; ret; 
0x000000000040284c: mov rsp, rbp; pop rbp; ret; 
0x000000000040288f: mov rsp, rbp; pop rbp; ret; 
0x00000000004028c7: mov rsp, rbp; pop rbp; ret; 
0x00000000004028fb: mov rsp, rbp; pop rbp; ret; 
0x0000000000402914: mov rsp, rbp; pop rbp; ret; 
0x00000000004033ed: mov rsp, rbp; pop rbp; ret; 
0x0000000000403563: mov rsp, rbp; pop rbp; ret; 
0x0000000000403baf: mov rsp, rbp; pop rbp; ret; 
0x0000000000403c76: mov rsp, rbp; pop rbp; ret; 
0x0000000000403d09: mov rsp, rbp; pop rbp; ret; 
0x0000000000404085: mov rsp, rbp; pop rbp; ret; 
0x0000000000404482: mov rsp, rbp; pop rbp; ret; 
0x0000000000404500: mov rsp, rbp; pop rbp; ret; 
0x0000000000404f30: mov rsp, rbp; pop rbp; ret; 
0x0000000000404f5c: mov rsp, rbp; pop rbp; ret; 
0x0000000000404fab: mov rsp, rbp; pop rbp; ret; 
0x0000000000404fcb: mov rsp, rbp; pop rbp; ret; 
0x0000000000404feb: mov rsp, rbp; pop rbp; ret; 
0x000000000040500b: mov rsp, rbp; pop rbp; ret; 
0x000000000040502b: mov rsp, rbp; pop rbp; ret; 
0x000000000040504b: mov rsp, rbp; pop rbp; ret; 
0x000000000040506b: mov rsp, rbp; pop rbp; ret; 
0x0000000000405176: mov rsp, rbp; pop rbp; ret; 
0x0000000000406766: mov rsp, rbp; pop rbp; ret; 
0x0000000000408700: mov rsp, rbp; pop rbp; ret; 
0x0000000000408d36: mov rsp, rbp; pop rbp; ret; 
0x0000000000409147: mov rsp, rbp; pop rbp; ret; 
0x00000000004094dc: mov rsp, rbp; pop rbp; ret; 
0x0000000000409550: mov rsp, rbp; pop rbp; ret; 
0x000000000040a048: mov rsp, rbp; pop rbp; ret; 
0x000000000040a72c: mov rsp, rbp; pop rbp; ret; 
0x000000000040a80c: mov rsp, rbp; pop rbp; ret; 
0x000000000040a8ab: mov rsp, rbp; pop rbp; ret; 
0x000000000040a924: mov rsp, rbp; pop rbp; ret; 
0x000000000040a9a3: mov rsp, rbp; pop rbp; ret; 
0x000000000040aa2c: mov rsp, rbp; pop rbp; ret; 
0x000000000040b4f7: mov rsp, rbp; pop rbp; ret; 
0x000000000040b5bc: mov rsp, rbp; pop rbp; ret; 
0x000000000040b657: mov rsp, rbp; pop rbp; ret; 
0x000000000040b6d4: mov rsp, rbp; pop rbp; ret; 
0x000000000040b7ce: mov rsp, rbp; pop rbp; ret; 
0x000000000040b8b7: mov rsp, rbp; pop rbp; ret; 
0x000000000040c32b: mov rsp, rbp; pop rbp; ret; 
0x000000000040c6ef: mov rsp, rbp; pop rbp; ret; 
0x000000000040c768: mov rsp, rbp; pop rbp; ret; 
0x000000000040cb6d: mov rsp, rbp; pop rbp; ret; 
0x000000000040d1c1: mov rsp, rbp; pop rbp; ret; 
0x000000000040dc19: mov rsp, rbp; pop rbp; ret; 
0x000000000040e456: mov rsp, rbp; pop rbp; ret; 
0x000000000040e7ef: mov rsp, rbp; pop rbp; ret; 
0x000000000040e86c: mov rsp, rbp; pop rbp; ret; 
0x000000000040e98e: mov rsp, rbp; pop rbp; ret; 
0x000000000040ea3d: mov rsp, rbp; pop rbp; ret; 
0x000000000040eabc: mov rsp, rbp; pop rbp; ret; 
0x000000000040ebcb: mov rsp, rbp; pop rbp; ret; 
0x000000000040ece5: mov rsp, rbp; pop rbp; ret; 
0x000000000040edf4: mov rsp, rbp; pop rbp; ret; 
0x000000000040ee6e: mov rsp, rbp; pop rbp; ret; 
0x000000000040ef5d: mov rsp, rbp; pop rbp; ret; 
0x000000000041035f: mov rsp, rbp; pop rbp; ret; 
0x0000000000411547: mov rsp, rbp; pop rbp; ret; 
0x0000000000411797: mov rsp, rbp; pop rbp; ret; 
0x00000000004119bb: mov rsp, rbp; pop rbp; ret; 
0x0000000000411a7b: mov rsp, rbp; pop rbp; ret; 
0x0000000000411aac: mov rsp, rbp; pop rbp; ret; 
0x0000000000411ba5: mov rsp, rbp; pop rbp; ret; 
0x0000000000411bf5: mov rsp, rbp; pop rbp; ret; 
0x000000000041204e: mov rsp, rbp; pop rbp; ret; 
0x0000000000412b02: mov rsp, rbp; pop rbp; ret; 
0x0000000000412ef1: mov rsp, rbp; pop rbp; ret; 
0x0000000000412f32: mov rsp, rbp; pop rbp; ret; 
0x0000000000412fd3: mov rsp, rbp; pop rbp; ret; 
0x0000000000414c54: mov rsp, rbp; pop rbp; ret; 
0x0000000000415946: mov rsp, rbp; pop rbp; ret; 
0x00000000004161c0: mov rsp, rbp; pop rbp; ret; 
0x0000000000416220: mov rsp, rbp; pop rbp; ret; 
0x0000000000416906: mov rsp, rbp; pop rbp; ret; 
0x0000000000417ca9: mov rsp, rbp; pop rbp; ret; 
0x0000000000417cc9: mov rsp, rbp; pop rbp; ret; 
0x0000000000417ce9: mov rsp, rbp; pop rbp; ret; 
0x0000000000417d09: mov rsp, rbp; pop rbp; ret; 
0x0000000000417d29: mov rsp, rbp; pop rbp; ret; 
0x0000000000417d49: mov rsp, rbp; pop rbp; ret; 
0x0000000000417dab: mov rsp, rbp; pop rbp; ret; 
0x0000000000417e89: mov rsp, rbp; pop rbp; ret; 
0x000000000041849b: mov rsp, rbp; pop rbp; ret; 
0x00000000004185d5: mov rsp, rbp; pop rbp; ret; 
0x000000000041863b: mov rsp, rbp; pop rbp; ret; 
0x00000000004187c4: mov rsp, rbp; pop rbp; ret; 
0x0000000000418ac7: mov rsp, rbp; pop rbp; ret; 
0x0000000000418cdf: mov rsp, rbp; pop rbp; ret; 
0x0000000000418d27: mov rsp, rbp; pop rbp; ret; 
0x000000000041defa: mov rsp, rbp; pop rbp; ret; 
0x000000000041e059: mov rsp, rbp; pop rbp; ret; 
0x000000000041e7cc: mov rsp, rbp; pop rbp; ret; 
0x000000000041e89a: mov rsp, rbp; pop rbp; ret; 
0x000000000041fa45: mov rsp, rbp; pop rbp; ret; 
0x0000000000426e06: mov rsp, rbp; pop rbp; ret; 
0x00000000004298f0: mov rsp, rbp; pop rbp; ret; 
0x0000000000429bde: mov rsp, rbp; pop rbp; ret; 
0x0000000000429eee: mov rsp, rbp; pop rbp; ret; 
0x000000000042bcdd: mov rsp, rbp; pop rbp; ret; 
0x000000000042bfe3: mov rsp, rbp; pop rbp; ret; 
0x000000000042c2ee: mov rsp, rbp; pop rbp; ret; 
0x000000000042d8f2: mov rsp, rbp; pop rbp; ret; 
0x000000000042d9a2: mov rsp, rbp; pop rbp; ret; 
0x000000000042dc8a: mov rsp, rbp; pop rbp; ret; 
0x000000000042de55: mov rsp, rbp; pop rbp; ret; 
0x000000000042df68: mov rsp, rbp; pop rbp; ret; 
0x000000000042e078: mov rsp, rbp; pop rbp; ret; 
0x000000000042e0fc: mov rsp, rbp; pop rbp; ret; 
0x000000000042e16f: mov rsp, rbp; pop rbp; ret; 
0x000000000042e338: mov rsp, rbp; pop rbp; ret; 
0x000000000042e645: mov rsp, rbp; pop rbp; ret; 
0x000000000042e6ae: mov rsp, rbp; pop rbp; ret; 
0x000000000042e7a9: mov rsp, rbp; pop rbp; ret; 
0x000000000042eb8a: mov rsp, rbp; pop rbp; ret; 
0x000000000042eba6: mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd9: mov rsp, rbp; pop rbp; ret; 
0x000000000042ed35: mov rsp, rbp; pop rbp; ret; 
0x000000000042ee5f: mov rsp, rbp; pop rbp; ret; 
0x000000000042f212: mov rsp, rbp; pop rbp; ret; 
0x000000000042f6b5: mov rsp, rbp; pop rbp; ret; 
0x000000000042f711: mov rsp, rbp; pop rbp; ret; 
0x000000000042f7bb: mov rsp, rbp; pop rbp; ret; 
0x000000000042f805: mov rsp, rbp; pop rbp; ret; 
0x000000000042f864: mov rsp, rbp; pop rbp; ret; 
0x000000000042f882: mov rsp, rbp; pop rbp; ret; 
0x000000000042f935: mov rsp, rbp; pop rbp; ret; 
0x000000000042f9a5: mov rsp, rbp; pop rbp; ret; 
0x000000000042fa1a: mov rsp, rbp; pop rbp; ret; 
0x000000000042fb5f: mov rsp, rbp; pop rbp; ret; 
0x000000000042fc22: mov rsp, rbp; pop rbp; ret; 
0x000000000042ffad: mov rsp, rbp; pop rbp; ret; 
0x0000000000430011: mov rsp, rbp; pop rbp; ret; 
0x00000000004300b2: mov rsp, rbp; pop rbp; ret; 
0x00000000004304d4: mov rsp, rbp; pop rbp; ret; 
0x0000000000430506: mov rsp, rbp; pop rbp; ret; 
0x0000000000430570: mov rsp, rbp; pop rbp; ret; 
0x00000000004305a3: mov rsp, rbp; pop rbp; ret; 
0x0000000000430602: mov rsp, rbp; pop rbp; ret; 
0x000000000043061c: mov rsp, rbp; pop rbp; ret; 
0x0000000000430690: mov rsp, rbp; pop rbp; ret; 
0x00000000004306c3: mov rsp, rbp; pop rbp; ret; 
0x00000000004306e4: mov rsp, rbp; pop rbp; ret; 
0x0000000000430719: mov rsp, rbp; pop rbp; ret; 
0x0000000000430795: mov rsp, rbp; pop rbp; ret; 
0x00000000004307d2: mov rsp, rbp; pop rbp; ret; 
0x00000000004309eb: mov rsp, rbp; pop rbp; ret; 
0x0000000000430af4: mov rsp, rbp; pop rbp; ret; 
0x0000000000430b76: mov rsp, rbp; pop rbp; ret; 
0x0000000000430bf5: mov rsp, rbp; pop rbp; ret; 
0x0000000000430c32: mov rsp, rbp; pop rbp; ret; 
0x0000000000430e68: mov rsp, rbp; pop rbp; ret; 
0x00000000004313e4: mov rsp, rbp; pop rbp; ret; 
0x00000000004314aa: mov rsp, rbp; pop rbp; ret; 
0x0000000000431560: mov rsp, rbp; pop rbp; ret; 
0x0000000000431579: mov rsp, rbp; pop rbp; ret; 
0x0000000000431589: mov rsp, rbp; pop rbp; ret; 
0x0000000000431e23: mov rsp, rbp; pop rbp; ret; 
0x0000000000431e46: mov rsp, rbp; pop rbp; ret; 
0x0000000000431e63: mov rsp, rbp; pop rbp; ret; 
0x0000000000431e83: mov rsp, rbp; pop rbp; ret; 
0x0000000000431f1c: mov rsp, rbp; pop rbp; ret; 
0x0000000000431f55: mov rsp, rbp; pop rbp; ret; 
0x0000000000431f8c: mov rsp, rbp; pop rbp; ret; 
0x0000000000431fc5: mov rsp, rbp; pop rbp; ret; 
0x0000000000435087: mov rsp, rbp; pop rbp; ret; 
0x0000000000435117: mov rsp, rbp; pop rbp; ret; 
0x00000000004351cf: mov rsp, rbp; pop rbp; ret; 
0x000000000043526f: mov rsp, rbp; pop rbp; ret; 
0x000000000043541b: mov rsp, rbp; pop rbp; ret; 
0x0000000000435599: mov rsp, rbp; pop rbp; ret; 
0x000000000043633c: mov rsp, rbp; pop rbp; ret; 
0x00000000004368d0: mov rsp, rbp; pop rbp; ret; 
0x0000000000436a1f: mov rsp, rbp; pop rbp; ret; 
0x0000000000436a49: mov rsp, rbp; pop rbp; ret; 
0x0000000000436b09: mov rsp, rbp; pop rbp; ret; 
0x0000000000436b20: mov rsp, rbp; pop rbp; ret; 
0x0000000000436b40: mov rsp, rbp; pop rbp; ret; 
0x0000000000436bb6: mov rsp, rbp; pop rbp; ret; 
0x0000000000436bd0: mov rsp, rbp; pop rbp; ret; 
0x0000000000436c4f: mov rsp, rbp; pop rbp; ret; 
0x0000000000436d06: mov rsp, rbp; pop rbp; ret; 
0x0000000000436d42: mov rsp, rbp; pop rbp; ret; 
0x0000000000436d84: mov rsp, rbp; pop rbp; ret; 
0x0000000000436f79: mov rsp, rbp; pop rbp; ret; 
0x00000000004372d7: mov rsp, rbp; pop rbp; ret; 
0x0000000000438bf0: mov rsp, rbp; pop rbp; ret; 
0x0000000000438d19: mov rsp, rbp; pop rbp; ret; 
0x0000000000438d4c: mov rsp, rbp; pop rbp; ret; 
0x000000000043906c: mov rsp, rbp; pop rbp; ret; 
0x00000000004390a6: mov rsp, rbp; pop rbp; ret; 
0x00000000004390d6: mov rsp, rbp; pop rbp; ret; 
0x000000000043910c: mov rsp, rbp; pop rbp; ret; 
0x00000000004393f6: mov rsp, rbp; pop rbp; ret; 
0x000000000043945c: mov rsp, rbp; pop rbp; ret; 
0x000000000043955b: mov rsp, rbp; pop rbp; ret; 
0x000000000043962d: mov rsp, rbp; pop rbp; ret; 
0x00000000004396bb: mov rsp, rbp; pop rbp; ret; 
0x000000000043981f: mov rsp, rbp; pop rbp; ret; 
0x00000000004398a6: mov rsp, rbp; pop rbp; ret; 
0x0000000000439cc2: mov rsp, rbp; pop rbp; ret; 
0x000000000043a6f0: mov rsp, rbp; pop rbp; ret; 
0x000000000043ab30: mov rsp, rbp; pop rbp; ret; 
0x000000000043b11a: mov rsp, rbp; pop rbp; ret; 
0x000000000043b195: mov rsp, rbp; pop rbp; ret; 
0x000000000043b1cc: mov rsp, rbp; pop rbp; ret; 
0x000000000043b395: mov rsp, rbp; pop rbp; ret; 
0x000000000043bf99: mov rsp, rbp; pop rbp; ret; 
0x000000000043c0f2: mov rsp, rbp; pop rbp; ret; 
0x000000000043d07c: mov rsp, rbp; pop rbp; ret; 
0x000000000043d100: mov rsp, rbp; pop rbp; ret; 
0x000000000043d242: mov rsp, rbp; pop rbp; ret; 
0x000000000043d352: mov rsp, rbp; pop rbp; ret; 
0x000000000043d568: mov rsp, rbp; pop rbp; ret; 
0x000000000043d686: mov rsp, rbp; pop rbp; ret; 
0x000000000043dfe0: mov rsp, rbp; pop rbp; ret; 
0x000000000043e12f: mov rsp, rbp; pop rbp; ret; 
0x000000000043e29c: mov rsp, rbp; pop rbp; ret; 
0x000000000043e35c: mov rsp, rbp; pop rbp; ret; 
0x000000000043e595: mov rsp, rbp; pop rbp; ret; 
0x000000000043e644: mov rsp, rbp; pop rbp; ret; 
0x000000000043efea: mov rsp, rbp; pop rbp; ret; 
0x000000000043f010: mov rsp, rbp; pop rbp; ret; 
0x000000000043f393: mov rsp, rbp; pop rbp; ret; 
0x000000000043f5f0: mov rsp, rbp; pop rbp; ret; 
0x000000000043f7a3: mov rsp, rbp; pop rbp; ret; 
0x000000000043f8cf: mov rsp, rbp; pop rbp; ret; 
0x000000000043fa6c: mov rsp, rbp; pop rbp; ret; 
0x00000000004405ac: mov rsp, rbp; pop rbp; ret; 
0x0000000000440630: mov rsp, rbp; pop rbp; ret; 
0x0000000000440775: mov rsp, rbp; pop rbp; ret; 
0x0000000000440888: mov rsp, rbp; pop rbp; ret; 
0x0000000000440a9e: mov rsp, rbp; pop rbp; ret; 
0x0000000000440be8: mov rsp, rbp; pop rbp; ret; 
0x00000000004416d0: mov rsp, rbp; pop rbp; ret; 
0x000000000044181f: mov rsp, rbp; pop rbp; ret; 
0x0000000000441a86: mov rsp, rbp; pop rbp; ret; 
0x0000000000441b86: mov rsp, rbp; pop rbp; ret; 
0x0000000000441e28: mov rsp, rbp; pop rbp; ret; 
0x0000000000441ed4: mov rsp, rbp; pop rbp; ret; 
0x0000000000442a0a: mov rsp, rbp; pop rbp; ret; 
0x0000000000442a30: mov rsp, rbp; pop rbp; ret; 
0x0000000000442e16: mov rsp, rbp; pop rbp; ret; 
0x0000000000443072: mov rsp, rbp; pop rbp; ret; 
0x0000000000443227: mov rsp, rbp; pop rbp; ret; 
0x000000000044334f: mov rsp, rbp; pop rbp; ret; 
0x00000000004434ed: mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae9: mov rsp, rbp; pop rbp; ret; 
0x0000000000443bb8: mov rsp, rbp; pop rbp; ret; 
0x0000000000444ac7: mov rsp, rbp; pop rbp; ret; 
0x0000000000444bd6: mov rsp, rbp; pop rbp; ret; 
0x0000000000445783: mov rsp, rbp; pop rbp; ret; 
0x0000000000445892: mov rsp, rbp; pop rbp; ret; 
0x0000000000446cbe: mov rsp, rbp; pop rbp; ret; 
0x0000000000449277: mov rsp, rbp; pop rbp; ret; 
0x0000000000449950: mov rsp, rbp; pop rbp; ret; 
0x0000000000449a92: mov rsp, rbp; pop rbp; ret; 
0x0000000000449ab9: mov rsp, rbp; pop rbp; ret; 
0x0000000000449b65: mov rsp, rbp; pop rbp; ret; 
0x0000000000449b80: mov rsp, rbp; pop rbp; ret; 
0x000000000044b00f: mov rsp, rbp; pop rbp; ret; 
0x000000000044b6f0: mov rsp, rbp; pop rbp; ret; 
0x000000000044b832: mov rsp, rbp; pop rbp; ret; 
0x000000000044b859: mov rsp, rbp; pop rbp; ret; 
0x000000000044b905: mov rsp, rbp; pop rbp; ret; 
0x000000000044b920: mov rsp, rbp; pop rbp; ret; 
0x000000000044d011: mov rsp, rbp; pop rbp; ret; 
0x000000000044d3cd: mov rsp, rbp; pop rbp; ret; 
0x000000000044d51b: mov rsp, rbp; pop rbp; ret; 
0x000000000044d703: mov rsp, rbp; pop rbp; ret; 
0x000000000044d8cb: mov rsp, rbp; pop rbp; ret; 
0x000000000044db19: mov rsp, rbp; pop rbp; ret; 
0x000000000044dc11: mov rsp, rbp; pop rbp; ret; 
0x000000000044ddb9: mov rsp, rbp; pop rbp; ret; 
0x000000000044def3: mov rsp, rbp; pop rbp; ret; 
0x000000000044e0e7: mov rsp, rbp; pop rbp; ret; 
0x000000000044fddd: mov rsp, rbp; pop rbp; ret; 
0x000000000044febf: mov rsp, rbp; pop rbp; ret; 
0x000000000044ffb6: mov rsp, rbp; pop rbp; ret; 
0x000000000045006b: mov rsp, rbp; pop rbp; ret; 
0x0000000000450f0d: mov rsp, rbp; pop rbp; ret; 
0x00000000004513c7: mov rsp, rbp; pop rbp; ret; 
0x0000000000451815: mov rsp, rbp; pop rbp; ret; 
0x0000000000451b38: mov rsp, rbp; pop rbp; ret; 
0x0000000000451e73: mov rsp, rbp; pop rbp; ret; 
0x00000000004521b6: mov rsp, rbp; pop rbp; ret; 
0x0000000000452c6e: mov rsp, rbp; pop rbp; ret; 
0x00000000004531d6: mov rsp, rbp; pop rbp; ret; 
0x00000000004531fa: mov rsp, rbp; pop rbp; ret; 
0x00000000004535b8: mov rsp, rbp; pop rbp; ret; 
0x0000000000453a5b: mov rsp, rbp; pop rbp; ret; 
0x0000000000454467: mov rsp, rbp; pop rbp; ret; 
0x0000000000455893: mov rsp, rbp; pop rbp; ret; 
0x0000000000455e76: mov rsp, rbp; pop rbp; ret; 
0x0000000000455fc3: mov rsp, rbp; pop rbp; ret; 
0x0000000000458fbd: mov rsp, rbp; pop rbp; ret; 
0x0000000000458fdc: mov rsp, rbp; pop rbp; ret; 
0x0000000000459006: mov rsp, rbp; pop rbp; ret; 
0x0000000000459026: mov rsp, rbp; pop rbp; ret; 
0x000000000045903c: mov rsp, rbp; pop rbp; ret; 
0x000000000045ad24: mov rsp, rbp; pop rbp; ret; 
0x000000000045b1b1: mov rsp, rbp; pop rbp; ret; 
0x000000000045bc17: mov rsp, rbp; pop rbp; ret; 
0x000000000045bfcb: mov rsp, rbp; pop rbp; ret; 
0x0000000000450875: mov sil, 1; call 0x564c0; lea rsp, [rsp + 8]; ret; 
0x00000000004321e5: mov sil, 1; call 0x6770; lea rsp, [rsp + 8]; ret; 
0x00000000004318f5: mov sil, 1; call 0x6d00; lea rsp, [rsp + 8]; ret; 
0x00000000004336b1: mov sil, byte ptr [rax]; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000456511: mov sil, r12b; lea rax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x000000000044411e: mov word ptr [r13], ax; pop r13; pop r12; pop rbx; ret; 
0x0000000000443d54: mov word ptr [r13], di; lea rsp, [rsp + 0x20]; pop r13; pop r12; pop rbx; ret; 
0x000000000045395b: mov word ptr [r8], dx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000045becb: mov word ptr [r8], dx; imul eax, r9d, 0x64; add eax, r10d; mov word ptr [rsi], ax; ret; 
0x000000000041d807: mov word ptr [rax + 0x374], dx; ret; 
0x000000000040a011: mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x0000000000406847: mov word ptr [rax + 8], dx; ret; 
0x0000000000406846: mov word ptr [rax + 8], dx; ret; 
0x0000000000406877: mov word ptr [rax + 8], dx; ret; 
0x0000000000406876: mov word ptr [rax + 8], dx; ret; 
0x00000000004317f5: mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c35: mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e5: mov word ptr [rax + r12*2], r13w; pop r13; pop r12; pop rbx; ret; 
0x00000000004404ae: mov word ptr [rax + r13*2], r12w; pop r13; pop r12; pop rbx; ret; 
0x0000000000449be1: mov word ptr [rax + rcx*2], 0; ret; 
0x0000000000449bac: mov word ptr [rax + rdx*2], 0; ret; 
0x0000000000449b9c: mov word ptr [rax + rdx*2], cx; add rdx, 1; cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000040d9b8: mov word ptr [rax - 0x18], si; jmp 0xd9c9; and esi, 0xffff; call 0xd8a0; lea rsp, [rsp + 8]; ret; 
0x000000000041bc8a: mov word ptr [rax], 0; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bcdc: mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bd2c: mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041beef: mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bfa0: mov word ptr [rax], 0; mov rax, rbx; lea rsp, [rsp + 0x90]; pop rbx; ret; 
0x000000000041bea3: mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041bf43: mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000041d98f: mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004227af: mov word ptr [rax], 0; pop rbx; ret; 
0x00000000004216ca: mov word ptr [rax], 0x64; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042147b: mov word ptr [rax], 0x65; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041c569: mov word ptr [rax], 0x65; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041cc81: mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cc81: mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; pop rbx; ret; 
0x0000000000421982: mov word ptr [rax], 0x67; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004218db: mov word ptr [rax], 0x67; mov al, r12b; pop r13; pop r12; pop rbx; ret; 
0x0000000000421770: mov word ptr [rax], 0x67; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042182b: mov word ptr [rax], 0x67; mov rax, r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415362: mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041dca1: mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041ddb5: mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x0000000000422541: mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000042264d: mov word ptr [rax], 0x67; pop r13; pop r12; pop rbx; ret; 
0x000000000041ca01: mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041dbb6: mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a16: mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421aa4: mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000043655d: mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000043655c: mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000044950f: mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000044950e: mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000044b2af: mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000044b2ae: mov word ptr [rax], es; lea rsp, [rsp + 8]; ret; 
0x000000000040e6a4: mov word ptr [rax], r12w; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000429c97: mov word ptr [rax], r13w; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429d27: mov word ptr [rax], r13w; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000429db7: mov word ptr [rax], r13w; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c097: mov word ptr [rax], r13w; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c127: mov word ptr [rax], r13w; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x000000000042c1b7: mov word ptr [rax], r13w; mov al, bl; pop r13; pop r12; pop rbx; ret; 
0x0000000000428474: mov word ptr [rax], r13w; pop r13; pop r12; pop rbx; ret; 
0x000000000042a648: mov word ptr [rax], r13w; pop r13; pop r12; pop rbx; ret; 
0x000000000040675f: mov word ptr [rbp - 8], ax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436d7d: mov word ptr [rbp - 8], ax; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004208fb: mov word ptr [rbx + 0x374], ax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041caa4: mov word ptr [rbx + 0x374], dx; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x00000000004169dd: mov word ptr [rbx], 0; pop rbx; ret; 
0x00000000004169fd: mov word ptr [rbx], 1; pop rbx; ret; 
0x0000000000421391: mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004213f1: mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004215e1: mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000421641: mov word ptr [rbx], ax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000455924: mov word ptr [rbx], dx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000044cbbf: mov word ptr [rbx], es; add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000425ce5: mov word ptr [rcx - 0x7cfffffc], cs; call 0xffffffff8351d0f1; call 0xffffffffc8866bf6; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x000000000044f572: mov word ptr [rcx], di; add rsi, 2; add rcx, 2; cmp rdx, rcx; ja 0x4f560; ret; 
0x0000000000432a55: mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x0000000000432a72: mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x0000000000432865: mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000432882: mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x00000000004035f8: mov word ptr [rdi], dx; add rdi, 2; cmp rax, rdi; ja 0x35f8; ret; 
0x0000000000432844: mov word ptr [rdi], dx; movsx eax, dx; ret; 
0x0000000000432a34: mov word ptr [rdi], dx; movzx eax, dx; ret; 
0x0000000000417de2: mov word ptr [rdx], 0; and eax, 0xffff; lea rsp, [rsp + 8]; ret; 
0x0000000000409288: mov word ptr [rdx], 1; mov ax, 1; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004032c3: mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x000000000040330d: mov word ptr [rdx], ax; and eax, 0xffff; pop rbx; ret; 
0x0000000000404f28: mov word ptr [rdx], ax; fnclex; fldcw word ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000425601: mov word ptr [rdx], ax; mov esi, 1; mov edi, 1; call 0x254c0; lea rsp, [rsp + 8]; ret; 
0x000000000040d9da: mov word ptr [rdx], ax; ret; 
0x000000000040d9ea: mov word ptr [rdx], ax; ret; 
0x000000000040d9fa: mov word ptr [rdx], ax; ret; 
0x0000000000401f90: mov word ptr [rdx], cs; add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000042c14c: mov word ptr [rip + 0x108b4800], es; test rdx, rdx; je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c104: mov word ptr [rip + 0x8b4800], es; test rax, rax; je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c194: mov word ptr [rip + 0x8b4800], es; test rax, rax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c193: mov word ptr [rip + 0x8b4800], es; test rax, rax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411358: mov word ptr [rsi], 0x3f; add rsi, 2; cmp rax, rdx; jg 0x11310; ret; 
0x0000000000453966: mov word ptr [rsi], ax; ret; 
0x000000000045bed6: mov word ptr [rsi], ax; ret; 
0x000000000042e8f5: mov word ptr [rsi], ss; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000404eb1: mov word ptr [rsp + 4], ax; mov rdi, rsp; call 0x6540; lea rsp, [rsp + 8]; ret; 
0x00000000004067a3: mov word ptr [rsp + 8], ax; call 0x2860; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000432299: mov word ptr [rsp + 8], ax; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432270: mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043222d: mov word ptr [rsp + 8], ax; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c6: mov word ptr [rsp + 8], ax; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431fb8: mov word ptr [rsp + 8], di; mov rdi, rax; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000416769: mov word ptr [rsp], si; mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156b9: mov word ptr [rsp], si; mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004323c9: movabs al, byte ptr [0x10024a48d48fffd]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000044f344: movabs al, byte ptr [0x12890ff000262]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044df84: movabs al, byte ptr [0x12890ff000273]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000427b8a: movabs al, byte ptr [0x208844038b48fffe]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004080b9: movabs al, byte ptr [0x2900000001bae0d1]; ret 0x8966; 
0x00000000004080b8: movabs al, byte ptr [0x2900000001bae0d1]; ret 0x8966; 
0x000000000040df05: movabs al, byte ptr [0x5b5c415d41000000]; ret; 
0x000000000042de50: movabs al, byte ptr [0x5dec8948a8758b4c]; ret; 
0x000000000044750c: movabs al, byte ptr [0x648d48d888fffcda]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042370c: movabs al, byte ptr [0x7024648d48ffff18]; pop rbx; ret; 
0x000000000040de1d: movabs al, byte ptr [0x824648d48000000]; pop r12; pop rbx; ret; 
0x000000000040e763: movabs al, byte ptr [0x824648d48000000]; pop r12; pop rbx; ret; 
0x000000000040e51a: movabs al, byte ptr [0x824648d48000000]; ret; 
0x000000000042e3ec: movabs al, byte ptr [0x824648d48000000]; ret; 
0x00000000004337cc: movabs al, byte ptr [0x824648d48000061]; ret; 
0x000000000042b860: movabs al, byte ptr [0x9824bc8d48000008]; or byte ptr [rax], al; add al, ch; syscall; 
0x000000000042e06b: movabs al, byte ptr [0xb06d8b4ca8658b4c]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae0: movabs al, byte ptr [0xb06d8b4ca8658b4c]; mov rsp, rbp; pop rbp; ret; 
0x00000000004030bc: movabs al, byte ptr [0xffffed9be8000000]; lea rsp, [rsp + 8]; ret; 
0x000000000041535a: movabs byte ptr [0x6608c083480006e9], al; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041a87e: movabs dword ptr [0x410000048ae80006], eax; pop rbp; pop r12; pop rbx; ret; 
0x0000000000426b89: movabs dword ptr [0x4840508948ffffff], eax; lea edx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x000000000044b918: movabs dword ptr [0x48ffffff40e80002], eax; mov esp, ebp; pop rbp; ret; 
0x000000000041ba82: movabs dword ptr [0x4c6cab60f07730e], eax; comiss xmm7, dword ptr [rcx]; sar byte ptr [rdi - 0x21], 1; ret; 
0x00000000004115a9: movabs dword ptr [0x824648d48fffffe], eax; ret; 
0x0000000000427b89: movabs dword ptr [0x8844038b48fffea0], eax; and byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000043d709: movabs dword ptr [0x8d48d88948fffd78], eax; and al, 0x70; pop rbx; ret; 
0x0000000000458b3e: movabs dword ptr [0x8e8c124048bfffa], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b7e: movabs dword ptr [0x8e8c124048bfffa], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041aa11: movabs dword ptr [0xc08548008b480006], eax; je 0x1aa29; lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a6c1: movabs dword ptr [0xe8bed2310006], eax; add al, ch; adc byte ptr [rsi + rdi*8 - 1], bh; pop rbx; ret; 
0x0000000000420b8b: movabs eax, dword ptr [0x4840438948fffffe]; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000401bf0: movabs eax, dword ptr [0x484de0]; test rax, rax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x000000000042d7fb: movabs eax, dword ptr [0x824648d48000196]; ret; 
0x0000000000438dbb: movabs eax, dword ptr [0x824648d48ffffff]; ret; 
0x0000000000438eeb: movabs eax, dword ptr [0x824648d48ffffff]; ret; 
0x000000000043929b: movabs eax, dword ptr [0x824648d48ffffff]; ret; 
0x0000000000458b3d: movabs qword ptr [0x8e8c124048bfffa], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000401bef: movabs rax, qword ptr [0x484de0]; test rax, rax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x0000000000406b33: movabs rdx, 0x8000000000000000; and rax, rdx; setne al; ret; 
0x00000000004053d0: movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x00000000004054a7: movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x0000000000405439: movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x0000000000405401: movapd xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000447954: movapd xmm1, xmm0; movsd xmm0, qword ptr [rbx]; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x00000000004053d1: movaps xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x00000000004054a8: movaps xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x000000000040543a: movaps xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x0000000000405402: movaps xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000447955: movaps xmm1, xmm0; movsd xmm0, qword ptr [rbx]; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x0000000000431af8: movsb byte ptr [rdi], byte ptr [rsi]; add al, 0; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000446f28: movsb byte ptr [rdi], byte ptr [rsi]; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045cc88: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x28; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041ce59: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000421c79: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d61c: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d7cd: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d88c: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043d9e0: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dc50: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dd9c: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043def1: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043dfac: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440d4d: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000414649: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440b7e: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440e2e: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440fd2: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004412a2: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044142e: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004415c3: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044169e: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x78; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045bb36: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x88; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004449a9: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000452277: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x88; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043c40c: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x98; add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004461aa: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0xb8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000410265: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c763: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c7b3: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420dc3: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420e13: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add al, byte ptr [rax]; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d0c1: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d21a: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d279: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d2ca: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d336: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d389: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d3e9: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041832f: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041efff: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042004d: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004200e7: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004201b7: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420252: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420303: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420392: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004204fc: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042059b: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000424f7a: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004584f8: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c328: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045cda4: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045d40b: movsb byte ptr [rdi], byte ptr [rsi]; and al, 8; add dword ptr [rax], eax; add byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004392f8: movsb byte ptr [rdi], byte ptr [rsi]; leave; add eax, dword ptr [rax]; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x00000000004484b8: movsb byte ptr [rdi], byte ptr [rsi]; mov eax, 0x50ff0003; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000417f38: movsb byte ptr [rdi], byte ptr [rsi]; or dword ptr [rip + 0x38834800], eax; add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x50997]; call qword ptr [rax]; 
0x000000000044b6e8: movsd dword ptr [rdi], dword ptr [rsi]; add al, byte ptr [rax]; call 0x4a2e0; mov rsp, rbp; pop rbp; ret; 
0x000000000040a8a6: movsd dword ptr [rdi], dword ptr [rsi]; call 0x4900a8aa; mov esp, ebp; pop rbp; ret; 
0x000000000040d1bc: movsd dword ptr [rdi], dword ptr [rsi]; call 0x4900d1c0; mov esp, ebp; pop rbp; ret; 
0x0000000000415767: movsd dword ptr [rdi], dword ptr [rsi]; call 0xffffffff8d495773; and al, 8; ret; 
0x00000000004588f7: movsd dword ptr [rdi], dword ptr [rsi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000415ad7: movsd dword ptr [rdi], dword ptr [rsi]; in al, 6; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415507: movsd dword ptr [rdi], dword ptr [rsi]; jmp 0x15510; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b744: movsd dword ptr [rdi], dword ptr [rsi]; lea rdi, [rip + 0x696a4]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbc4: movsd dword ptr [rdi], dword ptr [rsi]; lea rdi, [rip + 0x76194]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db54: movsd dword ptr [rdi], dword ptr [rsi]; lea rdi, [rip + 0x76204]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad9e: movsd dword ptr [rdi], dword ptr [rsi]; mov al, 1; ret; 
0x00000000004586a4: movsd dword ptr [rdi], dword ptr [rsi]; mov edi, dword ptr [rax]; call 0x2ee0; mov dword ptr [rbx], eax; pop rbx; ret; 
0x00000000004190e7: movsd dword ptr [rdi], dword ptr [rsi]; or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x0000000000419287: movsd dword ptr [rdi], dword ptr [rsi]; pop rbx; ret; 
0x000000000040db34: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000040db66: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000040db84: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000040dba4: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000040dbd6: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000040dbf4: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000416a1e: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000416a34: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000041902e: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000419044: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000041b70e: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000041b724: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000041b756: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000004239de: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000004239f4: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000443a32: movsd qword ptr [r8], xmm0; ret; 
0x000000000040527c: movsd qword ptr [rax], xmm0; ret; 
0x00000000004393f1: movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x000000000040652a: movsd qword ptr [rbx], xmm0; mov rax, r12; lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000447961: movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x0000000000404ef1: movsd qword ptr [rsp + 0x18], xmm0; fld qword ptr [rsp + 0x18]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x00000000004436fa: movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000405185: movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b5: movsd qword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044798c: movsd qword ptr [rsp], xmm0; mov rax, qword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004477b6: movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477fc: movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044783c: movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b3: movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f7: movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447937: movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431dce: movsd xmm0, qword ptr [rax]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431da5: movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431d72: movsd xmm0, qword ptr [rax]; lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431deb: movsd xmm0, qword ptr [rax]; lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000042d837: movsd xmm0, qword ptr [rax]; ret; 
0x000000000042d847: movsd xmm0, qword ptr [rax]; ret; 
0x0000000000444bc3: movsd xmm0, qword ptr [rbp - 0x70]; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000044587f: movsd xmm0, qword ptr [rbp - 0x70]; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x00000000004393ec: movsd xmm0, qword ptr [rbp - 8]; movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x0000000000447958: movsd xmm0, qword ptr [rbx]; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x00000000004436f4: movsd xmm0, qword ptr [rsp + 0x10]; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000443700: movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000444f18: movsd xmm0, qword ptr [rsp + 0x20]; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x0000000000445f59: movsd xmm0, qword ptr [rsp + 0x68]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000447778: movsd xmm0, qword ptr [rsp + 0x68]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004477b0: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f6: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447836: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ad: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f1: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447931: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443e82: movsd xmm0, qword ptr [rsp]; call 0x43db0; sub word ptr [rbx + 6], 1; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004435f3: movsd xmm0, qword ptr [rsp]; cvttsd2si rax, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000406638: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477bb: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447801: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447841: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b8: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478fc: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044793c: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d3e: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d9e: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164fe: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041655e: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed7d: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431173: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a7a: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a9d: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000443647: movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044404b: movsd xmm1, qword ptr [rsp + 0x10]; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000446f00: movsd xmm1, qword ptr [rsp + 0x20]; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443f32: movsd xmm1, qword ptr [rsp]; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004053cb: movsd xmm1, qword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x000000000041b743: movsq qword ptr [rdi], qword ptr [rsi]; lea rdi, [rip + 0x696a4]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbc3: movsq qword ptr [rdi], qword ptr [rsi]; lea rdi, [rip + 0x76194]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db53: movsq qword ptr [rdi], qword ptr [rsi]; lea rdi, [rip + 0x76204]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad9d: movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x00000000004586a3: movsq qword ptr [rdi], qword ptr [rsi]; mov edi, dword ptr [rax]; call 0x2ee0; mov dword ptr [rbx], eax; pop rbx; ret; 
0x0000000000419286: movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000040db33: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db65: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db83: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dba3: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbd5: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbf3: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a1d: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a33: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041902d: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419043: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b70d: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b723: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b755: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239dd: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239f3: movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000043198e: movss xmm0, dword ptr [rax]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431965: movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431932: movss xmm0, dword ptr [rax]; lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x00000000004319ab: movss xmm0, dword ptr [rax]; lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000415d1e: movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164de: movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042eddd: movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431153: movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043163a: movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043165d: movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a3b: movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x000000000041627b: movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x00000000004324da: movsx eax, al; lea rsp, [rsp + 8]; ret; 
0x0000000000432675: movsx eax, al; ret; 
0x0000000000432693: movsx eax, al; ret; 
0x000000000040874d: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004087dc: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409291: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409484: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e1c: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e4a: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415a7b: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000415b47: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004162bb: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416387: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004326ca: movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000403415: movsx eax, ax; ret; 
0x0000000000404885: movsx eax, ax; ret; 
0x0000000000404965: movsx eax, ax; ret; 
0x0000000000404e55: movsx eax, ax; ret; 
0x0000000000412d39: movsx eax, ax; ret; 
0x0000000000432868: movsx eax, ax; ret; 
0x0000000000432885: movsx eax, ax; ret; 
0x000000000045927b: movsx eax, ax; ret; 
0x0000000000459289: movsx eax, ax; ret; 
0x0000000000409fc9: movsx eax, bp; lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x0000000000432560: movsx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x0000000000432610: movsx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000433710: movsx eax, byte ptr [rdi]; ret; 
0x00000000004048f0: movsx eax, di; ret; 
0x00000000004049d0: movsx eax, di; ret; 
0x0000000000459270: movsx eax, di; shl eax, 8; movsx esi, si; or eax, esi; movsx eax, ax; ret; 
0x0000000000459280: movsx eax, di; shl eax, 8; or eax, 0x7f; movsx eax, ax; ret; 
0x0000000000432656: movsx eax, dl; ret; 
0x0000000000432847: movsx eax, dx; ret; 
0x0000000000409fc8: movsx eax, r13w; lea rsp, [rsp + 0x40]; pop r13; pop r12; pop rbx; ret; 
0x0000000000409483: movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x0000000000432750: movsx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x0000000000432800: movsx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x00000000004337a0: movsx eax, word ptr [rdi]; ret; 
0x00000000004078a0: movsx ecx, dx; shl qword ptr [rsi], cl; ret; 
0x000000000040a040: movsx edi, ax; call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x00000000004253f8: movsx edi, di; and eax, 0xff; or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000040791c: movsx edi, dx; mov r8d, dword ptr [rax]; mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x000000000043262b: movsx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004325db: movsx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004325fb: movsx esi, byte ptr [rax]; call 0x34eb0; lea rsp, [rsp + 8]; ret; 
0x0000000000432509: movsx esi, dh; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000416609: movsx esi, dh; mov rdi, rax; mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x0000000000415559: movsx esi, dh; mov rdi, rax; mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x0000000000434eb9: movsx esi, dh; mov rdi, rax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000040916e: movsx esi, si; and edx, 0xff; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000418ae4: movsx esi, si; call 0x18b00; lea rsp, [rsp + 8]; ret; 
0x000000000045bc34: movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x00000000004326f8: movsx esi, si; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000416659: movsx esi, si; mov rdi, rax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x00000000004155a8: movsx esi, si; mov rdi, rax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f08: movsx esi, si; mov rdi, rax; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000040a03d: movsx esi, si; movsx edi, ax; call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x0000000000459276: movsx esi, si; or eax, esi; movsx eax, ax; ret; 
0x0000000000432508: movsx esi, sil; mov rdi, rax; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000415558: movsx esi, sil; mov rdi, rax; mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x0000000000434eb8: movsx esi, sil; mov rdi, rax; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000043281b: movsx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004327cb: movsx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004327eb: movsx esi, word ptr [rax]; call 0x34f00; lea rsp, [rsp + 8]; ret; 
0x000000000040789f: movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x000000000040791b: movsx rdi, dx; mov r8d, dword ptr [rax]; mov ecx, edi; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x000000000040916d: movsx rsi, si; and edx, 0xff; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x0000000000416658: movsx rsi, si; mov rdi, rax; mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x0000000000416608: movsx rsi, sil; mov rdi, rax; mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x000000000041dabe: movsxd r12, r12d; add qword ptr [rbx + 0x18], r12; pop r13; pop r12; pop rbx; ret; 
0x0000000000421090: movsxd r12, r12d; mov qword ptr [rbx + 8], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000421185: movsxd r12, r12d; mov qword ptr [rbx + 8], r12; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cf21: movsxd r12, r12d; movzx eax, byte ptr [rax + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000440451: movsxd r12, r12d; movzx eax, word ptr [rax + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043cf7a: movsxd r13, r13d; mov byte ptr [rax + r13], r12b; pop r13; pop r12; pop rbx; ret; 
0x00000000004404ab: movsxd r13, r13d; mov word ptr [rax + r13*2], r12w; pop r13; pop r12; pop rbx; ret; 
0x000000000045c0d5: movsxd r8, r8d; xchg r10, rsp; ret; 
0x000000000043a922: movsxd rax, dword ptr [rax + 0x38]; mov byte ptr [rdx + rax], cl; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416e4b: movsxd rax, dword ptr [rax + 8]; ret; 
0x0000000000425100: movsxd rax, dword ptr [rax]; cmp rdx, rax; jne 0x2510b; mov al, 1; ret; 
0x000000000043e6c8: movsxd rax, dword ptr [rbx + 0x14]; mov rsi, rax; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000441f58: movsxd rax, dword ptr [rbx + 0x14]; mov rsi, rax; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000403254: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000425dd9: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000042e937: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004385f4: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000041f9d7: movsxd rax, eax; add rax, rbx; mov byte ptr [rax], 0; pop rbx; ret; 
0x00000000004243fa: movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e6a: movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043304a: movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043325a: movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043343a: movsxd rax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041c502: movsxd rax, eax; mov qword ptr [rbx + 0x20], rax; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x0000000000406828: movsxd rax, eax; ret; 
0x000000000044f0f0: movsxd rax, edx; mov rdx, rax; shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x00000000004344f3: movsxd rax, edx; sub rcx, rax; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000044f4a0: movsxd rax, esi; mov rdx, rax; shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x000000000041da7f: movsxd rax, r13d; add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041fd64: movsxd rax, r13d; lea rsi, [rax + 1]; lea rdi, [rsp + 8]; lea rax, [rip + 0x63fe9]; call qword ptr [rax + 0x30]; 
0x0000000000418944: movsxd rax, r14d; mov rsi, qword ptr [r13 + rax*8]; mov rdi, rsp; lea rax, [rip + 0x5005a]; call qword ptr [rax]; 
0x000000000042bdaf: movsxd rcx, ecx; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b2a2: movsxd rcx, ecx; mov rdi, rax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000402a81: movsxd rcx, ecx; mov rsi, rdi; mov edi, 2; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000043453c: movsxd rcx, ecx; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043b248: movsxd rcx, edx; mov rdi, rax; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000045ca4d: movsxd rcx, edx; movsxd rdx, eax; mov edi, 0xca; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9c7: movsxd rcx, edx; movsxd rdx, eax; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000040ed5a: movsxd rcx, r14d; lea rdx, [rbp - 8]; lea rax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000045c0cf: movsxd rdi, edi; add rax, rdi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x000000000040b8c8: movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000417bc3: movsxd rdi, edi; movsxd rsi, esi; lea rax, [rdi + rsi]; ret; 
0x000000000043a9b8: movsxd rdx, dword ptr [rdx + 0x38]; mov byte ptr [rcx + rdx], al; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x000000000045ca50: movsxd rdx, eax; mov edi, 0xca; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9ca: movsxd rdx, eax; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000044f0d6: movsxd rdx, ebx; call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x000000000044f130: movsxd rdx, ebx; shl rdx, 1; call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x000000000044f87a: movsxd rdx, ecx; mov byte ptr [rdi + rdx + 1], r10b; add ecx, 2; cmp eax, ecx; jg 0x4f858; ret; 
0x000000000044f879: movsxd rdx, ecx; mov byte ptr [rdi + rdx + 1], r10b; add ecx, 2; cmp eax, ecx; jg 0x4f858; ret; 
0x00000000004344f9: movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043453f: movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043a322: movsxd rdx, edx; cmp byte ptr [rax + rdx + 0x56], 0; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x0000000000459315: movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x000000000045b965: movsxd rdx, esi; mov esi, 0x5409; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9e5: movsxd rdx, esi; mov esi, 0x540a; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba05: movsxd rdx, esi; mov esi, 0x540b; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b985: movsxd rdx, esi; mov esi, 0x5410; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000402ec5: movsxd rdx, esi; mov rsi, rdi; mov edi, 0x15; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402bc5: movsxd rdx, esi; mov rsi, rdi; mov edi, 0x53; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f05: movsxd rdx, esi; movsxd rsi, edi; mov edi, 0x21; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004574b5: movsxd rdx, esi; movsxd rsi, edi; mov edi, 0x48; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457478: movsxd rdx, esi; movsxd rsi, edi; mov edi, 0x48; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000457498: movsxd rdx, esi; movsxd rsi, edi; mov edi, 0x48; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045cb35: movsxd rdx, esi; movsxd rsi, edi; mov edi, 0xff; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402ee5: movsxd rsi, edi; mov edi, 0x20; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402f08: movsxd rsi, edi; mov edi, 0x21; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000456e8b: movsxd rsi, edi; mov edi, 0x26; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000456e8a: movsxd rsi, edi; mov edi, 0x26; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004574b8: movsxd rsi, edi; mov edi, 0x48; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045747b: movsxd rsi, edi; mov edi, 0x48; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045749b: movsxd rsi, edi; mov edi, 0x48; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e38: movsxd rsi, edi; mov edi, 0x4d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e37: movsxd rsi, edi; mov edi, 0x4d; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403098: movsxd rsi, edi; mov edi, 0x61; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000403097: movsxd rsi, edi; mov edi, 0x61; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000457365: movsxd rsi, edi; mov edi, 0x7c; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x00000000004030b8: movsxd rsi, edi; mov edi, 0xa0; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x00000000004030b7: movsxd rsi, edi; mov edi, 0xa0; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045c845: movsxd rsi, edi; mov edi, 0xd5; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045cb98: movsxd rsi, edi; mov edi, 0xe3; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb97: movsxd rsi, edi; mov edi, 0xe3; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb78: movsxd rsi, edi; mov edi, 0xe4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000045cb77: movsxd rsi, edi; mov edi, 0xe4; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402dc5: movsxd rsi, edi; mov edi, 0xe7; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000045cb38: movsxd rsi, edi; mov edi, 0xff; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402aa5: movsxd rsi, edi; mov edi, 3; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000402e58: movsxd rsi, edi; mov edi, 5; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e57: movsxd rsi, edi; mov edi, 5; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402f9b: movsxd rsi, edi; mov rdx, rax; mov edi, 0x10; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045770b: movsxd rsi, edi; mov rdx, rax; mov edi, 0x13; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca7b: movsxd rsi, edi; mov rdx, rax; mov edi, 0x9a; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c89e: movsxd rsi, edi; mov rdx, rax; mov edi, 0xe8; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b1b: movsxd rsi, edi; mov rdx, rax; mov edi, 1; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402acb: movsxd rsi, edi; mov rdx, rax; mov edi, 8; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402afb: movsxd rsi, edi; mov rdx, rax; xor edi, edi; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000453f65: movsxd rsi, esi; call 0x53f80; lea rsp, [rsp + 8]; ret; 
0x0000000000417bc6: movsxd rsi, esi; lea rax, [rdi + rsi]; ret; 
0x00000000004169b8: movsxd rsi, esi; mov rdi, rax; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d68f]; lea rsp, [rsp + 8]; ret; 
0x0000000000416698: movsxd rsi, esi; mov rdi, rax; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d9af]; lea rsp, [rsp + 8]; ret; 
0x000000000040b8c5: movsxd rsi, esi; movsxd rdi, edi; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000431dcf: movups xmm0, xmmword ptr [rax]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000043198f: movups xmm0, xmmword ptr [rax]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431da6: movups xmm0, xmmword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431966: movups xmm0, xmmword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d73: movups xmm0, xmmword ptr [rax]; lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431933: movups xmm0, xmmword ptr [rax]; lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431dec: movups xmm0, xmmword ptr [rax]; lea rsi, [rip + 0x43eaa]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319ac: movups xmm0, xmmword ptr [rax]; lea rsi, [rip + 0x442ea]; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x000000000042d838: movups xmm0, xmmword ptr [rax]; ret; 
0x000000000042d848: movups xmm0, xmmword ptr [rax]; ret; 
0x0000000000444bc4: movups xmm0, xmmword ptr [rbp - 0x70]; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445880: movups xmm0, xmmword ptr [rbp - 0x70]; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x00000000004393ed: movups xmm0, xmmword ptr [rbp - 8]; movsd qword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x0000000000447959: movups xmm0, xmmword ptr [rbx]; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x00000000004436f5: movups xmm0, xmmword ptr [rsp + 0x10]; movsd qword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000443701: movups xmm0, xmmword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000444f19: movups xmm0, xmmword ptr [rsp + 0x20]; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x0000000000445f5a: movups xmm0, xmmword ptr [rsp + 0x68]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000447779: movups xmm0, xmmword ptr [rsp + 0x68]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004477b1: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f7: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447837: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ae: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f2: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447932: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443e83: movups xmm0, xmmword ptr [rsp]; call 0x43db0; sub word ptr [rbx + 6], 1; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004435f4: movups xmm0, xmmword ptr [rsp]; cvttsd2si rax, xmm0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000406639: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477bc: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447802: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447842: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b9: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478fd: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044793d: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d1f: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d3f: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d9f: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164df: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164ff: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041655f: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed7e: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042edde: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431154: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431174: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043163b: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043165e: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a7b: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a9e: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000443648: movups xmm0, xmmword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044404c: movups xmm1, xmmword ptr [rsp + 0x10]; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000446f01: movups xmm1, xmmword ptr [rsp + 0x20]; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000443f33: movups xmm1, xmmword ptr [rsp]; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004053cc: movups xmm1, xmmword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443a33: movups xmmword ptr [r8], xmm0; ret; 
0x000000000040527d: movups xmmword ptr [rax], xmm0; ret; 
0x0000000000443a34: movups xmmword ptr [rax], xmm0; ret; 
0x00000000004393f2: movups xmmword ptr [rbp - 0x18], xmm0; mov rsp, rbp; pop rbp; ret; 
0x000000000040652b: movups xmmword ptr [rbx], xmm0; mov rax, r12; lea rsp, [rsp + 0x48]; pop r12; pop rbx; ret; 
0x0000000000447962: movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x0000000000404ef2: movups xmmword ptr [rsp + 0x18], xmm0; fld qword ptr [rsp + 0x18]; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x00000000004436fb: movups xmmword ptr [rsp + 0x18], xmm0; movsd xmm0, qword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000405186: movups xmmword ptr [rsp], xmm0; mov eax, dword ptr [rsp + 4]; lea rsp, [rsp + 8]; ret; 
0x00000000004051b6: movups xmmword ptr [rsp], xmm0; mov eax, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000044798d: movups xmmword ptr [rsp], xmm0; mov rax, qword ptr [rsp]; mov qword ptr [rbx], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004477b7: movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477fd: movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044783d: movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b4: movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f8: movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447938: movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041868e: movzx di, byte ptr [rdx + rax]; and edi, 0xffff; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x00000000004073ed: movzx eax, bh; add eax, 0x20; jmp 0x73f8; mov al, dil; and eax, 0xff; ret; 
0x0000000000404e01: movzx eax, bh; shr eax, 4; and eax, 0xff; ret; 
0x000000000040736d: movzx eax, bh; sub eax, 0x20; jmp 0x7378; mov al, dil; and eax, 0xff; ret; 
0x000000000043cf24: movzx eax, byte ptr [rax + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404a48: movzx eax, byte ptr [rax + rdi]; add eax, edx; and eax, 0xff; ret; 
0x000000000043cf25: movzx eax, byte ptr [rax + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042bea0: movzx eax, byte ptr [rax]; lea rdx, [rip + 0x3cc46]; bt dword ptr [rdx], eax; jae 0x2beb2; mov al, 1; ret; 
0x000000000042545c: movzx eax, byte ptr [rax]; or eax, 8; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000431731: movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b71: movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432021: movzx eax, byte ptr [rbx + r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431732: movzx eax, byte ptr [rbx + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431b72: movzx eax, byte ptr [rbx + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432022: movzx eax, byte ptr [rbx + riz]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000417024: movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax + 0xc]; ret; 
0x0000000000416e34: movzx eax, byte ptr [rdi + 1]; add rax, rdx; mov rax, qword ptr [rax]; ret; 
0x0000000000416e44: movzx eax, byte ptr [rdi + 1]; add rax, rdx; movsxd rax, dword ptr [rax + 8]; ret; 
0x0000000000432370: movzx eax, byte ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x0000000000432420: movzx eax, byte ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000433690: movzx eax, byte ptr [rdi]; ret; 
0x000000000042e347: movzx eax, byte ptr [rdx + rax - 1]; ret; 
0x0000000000425860: movzx eax, byte ptr [rip + 0x5f829]; lea rdx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000425840: movzx eax, byte ptr [rip + 0x5f839]; lea rdx, [rip + 0x5f7e2]; sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x0000000000404900: movzx eax, di; ret; 
0x00000000004049e0: movzx eax, di; ret; 
0x00000000004073ec: movzx eax, dil; add eax, 0x20; jmp 0x73f8; mov al, dil; and eax, 0xff; ret; 
0x0000000000404e00: movzx eax, dil; shr eax, 4; and eax, 0xff; ret; 
0x000000000040736c: movzx eax, dil; sub eax, 0x20; jmp 0x7378; mov al, dil; and eax, 0xff; ret; 
0x0000000000432466: movzx eax, dl; ret; 
0x0000000000432a37: movzx eax, dx; ret; 
0x0000000000440454: movzx eax, word ptr [rax + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000440455: movzx eax, word ptr [rax + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431761: movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431ba1: movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432051: movzx eax, word ptr [rbx + r12*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431762: movzx eax, word ptr [rbx + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000431ba2: movzx eax, word ptr [rbx + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432052: movzx eax, word ptr [rbx + riz*2]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041d7e0: movzx eax, word ptr [rdi + 0x374]; ret; 
0x0000000000432940: movzx eax, word ptr [rdi]; cvtsi2sd xmm0, eax; ret; 
0x00000000004329f0: movzx eax, word ptr [rdi]; cvtsi2ss xmm0, eax; ret; 
0x0000000000446e8d: movzx eax, word ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004075c3: movzx ecx, al; mov byte ptr [rdi + rcx], dl; shr rsi, 1; cmp eax, 1; jg 0x75b8; ret; 
0x00000000004025b3: movzx ecx, byte ptr [rdx + r8]; sub rax, rcx; ret; 
0x000000000043b401: movzx ecx, byte ptr [rdx + rax - 1]; bt dword ptr [rsp], ecx; jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x00000000004025b4: movzx ecx, byte ptr [rdx + rax]; sub rax, rcx; ret; 
0x0000000000404ac0: movzx ecx, byte ptr [rsi + rcx]; add eax, ecx; shr edi, 4; cmp rdx, 7; jl 0x4ab0; ret; 
0x000000000040b041: movzx ecx, byte ptr [rsi]; movzx edx, byte ptr [rdx]; sub rcx, rdx; mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x0000000000433021: movzx ecx, dh; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433231: movzx ecx, dh; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433411: movzx ecx, dh; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433621: movzx ecx, dh; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fc1: movzx ecx, dh; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d1: movzx ecx, dh; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b1: movzx ecx, dh; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c1: movzx ecx, dh; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433001: movzx ecx, dh; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433211: movzx ecx, dh; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f1: movzx ecx, dh; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433601: movzx ecx, dh; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000447115: movzx ecx, dl; lea rax, [rip + 0x2eb81]; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004470d5: movzx ecx, dl; lea rax, [rip + 0x2ebc1]; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x000000000041ba86: movzx ecx, dl; mov byte ptr [rdi + rcx], 0x2f; cmp eax, edx; jg 0x1ba70; ret; 
0x0000000000433020: movzx ecx, sil; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433230: movzx ecx, sil; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433410: movzx ecx, sil; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433620: movzx ecx, sil; mov eax, 1; shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fc0: movzx ecx, sil; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d0: movzx ecx, sil; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b0: movzx ecx, sil; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c0: movzx ecx, sil; mov eax, 1; shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433000: movzx ecx, sil; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433210: movzx ecx, sil; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f0: movzx ecx, sil; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433600: movzx ecx, sil; mov eax, 1; shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000042552e: movzx edi, al; call 0x24ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000425462: movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000425483: movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000425b6b: movzx edi, bl; call 0x25ac0; pop rbx; ret; 
0x0000000000416a58: movzx edi, bl; mov edx, 1; call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000412f26: movzx edi, byte ptr [rax + 0x11]; mov rdx, rbp; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x0000000000425440: movzx edi, byte ptr [rax]; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000041868f: movzx edi, byte ptr [rdx + rax]; and edi, 0xffff; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x0000000000414cdb: movzx edi, word ptr [rax]; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418633: movzx edi, word ptr [rax]; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x0000000000418526: movzx edi, word ptr [rax]; call 0x18370; pop r13; pop r12; pop rbx; ret; 
0x0000000000443fbc: movzx edi, word ptr [rsp + 8]; call 0x43610; lea rsp, [rsp + 0x18]; ret; 
0x0000000000446e67: movzx edi, word ptr [rsp]; call 0x5bfd0; lea rsp, [rsp + 0x28]; ret; 
0x000000000040d69b: movzx edx, ah; call 0x3460; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d73a: movzx edx, bp; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000040e068: movzx edx, bp; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x0000000000404a41: movzx edx, byte ptr [rax + rdx]; and edi, 0xf; movzx eax, byte ptr [rax + rdi]; add eax, edx; and eax, 0xff; ret; 
0x00000000004338ed: movzx edx, byte ptr [rax]; lea rsi, [rdx + 1]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000416e6b: movzx edx, byte ptr [rdx + 1]; lea rax, [rcx + rdx]; ret; 
0x0000000000459ad8: movzx edx, byte ptr [rdx + 3]; or eax, edx; mov dword ptr [rsi], eax; lea rsp, [rsp + 8]; ret; 
0x000000000040b044: movzx edx, byte ptr [rdx]; sub rcx, rdx; mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x000000000040ab3c: movzx edx, cl; cmp byte ptr [rdi + rdx], 0x30; je 0xab30; mov rax, rcx; ret; 
0x000000000040d69a: movzx edx, r12b; call 0x3460; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040d739: movzx edx, r13w; lea rax, [rip + 0x7661c]; call qword ptr [rax]; 
0x000000000040e067: movzx edx, r13w; mov rdi, r12; lea rax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000040ea14: movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040ea15: movzx edx, si; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x000000000040e939: movzx edx, word ptr [rax]; lea rsi, [rbp - 8]; lea rax, [rip + 0x75419]; call qword ptr [rax]; 
0x000000000040e628: movzx edx, word ptr [rax]; lea rsi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x000000000040e0ee: movzx edx, word ptr [rax]; mov rsi, rsp; mov rdi, r13; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000042f2f0: movzx esi, ah; call 0x2f330; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd70: movzx esi, ah; call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000043a7ae: movzx esi, al; mov rdi, qword ptr [rsp]; call 0x3a830; lea rsp, [rsp + 8]; ret; 
0x0000000000416bfb: movzx esi, bl; mov edx, 1; call 0x7340; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043243b: movzx esi, byte ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004323eb: movzx esi, byte ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x000000000043240b: movzx esi, byte ptr [rax]; call 0x34ed0; lea rsp, [rsp + 8]; ret; 
0x00000000004458ab: movzx esi, byte ptr [rax]; lea rdi, [rax + 1]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458aa: movzx esi, byte ptr [rax]; lea rdi, [rax + 1]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000445918: movzx esi, byte ptr [rax]; lea rdi, [rax + 1]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000456ad5: movzx esi, byte ptr [rdi]; add rdi, 1; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000042f2ef: movzx esi, r12b; call 0x2f330; pop r13; pop r12; pop rbx; ret; 
0x000000000042fd6f: movzx esi, r12b; call 0x2fdb0; pop r13; pop r12; pop rbx; ret; 
0x000000000045c1c0: movzx esi, r12w; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1fa: movzx esi, r12w; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c23a: movzx esi, r12w; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1c1: movzx esi, sp; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c1fb: movzx esi, sp; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c23b: movzx esi, sp; call 0x1d7f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432a0b: movzx esi, word ptr [rax]; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004329bb: movzx esi, word ptr [rax]; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x00000000004329db: movzx esi, word ptr [rax]; call 0x34f20; lea rsp, [rsp + 8]; ret; 
0x000000000040ed68: movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x00000000004117b3: movzx esi, word ptr [rax]; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000423049: movzx esi, word ptr [rax]; mov dl, 1; call 0xd950; pop rbx; ret; 
0x000000000040e509: movzx esi, word ptr [rax]; mov ecx, 1; lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x0000000000457bb1: movzx esi, word ptr [rax]; xor dl, dl; call 0xd950; lea rsp, [rsp + 0x1010]; pop rbx; ret; 
0x0000000000446e62: movzx esi, word ptr [rsp + 4]; movzx edi, word ptr [rsp]; call 0x5bfd0; lea rsp, [rsp + 0x28]; ret; 
0x0000000000433796: mul byte ptr [rdx]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045591f: mul edx; shr edx, 3; mov word ptr [rbx], dx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000415b44: neg ax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416384: neg ax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000431706: neg byte ptr [rbx]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433076: neg byte ptr [rdx]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004531f6: neg byte ptr [rdx]; cld; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000427576: neg dl; add eax, 0x388b4800; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000415b65: neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004163a5: neg eax; lea rsp, [rsp + 8]; ret; 
0x0000000000415b45: neg eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000416385: neg eax; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000404256: neg eax; ret; 
0x000000000040429b: neg eax; ret; 
0x0000000000404255: neg rax; ret; 
0x000000000040429a: neg rax; ret; 
0x00000000004072f3: nop dword ptr [rax + rax]; add rdx, 1; cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000040f92d: nop dword ptr [rax]; add rdx, 1; cmp di, word ptr [rcx]; jne 0xf93d; mov rax, rdx; ret; 
0x00000000004035f5: nop dword ptr [rax]; mov word ptr [rdi], dx; add rdi, 2; cmp rax, rdi; ja 0x35f8; ret; 
0x00000000004072f2: nop word ptr [rax + rax]; add rdx, 1; cmp dil, byte ptr [rcx]; jne 0x7305; mov rax, rdx; ret; 
0x000000000040555e: nop; add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x000000000044ee94: nop; add al, byte ptr fs:[rax]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000043448d: nop; add byte ptr [rax], 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000402cc5: nop; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042ce2d: nop; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000450403: nop; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004507be: nop; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004509c6: nop; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004564af: nop; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000457176: nop; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004571e0: nop; add dword ptr [rax], eax; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459ca0: nop; add eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040454f: nop; add rax, 1; cmp word ptr [rdi + rax*2], 0; jne 0x4550; ret; 
0x000000000040454e: nop; add rax, 1; cmp word ptr [rdi + rax*2], 0; jne 0x4550; ret; 
0x00000000004479bf: nop; add rdx, 1; cmp byte ptr [rdi + rdx], 0; jne 0x479c0; lea rax, [rdi + rdx]; ret; 
0x000000000044c69c: nop; call 0x4804c6a2; lea esp, [rsp + 8]; ret; 
0x000000000044ea83: nop; cmp byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040e6f9: nop; cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000411738: nop; cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044f47d: nop; cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043e8e8: nop; fadd dword ptr [rax]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x00000000004421e8: nop; fadd dword ptr [rax]; add byte ptr [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000041d809: nop; je 0x1d80f; add byte ptr [rax], al; ret; 
0x00000000004364d5: nop; lea rsp, [rsp + 8]; ret; 
0x00000000004364d4: nop; lea rsp, [rsp + 8]; ret; 
0x0000000000449487: nop; lea rsp, [rsp + 8]; ret; 
0x0000000000449486: nop; lea rsp, [rsp + 8]; ret; 
0x000000000044b227: nop; lea rsp, [rsp + 8]; ret; 
0x000000000044b226: nop; lea rsp, [rsp + 8]; ret; 
0x000000000040ff9d: nop; mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a23d: nop; mov al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a25f: nop; mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000044a2a2: nop; mov eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000044a27f: nop; mov eax, 0x48000000; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2c2: nop; mov eax, 0x48000000; test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004036af: nop; mov qword ptr [rdi], rdx; add rdi, 8; cmp rax, rdi; ja 0x36b0; ret; 
0x000000000043ab2b: nop; mov r12, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443baf: nop; mov r13, qword ptr [rbp - 0x68]; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443bae: nop; mov r13, qword ptr [rbp - 0x68]; mov r14, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x000000000043f5e7: nop; mov r14, qword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443069: nop; mov r14, qword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000446cb5: nop; mov r14, qword ptr [rbp - 0x68]; mov r15, qword ptr [rbp - 0x60]; mov rsp, rbp; pop rbp; ret; 
0x0000000000408d31: nop; mov r15, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444bc7: nop; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445883: nop; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e98d: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040ebca: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040ece4: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040edf3: nop; mov rsp, rbp; pop rbp; ret; 
0x00000000004313e3: nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b08: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000043e29b: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000043e35b: nop; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b64: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000044b904: nop; mov rsp, rbp; pop rbp; ret; 
0x000000000040df04: nop; movabs al, byte ptr [0x5b5c415d41000000]; ret; 
0x000000000040de1c: nop; movabs al, byte ptr [0x824648d48000000]; pop r12; pop rbx; ret; 
0x000000000040e762: nop; movabs al, byte ptr [0x824648d48000000]; pop r12; pop rbx; ret; 
0x000000000040e519: nop; movabs al, byte ptr [0x824648d48000000]; ret; 
0x000000000042b90c: nop; ret; 
0x000000000044ee99: nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f029: nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f349: nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f649: nop; sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040fead: nop; test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a21d: nop; test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043247f: not al; and al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x000000000043266f: not al; and al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000404d49: not al; and r8b, byte ptr [rdi + rcx]; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000432a4f: not ax; and ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043285f: not ax; and ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000431a96: not byte ptr [rcx]; add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431b46: not byte ptr [rdi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432a50: not eax; and ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x0000000000432860: not eax; and ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000432c3f: not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e0f: not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432fed: not eax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331fd: not eax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333dd: not eax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335ed: not eax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004178ea: not ecx; out dx, eax; xor eax, edi; ret; 
0x0000000000404d48: not r8b; and r8b, byte ptr [rdi + rcx]; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d40; ret; 
0x0000000000432fec: not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331fc: not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333dc: not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335ec: not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000040368d: notrack jmp 0x3696; mov dword ptr [rdi], edx; add rdi, 4; cmp rax, rdi; ja 0x3690; ret; 
0x0000000000407945: notrack jmp 0x794f; mov qword ptr [rsi], 0; mov dword ptr [rax], 0; ret; 
0x0000000000452ed0: or ah, bh; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040909d: or ah, byte ptr [rsi + 0x41]; add esp, 0x81660001; ret; 
0x00000000004090d8: or ah, byte ptr [rsi + 0x41]; add esp, 0x81660001; ret; 
0x00000000004306e0: or al, 0; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000430af0: or al, 0; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000041adc0: or al, 0; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000419028: or al, 0; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041903e: or al, 0; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004267e6: or al, 0; jg 0x26748; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x0000000000407507: or al, 0x17; shr esi, 1; cmp eax, 1; jg 0x74f8; ret; 
0x00000000004074cf: or al, 0x17; shr esi, 3; cmp eax, 1; jg 0x74b8; ret; 
0x000000000040748f: or al, 0x17; shr esi, 4; cmp eax, 1; jg 0x7478; ret; 
0x0000000000407591: or al, 0x17; shr rsi, 3; cmp eax, 1; jg 0x7578; ret; 
0x0000000000407551: or al, 0x17; shr rsi, 4; cmp eax, 1; jg 0x7538; ret; 
0x0000000000407661: or al, 0x17; shr rsi, 4; cmp eax, 1; jg 0x7648; ret; 
0x000000000043a98c: or al, 0x24; add dword ptr [rcx + 0x38], 1; cmp eax, edx; jg 0x3a960; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443f35: or al, 0x24; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043b408: or al, 0x24; jae 0x3b3f8; lea rsp, [rsp + 0x28]; ret; 
0x000000000043226a: or al, 0x24; mov ax, word ptr [rax + 8]; mov word ptr [rsp + 8], ax; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004053ce: or al, 0x24; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x000000000041b3f7: or al, 0x48; cmp dword ptr [rbx], 0; jne 0x1b3e8; pop rbx; ret; 
0x000000000040734a: or al, 0x48; cmp edx, 1; jne 0x7357; mov eax, 1; ret; 
0x0000000000404291: or al, 0x48; cmp esi, eax; jg 0x429a; xor eax, eax; ret; 
0x000000000041ccf8: or al, 0x48; lea edi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000421b18: or al, 0x48; lea edi, [rbx + 0x70]; xor sil, sil; call 0x1c270; pop rbx; ret; 
0x000000000040aa4f: or al, 0x48; mov eax, ecx; ret; 
0x0000000000413042: or al, 0x48; mov edi, dword ptr [rbx]; mov rax, qword ptr [rbx]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x10]; 
0x0000000000415244: or al, 0x48; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; 
0x0000000000415244: or al, 0x48; mov edi, eax; lea rax, [rip + 0x53831]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000415214: or al, 0x48; mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; 
0x0000000000415214: or al, 0x48; mov edi, eax; lea rax, [rip + 0x53851]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004151e4: or al, 0x48; mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; 
0x00000000004151e4: or al, 0x48; mov edi, eax; lea rax, [rip + 0x53871]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000045316f: or al, 0x48; mov edi, esp; lea rax, [rip + 0x326a6]; call qword ptr [rax]; 
0x000000000041527c: or al, 0x48; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000041527c: or al, 0x48; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000414315: or al, 0x49; mov edi, dword ptr [rdi]; mov rax, qword ptr [r15]; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000449b9e: or al, 0x50; add rdx, 1; cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x0000000000453957: or al, 0x83; ret 0x6603; 
0x000000000045bec7: or al, 0x83; ret 0x6603; 
0x00000000004500f5: or al, 0x89; fdiv dword ptr [rcx]; ret 0x8948; 
0x0000000000404ac2: or al, 0xe; add eax, ecx; shr edi, 4; cmp rdx, 7; jl 0x4ab0; ret; 
0x000000000044ffac: or al, 1; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004275de: or al, 1; ret; 
0x000000000043a927: or al, 2; mov rax, qword ptr [rsp]; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 0x18]; ret; 
0x00000000004025b6: or al, 2; sub rax, rcx; ret; 
0x0000000000424392: or al, 6; add byte ptr [rcx], dh; sar byte ptr [rdi + 4], cl; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x00000000004074cc: or al, 8; mov byte ptr [rdi + rdx], cl; shr esi, 3; cmp eax, 1; jg 0x74b8; ret; 
0x000000000040748c: or al, 8; mov byte ptr [rdi + rdx], cl; shr esi, 4; cmp eax, 1; jg 0x7478; ret; 
0x000000000040758e: or al, 8; mov byte ptr [rdi + rdx], cl; shr rsi, 3; cmp eax, 1; jg 0x7578; ret; 
0x000000000040754e: or al, 8; mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7538; ret; 
0x000000000040765e: or al, 8; mov byte ptr [rdi + rdx], cl; shr rsi, 4; cmp eax, 1; jg 0x7648; ret; 
0x0000000000415b5b: or al, al; setne al; and eax, 0xff; neg eax; lea rsp, [rsp + 8]; ret; 
0x000000000041639b: or al, al; setne al; and eax, 0xff; neg eax; lea rsp, [rsp + 8]; ret; 
0x00000000004243e3: or al, byte ptr [r14]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040aa4a: or al, byte ptr [rax + 0xc75003f]; mov rax, rcx; ret; 
0x0000000000402f7f: or al, byte ptr [rax]; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004311c2: or al, byte ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042eba2: or al, byte ptr [rax]; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431ee1: or al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000422e11: or al, byte ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004437d5: or al, byte ptr [rax]; cvtsi2sd xmm0, rax; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x0000000000443795: or al, byte ptr [rax]; mov dword ptr [rsp + 4], eax; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041908a: or al, byte ptr [rip + 0x3894800]; pop rbx; ret; 
0x00000000004190b8: or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x00000000004190e8: or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x0000000000419108: or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x0000000000419128: or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x0000000000419148: or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x00000000004243e4: or al, byte ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004243db: or al, byte ptr [rsi]; add byte ptr [rdi], ch; jne 0x243e7; mov byte ptr [rip + 0x60a49], al; lea rsp, [rsp + 8]; ret; 
0x0000000000406630: or al, byte ptr [rsp + 7]; mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443fc0: or al, ch; idiv dil; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000452f2e: or al, ch; in al, dx; sbb bh, ah; dec dword ptr [rbx - 0x2776e3a8]; pop rbx; ret; 
0x000000000041d2ee: or al, ch; mov esp, 0x48fffffe; lea esp, [rsp + 8]; ret; 
0x0000000000432274: or al, ch; outsb dx, byte ptr ss:[rsi]; add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000043229d: or al, ch; push 0; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004287a8: or al, ch; ret 0xfe67; 
0x000000000040e5b7: or al, ch; ret; 
0x0000000000454700: or al, ch; xchg rcx, rax; sti; jmp qword ptr [rsi + 0x3d]; 
0x0000000000404ced: or al, cl; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4ce0; ret; 
0x000000000041b68e: or bh, bh; adc eax, 0x69773; jmp 0x1b699; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043972a: or bh, bl; insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000043976d: or bh, bl; insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x0000000000443880: or bh, bl; insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x00000000004101dc: or bh, bl; insb byte ptr [rdi], dx; and al, 8; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x000000000040a19d: or bh, byte ptr [rdi + 0x6b]; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x00000000004147ed: or bh, byte ptr [rdi + 0xcc]; call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x0000000000414a81: or bh, byte ptr [rdi + 0xe7]; call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x0000000000405277: or bh, byte ptr [rdx + 2]; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x0000000000431200: or bh, dh; dec dword ptr [rcx - 0x73]; dec dword ptr [rax - 0x7b]; sar byte ptr [rbx + rbp + 0x48], 0xc7; ret 0xffff; 
0x00000000004169cd: or bl, al; add byte ptr [rbx + 0x48], dl; mov ebx, edi; lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x0000000000416ff6: or byte ptr [r10 - 0x73], cl; cmp al, 0x38; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000043ced2: or byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x0000000000440402: or byte ptr [r8 - 0x7b], r9b; sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x0000000000406b0f: or byte ptr [rax + 0x21], 0xca; and rsi, 0x7ff; shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b3c: or byte ptr [rax + 0x21], 0xd0; setne al; ret; 
0x0000000000447de0: or byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000044bdd0: or byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000411ed5: or byte ptr [rax + 0x29], cl; retf 0x8348; ret 0x4c01; 
0x00000000004036b6: or byte ptr [rax + 0x39], cl; clc; ja 0x36b0; ret; 
0x0000000000402d49: or byte ptr [rax + 0x39], cl; ret 0x2e7c; 
0x0000000000402d48: or byte ptr [rax + 0x39], cl; ret 0x2e7c; 
0x00000000004036ae: or byte ptr [rax + 0x48178948], dl; add edi, 8; cmp rax, rdi; ja 0x36b0; ret; 
0x0000000000409a06: or byte ptr [rax + 0x63], cl; ret 0xf748; 
0x00000000004376d2: or byte ptr [rax + 0x63], cl; ret; 
0x000000000043fa48: or byte ptr [rax + 0x63], cl; ret; 
0x00000000004434c6: or byte ptr [rax + 0x63], cl; ret; 
0x00000000004555fe: or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x00000000004555fd: or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000045572e: or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000045572d: or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x00000000004078d9: or byte ptr [rax + 9], 0xf9; mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x0000000000447dc3: or byte ptr [rax + rax*8 - 0x7cb7ef8c], al; ret; 
0x000000000044bdb3: or byte ptr [rax + rax*8 - 0x7cb7ef8c], al; ret; 
0x000000000040748d: or byte ptr [rax - 0x113ee8f4], cl; add al, 0x83; clc; add dword ptr [rdi - 0x21], edi; ret; 
0x00000000004074cd: or byte ptr [rax - 0x113ee8f4], cl; add eax, dword ptr [rbx - 0x2080fe08]; ret; 
0x0000000000419db6: or byte ptr [rax - 0x39], cl; adc byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xc0; 
0x000000000040754f: or byte ptr [rax - 0x3eb7e8f4], cl; out dx, al; add al, 0x83; clc; add dword ptr [rdi - 0x24], edi; ret; 
0x000000000040765f: or byte ptr [rax - 0x3eb7e8f4], cl; out dx, al; add al, 0x83; clc; add dword ptr [rdi - 0x24], edi; ret; 
0x000000000040758f: or byte ptr [rax - 0x3eb7e8f4], cl; out dx, al; add eax, dword ptr [rbx - 0x2380fe08]; ret; 
0x0000000000456e94: or byte ptr [rax - 0x72b70006], dh; and al, 8; ret; 
0x00000000004146e3: or byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000414a13: or byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000449d2c: or byte ptr [rax - 0x73], cl; add eax, 0x3a02c; call qword ptr [rax + 0x10]; 
0x000000000043b536: or byte ptr [rax - 0x73], cl; add eax, 0x48822; call qword ptr [rax + 0x38]; 
0x000000000041fd6f: or byte ptr [rax - 0x73], cl; add eax, 0x63fe9; call qword ptr [rax + 0x30]; 
0x0000000000458b46: or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000458b86: or byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x000000000044d184: or byte ptr [rax - 0x73], cl; and al, 0x18; pop r12; pop rbx; ret; 
0x000000000042de88: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000042deb5: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000042df8b: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000042e195: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000043972e: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000439771: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000443884: or byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000042dcd2: or byte ptr [rax - 0x73], cl; and al, 0x20; pop rbx; ret; 
0x000000000040a014: or byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x0000000000443856: or byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x000000000041b57e: or byte ptr [rax - 0x73], cl; and al, 0x78; ret; 
0x0000000000421096: or byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000042118b: or byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000413015: or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004149a5: or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041d83b: or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041d87b: or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004322ca: or byte ptr [rax - 0x73], cl; xor eax, 0x439ce; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000042de7f: or byte ptr [rax - 0x75], cl; add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deac: or byte ptr [rax - 0x75], cl; add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df82: or byte ptr [rax - 0x75], cl; add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dcc9: or byte ptr [rax - 0x75], cl; add al, 0x24; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000041497f: or byte ptr [rax - 0x75], cl; add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041497e: or byte ptr [rax - 0x75], cl; add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004149bf: or byte ptr [rax - 0x75], cl; add bh, bh; push rax; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004149be: or byte ptr [rax - 0x75], cl; add bh, bh; push rax; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041499f: or byte ptr [rax - 0x75], cl; add bh, bh; push rax; or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041499e: or byte ptr [rax - 0x75], cl; add bh, bh; push rax; or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000417e2b: or byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000443851: or byte ptr [rax - 0x75], cl; and al, 8; lea rsp, [rsp + 0x28]; ret; 
0x0000000000413691: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c717: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fc47: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e725: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ee3b: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044efcb: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f2e2: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044f97f: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fbe5: or byte ptr [rax - 0x75], cl; and al, 8; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ced8: or byte ptr [rax - 0x75], cl; clc; add rax, 1; ret; 
0x0000000000440408: or byte ptr [rax - 0x75], cl; clc; add rax, 1; ret; 
0x0000000000414df3: or byte ptr [rax - 0x75], cl; cmp byte ptr [rax - 0x73], cl; add eax, 0x53c32; call qword ptr [rax]; 
0x0000000000414ca4: or byte ptr [rax - 0x75], cl; cmp byte ptr [rax - 0x73], cl; add eax, 0x53d71; call qword ptr [rax]; 
0x000000000041497b: or byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x75], cl; add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004135cb: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c63b: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb6b: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e63b: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed5b: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eeeb: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1fb: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8ab: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faab: or byte ptr [rax - 0x75], cl; push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041da92: or byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8941; 
0x000000000041d9fa: or byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8949; 
0x000000000045c4df: or byte ptr [rax - 0x75], cl; sbb byte ptr [rax - 0x7d], cl; ret; 
0x0000000000435598: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000441a85: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000441b85: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000449a91: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000044b831: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000044e0e6: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004535b7: or byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000044c86a: or byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c869: or byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x00000000004188f8: or byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x500ad]; call qword ptr [rax]; 
0x000000000040af5e: or byte ptr [rax - 0x77], cl; out 0xe8, eax; imul eax, dword ptr [rax], 0x89480000; ret; 
0x0000000000452a77: or byte ptr [rax - 0x77], cl; ret 0x1eeb; 
0x0000000000452a67: or byte ptr [rax - 0x77], cl; ret 0x2eeb; 
0x0000000000452a57: or byte ptr [rax - 0x77], cl; ret 0x3eeb; 
0x0000000000452a47: or byte ptr [rax - 0x77], cl; ret 0x4eeb; 
0x0000000000452a37: or byte ptr [rax - 0x77], cl; ret 0x5eeb; 
0x0000000000452a24: or byte ptr [rax - 0x77], cl; ret 0x6ee9; 
0x0000000000452a11: or byte ptr [rax - 0x77], cl; ret 0x81e9; 
0x0000000000452a97: or byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000413f75: or byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x00000000004529fe: or byte ptr [rax - 0x77], cl; ret 0x94e9; 
0x00000000004529eb: or byte ptr [rax - 0x77], cl; ret 0xa7e9; 
0x00000000004529d8: or byte ptr [rax - 0x77], cl; ret 0xbae9; 
0x00000000004529c5: or byte ptr [rax - 0x77], cl; ret 0xcde9; 
0x0000000000452a87: or byte ptr [rax - 0x77], cl; ret 0xeeb; 
0x0000000000418224: or byte ptr [rax - 0x77], cl; ret; 
0x0000000000452634: or byte ptr [rax - 0x77], cl; ret; 
0x0000000000452660: or byte ptr [rax - 0x77], cl; ret; 
0x000000000045321b: or byte ptr [rax - 0x77], cl; sbb cl, byte ptr [rax - 0x77]; add eax, 0x2568a; pop rbx; ret; 
0x000000000045321a: or byte ptr [rax - 0x77], cl; sbb cl, byte ptr [rax - 0x77]; add eax, 0x2568a; pop rbx; ret; 
0x000000000040293b: or byte ptr [rax - 0x77], cl; xor byte ptr [r8 - 0x75], r9b; add al, 0x24; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x000000000043ced3: or byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x0000000000440403: or byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x000000000042b869: or byte ptr [rax], al; add al, ch; syscall; 
0x000000000042b956: or byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000041887d: or byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x50129; call qword ptr [rax]; 
0x000000000042b861: or byte ptr [rax], al; add byte ptr [rax - 0x73], cl; mov esp, 0x89824; add al, ch; syscall; 
0x0000000000417ca6: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417cc6: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417ce6: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417d06: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417d26: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042b9b5: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042ba91: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042baca: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xc601; 
0x0000000000402ad2: or byte ptr [rax], al; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000434f56: or byte ptr [rax], al; add byte ptr [rax], al; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f7e: or byte ptr [rax], al; add byte ptr [rax], al; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x00000000004166b6: or byte ptr [rax], al; add byte ptr [rax], al; call qword ptr [rip + 0x6d998]; lea rsp, [rsp + 8]; ret; 
0x0000000000456e39: or byte ptr [rax], al; add byte ptr [rax], al; mov edi, 0x82; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000402e18: or byte ptr [rax], al; add byte ptr [rax], al; mov edi, 0xd; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000403013: or byte ptr [rax], al; add byte ptr [rax], al; mov edi, 0xe; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ab1: or byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000432e81: or byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000433061: or byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000433271: or byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000433451: or byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000459a4a: or byte ptr [rax], al; add byte ptr [rcx], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000459a7e: or byte ptr [rax], al; add byte ptr [rdx + 0x800], bh; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000402a08: or byte ptr [rax], al; call rax; 
0x0000000000402a36: or byte ptr [rax], al; call rax; 
0x0000000000402c49: or byte ptr [rax], al; call rax; 
0x0000000000402d01: or byte ptr [rax], al; call rax; 
0x00000000004030da: or byte ptr [rax], al; cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x0000000000417fca: or byte ptr [rax], al; ja 0x17fa0; pop rbx; ret; 
0x00000000004147ea: or byte ptr [rax], al; je 0x147f8; mov edi, 0xcc; call 0x185b0; lea rsp, [rsp + 8]; ret; 
0x0000000000417243: or byte ptr [rax], al; je 0x17251; mov rdi, rbx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x0000000000402a41: or byte ptr [rax], al; mov dword ptr [rax], ebx; pop rbx; ret; 
0x0000000000402a13: or byte ptr [rax], al; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x00000000004032aa: or byte ptr [rax], al; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032f4: or byte ptr [rax], al; mov edi, dword ptr [rdx]; call rax; 
0x0000000000401055: or byte ptr [rax], al; mov qword ptr [rax], rdx; jmp 0x1000; ret; 
0x00000000004029fa: or byte ptr [rax], al; mov rax, qword ptr [rax]; test rax, rax; je 0x2a0e; mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000402a28: or byte ptr [rax], al; mov rax, qword ptr [rax]; test rax, rax; je 0x2a3c; mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x0000000000402c3b: or byte ptr [rax], al; mov rax, qword ptr [rax]; test rax, rax; je 0x2c4f; mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x0000000000402cf3: or byte ptr [rax], al; mov rax, qword ptr [rax]; test rax, rax; je 0x2d07; mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x0000000000401071: or byte ptr [rax], al; mov rdx, qword ptr [rax]; test rdx, rdx; je 0x107d; call rdx; 
0x0000000000459a7d: or byte ptr [rax], cl; add byte ptr [rax], al; mov edx, 0x800; call 0x58370; lea rsp, [rsp + 8]; ret; 
0x0000000000419061: or byte ptr [rbp + 0xd], dh; lea rdx, [rip + 0x1125]; cmp rdx, qword ptr [rax + 0x10]; je 0x19074; mov al, 1; ret; 
0x0000000000432231: or byte ptr [rbp + rcx*4 + 5], cl; cmp al, byte ptr [eax + eax]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ccc: or byte ptr [rbp - 0x76b70006], 0xc7; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x0000000000447dba: or byte ptr [rbp - 0x7c], al; in al, 0x74; sbb byte ptr [rdx - 0x7bf7dbbc], cl; sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x000000000044bdaa: or byte ptr [rbp - 0x7c], al; in al, 0x74; sbb byte ptr [rdx - 0x7bf7dbbc], cl; sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x000000000040321b: or byte ptr [rbx + 0x3747fe7], al; mov al, 1; ret; 
0x000000000045782b: or byte ptr [rbx + 0x3747fe7], al; mov al, 1; ret; 
0x0000000000426c88: or byte ptr [rbx + 0x4b2fbe38], cl; add byte ptr [rax], al; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x000000000041877b: or byte ptr [rbx + 0x6348e455], cl; ret 0x3948; 
0x0000000000413cc8: or byte ptr [rbx + rcx*4 + 0x34], cl; and al, 0x48; mov esi, dword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x000000000040ebc2: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecdc: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040edeb: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313db: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e293: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e353: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b5c: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8fc: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b6: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a76: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000429ee9: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2e9: or byte ptr [rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000040e985: or byte ptr [rbx + rcx*4 + 0x75], 0x88; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436b00: or byte ptr [rbx + rcx*4 + 0x75], 0x88; mov r15, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000429bd9: or byte ptr [rbx + rcx*4 + 0x7d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000042bfde: or byte ptr [rbx + rcx*4 + 0x7d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000044d00c: or byte ptr [rbx + rcx*4 + 0x7d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000402d2b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000403d44: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000404afa: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000404bbe: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000404c13: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000404c66: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000405165: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406816: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406994: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406a45: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406acd: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406c90: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406d36: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406dbb: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000406f10: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040bb29: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040c4b5: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040d6a7: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040de25: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040df4d: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040df9d: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040e174: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040e6ac: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040e76b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000040fb68: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000410050: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000411297: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004112e7: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004113d8: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000411448: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000413056: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000413716: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041474e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004147ae: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000414f0e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041507f: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415e5b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415e8b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415ebb: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415f0b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415f3b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415f68: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415f9b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415fcb: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000415ffb: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041602b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041605b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041608b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041717f: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041738f: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000417b79: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000418c92: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004194bb: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000419533: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000419735: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004197b3: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000419fae: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041a009: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041a25c: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041a2b4: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041a2fc: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041ae22: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041bbe8: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041c67e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041caea: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041d2b4: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041d431: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041d59c: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041d72d: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041f16c: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041f721: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041f814: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041fc7e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041fcdf: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041ff5e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420906: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004209d5: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420a27: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420aa5: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420b41: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000420b97: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042109b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000421190: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042177c: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000421837: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042198b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000422334: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000422399: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000423c5b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000427793: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042787d: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000427b97: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042bd56: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042be3b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042d5fa: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042db15: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042db45: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042f269: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042f29b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042f2ca: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042fc5c: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000430ad9: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004311ca: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043173a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043176a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000431b7a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000431baa: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043202a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043205a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004338b0: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000433aa5: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000433b05: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000433c0a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004399e3: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000439a21: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043cf2d: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043cfe5: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000043e6a7: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044045d: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000440515: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000441f3a: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000443da6: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004441f9: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000444279: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004442c3: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000447a05: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000447a57: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000447b9e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000447e28: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004480a7: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044b98e: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044bab8: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044bc9f: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044bf55: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044c015: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044d0c5: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044dfd7: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044f9ff: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000450bb9: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000453262: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004532a8: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000453358: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000453fbe: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000456bd9: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000456c3b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000456cdf: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000458685: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000458734: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000458b07: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000458c13: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000459f50: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000459f9b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045a045: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045a08b: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045bde2: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c177: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c1cd: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c207: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000045c247: or byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000402daa: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b1e: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f6: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040723f: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004073ca: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040744a: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040c521: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040c619: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb33: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a6: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040d702: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040da6d: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040f760: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc2c: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000412db9: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000413853: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041392f: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f3f: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041a17c: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041a210: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1ac: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041e155: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041f39d: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5f8: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000420631: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000420770: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042132d: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042157d: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d05: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b22: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000427730: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042821d: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5a9: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043123b: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea7: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f17: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000043d15e: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000440691: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004439ae: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e3f: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000446002: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b42: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c17: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f06: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f86: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044be66: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000453eff: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f4f: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000459a00: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e6: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045c743: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7c1: or byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041ee87: or byte ptr [rcx + 1], bh; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000040e62f: or byte ptr [rcx + 1], bh; lea rax, [rip + 0x75724]; call qword ptr [rax]; 
0x0000000000419690: or byte ptr [rcx + rcx*4 + 0x41], cl; and byte ptr [rcx + rcx*4], cl; mov rax, rsi; ret; 
0x0000000000413cd1: or byte ptr [rcx + rcx*4 - 9], cl; mov rax, r15; call rax; 
0x000000000040216a: or byte ptr [rcx + riz*2 - 0xa], bh; ret 0x7407; 
0x000000000045b8f5: or byte ptr [rcx - 0x100f1e], al; dec dword ptr [rcx]; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b915: or byte ptr [rcx - 0x100f1e], al; dec dword ptr [rcx]; mov dword ptr [rax + 8], edx; ret; 
0x0000000000439138: or byte ptr [rcx - 0x47], al; add dword ptr [rax], eax; add byte ptr [rax], al; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x00000000004364d2: or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x00000000004364d1: or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x0000000000449484: or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x0000000000449483: or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x000000000044b224: or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x000000000044b223: or byte ptr [rcx - 0x72b76fbe], cl; and al, 8; ret; 
0x0000000000436505: or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x0000000000436504: or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b5: or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b4: or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b255: or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b254: or byte ptr [rcx - 0x74b76bbe], cl; add al, 0x24; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x0000000000403161: or byte ptr [rcx - 0x7d], cl; cmp al, byte ptr [rax]; jne 0x3118; xor eax, eax; ret; 
0x0000000000410755: or byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x0000000000414811: or byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414810: or byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000413e2b: or byte ptr [rcx], al; add byte ptr [rax], al; mov rdi, r14; mov rax, r15; call rax; 
0x000000000040d0c3: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d21c: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d27b: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d2cc: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d338: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d38b: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040d3eb: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000418331: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041f001: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000042004f: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004200e9: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004201b9: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420254: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420305: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420394: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004204fe: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000042059d: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000424f7c: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x00000000004584fa: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045c32a: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045cda6: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000045d40d: or byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000040333f: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004156cd: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000415b97: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004163db: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000041677d: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000043caac: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000043ffdc: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000456b6d: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004585dd: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000459cdc: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004514ee: or byte ptr [rcx], al; add byte ptr [rsi + 0x26], bh; call 0x36bc0; lea rsp, [rsp + 0xc0]; pop rbx; ret; 
0x00000000004512f1: or byte ptr [rcx], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x00000000004512f0: or byte ptr [rcx], al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x000000000041483a: or byte ptr [rcx], al; jne 0x14853; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc39: or byte ptr [rcx], al; jne 0x3cc52; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd8a: or byte ptr [rcx], al; jne 0x3cda3; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440169: or byte ptr [rcx], al; jne 0x40182; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402ba: or byte ptr [rcx], al; jne 0x402d3; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e789: or byte ptr [rcx], al; jne 0x4e7a2; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045152a: or byte ptr [rcx], al; jne 0x51543; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000045183a: or byte ptr [rcx], al; jne 0x51853; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522c9: or byte ptr [rcx], al; jne 0x522e2; mov rax, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x10]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451276: or byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x0000000000451275: or byte ptr [rcx], al; lea rsp, [rsp + 8]; ret; 
0x000000000040340d: or byte ptr [rcx], cl; clc; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040487d: or byte ptr [rcx], cl; clc; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040495d: or byte ptr [rcx], cl; clc; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e4d: or byte ptr [rcx], cl; clc; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040342d: or byte ptr [rcx], cl; clc; and eax, 0xffff; ret; 
0x000000000040489d: or byte ptr [rcx], cl; clc; and eax, 0xffff; ret; 
0x000000000040497d: or byte ptr [rcx], cl; clc; and eax, 0xffff; ret; 
0x0000000000404e2d: or byte ptr [rcx], cl; clc; and eax, 0xffff; ret; 
0x000000000042e1f2: or byte ptr [rcx], cl; ret 0xe281; 
0x000000000042e211: or byte ptr [rcx], cl; ret 0xe281; 
0x0000000000410142: or byte ptr [rdi + 4], bh; call 0xab50; lea rsp, [rsp + 0x210]; pop rbx; ret; 
0x0000000000459ad7: or byte ptr [rdi], cl; mov dh, 0x52; add ecx, dword ptr [rcx]; ror byte ptr [rcx + 0x648d4806], 1; and al, 8; ret; 
0x0000000000425461: or byte ptr [rdi], cl; mov dh, 0xf8; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x000000000040a03c: or byte ptr [rdi], cl; mov edi, 0xf8bf0ff6; call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x000000000045475c: or byte ptr [rdi], cl; popfq; ret; 
0x000000000040bd65: or byte ptr [rdi], cl; xchg esp, eax; ret; 
0x00000000004315a4: or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043189c: or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004319e4: or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cdc: or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043218c: or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e1f: or byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000430a4d: or byte ptr [rdx + 1], bh; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ecd: or byte ptr [rdx + 1], bh; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000042432f: or byte ptr [rdx + 2], bh; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000416ff7: or byte ptr [rdx - 0x73], cl; cmp al, 0x38; mov rax, qword ptr [rbx]; mov rsi, qword ptr [rax]; mov rax, r14; call rax; 
0x000000000040662f: or byte ptr [rdx], 0x44; and al, 7; mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000410267: or byte ptr [rdx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041c765: or byte ptr [rdx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x000000000041c7b5: or byte ptr [rdx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420dc5: or byte ptr [rdx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000420e15: or byte ptr [rdx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000406822: or byte ptr [rip + 0x7fff], ah; movsxd rax, eax; ret; 
0x0000000000406821: or byte ptr [rip + 0x7fff], r12b; movsxd rax, eax; ret; 
0x0000000000428473: or byte ptr [rsi + 0x44], ah; mov dword ptr [rax], ebp; pop r13; pop r12; pop rbx; ret; 
0x000000000042a647: or byte ptr [rsi + 0x44], ah; mov dword ptr [rax], ebp; pop r13; pop r12; pop rbx; ret; 
0x00000000004054a6: or byte ptr [rsi + 0xf], ah; sub eax, ecx; lea rsp, [rsp + 0x28]; ret; 
0x00000000004216c9: or byte ptr [rsi - 0x39], ah; add byte ptr [rax + rax + 0x48], ah; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041bcdb: or byte ptr [rsi - 0x39], ah; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041bd2b: or byte ptr [rsi - 0x39], ah; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041beee: or byte ptr [rsi - 0x39], ah; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042147a: or byte ptr [rsi - 0x39], ah; add byte ptr [rbp], ah; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041c568: or byte ptr [rsi - 0x39], ah; add byte ptr [rbp], ah; mov qword ptr [rbx + 0x18], 0; pop rbx; ret; 
0x000000000041cc80: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000421981: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415361: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000041dca0: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000041ddb4: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x0000000000422540: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000042264c: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop r13; pop r12; pop rbx; ret; 
0x000000000041ca00: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop rbx; ret; 
0x000000000041dbb5: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop rbx; ret; 
0x0000000000421a15: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop rbx; ret; 
0x0000000000421aa3: or byte ptr [rsi - 0x39], ah; add byte ptr [rdi], ah; pop rbx; ret; 
0x0000000000417dde: or byte ptr [rsi - 0x75], ah; add ah, byte ptr [rsi - 0x39]; add al, byte ptr [rax]; add byte ptr [rip + 0xffff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000432298: or byte ptr [rsi - 0x77], ah; and al, 8; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043226f: or byte ptr [rsi - 0x77], ah; and al, 8; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043222c: or byte ptr [rsi - 0x77], ah; and al, 8; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c5: or byte ptr [rsi - 0x77], ah; and al, 8; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000040675e: or byte ptr [rsi - 0x77], ah; clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004032bf: or byte ptr [rsi - 0x77], ah; fsub dword ptr [rsi - 0x77]; add ah, byte ptr [rip + 0xffff]; pop rbx; ret; 
0x0000000000403309: or byte ptr [rsi - 0x77], ah; fsub dword ptr [rsi - 0x77]; add ah, byte ptr [rip + 0xffff]; pop rbx; ret; 
0x0000000000432297: or byte ptr [rsi - 0x77], spl; and al, 8; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043226e: or byte ptr [rsi - 0x77], spl; and al, 8; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x000000000043222b: or byte ptr [rsi - 0x77], spl; and al, 8; lea r8, [rip + 0x43a67]; call 0x390b0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004322c4: or byte ptr [rsi - 0x77], spl; and al, 8; lea rsi, [rip + 0x439ce]; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x000000000040675d: or byte ptr [rsi - 0x77], spl; clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000424d22: or byte ptr [rsi], al; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000424d3c: or byte ptr [rsi], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000435597: or byte ptr gs:[rax - 0x77], 0xec; pop rbp; ret; 
0x000000000040ebc1: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ecdb: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000040edea: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004313da: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e292: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e352: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x0000000000449b5b: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x000000000044b8fb: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov r14, qword ptr [rbp - 0x70]; mov rsp, rbp; pop rbp; ret; 
0x00000000004119b5: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000411a75: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000429ee8: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x000000000042c2e8: or byte ptr gs:[rbx + rcx*4 + 0x6d], 0x88; mov rsp, rbp; pop rbp; ret; 
0x0000000000418cc4: or ch, bh; add al, 0; call qword ptr [rax]; 
0x000000000040340a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040487a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040495a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e4a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040342a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x000000000040489a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x000000000040497a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e2a: or cl, al; out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x0000000000402559: or cl, byte ptr [rax + 0x39]; retf 0xd177; or rax, 0xffffffffffffffff; ret; 
0x0000000000402465: or cl, byte ptr [rax + 0x39]; retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e5: or cl, byte ptr [rax + 0x39]; retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x000000000043a321: or cl, byte ptr [rax + 0x63]; rol byte ptr [rax + 0x56107c], cl; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x00000000004341dc: or cl, byte ptr [rax - 0x387cb7e9]; add dword ptr [rax - 0x178affc1], eax; ret; 
0x000000000043420c: or cl, byte ptr [rax - 0x387cb7e9]; add dword ptr [rax - 0x178affc1], eax; ret; 
0x000000000041158a: or cl, byte ptr [rax - 0x73]; adc eax, 0x7159e; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040db00: or cl, byte ptr [rax - 0x73]; adc eax, 0x75038; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040d85a: or cl, byte ptr [rax - 0x73]; adc eax, 0x752be; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000040b969: or cl, byte ptr [rax - 0x73]; adc eax, 0x771af; mov ax, word ptr [rdx]; and eax, 0xffff; ret; 
0x000000000041b367: or cl, byte ptr [rax - 0x73]; add eax, 0x4d551; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b337: or cl, byte ptr [rax - 0x73]; add eax, 0x4d581; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b307: or cl, byte ptr [rax - 0x73]; add eax, 0x4d5b1; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b2d7: or cl, byte ptr [rax - 0x73]; add eax, 0x4d5e1; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b2a7: or cl, byte ptr [rax - 0x73]; add eax, 0x4d611; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041b277: or cl, byte ptr [rax - 0x73]; add eax, 0x4d641; mov byte ptr [rax], 1; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b207: or cl, byte ptr [rax - 0x73]; add eax, 0x4d6b1; mov byte ptr [rax], 1; mov eax, 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000041b1d7: or cl, byte ptr [rax - 0x73]; add eax, 0x4d6e1; mov byte ptr [rax], 1; lea rsp, [rsp + 8]; ret; 
0x000000000041d7fc: or cl, byte ptr [rax - 0x73]; or eax, 0x6531c; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x000000000042f65a: or cl, byte ptr [rax - 0x75]; adc al, 0x24; cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x0000000000414528: or cl, byte ptr [rax - 0x77]; fbstp tbyte ptr [rcx]; imul al; mov ebp, 0x5bffff75; ret; 
0x000000000040ea22: or cl, byte ptr [rax - 0x77]; fbstp tbyte ptr [rcx]; imul al; ret; 
0x0000000000413b30: or cl, byte ptr [rax - 0x7d]; ret 0xf01; 
0x00000000004032b9: or cl, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x0000000000413032: or cl, byte ptr [rcx + rcx*4 - 0x19]; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000410aa0: or cl, byte ptr [rcx - 0x7f]; ret 0xd800; 
0x0000000000443fbb: or cl, byte ptr [rdi]; mov bh, 0x7c; and al, 8; call 0x43610; lea rsp, [rsp + 0x18]; ret; 
0x00000000004032f2: or cl, byte ptr [rdx]; or byte ptr [rax], al; mov edi, dword ptr [rdx]; call rax; 
0x0000000000439292: or cl, dl; add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x000000000040732d: or dh, al; add byte ptr [rcx], al; mov byte ptr [rax + 1], sil; ret; 
0x000000000045b9e9: or dl, byte ptr [rax + rax]; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x00000000004477b5: or dl, dh; movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477fb: or dl, dh; movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044783b: or dl, dh; movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478b2: or dl, dh; movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f6: or dl, dh; movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447936: or dl, dh; movups xmmword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000045b969: or dword ptr [rax + rax], edx; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9cb: or dword ptr [rax + rax], edx; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000040cfb8: or dword ptr [rax - 0x39], ecx; add eax, dword ptr [rax]; add dword ptr [rax], eax; add bl, ch; and cl, byte ptr [rax - 0x77]; ret 0x8d48; 
0x000000000040ef16: or dword ptr [rax - 0x39], ecx; ret; 
0x000000000041838c: or dword ptr [rax - 0x73], ecx; adc eax, 0x6a76c; mov dword ptr [rdx], eax; call 0x18340; lea rsp, [rsp + 8]; ret; 
0x00000000004533a1: or dword ptr [rax - 0x73], ecx; add eax, 0x22b57; call qword ptr [rax]; 
0x00000000004533a1: or dword ptr [rax - 0x73], ecx; add eax, 0x22b57; call qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000418cc0: or dword ptr [rax - 0x73], ecx; add eax, 0x4fd08; call qword ptr [rax]; 
0x0000000000417f41: or dword ptr [rax - 0x73], ecx; add eax, 0x50997; call qword ptr [rax]; 
0x000000000040bad3: or dword ptr [rax - 0x73], ecx; js 0xbac8; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x000000000040dcf3: or dword ptr [rax - 0x73], ecx; js 0xdce8; call 0x2620; lea rsp, [rsp + 8]; ret; 
0x0000000000439721: or dword ptr [rax - 0x75], ecx; add al, 0x24; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439764: or dword ptr [rax - 0x75], ecx; add al, 0x24; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000411ac4: or dword ptr [rax - 0x75], ecx; clc; add rax, 1; ret; 
0x0000000000446d22: or dword ptr [rax - 0x75], ecx; cmp al, 0x24; call 0x46db0; lea rsp, [rsp + 0x28]; ret; 
0x000000000040f8d6: or dword ptr [rax - 0x7d], ecx; ret; 
0x000000000041f923: or dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000402f39: or dword ptr [rax], eax; add byte ptr [rax], al; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000403303: or dword ptr [rax], ecx; add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x0000000000415273: or dword ptr [rax], edi; add eax, 0x3a834800; add byte ptr [rsp + rcx + 0x48], dh; mov esi, eax; lea rax, [rip + 0x537f9]; call qword ptr [rax]; 
0x000000000044fcba: or dword ptr [rcx + rcx*4 - 1], ecx; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x000000000040ab3b: or dword ptr [rdi], ecx; mov dh, 0xd1; cmp byte ptr [rdi + rdx], 0x30; je 0xab30; mov rax, rcx; ret; 
0x000000000042e933: or dword ptr [rdx], esi; add al, 0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000417f73: or dword ptr [rip + 0x100c600], eax; call 0x17ef0; lea rsp, [rsp + 8]; ret; 
0x0000000000417edc: or dword ptr [rip + 0x100c600], eax; mov edi, 0xca; call 0x185b0; pop rbx; ret; 
0x0000000000417f39: or dword ptr [rip + 0x38834800], eax; add byte ptr [rcx + rcx + 0x48], dh; lea eax, [rip + 0x50997]; call qword ptr [rax]; 
0x0000000000417f46: or dword ptr [rip + 0x4110ff00], eax; pop rbp; pop r12; pop rbx; ret; 
0x0000000000419178: or dword ptr [rip + 0x648d4800], eax; and al, 8; ret; 
0x00000000004191a8: or dword ptr [rip + 0x648d4800], eax; and al, 8; ret; 
0x00000000004191c8: or dword ptr [rip + 0x648d4800], eax; and al, 8; ret; 
0x0000000000419208: or dword ptr [rip + 0x648d4800], eax; and al, 8; ret; 
0x0000000000419228: or dword ptr [rip + 0x648d4800], eax; and al, 8; ret; 
0x00000000004195bd: or eax, 0x10508b48; and rdx, 0xffffffffffffffe0; add rax, rdx; jmp 0x195b0; ret; 
0x000000000041d4e5: or eax, 0x13158d48; push 0x3a8b0006; call rax; 
0x0000000000453671: or eax, 0x243c8b48; mov esi, dword ptr [rsp + 8]; call 0x532d0; lea rsp, [rsp + 0x88]; ret; 
0x000000000045b21d: or eax, 0x24748d48; mov rdi, rbx; call 0x4200; lea rsp, [rsp + 0x190]; pop rbx; ret; 
0x00000000004273d3: or eax, 0x25158d48; mov ebx, 0x3a8b0005; call rax; 
0x0000000000420fcc: or eax, 0x2c058d48; sub eax, 0x388b0006; call rdx; 
0x0000000000422fcb: or eax, 0x2d158d48; or eax, 0x3a8b0006; call rax; 
0x000000000041d1c9: or eax, 0x2f158d48; imul eax, dword ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426e00: or eax, 0x30; mov dword ptr [rbp + 0x18], eax; mov rsp, rbp; pop rbp; ret; 
0x000000000041bcc3: or eax, 0x35158d48; add byte ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f20: or eax, 0x3a8b0006; call rax; 
0x0000000000422fd0: or eax, 0x3a8b0006; call rax; 
0x000000000043b221: or eax, 0x3aa7a; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x0000000000426cbc: or eax, 0x3c158d48; ret 5; 
0x00000000004392f7: or eax, 0x3c9a4; call 0x392b0; lea rsp, [rsp + 8]; ret; 
0x0000000000439291: or eax, 0x3ca0a; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439161: or eax, 0x3cb3a; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000436fa7: or eax, 0x3ecf4; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000436bc6: or eax, 0x3f0d5; call 0x36be0; mov rsp, rbp; pop rbp; ret; 
0x000000000040662d: or eax, 0x440a8024; and al, 7; mov byte ptr [rsp + 7], al; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004546cf: or eax, 0x48000000; lea esp, [rsp + 0x18]; ret; 
0x000000000043487f: or eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x0000000000432f7f: or eax, 0x48000020; lea esp, [rsp + 8]; ret; 
0x00000000004327ef: or eax, 0x48000027; lea esp, [rsp + 8]; ret; 
0x00000000004312ff: or eax, 0x48000032; lea esp, [rsp + 8]; ret; 
0x000000000040163f: or eax, 0x48000167; mov ebx, dword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000423b27: or eax, 0x48000462; lea esp, [rsp + 8]; ret; 
0x000000000041ad37: or eax, 0x480006a0; lea esp, [rsp + 8]; ret; 
0x000000000045c7df: or eax, 0x48fffaf3; lea esp, [rsp + 8]; ret; 
0x00000000004559cf: or eax, 0x48fffffe; lea esp, [rsp + 0x18]; ret; 
0x0000000000403a3b: or eax, 0x49fe8948; mov ecx, ecx; sub r9, rsi; mov rax, r9; ret; 
0x00000000004217ac: or eax, 0x4c158d48; and eax, 0x3a8b0006; call rax; 
0x000000000042732a: or eax, 0x4e058d48; mov edi, 0x388b0005; call rdx; 
0x0000000000417eba: or eax, 0x4e158d48; mov esi, 0x3a8b0006; call rax; 
0x000000000042729a: or eax, 0x5e158d48; mov esp, 0x3a8b0005; call rax; 
0x000000000041d499: or eax, 0x5f058d48; push 0x388b0006; call rdx; 
0x0000000000425af2: or eax, 0x5fb09; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000422796: or eax, 0x62158d48; adc eax, 0x3a8b0006; call rax; 
0x000000000041d7ff: or eax, 0x6531c; mov dx, word ptr [rcx]; mov word ptr [rax + 0x374], dx; ret; 
0x0000000000427407: or eax, 0x71158d48; mov esi, 0x3a8b0005; call rax; 
0x0000000000434160: or eax, 0x74f68548; mov rax, 0xffffffffffffffff; ret; 
0x0000000000433ffb: or eax, 0x74f68548; push rdi; mov rax, 0xffffffffffffffff; ret; 
0x0000000000418100: or eax, 0x78158d48; mov eax, 0x3a8b0006; call rax; 
0x000000000041817e: or eax, 0x7a158d48; mov ebx, 0x3a8b0006; call rax; 
0x0000000000407328: or eax, 0x7ec98548; or dh, al; add byte ptr [rcx], al; mov byte ptr [rax + 1], sil; ret; 
0x0000000000459286: or eax, 0x7f; movsx eax, ax; ret; 
0x00000000004030d9: or eax, 0x83480008; cmp byte ptr [rax], al; jne 0x30e5; xor eax, eax; ret; 
0x000000000041bc71: or eax, 0x87158d48; add byte ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c70: or eax, 0x88158d48; ret 5; 
0x0000000000439cbf: or eax, 0x89480000; in al, dx; pop rbp; ret; 
0x000000000040cac7: or eax, 0x89660000; ret 0x2d66; 
0x0000000000453d9f: or eax, 0x89fffc12; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042407f: or eax, 0x89ffffff; ret 0xe283; 
0x0000000000459532: or eax, 0x8b31; mov esi, 0xff; call 0x3da0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000042376b: or eax, 0x8d158d48; add eax, 0x3a8b0006; call rax; 
0x0000000000417d6b: or eax, 0x8d158d48; mov edi, 0x3a8b0006; call rax; 
0x000000000041a002: or eax, 0x8d480000; and al, 8; pop r12; pop rbx; ret; 
0x0000000000430ed5: or eax, 0x8d48fffe; and al, 0x18; ret; 
0x00000000004030d4: or eax, 0x94058d48; or eax, 0x83480008; cmp byte ptr [rax], al; jne 0x30e5; xor eax, eax; ret; 
0x0000000000422762: or eax, 0x96058d48; adc eax, 0x388b0006; call rdx; 
0x000000000042845b: or eax, 0x9d058d48; mov eax, 0x388b0005; call rdx; 
0x0000000000427357: or eax, 0xa1058d48; mov ebx, 0x388b0005; call rdx; 
0x0000000000421757: or eax, 0xa1158d48; and eax, 0x3a8b0006; call rax; 
0x000000000042714d: or eax, 0xab058d48; mov ebp, 0x388b0005; call rdx; 
0x0000000000415349: or eax, 0xaf158d48; jmp 0x3a8c5359; call rax; 
0x0000000000452648: or eax, 0xb0058d48; lsl eax, word ptr [rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d590: or eax, 0xc4940f41; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000452ebf: or eax, 0xc600032d; sbb byte ptr [rcx], al; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000041bc30: or eax, 0xc8158d48; add byte ptr [rsi], 0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000428424: or eax, 0xd4058d48; mov eax, 0x388b0005; call rdx; 
0x000000000041531b: or eax, 0xdd058d48; jmp 0x388c532b; call rdx; 
0x0000000000422f1b: or eax, 0xdd158d48; or eax, 0x3a8b0006; call rax; 
0x0000000000417c39: or eax, 0xdf058d48; rol byte ptr [rsi], 0; mov edi, dword ptr [rax]; call rdx; 
0x0000000000402e1d: or eax, 0xe8000000; mov edx, 0x48fffff0; lea esp, [rsp + 8]; ret; 
0x00000000004586ee: or eax, 0xe8e7894c; jmp 0xffffffffe905833c; push rsp; idiv bl; jmp qword ptr [rsi + 0x41]; 
0x000000000042738f: or eax, 0xe9158d48; mov esi, 0x3a8b0005; call rax; 
0x00000000004216fc: or eax, 0xfc158d48; and eax, 0x3a8b0006; call rax; 
0x00000000004283f9: or eax, 0xff058d48; mov eax, 0x388b0005; call rdx; 
0x000000000040246c: or eax, 0xffffffff; ret; 
0x00000000004024ec: or eax, 0xffffffff; ret; 
0x0000000000402560: or eax, 0xffffffff; ret; 
0x000000000042545f: or eax, 8; movzx edi, al; call 0x253d0; lea rsp, [rsp + 8]; ret; 
0x0000000000402370: or eax, dword ptr [rax + rcx*4 + 1]; inc rcx; dec rdx; jne 0x2371; ret; 
0x0000000000402f5c: or eax, dword ptr [rax]; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x000000000043f8f1: or eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000443371: or eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042e641: or eax, dword ptr [rax]; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004239d8: or eax, dword ptr [rax]; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239ee: or eax, dword ptr [rax]; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000045995c: or eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045995b: or eax, dword ptr [rax]; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000439ee8: or eax, dword ptr [rbp + 0x38]; out 0xf, al; xchg ebp, eax; ret; 
0x000000000041c9b5: or eax, dword ptr [rbx + 0x67402f8]; mov rdi, rbx; call qword ptr [rbx + 0x48]; 
0x0000000000432c1f: or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432def: or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432fcd: or eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331dd: or eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333bd: or eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335cd: or eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000419024: or eax, dword ptr [rip + 0xcb900]; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419037: or eax, dword ptr [rip - 0x3976b800]; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004053c5: or eax, ecx; mov dword ptr [rsp + 4], eax; movsd xmm1, qword ptr [rsp]; movapd xmm0, xmm1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000407908: or eax, ecx; mov qword ptr [rsi], r8; cmp dx, 0x20; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x000000000045cac1: or eax, ecx; ret; 
0x000000000040340e: or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040487e: or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040495e: or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e4e: or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040342e: or eax, edi; and eax, 0xffff; ret; 
0x000000000040489e: or eax, edi; and eax, 0xffff; ret; 
0x000000000040497e: or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e2e: or eax, edi; and eax, 0xffff; ret; 
0x0000000000459adc: or eax, edx; mov dword ptr [rsi], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000423810: or eax, esi; and eax, 0xffff; ret; 
0x000000000045cab9: or eax, esi; and ecx, 0xfff; or eax, ecx; ret; 
0x0000000000459279: or eax, esi; movsx eax, ax; ret; 
0x00000000004178cd: or eax, esi; ret; 
0x0000000000433c79: or ebp, eax; add ecx, ebp; cld; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x000000000043358e: or ecx, dword ptr [rax - 0x73]; add eax, 0x2dd92; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334be: or ecx, dword ptr [rax - 0x73]; add eax, 0x2de52; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043319e: or ecx, dword ptr [rax - 0x73]; add eax, 0x2e16a; addss xmm0, dword ptr [rax]; ret; 
0x00000000004330ce: or ecx, dword ptr [rax - 0x73]; add eax, 0x2e22a; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004227a3: or ecx, dword ptr [rax - 0x73]; add eax, 0x61555; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x0000000000421a98: or ecx, dword ptr [rax - 0x73]; add eax, 0x62260; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x0000000000421a0a: or ecx, dword ptr [rax - 0x73]; add eax, 0x622ee; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041d870: or ecx, dword ptr [rax - 0x73]; add eax, 0x65688; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d830: or ecx, dword ptr [rax - 0x73]; add eax, 0x65a48; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041dbaa: or ecx, dword ptr [rax - 0x73]; add eax, 0x6614e; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041d983: or ecx, dword ptr [rax - 0x73]; add eax, 0x66375; add rax, 8; mov word ptr [rax], 0; pop rbx; ret; 
0x000000000041c9f5: or ecx, dword ptr [rax - 0x73]; add eax, 0x67303; add rax, 8; mov word ptr [rax], 0x67; pop rbx; ret; 
0x000000000041bee3: or ecx, dword ptr [rax - 0x73]; add eax, 0x67e15; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bd20: or ecx, dword ptr [rax - 0x73]; add eax, 0x67fd8; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041bcd0: or ecx, dword ptr [rax - 0x73]; add eax, 0x68028; add rax, 8; mov word ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x000000000041a9b7: or ecx, dword ptr [rax - 0x73]; add eax, 0x681b1; add rax, 8; mov qword ptr [rax], rbx; pop rbx; ret; 
0x0000000000417e20: or ecx, dword ptr [rax - 0x73]; add eax, 0x6ad48; add rax, 8; mov rax, qword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x000000000041d763: or ecx, dword ptr [rax - 0x73]; cmp eax, 0x65b15; add rdi, 8; call 0x1d5f0; lea rsp, [rsp + 8]; ret; 
0x000000000041d5d3: or ecx, dword ptr [rax - 0x73]; cmp eax, 0x65ca5; add rdi, 8; call 0x1d480; lea rsp, [rsp + 8]; ret; 
0x000000000041d463: or ecx, dword ptr [rax - 0x73]; cmp eax, 0x65e15; add rdi, 8; call 0x1d300; lea rsp, [rsp + 8]; ret; 
0x000000000041d2e3: or ecx, dword ptr [rax - 0x73]; cmp eax, 0x65f95; add rdi, 8; call 0x1d1b0; lea rsp, [rsp + 8]; ret; 
0x0000000000418140: or ecx, dword ptr [rax - 0x73]; cmp eax, 0x6b838; add rdi, 8; call 0x1cbe0; lea rsp, [rsp + 8]; ret; 
0x00000000004043f3: or ecx, dword ptr [rax - 0x73]; push rax; add cl, byte ptr [rax + 0x39]; bnd jl 0x43ff; xor eax, eax; ret; 
0x0000000000436553: or ecx, dword ptr [rax - 0x75]; add al, 0x24; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x0000000000449505: or ecx, dword ptr [rax - 0x75]; add al, 0x24; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x000000000044b2a5: or ecx, dword ptr [rax - 0x75]; add al, 0x24; mov rax, qword ptr [rax]; mov byte ptr [rax - 0x74], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004078db: or ecx, edi; mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x0000000000425400: or edi, eax; call 0x24f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cf3f: or edi, edi; jmp qword ptr [rsi - 0x77]; 
0x000000000041cf3f: or edi, edi; jmp qword ptr [rsi - 0x77]; ret 0x2d66; 
0x0000000000405082: or edi, edx; call 0x5090; lea rsp, [rsp + 8]; ret; 
0x00000000004178e9: or edi, esi; shr edi, 1; xor eax, edi; ret; 
0x000000000045b94d: or edx, 0x30; mov dword ptr [rax + 8], edx; mov byte ptr [rax + 0x17], 1; mov byte ptr [rax + 0x16], 0; ret; 
0x000000000045ba09: or edx, dword ptr [rax + rax]; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000456d18: or edx, dword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000432652: or edx, eax; mov byte ptr [rdi], dl; movsx eax, dl; ret; 
0x0000000000432462: or edx, eax; mov byte ptr [rdi], dl; movzx eax, dl; ret; 
0x0000000000432842: or edx, eax; mov word ptr [rdi], dx; movsx eax, dx; ret; 
0x0000000000432a32: or edx, eax; mov word ptr [rdi], dx; movzx eax, dx; ret; 
0x0000000000404bb4: or edx, esi; mov byte ptr [r12 + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c0a: or edx, esi; mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045b8fc: or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b91c: or edx, esi; mov dword ptr [rax + 8], edx; ret; 
0x0000000000406de9: or edx, esi; mov dword ptr [rax], edx; ret; 
0x0000000000406e14: or edx, esi; mov dword ptr [rax], edx; ret; 
0x0000000000406e45: or edx, esi; mov dword ptr [rax], edx; ret; 
0x0000000000406b1f: or edx, esi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b6e: or edx, esi; mov qword ptr [rax], rdx; ret; 
0x0000000000406bc1: or edx, esi; mov qword ptr [rax], rdx; ret; 
0x0000000000406845: or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x0000000000406875: or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x00000000004477af: or esi, edx; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f5: or esi, edx; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447835: or esi, edx; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ac: or esi, edx; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478f0: or esi, edx; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447930: or esi, edx; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416738: or esi, esi; setne sil; mov rdi, rax; call qword ptr [rip + 0x6d891]; lea rsp, [rsp + 8]; ret; 
0x0000000000416719: or esi, esi; setne sil; mov rdi, rax; call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x0000000000415688: or esi, esi; setne sil; mov rdi, rax; call qword ptr [rip + 0x6e941]; lea rsp, [rsp + 8]; ret; 
0x0000000000415669: or esi, esi; setne sil; mov rdi, rax; call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x0000000000426c23: or esp, esp; add eax, 0x41388b00; mov eax, 1; call 0x259a0; lea rsp, [rsp + 8]; ret; 
0x0000000000452ecf: or r12b, r15b; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000407907: or r8, r9; mov qword ptr [rsi], r8; cmp dx, 0x20; jl 0x791b; mov dword ptr [rax], 0; ret; 
0x0000000000419127: or r8b, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x0000000000404cec: or r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4ce0; ret; 
0x00000000004032b8: or r9b, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x6608; 
0x000000000040246b: or rax, 0xffffffffffffffff; ret; 
0x00000000004024eb: or rax, 0xffffffffffffffff; ret; 
0x000000000040255f: or rax, 0xffffffffffffffff; ret; 
0x0000000000432fcc: or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331dc: or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333bc: or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335cc: or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004078da: or rcx, rdi; mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x0000000000456d17: or rdx, qword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000404bb3: or rdx, rsi; mov byte ptr [r12 + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000404c09: or rdx, rsi; mov byte ptr [rbx + rax], dl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000406de8: or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406e44: or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406b1e: or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b6d: or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406bc0: or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406844: or rdx, rsi; mov word ptr [rax + 8], dx; ret; 
0x0000000000416718: or si, si; setne sil; mov rdi, rax; call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x0000000000415668: or si, si; setne sil; mov rdi, rax; call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x0000000000414a83: out 0, eax; add byte ptr [rax], al; call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x0000000000402dc9: out 0, eax; add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x000000000040107e: out 0, eax; add byte ptr [rax], al; mov edi, dword ptr [rbp - 4]; syscall; 
0x00000000004031b1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x00000000004577c1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x1000; sete al; ret; 
0x0000000000403181: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000457791: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x2000; sete al; ret; 
0x0000000000403171: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000457781: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x4000; sete al; ret; 
0x0000000000403191: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004577a1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x6000; sete al; ret; 
0x00000000004031a1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004577b1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0x8000; sete al; ret; 
0x00000000004031c1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004577d1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0xa000; sete al; ret; 
0x00000000004031d1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x00000000004577e1: out 0, eax; lock add byte ptr [rax], al; cmp edi, 0xc000; sete al; ret; 
0x0000000000406de6: out 0x17, al; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406e12: out 0x1f, al; or edx, esi; mov dword ptr [rax], edx; ret; 
0x000000000044ba09: out 0x31, al; rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x00000000004118a1: out 0x31, eax; shr al, cl; xlatb; mov dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000406b1c: out 0x34, al; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b6b: out 0x3f, al; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x000000000041b430: out 0x41, eax; pop rbp; pop r12; pop rbx; ret; 
0x000000000041b4c0: out 0x41, eax; pop rbp; pop r12; pop rbx; ret; 
0x0000000000453318: out 0x41, eax; pop rbp; pop r12; pop rbx; ret; 
0x000000000042f261: out 0x44, al; mov eax, esp; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456513: out 0x48, al; lea eax, [rip + 0x2f2c5]; call qword ptr [rax]; 
0x00000000004508ef: out 0x48, al; lea eax, [rip + 0x34ef9]; call qword ptr [rax]; 
0x0000000000427572: out 0x48, al; lea eax, [rip + 0x5daf6]; mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x0000000000453fb9: out 0x48, al; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000450c47: out 0x48, al; mov edi, dword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413166: out 0x48, al; mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004132ff: out 0x48, al; mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134bf: out 0x48, al; mov edi, dword ptr [rsp + 0x18]; mov rax, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041676f: out 0x48, al; mov edi, eax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156bf: out 0x48, al; mov edi, eax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000413087: out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041321a: out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133ba: out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450bdb: out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041d8a6: out 0x48, al; mov edi, ebx; call 0x1c7c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004226d6: out 0x48, al; mov edi, ebx; call 0x21fe0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004222a1: out 0x48, al; mov edi, ebx; call 0x21fe0; lea rsp, [rsp + 0x320]; pop rbx; ret; 
0x0000000000415180: out 0x48, al; mov edi, ebx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x78]; 
0x00000000004527ca: out 0x48, al; mov edi, esp; lea rax, [rip + 0x161db]; call qword ptr [rax]; 
0x0000000000456dd8: out 0x48, eax; and edi, dword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x0000000000452828: out 0x48, eax; lea eax, [rip + 0x16180]; call qword ptr [rax]; 
0x00000000004527cd: out 0x48, eax; lea eax, [rip + 0x161db]; call qword ptr [rax]; 
0x000000000045333a: out 0x48, eax; lea eax, [rip + 0x22bce]; call qword ptr [rax]; 
0x0000000000453172: out 0x48, eax; lea eax, [rip + 0x326a6]; call qword ptr [rax]; 
0x0000000000453172: out 0x48, eax; lea eax, [rip + 0x326a6]; call qword ptr [rax]; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000449d3c: out 0x48, eax; lea eax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000043b546: out 0x48, eax; lea eax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000041894e: out 0x48, eax; lea eax, [rip + 0x5005a]; call qword ptr [rax]; 
0x00000000004188fb: out 0x48, eax; lea eax, [rip + 0x500ad]; call qword ptr [rax]; 
0x00000000004182a8: out 0x48, eax; lea eax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000040e06d: out 0x48, eax; lea eax, [rip + 0x75ceb]; call qword ptr [rax]; 
0x000000000041ee82: out 0x48, eax; lea esi, [rsp + 8]; mov ecx, 1; lea rax, [rip + 0x64ecc]; call qword ptr [rax]; 
0x000000000045c64f: out 0x48, eax; mov eax, dword ptr [rsp + 0x170]; call rax; 
0x000000000045c4ff: out 0x48, eax; mov eax, dword ptr [rsp + 0x68]; call rax; 
0x000000000040ea0d: out 0x48, eax; mov esi, ebx; mov rcx, rax; movzx edx, r14w; lea rax, [rip + 0x75341]; call qword ptr [rax]; 
0x0000000000413035: out 0x49, eax; mov eax, dword ptr [rsp]; call qword ptr [rax + 8]; 
0x000000000040b700: out 0x49, eax; shl eax, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x000000000040e0f3: out 0x4c, al; mov edi, ebp; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x0000000000431c86: out 0x4d, al; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c66: out 0x4e, al; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431836: out 0x56, al; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c136: out 0x58, al; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004336c6: out 0x60, al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431ae6: out 0x72, al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed76: out 0x7e, al; add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000040321d: out 0x7f, eax; je 0x3224; mov al, 1; ret; 
0x000000000045782d: out 0x7f, eax; je 0x57834; mov al, 1; ret; 
0x00000000004031e1: out 0x7f, eax; sete al; ret; 
0x00000000004577f1: out 0x7f, eax; sete al; ret; 
0x00000000004184bf: out 0x89, al; fisttp word ptr [rax - 0x73]; add eax, 0x504f7; call qword ptr [rax]; 
0x000000000042380e: out 0xa, al; or eax, esi; and eax, 0xffff; ret; 
0x00000000004295f8: out 0xba, eax; add byte ptr [rax], 0; add al, ch; sub eax, 0x89000002; ret; 
0x000000000045cab7: out 0xc, al; or eax, esi; and ecx, 0xfff; or eax, ecx; ret; 
0x0000000000439797: out 0xe8, al; adc esi, dword ptr [rax - 0x72b70001]; and al, 8; ret; 
0x000000000043534a: out 0xe8, al; and byte ptr [rbp - 3], bh; jmp qword ptr [rsi - 0x75]; 
0x000000000042f321: out 0xe8, al; mov ecx, 0x41000000; pop rbp; pop r12; pop rbx; ret; 
0x000000000042c7d1: out 0xe8, al; mov ecx, 0x8800027d; ret; 
0x0000000000433afb: out 0xe8, al; mov edi, 0x48000007; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000043290b: out 0xe8, al; pop rdi; cmpsd dword ptr [rsi], dword ptr [rdi]; std; jmp qword ptr [rsi - 0x77]; 
0x00000000004353bb: out 0xe8, al; scasd eax, dword ptr [rdi]; jl 0x353bd; jmp qword ptr [rsi - 0x75]; 
0x00000000004557c7: out 0xe8, eax; adc edx, -6; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044c0cb: out 0xe8, eax; call ptr [rsi - 5]; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040af61: out 0xe8, eax; imul eax, dword ptr [rax], 0x89480000; ret; 
0x00000000004586f1: out 0xe8, eax; jmp 0xffffffffe905833c; push rsp; idiv bl; jmp qword ptr [rsi + 0x41]; 
0x000000000045706f: out 0xe8, eax; mov ebx, 0x89fffabf; ret; 
0x0000000000459cca: out 0xe8, eax; or byte ptr [rbp - 0x76b70006], 0xc7; call 0x594b0; lea rsp, [rsp + 0x108]; ret; 
0x00000000004546cd: out 0xe8, eax; or eax, 0x48000000; lea esp, [rsp + 0x18]; ret; 
0x000000000042407d: out 0xe8, eax; or eax, 0x89ffffff; ret 0xe283; 
0x0000000000457dd8: out 0xe8, eax; ret 0xfb99; 
0x0000000000458787: out 0xe8, eax; ret; 
0x0000000000456f69: out 0xe8, eax; sar esi, 0xff; dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x00000000004598ed: out 0xe8, eax; sbb eax, 0x84000001; ror byte ptr [rdi], 0x95; ret 0x8b48; 
0x000000000040f4a4: out 0xe8, eax; sub edi, edi; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040cac4: out 0xe8, eax; xchg byte ptr [rip - 0x769a0000], cl; ret 0x2d66; 
0x0000000000455403: out 0xe8, eax; xchg edi, eax; ret; 
0x0000000000406873: out 0xf, al; or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x0000000000439eeb: out 0xf, al; xchg ebp, eax; ret; 
0x0000000000404a46: out 0xf, eax; movzx eax, byte ptr [rax + rdi]; add eax, edx; and eax, 0xff; ret; 
0x0000000000438d8b: out 0xff, al; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x00000000004149e1: out 0xff, al; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004150ff: out 0xff, al; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000438d16: out 0xff, al; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042fceb: out 0xff, al; dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000042fd2b: out 0xff, al; dec dword ptr [rax - 0x77]; ret 0x8348; 
0x000000000042fc97: out 0xff, al; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000040683f: out 0xff, al; jg 0x6843; add byte ptr [rax + 9], cl; mov word ptr [rax + 8], dx; ret; 
0x0000000000416805: out 0xff, eax; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000447529: out 2, eax; add al, ch; sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000403716: out 3, al; add r9, rsi; sar r9, 2; mov rax, r9; ret; 
0x0000000000417bc1: out 4, eax; movsxd rdi, edi; movsxd rsi, esi; lea rax, [rdi + rsi]; ret; 
0x000000000041590b: out 6, al; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041596a: out 6, al; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000041599b: out 6, al; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004159c6: out 6, al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004159d8: out 6, al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000415943: out 6, al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000045c266: out 6, al; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004158db: out 6, eax; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000403797: out 7, al; add r9, rsi; sar r9, 3; mov rax, r9; ret; 
0x000000000040340c: out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040487c: out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040495c: out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e4c: out 8, eax; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040342c: out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x000000000040489c: out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x000000000040497c: out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e2c: out 8, eax; or eax, edi; and eax, 0xffff; ret; 
0x0000000000407492: out dx, al; add al, 0x83; clc; add dword ptr [rdi - 0x21], edi; ret; 
0x0000000000407555: out dx, al; add al, 0x83; clc; add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000407665: out dx, al; add al, 0x83; clc; add dword ptr [rdi - 0x24], edi; ret; 
0x0000000000423c70: out dx, al; add eax, 0x48028900; lea esp, [rsp + 8]; ret; 
0x00000000004074d2: out dx, al; add eax, dword ptr [rbx - 0x2080fe08]; ret; 
0x0000000000407595: out dx, al; add eax, dword ptr [rbx - 0x2380fe08]; ret; 
0x0000000000432bae: out dx, al; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000422472: out dx, al; call 0x20fb0; pop r13; pop r12; pop rbx; ret; 
0x000000000044a0b9: out dx, al; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000040750a: out dx, al; cmp eax, 1; jg 0x74f8; ret; 
0x00000000004075cb: out dx, al; cmp eax, 1; jg 0x75b8; ret; 
0x0000000000416666: out dx, al; fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000404fa4: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fc4: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404fe4: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405004: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405024: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405044: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000405064: out dx, al; fstp xword ptr [rbp - 0x10]; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000044a079: out dx, al; lea rcx, [rax + 1]; sub rcx, rdx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x0000000000417e62: out dx, al; mov edi, ebx; lea rax, [rip + 0x50b84]; call qword ptr [rax]; 
0x0000000000417095: out dx, al; mov rax, r15; call rax; 
0x000000000045c93e: out dx, al; push rsp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042563e: out dx, al; ret 4; 
0x000000000040247c: out dx, al; ret; 
0x0000000000402570: out dx, al; sar rax, 1; ret; 
0x00000000004560e2: out dx, al; sti; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000456194: out dx, al; sti; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004554fd: out dx, al; xor eax, dword ptr [rdx]; add byte ptr [0xff], al; pop rbx; ret; 
0x0000000000456c59: out dx, al; xor eax, eax; ret; 
0x0000000000456c79: out dx, al; xor eax, eax; ret; 
0x0000000000456d89: out dx, al; xor eax, eax; ret; 
0x0000000000456da9: out dx, al; xor eax, eax; ret; 
0x0000000000404e66: out dx, eax; adc byte ptr [rcx], al; clc; ret; 
0x0000000000404e76: out dx, eax; adc byte ptr [rcx], al; clc; ret; 
0x0000000000404a8a: out dx, eax; add al, 0x48; cmp edx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404ac7: out dx, eax; add al, 0x48; cmp edx, 7; jl 0x4ab0; ret; 
0x000000000042388d: out dx, eax; add eax, 0xeae80006; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423bd9: out dx, eax; add eax, 0xff388b00; adc eax, 0x6030c; lea rsp, [rsp + 8]; ret; 
0x0000000000404e89: out dx, eax; and byte ptr [rax + 1], cl; clc; ret; 
0x0000000000404e99: out dx, eax; and byte ptr [rax + 1], cl; clc; ret; 
0x000000000040e0f6: out dx, eax; lea rax, [rip + 0x75c62]; call qword ptr [rax]; 
0x000000000044fa7d: out dx, eax; mov dl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040789c: out dx, eax; mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x0000000000450270: out dx, eax; mov eax, dword ptr [rip + 0x28339]; ret; 
0x000000000040ec60: out dx, eax; mov rcx, r14; lea rdx, [rbp - 8]; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x000000000041394d: out dx, eax; push rdi; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004017fd: out dx, eax; ret 1; 
0x00000000004178ec: out dx, eax; xor eax, edi; ret; 
0x0000000000457226: outsb dx, byte ptr [rsi]; add byte ptr [rax], al; add al, ch; shr dword ptr [rbx - 0x72b70006], 1; and al, 8; ret; 
0x000000000043223b: outsb dx, byte ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432277: outsb dx, byte ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x000000000044deae: outsb dx, byte ptr [rsi]; cld; dec dword ptr [rax + 0x63]; ret; 
0x0000000000432276: outsb dx, byte ptr ss:[rsi]; add byte ptr [rax], al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000457326: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; add al, ch; shr dword ptr [rdx - 0x72b70006], 1; and al, 8; ret; 
0x0000000000431dd4: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431df8: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000411544: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042d7bd: outsd dx, dword ptr [rsi]; jae 0x2d7c2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000456e6d: outsd dx, dword ptr [rsi]; mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004354fd: outsd dx, dword ptr [rsi]; ret 4; 
0x000000000042bdb9: paddd mm7, mm7; lea rsp, [rsp + 8]; ret; 
0x00000000004480c8: paddw mm7, mm7; lea rsp, [rsp + 8]; ret; 
0x0000000000404de6: pcmpeqw mm0, qword ptr [rdi]; cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x000000000041074e: pcmpgtd mm0, qword ptr [rcx + 0x77dffffe]; or byte ptr [rcx - 0x7d], cl; ret 0x4904; 
0x0000000000402a8d: pmuludq mm7, mm7; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004451c6: pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x0000000000410f1d: pop qword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000044c864: pop qword ptr [rbx]; add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c90f: pop qword ptr [rbx]; add byte ptr [rax - 0x75], cl; sbb byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x00000000004054a0: pop qword ptr [rip + 0x5c0ff200]; or byte ptr [rsi + 0xf], ah; sub eax, ecx; lea rsp, [rsp + 0x28]; ret; 
0x000000000040549f: pop qword ptr [rip + 0x5c0ff200]; or byte ptr [rsi + 0xf], ah; sub eax, ecx; lea rsp, [rsp + 0x28]; ret; 
0x000000000040f46b: pop r11; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000450879: pop r12; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402ccb: pop r12; pop rbx; ret; 
0x0000000000402d2c: pop r12; pop rbx; ret; 
0x0000000000402daf: pop r12; pop rbx; ret; 
0x0000000000403a16: pop r12; pop rbx; ret; 
0x0000000000403b23: pop r12; pop rbx; ret; 
0x0000000000403c2d: pop r12; pop rbx; ret; 
0x0000000000403d45: pop r12; pop rbx; ret; 
0x0000000000403d96: pop r12; pop rbx; ret; 
0x0000000000403e9a: pop r12; pop rbx; ret; 
0x00000000004040d0: pop r12; pop rbx; ret; 
0x00000000004041f6: pop r12; pop rbx; ret; 
0x0000000000404afb: pop r12; pop rbx; ret; 
0x0000000000404b77: pop r12; pop rbx; ret; 
0x0000000000404bbf: pop r12; pop rbx; ret; 
0x0000000000404c14: pop r12; pop rbx; ret; 
0x0000000000404c67: pop r12; pop rbx; ret; 
0x0000000000404cc4: pop r12; pop rbx; ret; 
0x0000000000405166: pop r12; pop rbx; ret; 
0x000000000040626e: pop r12; pop rbx; ret; 
0x0000000000406536: pop r12; pop rbx; ret; 
0x0000000000406535: pop r12; pop rbx; ret; 
0x0000000000406817: pop r12; pop rbx; ret; 
0x0000000000406995: pop r12; pop rbx; ret; 
0x00000000004069fb: pop r12; pop rbx; ret; 
0x0000000000406a46: pop r12; pop rbx; ret; 
0x0000000000406ace: pop r12; pop rbx; ret; 
0x0000000000406c91: pop r12; pop rbx; ret; 
0x0000000000406cf9: pop r12; pop rbx; ret; 
0x0000000000406d37: pop r12; pop rbx; ret; 
0x0000000000406dbc: pop r12; pop rbx; ret; 
0x0000000000406f11: pop r12; pop rbx; ret; 
0x0000000000406f6e: pop r12; pop rbx; ret; 
0x0000000000407197: pop r12; pop rbx; ret; 
0x0000000000407244: pop r12; pop rbx; ret; 
0x00000000004072ca: pop r12; pop rbx; ret; 
0x00000000004073cf: pop r12; pop rbx; ret; 
0x000000000040744f: pop r12; pop rbx; ret; 
0x000000000040771f: pop r12; pop rbx; ret; 
0x00000000004077af: pop r12; pop rbx; ret; 
0x0000000000407b48: pop r12; pop rbx; ret; 
0x0000000000407df3: pop r12; pop rbx; ret; 
0x0000000000408970: pop r12; pop rbx; ret; 
0x0000000000408a89: pop r12; pop rbx; ret; 
0x00000000004093cc: pop r12; pop rbx; ret; 
0x0000000000409d5b: pop r12; pop rbx; ret; 
0x0000000000409df0: pop r12; pop rbx; ret; 
0x0000000000409fd3: pop r12; pop rbx; ret; 
0x000000000040a186: pop r12; pop rbx; ret; 
0x000000000040a24b: pop r12; pop rbx; ret; 
0x000000000040a64e: pop r12; pop rbx; ret; 
0x000000000040ad25: pop r12; pop rbx; ret; 
0x000000000040ae76: pop r12; pop rbx; ret; 
0x000000000040afc5: pop r12; pop rbx; ret; 
0x000000000040b36c: pop r12; pop rbx; ret; 
0x000000000040b3a6: pop r12; pop rbx; ret; 
0x000000000040bb2a: pop r12; pop rbx; ret; 
0x000000000040bc18: pop r12; pop rbx; ret; 
0x000000000040be9e: pop r12; pop rbx; ret; 
0x000000000040c46a: pop r12; pop rbx; ret; 
0x000000000040c4b6: pop r12; pop rbx; ret; 
0x000000000040c526: pop r12; pop rbx; ret; 
0x000000000040c582: pop r12; pop rbx; ret; 
0x000000000040c61e: pop r12; pop rbx; ret; 
0x000000000040c82e: pop r12; pop rbx; ret; 
0x000000000040c967: pop r12; pop rbx; ret; 
0x000000000040ca60: pop r12; pop rbx; ret; 
0x000000000040cb38: pop r12; pop rbx; ret; 
0x000000000040ccb5: pop r12; pop rbx; ret; 
0x000000000040cd0a: pop r12; pop rbx; ret; 
0x000000000040cdd9: pop r12; pop rbx; ret; 
0x000000000040ce72: pop r12; pop rbx; ret; 
0x000000000040cf30: pop r12; pop rbx; ret; 
0x000000000040d0c7: pop r12; pop rbx; ret; 
0x000000000040d132: pop r12; pop rbx; ret; 
0x000000000040d220: pop r12; pop rbx; ret; 
0x000000000040d27f: pop r12; pop rbx; ret; 
0x000000000040d2d0: pop r12; pop rbx; ret; 
0x000000000040d33c: pop r12; pop rbx; ret; 
0x000000000040d38f: pop r12; pop rbx; ret; 
0x000000000040d3ef: pop r12; pop rbx; ret; 
0x000000000040d4ab: pop r12; pop rbx; ret; 
0x000000000040d669: pop r12; pop rbx; ret; 
0x000000000040d6a8: pop r12; pop rbx; ret; 
0x000000000040d707: pop r12; pop rbx; ret; 
0x000000000040d765: pop r12; pop rbx; ret; 
0x000000000040d7da: pop r12; pop rbx; ret; 
0x000000000040d84a: pop r12; pop rbx; ret; 
0x000000000040d93d: pop r12; pop rbx; ret; 
0x000000000040da72: pop r12; pop rbx; ret; 
0x000000000040dac2: pop r12; pop rbx; ret; 
0x000000000040ddce: pop r12; pop rbx; ret; 
0x000000000040de26: pop r12; pop rbx; ret; 
0x000000000040de90: pop r12; pop rbx; ret; 
0x000000000040df0b: pop r12; pop rbx; ret; 
0x000000000040df4e: pop r12; pop rbx; ret; 
0x000000000040df9e: pop r12; pop rbx; ret; 
0x000000000040e001: pop r12; pop rbx; ret; 
0x000000000040e079: pop r12; pop rbx; ret; 
0x000000000040e132: pop r12; pop rbx; ret; 
0x000000000040e175: pop r12; pop rbx; ret; 
0x000000000040e2c7: pop r12; pop rbx; ret; 
0x000000000040e6ad: pop r12; pop rbx; ret; 
0x000000000040e76c: pop r12; pop rbx; ret; 
0x000000000040eee5: pop r12; pop rbx; ret; 
0x000000000040f08c: pop r12; pop rbx; ret; 
0x000000000040f116: pop r12; pop rbx; ret; 
0x000000000040f1b6: pop r12; pop rbx; ret; 
0x000000000040f28c: pop r12; pop rbx; ret; 
0x000000000040f2bc: pop r12; pop rbx; ret; 
0x000000000040f34c: pop r12; pop rbx; ret; 
0x000000000040f3de: pop r12; pop rbx; ret; 
0x000000000040f474: pop r12; pop rbx; ret; 
0x000000000040f4ac: pop r12; pop rbx; ret; 
0x000000000040f53c: pop r12; pop rbx; ret; 
0x000000000040f5ce: pop r12; pop rbx; ret; 
0x000000000040f662: pop r12; pop rbx; ret; 
0x000000000040f6f4: pop r12; pop rbx; ret; 
0x000000000040f765: pop r12; pop rbx; ret; 
0x000000000040f813: pop r12; pop rbx; ret; 
0x000000000040f8ef: pop r12; pop rbx; ret; 
0x000000000040f9da: pop r12; pop rbx; ret; 
0x000000000040fa6a: pop r12; pop rbx; ret; 
0x000000000040fafa: pop r12; pop rbx; ret; 
0x000000000040fb69: pop r12; pop rbx; ret; 
0x000000000040fc31: pop r12; pop rbx; ret; 
0x000000000040fdc2: pop r12; pop rbx; ret; 
0x000000000040fe9b: pop r12; pop rbx; ret; 
0x000000000040ff8b: pop r12; pop rbx; ret; 
0x000000000040fff5: pop r12; pop rbx; ret; 
0x0000000000410051: pop r12; pop rbx; ret; 
0x000000000041026b: pop r12; pop rbx; ret; 
0x00000000004102f6: pop r12; pop rbx; ret; 
0x00000000004104f2: pop r12; pop rbx; ret; 
0x00000000004107a2: pop r12; pop rbx; ret; 
0x0000000000410dab: pop r12; pop rbx; ret; 
0x0000000000410e2a: pop r12; pop rbx; ret; 
0x0000000000410f26: pop r12; pop rbx; ret; 
0x0000000000411018: pop r12; pop rbx; ret; 
0x000000000041109a: pop r12; pop rbx; ret; 
0x000000000041111c: pop r12; pop rbx; ret; 
0x0000000000411249: pop r12; pop rbx; ret; 
0x0000000000411298: pop r12; pop rbx; ret; 
0x00000000004112e8: pop r12; pop rbx; ret; 
0x00000000004113d9: pop r12; pop rbx; ret; 
0x0000000000411449: pop r12; pop rbx; ret; 
0x0000000000411848: pop r12; pop rbx; ret; 
0x00000000004118f7: pop r12; pop rbx; ret; 
0x0000000000411c26: pop r12; pop rbx; ret; 
0x00000000004121a2: pop r12; pop rbx; ret; 
0x00000000004124fb: pop r12; pop rbx; ret; 
0x0000000000412907: pop r12; pop rbx; ret; 
0x0000000000412cd4: pop r12; pop rbx; ret; 
0x0000000000412dbe: pop r12; pop rbx; ret; 
0x0000000000412e73: pop r12; pop rbx; ret; 
0x0000000000413057: pop r12; pop rbx; ret; 
0x0000000000413350: pop r12; pop rbx; ret; 
0x000000000041351a: pop r12; pop rbx; ret; 
0x0000000000413717: pop r12; pop rbx; ret; 
0x0000000000413858: pop r12; pop rbx; ret; 
0x0000000000413934: pop r12; pop rbx; ret; 
0x0000000000413a04: pop r12; pop rbx; ret; 
0x0000000000413aa7: pop r12; pop rbx; ret; 
0x0000000000413b75: pop r12; pop rbx; ret; 
0x0000000000413d30: pop r12; pop rbx; ret; 
0x0000000000413ea3: pop r12; pop rbx; ret; 
0x0000000000413f1a: pop r12; pop rbx; ret; 
0x00000000004140b1: pop r12; pop rbx; ret; 
0x000000000041419e: pop r12; pop rbx; ret; 
0x000000000041428e: pop r12; pop rbx; ret; 
0x000000000041432b: pop r12; pop rbx; ret; 
0x0000000000414420: pop r12; pop rbx; ret; 
0x00000000004144e9: pop r12; pop rbx; ret; 
0x000000000041464f: pop r12; pop rbx; ret; 
0x000000000041474f: pop r12; pop rbx; ret; 
0x00000000004147af: pop r12; pop rbx; ret; 
0x0000000000414b34: pop r12; pop rbx; ret; 
0x0000000000414e0f: pop r12; pop rbx; ret; 
0x0000000000414f0f: pop r12; pop rbx; ret; 
0x0000000000414f9f: pop r12; pop rbx; ret; 
0x0000000000415080: pop r12; pop rbx; ret; 
0x000000000041519f: pop r12; pop rbx; ret; 
0x0000000000415369: pop r12; pop rbx; ret; 
0x0000000000415400: pop r12; pop rbx; ret; 
0x000000000041545a: pop r12; pop rbx; ret; 
0x0000000000415759: pop r12; pop rbx; ret; 
0x000000000041583b: pop r12; pop rbx; ret; 
0x00000000004158bb: pop r12; pop rbx; ret; 
0x0000000000415d07: pop r12; pop rbx; ret; 
0x0000000000415e5c: pop r12; pop rbx; ret; 
0x0000000000415e8c: pop r12; pop rbx; ret; 
0x0000000000415ebc: pop r12; pop rbx; ret; 
0x0000000000415f0c: pop r12; pop rbx; ret; 
0x0000000000415f3c: pop r12; pop rbx; ret; 
0x0000000000415f69: pop r12; pop rbx; ret; 
0x0000000000415f9c: pop r12; pop rbx; ret; 
0x0000000000415fcc: pop r12; pop rbx; ret; 
0x0000000000415ffc: pop r12; pop rbx; ret; 
0x000000000041602c: pop r12; pop rbx; ret; 
0x000000000041605c: pop r12; pop rbx; ret; 
0x000000000041608c: pop r12; pop rbx; ret; 
0x000000000041680d: pop r12; pop rbx; ret; 
0x0000000000416b46: pop r12; pop rbx; ret; 
0x0000000000416bd6: pop r12; pop rbx; ret; 
0x0000000000416ce6: pop r12; pop rbx; ret; 
0x0000000000416d76: pop r12; pop rbx; ret; 
0x0000000000416e2c: pop r12; pop rbx; ret; 
0x0000000000416fb7: pop r12; pop rbx; ret; 
0x0000000000417016: pop r12; pop rbx; ret; 
0x00000000004170ab: pop r12; pop rbx; ret; 
0x0000000000417180: pop r12; pop rbx; ret; 
0x0000000000417390: pop r12; pop rbx; ret; 
0x0000000000417655: pop r12; pop rbx; ret; 
0x00000000004176df: pop r12; pop rbx; ret; 
0x000000000041775f: pop r12; pop rbx; ret; 
0x00000000004177df: pop r12; pop rbx; ret; 
0x00000000004178b7: pop r12; pop rbx; ret; 
0x0000000000417b7a: pop r12; pop rbx; ret; 
0x0000000000417f4d: pop r12; pop rbx; ret; 
0x0000000000418335: pop r12; pop rbx; ret; 
0x0000000000418530: pop r12; pop rbx; ret; 
0x000000000041897e: pop r12; pop rbx; ret; 
0x0000000000418c93: pop r12; pop rbx; ret; 
0x0000000000418fc1: pop r12; pop rbx; ret; 
0x00000000004194bc: pop r12; pop rbx; ret; 
0x0000000000419534: pop r12; pop rbx; ret; 
0x000000000041960f: pop r12; pop rbx; ret; 
0x0000000000419736: pop r12; pop rbx; ret; 
0x00000000004197b4: pop r12; pop rbx; ret; 
0x000000000041986a: pop r12; pop rbx; ret; 
0x0000000000419cd8: pop r12; pop rbx; ret; 
0x0000000000419df6: pop r12; pop rbx; ret; 
0x0000000000419f44: pop r12; pop rbx; ret; 
0x0000000000419faf: pop r12; pop rbx; ret; 
0x000000000041a00a: pop r12; pop rbx; ret; 
0x000000000041a0de: pop r12; pop rbx; ret; 
0x000000000041a181: pop r12; pop rbx; ret; 
0x000000000041a215: pop r12; pop rbx; ret; 
0x000000000041a25d: pop r12; pop rbx; ret; 
0x000000000041a2b5: pop r12; pop rbx; ret; 
0x000000000041a2fd: pop r12; pop rbx; ret; 
0x000000000041a529: pop r12; pop rbx; ret; 
0x000000000041a5dd: pop r12; pop rbx; ret; 
0x000000000041a888: pop r12; pop rbx; ret; 
0x000000000041ae23: pop r12; pop rbx; ret; 
0x000000000041b433: pop r12; pop rbx; ret; 
0x000000000041b483: pop r12; pop rbx; ret; 
0x000000000041b4c3: pop r12; pop rbx; ret; 
0x000000000041b99b: pop r12; pop rbx; ret; 
0x000000000041ba56: pop r12; pop rbx; ret; 
0x000000000041bb19: pop r12; pop rbx; ret; 
0x000000000041bba5: pop r12; pop rbx; ret; 
0x000000000041bbe9: pop r12; pop rbx; ret; 
0x000000000041bdc6: pop r12; pop rbx; ret; 
0x000000000041be56: pop r12; pop rbx; ret; 
0x000000000041c1b1: pop r12; pop rbx; ret; 
0x000000000041c26b: pop r12; pop rbx; ret; 
0x000000000041c402: pop r12; pop rbx; ret; 
0x000000000041c4bb: pop r12; pop rbx; ret; 
0x000000000041c67f: pop r12; pop rbx; ret; 
0x000000000041c769: pop r12; pop rbx; ret; 
0x000000000041c7b9: pop r12; pop rbx; ret; 
0x000000000041c83c: pop r12; pop rbx; ret; 
0x000000000041c8bc: pop r12; pop rbx; ret; 
0x000000000041c93d: pop r12; pop rbx; ret; 
0x000000000041caeb: pop r12; pop rbx; ret; 
0x000000000041ce5f: pop r12; pop rbx; ret; 
0x000000000041d01a: pop r12; pop rbx; ret; 
0x000000000041d09c: pop r12; pop rbx; ret; 
0x000000000041d11c: pop r12; pop rbx; ret; 
0x000000000041d19d: pop r12; pop rbx; ret; 
0x000000000041d2b5: pop r12; pop rbx; ret; 
0x000000000041d432: pop r12; pop rbx; ret; 
0x000000000041d59d: pop r12; pop rbx; ret; 
0x000000000041d72e: pop r12; pop rbx; ret; 
0x000000000041d92b: pop r12; pop rbx; ret; 
0x000000000041da32: pop r12; pop rbx; ret; 
0x000000000041dac7: pop r12; pop rbx; ret; 
0x000000000041dca8: pop r12; pop rbx; ret; 
0x000000000041ddbc: pop r12; pop rbx; ret; 
0x000000000041e15a: pop r12; pop rbx; ret; 
0x000000000041e323: pop r12; pop rbx; ret; 
0x000000000041e4c7: pop r12; pop rbx; ret; 
0x000000000041e541: pop r12; pop rbx; ret; 
0x000000000041e5c1: pop r12; pop rbx; ret; 
0x000000000041e65f: pop r12; pop rbx; ret; 
0x000000000041e6ff: pop r12; pop rbx; ret; 
0x000000000041e9cd: pop r12; pop rbx; ret; 
0x000000000041ea5b: pop r12; pop rbx; ret; 
0x000000000041eac6: pop r12; pop rbx; ret; 
0x000000000041eb40: pop r12; pop rbx; ret; 
0x000000000041ec42: pop r12; pop rbx; ret; 
0x000000000041ed56: pop r12; pop rbx; ret; 
0x000000000041eee0: pop r12; pop rbx; ret; 
0x000000000041f005: pop r12; pop rbx; ret; 
0x000000000041f04f: pop r12; pop rbx; ret; 
0x000000000041f16d: pop r12; pop rbx; ret; 
0x000000000041f3a2: pop r12; pop rbx; ret; 
0x000000000041f5fd: pop r12; pop rbx; ret; 
0x000000000041f722: pop r12; pop rbx; ret; 
0x000000000041f815: pop r12; pop rbx; ret; 
0x000000000041f993: pop r12; pop rbx; ret; 
0x000000000041fb4f: pop r12; pop rbx; ret; 
0x000000000041fc24: pop r12; pop rbx; ret; 
0x000000000041fc7f: pop r12; pop rbx; ret; 
0x000000000041fce0: pop r12; pop rbx; ret; 
0x000000000041fe2f: pop r12; pop rbx; ret; 
0x000000000041ff5f: pop r12; pop rbx; ret; 
0x0000000000420053: pop r12; pop rbx; ret; 
0x00000000004200ed: pop r12; pop rbx; ret; 
0x00000000004201bd: pop r12; pop rbx; ret; 
0x0000000000420258: pop r12; pop rbx; ret; 
0x0000000000420309: pop r12; pop rbx; ret; 
0x0000000000420398: pop r12; pop rbx; ret; 
0x000000000042044b: pop r12; pop rbx; ret; 
0x0000000000420502: pop r12; pop rbx; ret; 
0x00000000004205a1: pop r12; pop rbx; ret; 
0x0000000000420636: pop r12; pop rbx; ret; 
0x00000000004206dc: pop r12; pop rbx; ret; 
0x0000000000420775: pop r12; pop rbx; ret; 
0x000000000042085c: pop r12; pop rbx; ret; 
0x0000000000420907: pop r12; pop rbx; ret; 
0x0000000000420973: pop r12; pop rbx; ret; 
0x00000000004209d6: pop r12; pop rbx; ret; 
0x0000000000420a28: pop r12; pop rbx; ret; 
0x0000000000420aa6: pop r12; pop rbx; ret; 
0x0000000000420b42: pop r12; pop rbx; ret; 
0x0000000000420b98: pop r12; pop rbx; ret; 
0x0000000000420c1c: pop r12; pop rbx; ret; 
0x0000000000420c9c: pop r12; pop rbx; ret; 
0x0000000000420d5c: pop r12; pop rbx; ret; 
0x0000000000420dc9: pop r12; pop rbx; ret; 
0x0000000000420e19: pop r12; pop rbx; ret; 
0x0000000000420e9c: pop r12; pop rbx; ret; 
0x0000000000420f1c: pop r12; pop rbx; ret; 
0x0000000000420f9d: pop r12; pop rbx; ret; 
0x000000000042109c: pop r12; pop rbx; ret; 
0x0000000000421191: pop r12; pop rbx; ret; 
0x0000000000421332: pop r12; pop rbx; ret; 
0x0000000000421582: pop r12; pop rbx; ret; 
0x000000000042177d: pop r12; pop rbx; ret; 
0x0000000000421838: pop r12; pop rbx; ret; 
0x00000000004218e5: pop r12; pop rbx; ret; 
0x000000000042198c: pop r12; pop rbx; ret; 
0x0000000000421c7f: pop r12; pop rbx; ret; 
0x0000000000421e27: pop r12; pop rbx; ret; 
0x0000000000421eac: pop r12; pop rbx; ret; 
0x0000000000421f2c: pop r12; pop rbx; ret; 
0x0000000000421fad: pop r12; pop rbx; ret; 
0x0000000000422207: pop r12; pop rbx; ret; 
0x0000000000422335: pop r12; pop rbx; ret; 
0x000000000042239a: pop r12; pop rbx; ret; 
0x0000000000422415: pop r12; pop rbx; ret; 
0x000000000042247a: pop r12; pop rbx; ret; 
0x0000000000422548: pop r12; pop rbx; ret; 
0x0000000000422654: pop r12; pop rbx; ret; 
0x0000000000422744: pop r12; pop rbx; ret; 
0x0000000000422e16: pop r12; pop rbx; ret; 
0x00000000004230dc: pop r12; pop rbx; ret; 
0x00000000004233b0: pop r12; pop rbx; ret; 
0x00000000004235b6: pop r12; pop rbx; ret; 
0x0000000000423c5c: pop r12; pop rbx; ret; 
0x0000000000423e11: pop r12; pop rbx; ret; 
0x0000000000423f6a: pop r12; pop rbx; ret; 
0x0000000000424162: pop r12; pop rbx; ret; 
0x00000000004241b2: pop r12; pop rbx; ret; 
0x000000000042445e: pop r12; pop rbx; ret; 
0x0000000000424933: pop r12; pop rbx; ret; 
0x0000000000424b38: pop r12; pop rbx; ret; 
0x0000000000424d0a: pop r12; pop rbx; ret; 
0x0000000000424dfe: pop r12; pop rbx; ret; 
0x0000000000424f80: pop r12; pop rbx; ret; 
0x00000000004251d0: pop r12; pop rbx; ret; 
0x00000000004253cc: pop r12; pop rbx; ret; 
0x0000000000425737: pop r12; pop rbx; ret; 
0x0000000000425994: pop r12; pop rbx; ret; 
0x0000000000425ab4: pop r12; pop rbx; ret; 
0x00000000004261d0: pop r12; pop rbx; ret; 
0x0000000000426723: pop r12; pop rbx; ret; 
0x0000000000426898: pop r12; pop rbx; ret; 
0x0000000000426930: pop r12; pop rbx; ret; 
0x0000000000426b27: pop r12; pop rbx; ret; 
0x00000000004270d2: pop r12; pop rbx; ret; 
0x0000000000427735: pop r12; pop rbx; ret; 
0x0000000000427794: pop r12; pop rbx; ret; 
0x000000000042787e: pop r12; pop rbx; ret; 
0x0000000000427974: pop r12; pop rbx; ret; 
0x00000000004279c0: pop r12; pop rbx; ret; 
0x0000000000427afb: pop r12; pop rbx; ret; 
0x0000000000427b54: pop r12; pop rbx; ret; 
0x0000000000427b98: pop r12; pop rbx; ret; 
0x0000000000427c4a: pop r12; pop rbx; ret; 
0x0000000000427de4: pop r12; pop rbx; ret; 
0x0000000000427f9c: pop r12; pop rbx; ret; 
0x0000000000428039: pop r12; pop rbx; ret; 
0x0000000000428104: pop r12; pop rbx; ret; 
0x0000000000428222: pop r12; pop rbx; ret; 
0x00000000004282bc: pop r12; pop rbx; ret; 
0x00000000004283c5: pop r12; pop rbx; ret; 
0x000000000042847a: pop r12; pop rbx; ret; 
0x0000000000428dc0: pop r12; pop rbx; ret; 
0x0000000000428e4e: pop r12; pop rbx; ret; 
0x00000000004290ee: pop r12; pop rbx; ret; 
0x0000000000429471: pop r12; pop rbx; ret; 
0x00000000004297a3: pop r12; pop rbx; ret; 
0x0000000000429808: pop r12; pop rbx; ret; 
0x00000000004299be: pop r12; pop rbx; ret; 
0x0000000000429c9f: pop r12; pop rbx; ret; 
0x0000000000429d2f: pop r12; pop rbx; ret; 
0x0000000000429dbf: pop r12; pop rbx; ret; 
0x000000000042a031: pop r12; pop rbx; ret; 
0x000000000042a1db: pop r12; pop rbx; ret; 
0x000000000042a266: pop r12; pop rbx; ret; 
0x000000000042a31c: pop r12; pop rbx; ret; 
0x000000000042a410: pop r12; pop rbx; ret; 
0x000000000042a499: pop r12; pop rbx; ret; 
0x000000000042a586: pop r12; pop rbx; ret; 
0x000000000042a64e: pop r12; pop rbx; ret; 
0x000000000042aff5: pop r12; pop rbx; ret; 
0x000000000042b07e: pop r12; pop rbx; ret; 
0x000000000042b31c: pop r12; pop rbx; ret; 
0x000000000042b719: pop r12; pop rbx; ret; 
0x000000000042bb96: pop r12; pop rbx; ret; 
0x000000000042bbf5: pop r12; pop rbx; ret; 
0x000000000042bd57: pop r12; pop rbx; ret; 
0x000000000042be3c: pop r12; pop rbx; ret; 
0x000000000042c09f: pop r12; pop rbx; ret; 
0x000000000042c12f: pop r12; pop rbx; ret; 
0x000000000042c1bf: pop r12; pop rbx; ret; 
0x000000000042c431: pop r12; pop rbx; ret; 
0x000000000042c4be: pop r12; pop rbx; ret; 
0x000000000042c5ce: pop r12; pop rbx; ret; 
0x000000000042c668: pop r12; pop rbx; ret; 
0x000000000042c76e: pop r12; pop rbx; ret; 
0x000000000042c7fe: pop r12; pop rbx; ret; 
0x000000000042c90e: pop r12; pop rbx; ret; 
0x000000000042ca43: pop r12; pop rbx; ret; 
0x000000000042cb4e: pop r12; pop rbx; ret; 
0x000000000042cc78: pop r12; pop rbx; ret; 
0x000000000042cd08: pop r12; pop rbx; ret; 
0x000000000042ce33: pop r12; pop rbx; ret; 
0x000000000042cf15: pop r12; pop rbx; ret; 
0x000000000042cff5: pop r12; pop rbx; ret; 
0x000000000042d0ce: pop r12; pop rbx; ret; 
0x000000000042d2ba: pop r12; pop rbx; ret; 
0x000000000042d2f9: pop r12; pop rbx; ret; 
0x000000000042d39a: pop r12; pop rbx; ret; 
0x000000000042d44d: pop r12; pop rbx; ret; 
0x000000000042d50d: pop r12; pop rbx; ret; 
0x000000000042d5ae: pop r12; pop rbx; ret; 
0x000000000042d5fb: pop r12; pop rbx; ret; 
0x000000000042d6f5: pop r12; pop rbx; ret; 
0x000000000042d79f: pop r12; pop rbx; ret; 
0x000000000042da4d: pop r12; pop rbx; ret; 
0x000000000042daeb: pop r12; pop rbx; ret; 
0x000000000042db16: pop r12; pop rbx; ret; 
0x000000000042db46: pop r12; pop rbx; ret; 
0x000000000042dbdb: pop r12; pop rbx; ret; 
0x000000000042e255: pop r12; pop rbx; ret; 
0x000000000042e30c: pop r12; pop rbx; ret; 
0x000000000042e3c6: pop r12; pop rbx; ret; 
0x000000000042e489: pop r12; pop rbx; ret; 
0x000000000042e556: pop r12; pop rbx; ret; 
0x000000000042e776: pop r12; pop rbx; ret; 
0x000000000042ef54: pop r12; pop rbx; ret; 
0x000000000042f0cb: pop r12; pop rbx; ret; 
0x000000000042f1dc: pop r12; pop rbx; ret; 
0x000000000042f26a: pop r12; pop rbx; ret; 
0x000000000042f29c: pop r12; pop rbx; ret; 
0x000000000042f2cb: pop r12; pop rbx; ret; 
0x000000000042f2fa: pop r12; pop rbx; ret; 
0x000000000042f329: pop r12; pop rbx; ret; 
0x000000000042f3d4: pop r12; pop rbx; ret; 
0x000000000042f483: pop r12; pop rbx; ret; 
0x000000000042f61b: pop r12; pop rbx; ret; 
0x000000000042fc5d: pop r12; pop rbx; ret; 
0x000000000042fd06: pop r12; pop rbx; ret; 
0x000000000042fd45: pop r12; pop rbx; ret; 
0x000000000042fd7a: pop r12; pop rbx; ret; 
0x000000000042fda9: pop r12; pop rbx; ret; 
0x000000000042ff47: pop r12; pop rbx; ret; 
0x0000000000430190: pop r12; pop rbx; ret; 
0x0000000000430270: pop r12; pop rbx; ret; 
0x00000000004302ec: pop r12; pop rbx; ret; 
0x000000000043031e: pop r12; pop rbx; ret; 
0x0000000000430423: pop r12; pop rbx; ret; 
0x0000000000430ada: pop r12; pop rbx; ret; 
0x0000000000430f87: pop r12; pop rbx; ret; 
0x000000000043108b: pop r12; pop rbx; ret; 
0x00000000004310bc: pop r12; pop rbx; ret; 
0x00000000004311cb: pop r12; pop rbx; ret; 
0x0000000000431240: pop r12; pop rbx; ret; 
0x000000000043173b: pop r12; pop rbx; ret; 
0x000000000043176b: pop r12; pop rbx; ret; 
0x00000000004317ca: pop r12; pop rbx; ret; 
0x00000000004317fc: pop r12; pop rbx; ret; 
0x0000000000431b7b: pop r12; pop rbx; ret; 
0x0000000000431bab: pop r12; pop rbx; ret; 
0x0000000000431c0a: pop r12; pop rbx; ret; 
0x0000000000431c3c: pop r12; pop rbx; ret; 
0x000000000043202b: pop r12; pop rbx; ret; 
0x000000000043205b: pop r12; pop rbx; ret; 
0x00000000004320ba: pop r12; pop rbx; ret; 
0x00000000004320ec: pop r12; pop rbx; ret; 
0x00000000004338b1: pop r12; pop rbx; ret; 
0x0000000000433a3d: pop r12; pop rbx; ret; 
0x0000000000433aa6: pop r12; pop rbx; ret; 
0x0000000000433b06: pop r12; pop rbx; ret; 
0x0000000000433b8a: pop r12; pop rbx; ret; 
0x0000000000433c0b: pop r12; pop rbx; ret; 
0x0000000000433c46: pop r12; pop rbx; ret; 
0x0000000000433d76: pop r12; pop rbx; ret; 
0x0000000000433ddb: pop r12; pop rbx; ret; 
0x0000000000433e3b: pop r12; pop rbx; ret; 
0x0000000000433eac: pop r12; pop rbx; ret; 
0x0000000000433f1c: pop r12; pop rbx; ret; 
0x000000000043479d: pop r12; pop rbx; ret; 
0x0000000000434862: pop r12; pop rbx; ret; 
0x0000000000434a07: pop r12; pop rbx; ret; 
0x0000000000434d71: pop r12; pop rbx; ret; 
0x0000000000434e92: pop r12; pop rbx; ret; 
0x0000000000438ce5: pop r12; pop rbx; ret; 
0x00000000004399e4: pop r12; pop rbx; ret; 
0x0000000000439a22: pop r12; pop rbx; ret; 
0x0000000000439c77: pop r12; pop rbx; ret; 
0x000000000043a0bf: pop r12; pop rbx; ret; 
0x000000000043a22f: pop r12; pop rbx; ret; 
0x000000000043b0f1: pop r12; pop rbx; ret; 
0x000000000043b812: pop r12; pop rbx; ret; 
0x000000000043baac: pop r12; pop rbx; ret; 
0x000000000043bd9f: pop r12; pop rbx; ret; 
0x000000000043c412: pop r12; pop rbx; ret; 
0x000000000043cf2e: pop r12; pop rbx; ret; 
0x000000000043cf83: pop r12; pop rbx; ret; 
0x000000000043cfe6: pop r12; pop rbx; ret; 
0x000000000043d163: pop r12; pop rbx; ret; 
0x000000000043d622: pop r12; pop rbx; ret; 
0x000000000043d7d3: pop r12; pop rbx; ret; 
0x000000000043d892: pop r12; pop rbx; ret; 
0x000000000043d92c: pop r12; pop rbx; ret; 
0x000000000043d9e6: pop r12; pop rbx; ret; 
0x000000000043da74: pop r12; pop rbx; ret; 
0x000000000043db93: pop r12; pop rbx; ret; 
0x000000000043dc56: pop r12; pop rbx; ret; 
0x000000000043dda2: pop r12; pop rbx; ret; 
0x000000000043de36: pop r12; pop rbx; ret; 
0x000000000043def7: pop r12; pop rbx; ret; 
0x000000000043dfb2: pop r12; pop rbx; ret; 
0x000000000043e1c3: pop r12; pop rbx; ret; 
0x000000000043e6a8: pop r12; pop rbx; ret; 
0x000000000043e770: pop r12; pop rbx; ret; 
0x000000000043e83c: pop r12; pop rbx; ret; 
0x000000000043e8cd: pop r12; pop rbx; ret; 
0x000000000043e9c1: pop r12; pop rbx; ret; 
0x000000000043ea90: pop r12; pop rbx; ret; 
0x000000000043eb2b: pop r12; pop rbx; ret; 
0x000000000043ebbe: pop r12; pop rbx; ret; 
0x000000000043ec90: pop r12; pop rbx; ret; 
0x000000000043ed2d: pop r12; pop rbx; ret; 
0x000000000043edfc: pop r12; pop rbx; ret; 
0x000000000043eec1: pop r12; pop rbx; ret; 
0x000000000043ef5d: pop r12; pop rbx; ret; 
0x000000000043efbc: pop r12; pop rbx; ret; 
0x000000000043f0dc: pop r12; pop rbx; ret; 
0x000000000043f19c: pop r12; pop rbx; ret; 
0x000000000043fb41: pop r12; pop rbx; ret; 
0x000000000044045e: pop r12; pop rbx; ret; 
0x00000000004404b5: pop r12; pop rbx; ret; 
0x0000000000440516: pop r12; pop rbx; ret; 
0x0000000000440696: pop r12; pop rbx; ret; 
0x0000000000440b84: pop r12; pop rbx; ret; 
0x0000000000440d53: pop r12; pop rbx; ret; 
0x0000000000440e34: pop r12; pop rbx; ret; 
0x0000000000440ef7: pop r12; pop rbx; ret; 
0x0000000000440fd8: pop r12; pop rbx; ret; 
0x0000000000441063: pop r12; pop rbx; ret; 
0x00000000004411c5: pop r12; pop rbx; ret; 
0x00000000004412a8: pop r12; pop rbx; ret; 
0x0000000000441434: pop r12; pop rbx; ret; 
0x00000000004414e8: pop r12; pop rbx; ret; 
0x00000000004415c9: pop r12; pop rbx; ret; 
0x00000000004416a4: pop r12; pop rbx; ret; 
0x00000000004418d5: pop r12; pop rbx; ret; 
0x0000000000441981: pop r12; pop rbx; ret; 
0x0000000000441c3c: pop r12; pop rbx; ret; 
0x0000000000441f3b: pop r12; pop rbx; ret; 
0x0000000000442022: pop r12; pop rbx; ret; 
0x000000000044210e: pop r12; pop rbx; ret; 
0x00000000004421cf: pop r12; pop rbx; ret; 
0x00000000004422e3: pop r12; pop rbx; ret; 
0x00000000004423d2: pop r12; pop rbx; ret; 
0x000000000044248d: pop r12; pop rbx; ret; 
0x000000000044252d: pop r12; pop rbx; ret; 
0x0000000000442622: pop r12; pop rbx; ret; 
0x00000000004426df: pop r12; pop rbx; ret; 
0x00000000004427ce: pop r12; pop rbx; ret; 
0x00000000004428c3: pop r12; pop rbx; ret; 
0x000000000044297f: pop r12; pop rbx; ret; 
0x00000000004429dc: pop r12; pop rbx; ret; 
0x0000000000442b1e: pop r12; pop rbx; ret; 
0x0000000000442c0e: pop r12; pop rbx; ret; 
0x00000000004435c8: pop r12; pop rbx; ret; 
0x00000000004439b3: pop r12; pop rbx; ret; 
0x0000000000443d60: pop r12; pop rbx; ret; 
0x0000000000443da7: pop r12; pop rbx; ret; 
0x0000000000443e44: pop r12; pop rbx; ret; 
0x0000000000444125: pop r12; pop rbx; ret; 
0x00000000004441fa: pop r12; pop rbx; ret; 
0x000000000044427a: pop r12; pop rbx; ret; 
0x00000000004442c4: pop r12; pop rbx; ret; 
0x000000000044431e: pop r12; pop rbx; ret; 
0x000000000044490b: pop r12; pop rbx; ret; 
0x00000000004449af: pop r12; pop rbx; ret; 
0x0000000000445630: pop r12; pop rbx; ret; 
0x000000000044568c: pop r12; pop rbx; ret; 
0x0000000000445c59: pop r12; pop rbx; ret; 
0x0000000000445eb8: pop r12; pop rbx; ret; 
0x0000000000445f64: pop r12; pop rbx; ret; 
0x0000000000445fb4: pop r12; pop rbx; ret; 
0x0000000000446007: pop r12; pop rbx; ret; 
0x000000000044605b: pop r12; pop rbx; ret; 
0x00000000004461b0: pop r12; pop rbx; ret; 
0x0000000000446fe9: pop r12; pop rbx; ret; 
0x00000000004470c9: pop r12; pop rbx; ret; 
0x00000000004471fc: pop r12; pop rbx; ret; 
0x000000000044729f: pop r12; pop rbx; ret; 
0x000000000044739c: pop r12; pop rbx; ret; 
0x0000000000447488: pop r12; pop rbx; ret; 
0x0000000000447517: pop r12; pop rbx; ret; 
0x00000000004476aa: pop r12; pop rbx; ret; 
0x0000000000447a06: pop r12; pop rbx; ret; 
0x0000000000447a58: pop r12; pop rbx; ret; 
0x0000000000447ad3: pop r12; pop rbx; ret; 
0x0000000000447b47: pop r12; pop rbx; ret; 
0x0000000000447b9f: pop r12; pop rbx; ret; 
0x0000000000447c1c: pop r12; pop rbx; ret; 
0x0000000000447c54: pop r12; pop rbx; ret; 
0x0000000000447d0e: pop r12; pop rbx; ret; 
0x0000000000447df7: pop r12; pop rbx; ret; 
0x0000000000447e29: pop r12; pop rbx; ret; 
0x0000000000447e64: pop r12; pop rbx; ret; 
0x0000000000447f0b: pop r12; pop rbx; ret; 
0x0000000000447f8b: pop r12; pop rbx; ret; 
0x0000000000448028: pop r12; pop rbx; ret; 
0x00000000004480a8: pop r12; pop rbx; ret; 
0x000000000044834a: pop r12; pop rbx; ret; 
0x00000000004483f3: pop r12; pop rbx; ret; 
0x00000000004484a8: pop r12; pop rbx; ret; 
0x000000000044937b: pop r12; pop rbx; ret; 
0x000000000044a023: pop r12; pop rbx; ret; 
0x000000000044a1c2: pop r12; pop rbx; ret; 
0x000000000044b11b: pop r12; pop rbx; ret; 
0x000000000044b98f: pop r12; pop rbx; ret; 
0x000000000044ba0e: pop r12; pop rbx; ret; 
0x000000000044ba6a: pop r12; pop rbx; ret; 
0x000000000044bab9: pop r12; pop rbx; ret; 
0x000000000044bbf3: pop r12; pop rbx; ret; 
0x000000000044bc41: pop r12; pop rbx; ret; 
0x000000000044bca0: pop r12; pop rbx; ret; 
0x000000000044bcf6: pop r12; pop rbx; ret; 
0x000000000044bd46: pop r12; pop rbx; ret; 
0x000000000044bde7: pop r12; pop rbx; ret; 
0x000000000044be6b: pop r12; pop rbx; ret; 
0x000000000044bea4: pop r12; pop rbx; ret; 
0x000000000044bf56: pop r12; pop rbx; ret; 
0x000000000044bfeb: pop r12; pop rbx; ret; 
0x000000000044c016: pop r12; pop rbx; ret; 
0x000000000044c077: pop r12; pop rbx; ret; 
0x000000000044c0d3: pop r12; pop rbx; ret; 
0x000000000044c50b: pop r12; pop rbx; ret; 
0x000000000044c66f: pop r12; pop rbx; ret; 
0x000000000044c701: pop r12; pop rbx; ret; 
0x000000000044c7c1: pop r12; pop rbx; ret; 
0x000000000044cf38: pop r12; pop rbx; ret; 
0x000000000044d09a: pop r12; pop rbx; ret; 
0x000000000044d0c6: pop r12; pop rbx; ret; 
0x000000000044d18a: pop r12; pop rbx; ret; 
0x000000000044d281: pop r12; pop rbx; ret; 
0x000000000044d5b0: pop r12; pop rbx; ret; 
0x000000000044d95c: pop r12; pop rbx; ret; 
0x000000000044dcb0: pop r12; pop rbx; ret; 
0x000000000044dfd8: pop r12; pop rbx; ret; 
0x000000000044e1b1: pop r12; pop rbx; ret; 
0x000000000044e277: pop r12; pop rbx; ret; 
0x000000000044e321: pop r12; pop rbx; ret; 
0x000000000044e3f9: pop r12; pop rbx; ret; 
0x000000000044e4a1: pop r12; pop rbx; ret; 
0x000000000044e57c: pop r12; pop rbx; ret; 
0x000000000044e61b: pop r12; pop rbx; ret; 
0x000000000044eba8: pop r12; pop rbx; ret; 
0x000000000044ec1b: pop r12; pop rbx; ret; 
0x000000000044f1db: pop r12; pop rbx; ret; 
0x000000000044f44c: pop r12; pop rbx; ret; 
0x000000000044f62b: pop r12; pop rbx; ret; 
0x000000000044f717: pop r12; pop rbx; ret; 
0x000000000044f7fb: pop r12; pop rbx; ret; 
0x000000000044fa00: pop r12; pop rbx; ret; 
0x000000000044fcca: pop r12; pop rbx; ret; 
0x0000000000450201: pop r12; pop rbx; ret; 
0x0000000000450409: pop r12; pop rbx; ret; 
0x000000000045045c: pop r12; pop rbx; ret; 
0x00000000004504fe: pop r12; pop rbx; ret; 
0x00000000004507c4: pop r12; pop rbx; ret; 
0x00000000004509cc: pop r12; pop rbx; ret; 
0x0000000000450b27: pop r12; pop rbx; ret; 
0x0000000000450bba: pop r12; pop rbx; ret; 
0x0000000000450c7e: pop r12; pop rbx; ret; 
0x0000000000450d68: pop r12; pop rbx; ret; 
0x0000000000450e08: pop r12; pop rbx; ret; 
0x000000000045124b: pop r12; pop rbx; ret; 
0x000000000045227d: pop r12; pop rbx; ret; 
0x000000000045288a: pop r12; pop rbx; ret; 
0x0000000000452b2e: pop r12; pop rbx; ret; 
0x0000000000452de3: pop r12; pop rbx; ret; 
0x00000000004530fb: pop r12; pop rbx; ret; 
0x0000000000453263: pop r12; pop rbx; ret; 
0x00000000004532a9: pop r12; pop rbx; ret; 
0x000000000045331b: pop r12; pop rbx; ret; 
0x0000000000453359: pop r12; pop rbx; ret; 
0x0000000000453465: pop r12; pop rbx; ret; 
0x0000000000453bb2: pop r12; pop rbx; ret; 
0x0000000000453c99: pop r12; pop rbx; ret; 
0x0000000000453e45: pop r12; pop rbx; ret; 
0x0000000000453eaf: pop r12; pop rbx; ret; 
0x0000000000453f04: pop r12; pop rbx; ret; 
0x0000000000453f54: pop r12; pop rbx; ret; 
0x0000000000453fbf: pop r12; pop rbx; ret; 
0x0000000000454005: pop r12; pop rbx; ret; 
0x0000000000454258: pop r12; pop rbx; ret; 
0x000000000045458b: pop r12; pop rbx; ret; 
0x0000000000454683: pop r12; pop rbx; ret; 
0x0000000000454a10: pop r12; pop rbx; ret; 
0x0000000000454aa4: pop r12; pop rbx; ret; 
0x0000000000454cab: pop r12; pop rbx; ret; 
0x0000000000454f14: pop r12; pop rbx; ret; 
0x00000000004550d1: pop r12; pop rbx; ret; 
0x000000000045531f: pop r12; pop rbx; ret; 
0x0000000000455464: pop r12; pop rbx; ret; 
0x00000000004562fa: pop r12; pop rbx; ret; 
0x00000000004564b5: pop r12; pop rbx; ret; 
0x00000000004565b0: pop r12; pop rbx; ret; 
0x0000000000456ac8: pop r12; pop rbx; ret; 
0x0000000000456bda: pop r12; pop rbx; ret; 
0x0000000000456c3c: pop r12; pop rbx; ret; 
0x0000000000456ce0: pop r12; pop rbx; ret; 
0x00000000004570e4: pop r12; pop rbx; ret; 
0x000000000045717c: pop r12; pop rbx; ret; 
0x00000000004571e6: pop r12; pop rbx; ret; 
0x000000000045761d: pop r12; pop rbx; ret; 
0x0000000000457673: pop r12; pop rbx; ret; 
0x0000000000457904: pop r12; pop rbx; ret; 
0x0000000000457996: pop r12; pop rbx; ret; 
0x0000000000457a26: pop r12; pop rbx; ret; 
0x0000000000457ac0: pop r12; pop rbx; ret; 
0x0000000000457b56: pop r12; pop rbx; ret; 
0x0000000000457c60: pop r12; pop rbx; ret; 
0x0000000000457d00: pop r12; pop rbx; ret; 
0x0000000000457e20: pop r12; pop rbx; ret; 
0x0000000000457eb6: pop r12; pop rbx; ret; 
0x0000000000458074: pop r12; pop rbx; ret; 
0x0000000000458106: pop r12; pop rbx; ret; 
0x0000000000458196: pop r12; pop rbx; ret; 
0x0000000000458244: pop r12; pop rbx; ret; 
0x00000000004582d6: pop r12; pop rbx; ret; 
0x000000000045845b: pop r12; pop rbx; ret; 
0x00000000004584fe: pop r12; pop rbx; ret; 
0x0000000000458686: pop r12; pop rbx; ret; 
0x0000000000458735: pop r12; pop rbx; ret; 
0x0000000000458885: pop r12; pop rbx; ret; 
0x00000000004589d7: pop r12; pop rbx; ret; 
0x0000000000458b08: pop r12; pop rbx; ret; 
0x0000000000458c14: pop r12; pop rbx; ret; 
0x0000000000458db5: pop r12; pop rbx; ret; 
0x0000000000459254: pop r12; pop rbx; ret; 
0x00000000004594a0: pop r12; pop rbx; ret; 
0x0000000000459961: pop r12; pop rbx; ret; 
0x0000000000459a05: pop r12; pop rbx; ret; 
0x0000000000459ca6: pop r12; pop rbx; ret; 
0x0000000000459ea5: pop r12; pop rbx; ret; 
0x0000000000459f51: pop r12; pop rbx; ret; 
0x0000000000459f9c: pop r12; pop rbx; ret; 
0x000000000045a046: pop r12; pop rbx; ret; 
0x000000000045a08c: pop r12; pop rbx; ret; 
0x000000000045a18b: pop r12; pop rbx; ret; 
0x000000000045a21d: pop r12; pop rbx; ret; 
0x000000000045a525: pop r12; pop rbx; ret; 
0x000000000045a7a6: pop r12; pop rbx; ret; 
0x000000000045a839: pop r12; pop rbx; ret; 
0x000000000045a8c9: pop r12; pop rbx; ret; 
0x000000000045a959: pop r12; pop rbx; ret; 
0x000000000045a9e9: pop r12; pop rbx; ret; 
0x000000000045b5ca: pop r12; pop rbx; ret; 
0x000000000045b647: pop r12; pop rbx; ret; 
0x000000000045b740: pop r12; pop rbx; ret; 
0x000000000045b837: pop r12; pop rbx; ret; 
0x000000000045b8eb: pop r12; pop rbx; ret; 
0x000000000045bb3c: pop r12; pop rbx; ret; 
0x000000000045bde3: pop r12; pop rbx; ret; 
0x000000000045c034: pop r12; pop rbx; ret; 
0x000000000045c178: pop r12; pop rbx; ret; 
0x000000000045c1ce: pop r12; pop rbx; ret; 
0x000000000045c208: pop r12; pop rbx; ret; 
0x000000000045c248: pop r12; pop rbx; ret; 
0x000000000045c32e: pop r12; pop rbx; ret; 
0x000000000045c45c: pop r12; pop rbx; ret; 
0x000000000045c561: pop r12; pop rbx; ret; 
0x000000000045c6c1: pop r12; pop rbx; ret; 
0x000000000045c748: pop r12; pop rbx; ret; 
0x000000000045c7c6: pop r12; pop rbx; ret; 
0x000000000045cc8e: pop r12; pop rbx; ret; 
0x000000000045cdaa: pop r12; pop rbx; ret; 
0x000000000045d411: pop r12; pop rbx; ret; 
0x0000000000402cc9: pop r13; pop r12; pop rbx; ret; 
0x0000000000402dad: pop r13; pop r12; pop rbx; ret; 
0x0000000000403a14: pop r13; pop r12; pop rbx; ret; 
0x0000000000403b21: pop r13; pop r12; pop rbx; ret; 
0x0000000000403c2b: pop r13; pop r12; pop rbx; ret; 
0x0000000000403d94: pop r13; pop r12; pop rbx; ret; 
0x0000000000403e98: pop r13; pop r12; pop rbx; ret; 
0x00000000004040ce: pop r13; pop r12; pop rbx; ret; 
0x00000000004041f4: pop r13; pop r12; pop rbx; ret; 
0x0000000000404b75: pop r13; pop r12; pop rbx; ret; 
0x0000000000404cc2: pop r13; pop r12; pop rbx; ret; 
0x000000000040626c: pop r13; pop r12; pop rbx; ret; 
0x00000000004069f9: pop r13; pop r12; pop rbx; ret; 
0x0000000000406cf7: pop r13; pop r12; pop rbx; ret; 
0x0000000000406f6c: pop r13; pop r12; pop rbx; ret; 
0x0000000000407195: pop r13; pop r12; pop rbx; ret; 
0x0000000000407242: pop r13; pop r12; pop rbx; ret; 
0x00000000004072c8: pop r13; pop r12; pop rbx; ret; 
0x00000000004073cd: pop r13; pop r12; pop rbx; ret; 
0x000000000040744d: pop r13; pop r12; pop rbx; ret; 
0x000000000040771d: pop r13; pop r12; pop rbx; ret; 
0x00000000004077ad: pop r13; pop r12; pop rbx; ret; 
0x0000000000407b46: pop r13; pop r12; pop rbx; ret; 
0x0000000000407df1: pop r13; pop r12; pop rbx; ret; 
0x000000000040896e: pop r13; pop r12; pop rbx; ret; 
0x0000000000408a87: pop r13; pop r12; pop rbx; ret; 
0x00000000004093ca: pop r13; pop r12; pop rbx; ret; 
0x0000000000409d59: pop r13; pop r12; pop rbx; ret; 
0x0000000000409dee: pop r13; pop r12; pop rbx; ret; 
0x0000000000409fd1: pop r13; pop r12; pop rbx; ret; 
0x0000000000409fd0: pop r13; pop r12; pop rbx; ret; 
0x000000000040a184: pop r13; pop r12; pop rbx; ret; 
0x000000000040a249: pop r13; pop r12; pop rbx; ret; 
0x000000000040a64c: pop r13; pop r12; pop rbx; ret; 
0x000000000040ad23: pop r13; pop r12; pop rbx; ret; 
0x000000000040ae74: pop r13; pop r12; pop rbx; ret; 
0x000000000040afc3: pop r13; pop r12; pop rbx; ret; 
0x000000000040b36a: pop r13; pop r12; pop rbx; ret; 
0x000000000040b3a4: pop r13; pop r12; pop rbx; ret; 
0x000000000040bc16: pop r13; pop r12; pop rbx; ret; 
0x000000000040be9c: pop r13; pop r12; pop rbx; ret; 
0x000000000040c468: pop r13; pop r12; pop rbx; ret; 
0x000000000040c524: pop r13; pop r12; pop rbx; ret; 
0x000000000040c580: pop r13; pop r12; pop rbx; ret; 
0x000000000040c61c: pop r13; pop r12; pop rbx; ret; 
0x000000000040c965: pop r13; pop r12; pop rbx; ret; 
0x000000000040cb36: pop r13; pop r12; pop rbx; ret; 
0x000000000040ccb3: pop r13; pop r12; pop rbx; ret; 
0x000000000040cd08: pop r13; pop r12; pop rbx; ret; 
0x000000000040cdd7: pop r13; pop r12; pop rbx; ret; 
0x000000000040ce70: pop r13; pop r12; pop rbx; ret; 
0x000000000040cf2e: pop r13; pop r12; pop rbx; ret; 
0x000000000040d130: pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a9: pop r13; pop r12; pop rbx; ret; 
0x000000000040d667: pop r13; pop r12; pop rbx; ret; 
0x000000000040d705: pop r13; pop r12; pop rbx; ret; 
0x000000000040d763: pop r13; pop r12; pop rbx; ret; 
0x000000000040d7d8: pop r13; pop r12; pop rbx; ret; 
0x000000000040d848: pop r13; pop r12; pop rbx; ret; 
0x000000000040d93b: pop r13; pop r12; pop rbx; ret; 
0x000000000040da70: pop r13; pop r12; pop rbx; ret; 
0x000000000040dac0: pop r13; pop r12; pop rbx; ret; 
0x000000000040ddcc: pop r13; pop r12; pop rbx; ret; 
0x000000000040de8e: pop r13; pop r12; pop rbx; ret; 
0x000000000040df09: pop r13; pop r12; pop rbx; ret; 
0x000000000040dfff: pop r13; pop r12; pop rbx; ret; 
0x000000000040e077: pop r13; pop r12; pop rbx; ret; 
0x000000000040e130: pop r13; pop r12; pop rbx; ret; 
0x000000000040e2c5: pop r13; pop r12; pop rbx; ret; 
0x000000000040eee3: pop r13; pop r12; pop rbx; ret; 
0x000000000040f08a: pop r13; pop r12; pop rbx; ret; 
0x000000000040f28a: pop r13; pop r12; pop rbx; ret; 
0x000000000040f2ba: pop r13; pop r12; pop rbx; ret; 
0x000000000040f34a: pop r13; pop r12; pop rbx; ret; 
0x000000000040f3dc: pop r13; pop r12; pop rbx; ret; 
0x000000000040f4aa: pop r13; pop r12; pop rbx; ret; 
0x000000000040f53a: pop r13; pop r12; pop rbx; ret; 
0x000000000040f5cc: pop r13; pop r12; pop rbx; ret; 
0x000000000040f763: pop r13; pop r12; pop rbx; ret; 
0x000000000040f811: pop r13; pop r12; pop rbx; ret; 
0x000000000040f8ed: pop r13; pop r12; pop rbx; ret; 
0x000000000040f9d8: pop r13; pop r12; pop rbx; ret; 
0x000000000040fa68: pop r13; pop r12; pop rbx; ret; 
0x000000000040faf8: pop r13; pop r12; pop rbx; ret; 
0x000000000040fc2f: pop r13; pop r12; pop rbx; ret; 
0x000000000040fdc0: pop r13; pop r12; pop rbx; ret; 
0x000000000040fff3: pop r13; pop r12; pop rbx; ret; 
0x00000000004102f4: pop r13; pop r12; pop rbx; ret; 
0x00000000004104f0: pop r13; pop r12; pop rbx; ret; 
0x00000000004107a0: pop r13; pop r12; pop rbx; ret; 
0x0000000000410da9: pop r13; pop r12; pop rbx; ret; 
0x0000000000411247: pop r13; pop r12; pop rbx; ret; 
0x00000000004118f5: pop r13; pop r12; pop rbx; ret; 
0x0000000000411c24: pop r13; pop r12; pop rbx; ret; 
0x00000000004121a0: pop r13; pop r12; pop rbx; ret; 
0x00000000004124f9: pop r13; pop r12; pop rbx; ret; 
0x0000000000412905: pop r13; pop r12; pop rbx; ret; 
0x0000000000412cd2: pop r13; pop r12; pop rbx; ret; 
0x0000000000412dbc: pop r13; pop r12; pop rbx; ret; 
0x0000000000412e71: pop r13; pop r12; pop rbx; ret; 
0x0000000000413856: pop r13; pop r12; pop rbx; ret; 
0x0000000000413932: pop r13; pop r12; pop rbx; ret; 
0x0000000000413a02: pop r13; pop r12; pop rbx; ret; 
0x0000000000413aa5: pop r13; pop r12; pop rbx; ret; 
0x0000000000413b73: pop r13; pop r12; pop rbx; ret; 
0x0000000000413d2e: pop r13; pop r12; pop rbx; ret; 
0x0000000000413ea1: pop r13; pop r12; pop rbx; ret; 
0x0000000000413f18: pop r13; pop r12; pop rbx; ret; 
0x00000000004140af: pop r13; pop r12; pop rbx; ret; 
0x000000000041419c: pop r13; pop r12; pop rbx; ret; 
0x000000000041428c: pop r13; pop r12; pop rbx; ret; 
0x0000000000414329: pop r13; pop r12; pop rbx; ret; 
0x000000000041441e: pop r13; pop r12; pop rbx; ret; 
0x00000000004144e7: pop r13; pop r12; pop rbx; ret; 
0x0000000000414b32: pop r13; pop r12; pop rbx; ret; 
0x0000000000414e0d: pop r13; pop r12; pop rbx; ret; 
0x0000000000414f9d: pop r13; pop r12; pop rbx; ret; 
0x000000000041519d: pop r13; pop r12; pop rbx; ret; 
0x0000000000415367: pop r13; pop r12; pop rbx; ret; 
0x00000000004153fe: pop r13; pop r12; pop rbx; ret; 
0x0000000000415458: pop r13; pop r12; pop rbx; ret; 
0x0000000000416fb5: pop r13; pop r12; pop rbx; ret; 
0x0000000000417014: pop r13; pop r12; pop rbx; ret; 
0x00000000004170a9: pop r13; pop r12; pop rbx; ret; 
0x0000000000417653: pop r13; pop r12; pop rbx; ret; 
0x00000000004176dd: pop r13; pop r12; pop rbx; ret; 
0x000000000041775d: pop r13; pop r12; pop rbx; ret; 
0x00000000004177dd: pop r13; pop r12; pop rbx; ret; 
0x00000000004178b5: pop r13; pop r12; pop rbx; ret; 
0x0000000000417f4b: pop r13; pop r12; pop rbx; ret; 
0x000000000041852e: pop r13; pop r12; pop rbx; ret; 
0x000000000041897c: pop r13; pop r12; pop rbx; ret; 
0x0000000000418fbf: pop r13; pop r12; pop rbx; ret; 
0x000000000041960d: pop r13; pop r12; pop rbx; ret; 
0x0000000000419868: pop r13; pop r12; pop rbx; ret; 
0x0000000000419cd6: pop r13; pop r12; pop rbx; ret; 
0x0000000000419df4: pop r13; pop r12; pop rbx; ret; 
0x0000000000419f42: pop r13; pop r12; pop rbx; ret; 
0x000000000041a0dc: pop r13; pop r12; pop rbx; ret; 
0x000000000041a17f: pop r13; pop r12; pop rbx; ret; 
0x000000000041a213: pop r13; pop r12; pop rbx; ret; 
0x000000000041a527: pop r13; pop r12; pop rbx; ret; 
0x000000000041a5db: pop r13; pop r12; pop rbx; ret; 
0x000000000041a886: pop r13; pop r12; pop rbx; ret; 
0x000000000041b431: pop r13; pop r12; pop rbx; ret; 
0x000000000041b481: pop r13; pop r12; pop rbx; ret; 
0x000000000041b4c1: pop r13; pop r12; pop rbx; ret; 
0x000000000041b999: pop r13; pop r12; pop rbx; ret; 
0x000000000041ba54: pop r13; pop r12; pop rbx; ret; 
0x000000000041bb17: pop r13; pop r12; pop rbx; ret; 
0x000000000041bba3: pop r13; pop r12; pop rbx; ret; 
0x000000000041bdc4: pop r13; pop r12; pop rbx; ret; 
0x000000000041be54: pop r13; pop r12; pop rbx; ret; 
0x000000000041c1af: pop r13; pop r12; pop rbx; ret; 
0x000000000041c269: pop r13; pop r12; pop rbx; ret; 
0x000000000041c4b9: pop r13; pop r12; pop rbx; ret; 
0x000000000041d018: pop r13; pop r12; pop rbx; ret; 
0x000000000041d929: pop r13; pop r12; pop rbx; ret; 
0x000000000041da30: pop r13; pop r12; pop rbx; ret; 
0x000000000041dac5: pop r13; pop r12; pop rbx; ret; 
0x000000000041dca6: pop r13; pop r12; pop rbx; ret; 
0x000000000041ddba: pop r13; pop r12; pop rbx; ret; 
0x000000000041e158: pop r13; pop r12; pop rbx; ret; 
0x000000000041e321: pop r13; pop r12; pop rbx; ret; 
0x000000000041e4c5: pop r13; pop r12; pop rbx; ret; 
0x000000000041e53f: pop r13; pop r12; pop rbx; ret; 
0x000000000041e5bf: pop r13; pop r12; pop rbx; ret; 
0x000000000041e65d: pop r13; pop r12; pop rbx; ret; 
0x000000000041e6fd: pop r13; pop r12; pop rbx; ret; 
0x000000000041e9cb: pop r13; pop r12; pop rbx; ret; 
0x000000000041ea59: pop r13; pop r12; pop rbx; ret; 
0x000000000041eac4: pop r13; pop r12; pop rbx; ret; 
0x000000000041eb3e: pop r13; pop r12; pop rbx; ret; 
0x000000000041ec40: pop r13; pop r12; pop rbx; ret; 
0x000000000041ed54: pop r13; pop r12; pop rbx; ret; 
0x000000000041f04d: pop r13; pop r12; pop rbx; ret; 
0x000000000041f3a0: pop r13; pop r12; pop rbx; ret; 
0x000000000041f5fb: pop r13; pop r12; pop rbx; ret; 
0x000000000041f991: pop r13; pop r12; pop rbx; ret; 
0x000000000041fb4d: pop r13; pop r12; pop rbx; ret; 
0x000000000041fc22: pop r13; pop r12; pop rbx; ret; 
0x000000000041fe2d: pop r13; pop r12; pop rbx; ret; 
0x0000000000420449: pop r13; pop r12; pop rbx; ret; 
0x0000000000420634: pop r13; pop r12; pop rbx; ret; 
0x00000000004206da: pop r13; pop r12; pop rbx; ret; 
0x0000000000420773: pop r13; pop r12; pop rbx; ret; 
0x000000000042085a: pop r13; pop r12; pop rbx; ret; 
0x0000000000420971: pop r13; pop r12; pop rbx; ret; 
0x0000000000420970: pop r13; pop r12; pop rbx; ret; 
0x000000000042096f: pop r13; pop r12; pop rbx; ret; 
0x0000000000420d5a: pop r13; pop r12; pop rbx; ret; 
0x0000000000421330: pop r13; pop r12; pop rbx; ret; 
0x0000000000421580: pop r13; pop r12; pop rbx; ret; 
0x00000000004218e3: pop r13; pop r12; pop rbx; ret; 
0x0000000000421e25: pop r13; pop r12; pop rbx; ret; 
0x0000000000422205: pop r13; pop r12; pop rbx; ret; 
0x0000000000422413: pop r13; pop r12; pop rbx; ret; 
0x0000000000422478: pop r13; pop r12; pop rbx; ret; 
0x0000000000422546: pop r13; pop r12; pop rbx; ret; 
0x0000000000422652: pop r13; pop r12; pop rbx; ret; 
0x0000000000422742: pop r13; pop r12; pop rbx; ret; 
0x0000000000422e14: pop r13; pop r12; pop rbx; ret; 
0x00000000004233ae: pop r13; pop r12; pop rbx; ret; 
0x0000000000423e0f: pop r13; pop r12; pop rbx; ret; 
0x0000000000424160: pop r13; pop r12; pop rbx; ret; 
0x0000000000424931: pop r13; pop r12; pop rbx; ret; 
0x0000000000424b36: pop r13; pop r12; pop rbx; ret; 
0x0000000000424d08: pop r13; pop r12; pop rbx; ret; 
0x0000000000424dfc: pop r13; pop r12; pop rbx; ret; 
0x00000000004251ce: pop r13; pop r12; pop rbx; ret; 
0x00000000004253ca: pop r13; pop r12; pop rbx; ret; 
0x0000000000425735: pop r13; pop r12; pop rbx; ret; 
0x0000000000425992: pop r13; pop r12; pop rbx; ret; 
0x0000000000425ab2: pop r13; pop r12; pop rbx; ret; 
0x00000000004261ce: pop r13; pop r12; pop rbx; ret; 
0x0000000000426721: pop r13; pop r12; pop rbx; ret; 
0x0000000000426896: pop r13; pop r12; pop rbx; ret; 
0x000000000042692e: pop r13; pop r12; pop rbx; ret; 
0x0000000000426b25: pop r13; pop r12; pop rbx; ret; 
0x00000000004270d0: pop r13; pop r12; pop rbx; ret; 
0x0000000000427733: pop r13; pop r12; pop rbx; ret; 
0x0000000000427972: pop r13; pop r12; pop rbx; ret; 
0x00000000004279be: pop r13; pop r12; pop rbx; ret; 
0x0000000000427af9: pop r13; pop r12; pop rbx; ret; 
0x0000000000427b52: pop r13; pop r12; pop rbx; ret; 
0x0000000000427c48: pop r13; pop r12; pop rbx; ret; 
0x0000000000427de2: pop r13; pop r12; pop rbx; ret; 
0x0000000000427f9a: pop r13; pop r12; pop rbx; ret; 
0x0000000000428037: pop r13; pop r12; pop rbx; ret; 
0x0000000000428036: pop r13; pop r12; pop rbx; ret; 
0x0000000000428102: pop r13; pop r12; pop rbx; ret; 
0x0000000000428101: pop r13; pop r12; pop rbx; ret; 
0x0000000000428220: pop r13; pop r12; pop rbx; ret; 
0x00000000004282ba: pop r13; pop r12; pop rbx; ret; 
0x00000000004282b9: pop r13; pop r12; pop rbx; ret; 
0x00000000004283c3: pop r13; pop r12; pop rbx; ret; 
0x0000000000428478: pop r13; pop r12; pop rbx; ret; 
0x0000000000428dbe: pop r13; pop r12; pop rbx; ret; 
0x00000000004290ec: pop r13; pop r12; pop rbx; ret; 
0x000000000042946f: pop r13; pop r12; pop rbx; ret; 
0x00000000004297a1: pop r13; pop r12; pop rbx; ret; 
0x0000000000429806: pop r13; pop r12; pop rbx; ret; 
0x00000000004299bc: pop r13; pop r12; pop rbx; ret; 
0x0000000000429c9d: pop r13; pop r12; pop rbx; ret; 
0x0000000000429d2d: pop r13; pop r12; pop rbx; ret; 
0x0000000000429dbd: pop r13; pop r12; pop rbx; ret; 
0x000000000042a1d9: pop r13; pop r12; pop rbx; ret; 
0x000000000042a264: pop r13; pop r12; pop rbx; ret; 
0x000000000042a263: pop r13; pop r12; pop rbx; ret; 
0x000000000042a31a: pop r13; pop r12; pop rbx; ret; 
0x000000000042a319: pop r13; pop r12; pop rbx; ret; 
0x000000000042a40e: pop r13; pop r12; pop rbx; ret; 
0x000000000042a497: pop r13; pop r12; pop rbx; ret; 
0x000000000042a496: pop r13; pop r12; pop rbx; ret; 
0x000000000042a584: pop r13; pop r12; pop rbx; ret; 
0x000000000042a64c: pop r13; pop r12; pop rbx; ret; 
0x000000000042aff3: pop r13; pop r12; pop rbx; ret; 
0x000000000042b31a: pop r13; pop r12; pop rbx; ret; 
0x000000000042b717: pop r13; pop r12; pop rbx; ret; 
0x000000000042bb94: pop r13; pop r12; pop rbx; ret; 
0x000000000042bbf3: pop r13; pop r12; pop rbx; ret; 
0x000000000042c09d: pop r13; pop r12; pop rbx; ret; 
0x000000000042c12d: pop r13; pop r12; pop rbx; ret; 
0x000000000042c1bd: pop r13; pop r12; pop rbx; ret; 
0x000000000042c666: pop r13; pop r12; pop rbx; ret; 
0x000000000042cc76: pop r13; pop r12; pop rbx; ret; 
0x000000000042cd06: pop r13; pop r12; pop rbx; ret; 
0x000000000042ce31: pop r13; pop r12; pop rbx; ret; 
0x000000000042cf13: pop r13; pop r12; pop rbx; ret; 
0x000000000042cff3: pop r13; pop r12; pop rbx; ret; 
0x000000000042d0cc: pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b8: pop r13; pop r12; pop rbx; ret; 
0x000000000042d2f7: pop r13; pop r12; pop rbx; ret; 
0x000000000042d398: pop r13; pop r12; pop rbx; ret; 
0x000000000042d44b: pop r13; pop r12; pop rbx; ret; 
0x000000000042d50b: pop r13; pop r12; pop rbx; ret; 
0x000000000042d5ac: pop r13; pop r12; pop rbx; ret; 
0x000000000042d6f3: pop r13; pop r12; pop rbx; ret; 
0x000000000042da4b: pop r13; pop r12; pop rbx; ret; 
0x000000000042dae9: pop r13; pop r12; pop rbx; ret; 
0x000000000042dbd9: pop r13; pop r12; pop rbx; ret; 
0x000000000042e253: pop r13; pop r12; pop rbx; ret; 
0x000000000042e30a: pop r13; pop r12; pop rbx; ret; 
0x000000000042e3c4: pop r13; pop r12; pop rbx; ret; 
0x000000000042e487: pop r13; pop r12; pop rbx; ret; 
0x000000000042e554: pop r13; pop r12; pop rbx; ret; 
0x000000000042ef52: pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c9: pop r13; pop r12; pop rbx; ret; 
0x000000000042f1da: pop r13; pop r12; pop rbx; ret; 
0x000000000042f2f8: pop r13; pop r12; pop rbx; ret; 
0x000000000042f327: pop r13; pop r12; pop rbx; ret; 
0x000000000042f3d2: pop r13; pop r12; pop rbx; ret; 
0x000000000042f481: pop r13; pop r12; pop rbx; ret; 
0x000000000042f619: pop r13; pop r12; pop rbx; ret; 
0x000000000042fd04: pop r13; pop r12; pop rbx; ret; 
0x000000000042fd43: pop r13; pop r12; pop rbx; ret; 
0x000000000042fd78: pop r13; pop r12; pop rbx; ret; 
0x000000000042fda7: pop r13; pop r12; pop rbx; ret; 
0x000000000042ff45: pop r13; pop r12; pop rbx; ret; 
0x000000000043018e: pop r13; pop r12; pop rbx; ret; 
0x000000000043026e: pop r13; pop r12; pop rbx; ret; 
0x00000000004302ea: pop r13; pop r12; pop rbx; ret; 
0x000000000043031c: pop r13; pop r12; pop rbx; ret; 
0x0000000000430421: pop r13; pop r12; pop rbx; ret; 
0x0000000000430f85: pop r13; pop r12; pop rbx; ret; 
0x0000000000431089: pop r13; pop r12; pop rbx; ret; 
0x00000000004310ba: pop r13; pop r12; pop rbx; ret; 
0x000000000043123e: pop r13; pop r12; pop rbx; ret; 
0x00000000004317c8: pop r13; pop r12; pop rbx; ret; 
0x00000000004317fa: pop r13; pop r12; pop rbx; ret; 
0x0000000000431c08: pop r13; pop r12; pop rbx; ret; 
0x0000000000431c3a: pop r13; pop r12; pop rbx; ret; 
0x00000000004320b8: pop r13; pop r12; pop rbx; ret; 
0x00000000004320ea: pop r13; pop r12; pop rbx; ret; 
0x0000000000433a3b: pop r13; pop r12; pop rbx; ret; 
0x0000000000433c44: pop r13; pop r12; pop rbx; ret; 
0x0000000000433d74: pop r13; pop r12; pop rbx; ret; 
0x0000000000433dd9: pop r13; pop r12; pop rbx; ret; 
0x0000000000433e39: pop r13; pop r12; pop rbx; ret; 
0x0000000000433eaa: pop r13; pop r12; pop rbx; ret; 
0x0000000000433f1a: pop r13; pop r12; pop rbx; ret; 
0x000000000043479b: pop r13; pop r12; pop rbx; ret; 
0x0000000000434860: pop r13; pop r12; pop rbx; ret; 
0x0000000000434a05: pop r13; pop r12; pop rbx; ret; 
0x0000000000434d6f: pop r13; pop r12; pop rbx; ret; 
0x0000000000434e90: pop r13; pop r12; pop rbx; ret; 
0x0000000000438ce3: pop r13; pop r12; pop rbx; ret; 
0x0000000000439c75: pop r13; pop r12; pop rbx; ret; 
0x000000000043a0bd: pop r13; pop r12; pop rbx; ret; 
0x000000000043a22d: pop r13; pop r12; pop rbx; ret; 
0x000000000043b0ef: pop r13; pop r12; pop rbx; ret; 
0x000000000043b810: pop r13; pop r12; pop rbx; ret; 
0x000000000043baaa: pop r13; pop r12; pop rbx; ret; 
0x000000000043bd9d: pop r13; pop r12; pop rbx; ret; 
0x000000000043cf81: pop r13; pop r12; pop rbx; ret; 
0x000000000043d161: pop r13; pop r12; pop rbx; ret; 
0x000000000043d92a: pop r13; pop r12; pop rbx; ret; 
0x000000000043e76e: pop r13; pop r12; pop rbx; ret; 
0x000000000043e83a: pop r13; pop r12; pop rbx; ret; 
0x000000000043e9bf: pop r13; pop r12; pop rbx; ret; 
0x000000000043ea8e: pop r13; pop r12; pop rbx; ret; 
0x000000000043ebbc: pop r13; pop r12; pop rbx; ret; 
0x000000000043ec8e: pop r13; pop r12; pop rbx; ret; 
0x000000000043edfa: pop r13; pop r12; pop rbx; ret; 
0x000000000043eebf: pop r13; pop r12; pop rbx; ret; 
0x000000000043ef5b: pop r13; pop r12; pop rbx; ret; 
0x000000000043efba: pop r13; pop r12; pop rbx; ret; 
0x000000000043f0da: pop r13; pop r12; pop rbx; ret; 
0x000000000043f19a: pop r13; pop r12; pop rbx; ret; 
0x000000000043fb3f: pop r13; pop r12; pop rbx; ret; 
0x00000000004404b3: pop r13; pop r12; pop rbx; ret; 
0x0000000000440694: pop r13; pop r12; pop rbx; ret; 
0x0000000000440ef5: pop r13; pop r12; pop rbx; ret; 
0x0000000000442020: pop r13; pop r12; pop rbx; ret; 
0x000000000044210c: pop r13; pop r12; pop rbx; ret; 
0x00000000004422e1: pop r13; pop r12; pop rbx; ret; 
0x00000000004423d0: pop r13; pop r12; pop rbx; ret; 
0x000000000044252b: pop r13; pop r12; pop rbx; ret; 
0x0000000000442620: pop r13; pop r12; pop rbx; ret; 
0x00000000004427cc: pop r13; pop r12; pop rbx; ret; 
0x00000000004428c1: pop r13; pop r12; pop rbx; ret; 
0x000000000044297d: pop r13; pop r12; pop rbx; ret; 
0x00000000004429da: pop r13; pop r12; pop rbx; ret; 
0x0000000000442b1c: pop r13; pop r12; pop rbx; ret; 
0x0000000000442c0c: pop r13; pop r12; pop rbx; ret; 
0x00000000004435c6: pop r13; pop r12; pop rbx; ret; 
0x00000000004439b1: pop r13; pop r12; pop rbx; ret; 
0x0000000000443d5e: pop r13; pop r12; pop rbx; ret; 
0x0000000000443e42: pop r13; pop r12; pop rbx; ret; 
0x0000000000444123: pop r13; pop r12; pop rbx; ret; 
0x000000000044431c: pop r13; pop r12; pop rbx; ret; 
0x0000000000444909: pop r13; pop r12; pop rbx; ret; 
0x000000000044562e: pop r13; pop r12; pop rbx; ret; 
0x000000000044568a: pop r13; pop r12; pop rbx; ret; 
0x0000000000445c57: pop r13; pop r12; pop rbx; ret; 
0x0000000000445eb6: pop r13; pop r12; pop rbx; ret; 
0x0000000000445fb2: pop r13; pop r12; pop rbx; ret; 
0x0000000000446005: pop r13; pop r12; pop rbx; ret; 
0x0000000000446059: pop r13; pop r12; pop rbx; ret; 
0x0000000000446fe7: pop r13; pop r12; pop rbx; ret; 
0x00000000004470c7: pop r13; pop r12; pop rbx; ret; 
0x00000000004471fa: pop r13; pop r12; pop rbx; ret; 
0x000000000044729d: pop r13; pop r12; pop rbx; ret; 
0x000000000044739a: pop r13; pop r12; pop rbx; ret; 
0x0000000000447486: pop r13; pop r12; pop rbx; ret; 
0x00000000004476a8: pop r13; pop r12; pop rbx; ret; 
0x0000000000447ad1: pop r13; pop r12; pop rbx; ret; 
0x0000000000447b45: pop r13; pop r12; pop rbx; ret; 
0x0000000000447c1a: pop r13; pop r12; pop rbx; ret; 
0x0000000000447c52: pop r13; pop r12; pop rbx; ret; 
0x0000000000447d0c: pop r13; pop r12; pop rbx; ret; 
0x0000000000447df5: pop r13; pop r12; pop rbx; ret; 
0x0000000000447e62: pop r13; pop r12; pop rbx; ret; 
0x0000000000447f09: pop r13; pop r12; pop rbx; ret; 
0x0000000000447f89: pop r13; pop r12; pop rbx; ret; 
0x0000000000448026: pop r13; pop r12; pop rbx; ret; 
0x0000000000449379: pop r13; pop r12; pop rbx; ret; 
0x000000000044a021: pop r13; pop r12; pop rbx; ret; 
0x000000000044a1c0: pop r13; pop r12; pop rbx; ret; 
0x000000000044b119: pop r13; pop r12; pop rbx; ret; 
0x000000000044ba0c: pop r13; pop r12; pop rbx; ret; 
0x000000000044ba68: pop r13; pop r12; pop rbx; ret; 
0x000000000044bbf1: pop r13; pop r12; pop rbx; ret; 
0x000000000044bc3f: pop r13; pop r12; pop rbx; ret; 
0x000000000044bcf4: pop r13; pop r12; pop rbx; ret; 
0x000000000044bd44: pop r13; pop r12; pop rbx; ret; 
0x000000000044bde5: pop r13; pop r12; pop rbx; ret; 
0x000000000044be69: pop r13; pop r12; pop rbx; ret; 
0x000000000044bea2: pop r13; pop r12; pop rbx; ret; 
0x000000000044bfe9: pop r13; pop r12; pop rbx; ret; 
0x000000000044c075: pop r13; pop r12; pop rbx; ret; 
0x000000000044c0d1: pop r13; pop r12; pop rbx; ret; 
0x000000000044c509: pop r13; pop r12; pop rbx; ret; 
0x000000000044c66d: pop r13; pop r12; pop rbx; ret; 
0x000000000044c6ff: pop r13; pop r12; pop rbx; ret; 
0x000000000044c7bf: pop r13; pop r12; pop rbx; ret; 
0x000000000044cf36: pop r13; pop r12; pop rbx; ret; 
0x000000000044d098: pop r13; pop r12; pop rbx; ret; 
0x000000000044d5ae: pop r13; pop r12; pop rbx; ret; 
0x000000000044d95a: pop r13; pop r12; pop rbx; ret; 
0x000000000044dcae: pop r13; pop r12; pop rbx; ret; 
0x000000000044e1af: pop r13; pop r12; pop rbx; ret; 
0x000000000044e275: pop r13; pop r12; pop rbx; ret; 
0x000000000044e31f: pop r13; pop r12; pop rbx; ret; 
0x000000000044e3f7: pop r13; pop r12; pop rbx; ret; 
0x000000000044e49f: pop r13; pop r12; pop rbx; ret; 
0x000000000044e57a: pop r13; pop r12; pop rbx; ret; 
0x000000000044eba6: pop r13; pop r12; pop rbx; ret; 
0x000000000044ec19: pop r13; pop r12; pop rbx; ret; 
0x000000000044f44a: pop r13; pop r12; pop rbx; ret; 
0x000000000044f715: pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f9: pop r13; pop r12; pop rbx; ret; 
0x000000000044fcc8: pop r13; pop r12; pop rbx; ret; 
0x00000000004501ff: pop r13; pop r12; pop rbx; ret; 
0x0000000000450407: pop r13; pop r12; pop rbx; ret; 
0x000000000045045a: pop r13; pop r12; pop rbx; ret; 
0x00000000004507c2: pop r13; pop r12; pop rbx; ret; 
0x00000000004509ca: pop r13; pop r12; pop rbx; ret; 
0x0000000000450b25: pop r13; pop r12; pop rbx; ret; 
0x0000000000450d66: pop r13; pop r12; pop rbx; ret; 
0x0000000000450e06: pop r13; pop r12; pop rbx; ret; 
0x0000000000451249: pop r13; pop r12; pop rbx; ret; 
0x0000000000452888: pop r13; pop r12; pop rbx; ret; 
0x0000000000452b2c: pop r13; pop r12; pop rbx; ret; 
0x0000000000452de1: pop r13; pop r12; pop rbx; ret; 
0x00000000004530f9: pop r13; pop r12; pop rbx; ret; 
0x0000000000453319: pop r13; pop r12; pop rbx; ret; 
0x0000000000453bb0: pop r13; pop r12; pop rbx; ret; 
0x0000000000453c97: pop r13; pop r12; pop rbx; ret; 
0x0000000000453ead: pop r13; pop r12; pop rbx; ret; 
0x0000000000453f02: pop r13; pop r12; pop rbx; ret; 
0x0000000000453f52: pop r13; pop r12; pop rbx; ret; 
0x0000000000454003: pop r13; pop r12; pop rbx; ret; 
0x0000000000454256: pop r13; pop r12; pop rbx; ret; 
0x0000000000454589: pop r13; pop r12; pop rbx; ret; 
0x0000000000454681: pop r13; pop r12; pop rbx; ret; 
0x0000000000454a0e: pop r13; pop r12; pop rbx; ret; 
0x0000000000454aa2: pop r13; pop r12; pop rbx; ret; 
0x0000000000454ca9: pop r13; pop r12; pop rbx; ret; 
0x0000000000454f12: pop r13; pop r12; pop rbx; ret; 
0x00000000004550cf: pop r13; pop r12; pop rbx; ret; 
0x00000000004564b3: pop r13; pop r12; pop rbx; ret; 
0x0000000000456ac6: pop r13; pop r12; pop rbx; ret; 
0x000000000045717a: pop r13; pop r12; pop rbx; ret; 
0x00000000004571e4: pop r13; pop r12; pop rbx; ret; 
0x000000000045761b: pop r13; pop r12; pop rbx; ret; 
0x0000000000457671: pop r13; pop r12; pop rbx; ret; 
0x0000000000457abe: pop r13; pop r12; pop rbx; ret; 
0x0000000000457c5e: pop r13; pop r12; pop rbx; ret; 
0x0000000000457e1e: pop r13; pop r12; pop rbx; ret; 
0x0000000000458883: pop r13; pop r12; pop rbx; ret; 
0x0000000000458db3: pop r13; pop r12; pop rbx; ret; 
0x0000000000459252: pop r13; pop r12; pop rbx; ret; 
0x000000000045949e: pop r13; pop r12; pop rbx; ret; 
0x000000000045995f: pop r13; pop r12; pop rbx; ret; 
0x0000000000459a03: pop r13; pop r12; pop rbx; ret; 
0x0000000000459ca4: pop r13; pop r12; pop rbx; ret; 
0x0000000000459ea3: pop r13; pop r12; pop rbx; ret; 
0x000000000045a189: pop r13; pop r12; pop rbx; ret; 
0x000000000045a21b: pop r13; pop r12; pop rbx; ret; 
0x000000000045a523: pop r13; pop r12; pop rbx; ret; 
0x000000000045a7a4: pop r13; pop r12; pop rbx; ret; 
0x000000000045a837: pop r13; pop r12; pop rbx; ret; 
0x000000000045a8c7: pop r13; pop r12; pop rbx; ret; 
0x000000000045a957: pop r13; pop r12; pop rbx; ret; 
0x000000000045a9e7: pop r13; pop r12; pop rbx; ret; 
0x000000000045b5c8: pop r13; pop r12; pop rbx; ret; 
0x000000000045b73e: pop r13; pop r12; pop rbx; ret; 
0x000000000045b835: pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e9: pop r13; pop r12; pop rbx; ret; 
0x000000000045c032: pop r13; pop r12; pop rbx; ret; 
0x000000000045c45a: pop r13; pop r12; pop rbx; ret; 
0x000000000045c55f: pop r13; pop r12; pop rbx; ret; 
0x000000000045c6bf: pop r13; pop r12; pop rbx; ret; 
0x000000000045c746: pop r13; pop r12; pop rbx; ret; 
0x000000000045c7c4: pop r13; pop r12; pop rbx; ret; 
0x0000000000402dab: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b1f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403e96: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004041f2: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000404b73: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040626a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407193: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407240: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004072c6: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004073cb: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040744b: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407b44: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040896c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000408a85: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004093c8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409d57: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409dec: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a182: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a64a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ad21: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040afc1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040bc14: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040be9a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c466: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c522: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c61a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040c963: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb34: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cdd5: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ce6e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cf2c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d665: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d703: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d7d6: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d846: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040da6e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040e2c3: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f761: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f80f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f8eb: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc2d: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040fdbe: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000410da7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041219e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004124f7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412903: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412cd0: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412dba: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412e6f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413854: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413930: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413a00: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413aa3: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413b71: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413d2c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413e9f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041419a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041428a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414327: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041441c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004144e5: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004153fc: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417012: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004170a7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417651: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004176db: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041775b: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004177db: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004178b3: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041897a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419866: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419cd4: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419df2: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f40: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a17d: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a211: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a525: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b997: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041ba52: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bb15: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bba1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bdc2: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041be52: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1ad: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041d016: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041da2e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e156: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e31f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e4c3: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e9c9: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f39e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5f9: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f98f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041fb4b: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000420632: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000420771: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042132e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042157e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000421e23: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000422203: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e0d: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042492f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424b34: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d06: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004253c8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000425990: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000425ab0: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004261cc: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042671f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042692c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b23: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004270ce: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427731: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427af7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427c46: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427de0: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427f98: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042821e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000428dbc: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004290ea: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042979f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042a1d7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042aff1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042b318: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042bb92: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cc74: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cf11: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cff1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b6: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5aa: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6f1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042da49: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e485: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e552: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f1d8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f3d0: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f47f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f617: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042ff43: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043018c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043026c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043041f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000431087: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043123c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433a39: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f18: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434799: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043485e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434a03: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434d6d: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434e8e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000438ce1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000439c73: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043a0bb: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b0ed: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b80e: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043baa8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043bd9b: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043d15f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043efb8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043fb3d: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000440692: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004429d8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004435c4: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004439af: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e40: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000444907: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044562c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445c55: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445eb4: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000446003: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000446fe5: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004470c5: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004471f8: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044729b: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447398: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447484: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004476a6: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b43: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c18: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447d0a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447df3: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f07: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f87: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a01f: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a1be: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bbef: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bde3: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044be67: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c507: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c7bd: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044cf34: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e273: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e3f5: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e578: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044eba4: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044ec17: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f713: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044fcc6: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004501fd: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450b23: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450d64: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000450e04: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452886: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b2a: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452ddf: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004530f7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453bae: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453eab: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f00: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f50: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454ca7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454f10: pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004550cd: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000458db1: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000459a01: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a521: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a7a2: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b5c6: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b73c: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e7: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c55d: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c6bd: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c744: pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7c2: pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000403e94: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000404b71: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000406268: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407191: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004072c4: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407b42: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040896a: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000408a83: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004093c6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409d55: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409dea: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a180: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a648: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ad1f: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040afbf: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040be98: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cdd3: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ce6c: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cf2a: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d663: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d7d4: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d844: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040e2c1: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f80d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f8e9: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000410da5: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041219c: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004124f5: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004124f4: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412901: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412900: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412cce: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412e6d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004139fe: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413aa1: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413b6f: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413d2a: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413e9d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414198: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414288: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414325: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041441a: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004144e3: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417010: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004170a5: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041764f: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004176d9: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417759: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004177d9: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004178b1: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419864: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419cd2: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419df0: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a523: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b995: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041ba50: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bb13: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bb9f: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bdc0: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041be50: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041da2c: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e9c7: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f98d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041fb49: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042492d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424b32: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004253c6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042598e: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000425aae: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042671d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004270cc: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427af5: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427c44: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427dde: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042979d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042bb90: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cc72: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042da47: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e483: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e550: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f1d6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042ff41: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043041d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000431085: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433a37: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434797: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043485c: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434a01: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434d6b: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434e8c: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000438cdf: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043a0b9: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b0eb: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b80c: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043baa6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043bd99: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043efb6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043fb3b: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004429d6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004435c2: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000444905: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044562a: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445c53: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000446fe3: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004470c3: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004471f6: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447396: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447482: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004476a4: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447d08: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447df1: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a01d: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a1bc: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bbed: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bde1: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c505: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c7bb: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e271: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e3f3: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e576: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044eba2: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044ec15: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f711: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044fcc4: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004501fb: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452884: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453bac: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453ea9: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454ca5: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454f0e: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004550cb: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a51f: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a7a0: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c55b: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c6bb: pop r15; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000420666: pop r8; mov rdi, qword ptr [rax]; call 0x19140; pop rbx; ret; 
0x0000000000413c22: pop r8; ret; 
0x00000000004053fe: pop rax; adc al, 0xc7; movapd xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000405436: pop rax; adc al, 0xd7; movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x000000000040f6ec: pop rax; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000431b2e: pop rax; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045c137: pop rax; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000439b84: pop rax; jg 0x39b84; dec dword ptr [rax - 0x77]; ret; 
0x00000000004550fe: pop rax; lea rsp, [rsp + 0x98]; ret; 
0x0000000000439554: pop rax; mov edx, 0x6ddffffd; call 0x5df01ea7; ret; 
0x0000000000423ba9: pop rax; mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000423ba8: pop rax; mov qword ptr [rip + 0x44fff], rax; ret; 
0x0000000000420667: pop rax; mov rdi, qword ptr [rax]; call 0x19140; pop rbx; ret; 
0x0000000000430ed4: pop rax; or eax, 0x8d48fffe; and al, 0x18; ret; 
0x0000000000413c23: pop rax; ret; 
0x0000000000446da5: pop rax; sbb byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000446e06: pop rax; sbb byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x000000000043159f: pop rax; std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004315ef: pop rax; std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043160f: pop rax; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043160e: pop rax; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004206ff: pop rax; xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x00000000004208a2: pop rax; xor esi, esi; call 0xe140; pop rbx; ret; 
0x0000000000414b30: pop rbp; adc byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000459312: pop rbp; add al, byte ptr [rax]; movsxd rdx, edx; lea rax, [rax + rdx*8]; ret; 
0x000000000041862f: pop rbp; add al, byte ptr [rip + 0x38b70f00]; call 0x18370; mov rsp, rbp; pop rbp; ret; 
0x000000000040f1ae: pop rbp; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042ed47: pop rbp; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed57: pop rbp; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000040954e: pop rbp; call 0x5ded1e9c; ret; 
0x00000000004044f6: pop rbp; call 0xfffffffff065d048; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b4ed: pop rbp; call 0xfffffffff066403f; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040b5b2: pop rbp; call 0xfffffffff0664104; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040c75e: pop rbp; call 0xfffffffff06652b0; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e7e5: pop rbp; call 0xfffffffff0667337; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040e862: pop rbp; call 0xfffffffff06673b4; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040eab2: pop rbp; call 0xfffffffff0667604; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000040ee64: pop rbp; call 0xfffffffff06679b6; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000411b9b: pop rbp; call 0xfffffffff066a6ed; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000041fa3b: pop rbp; call 0xfffffffff067858d; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f6ab: pop rbp; call 0xfffffffff06881fd; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000042f7fb: pop rbp; call 0xfffffffff068834d; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x000000000044fdd3: pop rbp; call 0xfffffffff06a8925; mov r13, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004027cb: pop rbp; clc; mov eax, dword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004010d0: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000411bf3: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000412eef: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000412fd1: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000417da9: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000417e87: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004185d3: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043dfde: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043efe8: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000043f00e: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004416ce: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a08: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x0000000000442a2e: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004531d4: pop rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x000000000045c277: pop rbp; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c28d: pop rbp; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2a7: pop rbp; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2a6: pop rbp; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c2b7: pop rbp; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044f311: pop rbp; cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000416317: pop rbp; fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416157: pop rbp; fild word ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043c0f0: pop rbp; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000450f0b: pop rbp; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042e0f6: pop rbp; mov eax, 0xc0658b4c; mov rsp, rbp; pop rbp; ret; 
0x000000000042e06a: pop rbp; movabs al, byte ptr [0xb06d8b4ca8658b4c]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443adf: pop rbp; movabs al, byte ptr [0xb06d8b4ca8658b4c]; mov rsp, rbp; pop rbp; ret; 
0x000000000043ab2a: pop rbp; nop; mov r12, qword ptr [rbp - 0x68]; mov rsp, rbp; pop rbp; ret; 
0x0000000000402cca: pop rbp; pop r12; pop rbx; ret; 
0x0000000000402dae: pop rbp; pop r12; pop rbx; ret; 
0x0000000000403a15: pop rbp; pop r12; pop rbx; ret; 
0x0000000000403b22: pop rbp; pop r12; pop rbx; ret; 
0x0000000000403c2c: pop rbp; pop r12; pop rbx; ret; 
0x0000000000403d95: pop rbp; pop r12; pop rbx; ret; 
0x0000000000403e99: pop rbp; pop r12; pop rbx; ret; 
0x00000000004040cf: pop rbp; pop r12; pop rbx; ret; 
0x00000000004041f5: pop rbp; pop r12; pop rbx; ret; 
0x0000000000404b76: pop rbp; pop r12; pop rbx; ret; 
0x0000000000404cc3: pop rbp; pop r12; pop rbx; ret; 
0x000000000040626d: pop rbp; pop r12; pop rbx; ret; 
0x00000000004069fa: pop rbp; pop r12; pop rbx; ret; 
0x0000000000406cf8: pop rbp; pop r12; pop rbx; ret; 
0x0000000000406f6d: pop rbp; pop r12; pop rbx; ret; 
0x0000000000407196: pop rbp; pop r12; pop rbx; ret; 
0x0000000000407243: pop rbp; pop r12; pop rbx; ret; 
0x00000000004072c9: pop rbp; pop r12; pop rbx; ret; 
0x00000000004073ce: pop rbp; pop r12; pop rbx; ret; 
0x000000000040744e: pop rbp; pop r12; pop rbx; ret; 
0x000000000040771e: pop rbp; pop r12; pop rbx; ret; 
0x00000000004077ae: pop rbp; pop r12; pop rbx; ret; 
0x0000000000407b47: pop rbp; pop r12; pop rbx; ret; 
0x0000000000407df2: pop rbp; pop r12; pop rbx; ret; 
0x000000000040896f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000408a88: pop rbp; pop r12; pop rbx; ret; 
0x00000000004093cb: pop rbp; pop r12; pop rbx; ret; 
0x0000000000409d5a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000409def: pop rbp; pop r12; pop rbx; ret; 
0x0000000000409fd2: pop rbp; pop r12; pop rbx; ret; 
0x000000000040a185: pop rbp; pop r12; pop rbx; ret; 
0x000000000040a24a: pop rbp; pop r12; pop rbx; ret; 
0x000000000040a64d: pop rbp; pop r12; pop rbx; ret; 
0x000000000040ad24: pop rbp; pop r12; pop rbx; ret; 
0x000000000040ae75: pop rbp; pop r12; pop rbx; ret; 
0x000000000040afc4: pop rbp; pop r12; pop rbx; ret; 
0x000000000040b36b: pop rbp; pop r12; pop rbx; ret; 
0x000000000040b3a5: pop rbp; pop r12; pop rbx; ret; 
0x000000000040bc17: pop rbp; pop r12; pop rbx; ret; 
0x000000000040be9d: pop rbp; pop r12; pop rbx; ret; 
0x000000000040c469: pop rbp; pop r12; pop rbx; ret; 
0x000000000040c525: pop rbp; pop r12; pop rbx; ret; 
0x000000000040c581: pop rbp; pop r12; pop rbx; ret; 
0x000000000040c61d: pop rbp; pop r12; pop rbx; ret; 
0x000000000040c966: pop rbp; pop r12; pop rbx; ret; 
0x000000000040cb37: pop rbp; pop r12; pop rbx; ret; 
0x000000000040ccb4: pop rbp; pop r12; pop rbx; ret; 
0x000000000040cd09: pop rbp; pop r12; pop rbx; ret; 
0x000000000040cdd8: pop rbp; pop r12; pop rbx; ret; 
0x000000000040ce71: pop rbp; pop r12; pop rbx; ret; 
0x000000000040cf2f: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d131: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d4aa: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d668: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d706: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d764: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d7d9: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d849: pop rbp; pop r12; pop rbx; ret; 
0x000000000040d93c: pop rbp; pop r12; pop rbx; ret; 
0x000000000040da71: pop rbp; pop r12; pop rbx; ret; 
0x000000000040dac1: pop rbp; pop r12; pop rbx; ret; 
0x000000000040ddcd: pop rbp; pop r12; pop rbx; ret; 
0x000000000040de8f: pop rbp; pop r12; pop rbx; ret; 
0x000000000040df0a: pop rbp; pop r12; pop rbx; ret; 
0x000000000040e000: pop rbp; pop r12; pop rbx; ret; 
0x000000000040e078: pop rbp; pop r12; pop rbx; ret; 
0x000000000040e131: pop rbp; pop r12; pop rbx; ret; 
0x000000000040e2c6: pop rbp; pop r12; pop rbx; ret; 
0x000000000040eee4: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f08b: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f28b: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f2bb: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f34b: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f3dd: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f4ab: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f53b: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f5cd: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f764: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f812: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f8ee: pop rbp; pop r12; pop rbx; ret; 
0x000000000040f9d9: pop rbp; pop r12; pop rbx; ret; 
0x000000000040fa69: pop rbp; pop r12; pop rbx; ret; 
0x000000000040faf9: pop rbp; pop r12; pop rbx; ret; 
0x000000000040fc30: pop rbp; pop r12; pop rbx; ret; 
0x000000000040fdc1: pop rbp; pop r12; pop rbx; ret; 
0x000000000040fff4: pop rbp; pop r12; pop rbx; ret; 
0x00000000004102f5: pop rbp; pop r12; pop rbx; ret; 
0x00000000004104f1: pop rbp; pop r12; pop rbx; ret; 
0x00000000004107a1: pop rbp; pop r12; pop rbx; ret; 
0x0000000000410daa: pop rbp; pop r12; pop rbx; ret; 
0x0000000000411248: pop rbp; pop r12; pop rbx; ret; 
0x00000000004118f6: pop rbp; pop r12; pop rbx; ret; 
0x0000000000411c25: pop rbp; pop r12; pop rbx; ret; 
0x00000000004121a1: pop rbp; pop r12; pop rbx; ret; 
0x00000000004124fa: pop rbp; pop r12; pop rbx; ret; 
0x0000000000412906: pop rbp; pop r12; pop rbx; ret; 
0x0000000000412cd3: pop rbp; pop r12; pop rbx; ret; 
0x0000000000412dbd: pop rbp; pop r12; pop rbx; ret; 
0x0000000000412e72: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413857: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413933: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413a03: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413aa6: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413b74: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413d2f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413ea2: pop rbp; pop r12; pop rbx; ret; 
0x0000000000413f19: pop rbp; pop r12; pop rbx; ret; 
0x00000000004140b0: pop rbp; pop r12; pop rbx; ret; 
0x000000000041419d: pop rbp; pop r12; pop rbx; ret; 
0x000000000041428d: pop rbp; pop r12; pop rbx; ret; 
0x000000000041432a: pop rbp; pop r12; pop rbx; ret; 
0x000000000041441f: pop rbp; pop r12; pop rbx; ret; 
0x00000000004144e8: pop rbp; pop r12; pop rbx; ret; 
0x0000000000414b33: pop rbp; pop r12; pop rbx; ret; 
0x0000000000414e0e: pop rbp; pop r12; pop rbx; ret; 
0x0000000000414f9e: pop rbp; pop r12; pop rbx; ret; 
0x000000000041519e: pop rbp; pop r12; pop rbx; ret; 
0x0000000000415368: pop rbp; pop r12; pop rbx; ret; 
0x00000000004153ff: pop rbp; pop r12; pop rbx; ret; 
0x0000000000415459: pop rbp; pop r12; pop rbx; ret; 
0x0000000000416fb6: pop rbp; pop r12; pop rbx; ret; 
0x0000000000417015: pop rbp; pop r12; pop rbx; ret; 
0x00000000004170aa: pop rbp; pop r12; pop rbx; ret; 
0x0000000000417654: pop rbp; pop r12; pop rbx; ret; 
0x00000000004176de: pop rbp; pop r12; pop rbx; ret; 
0x000000000041775e: pop rbp; pop r12; pop rbx; ret; 
0x00000000004177de: pop rbp; pop r12; pop rbx; ret; 
0x00000000004178b6: pop rbp; pop r12; pop rbx; ret; 
0x0000000000417f4c: pop rbp; pop r12; pop rbx; ret; 
0x000000000041852f: pop rbp; pop r12; pop rbx; ret; 
0x000000000041897d: pop rbp; pop r12; pop rbx; ret; 
0x0000000000418fc0: pop rbp; pop r12; pop rbx; ret; 
0x000000000041960e: pop rbp; pop r12; pop rbx; ret; 
0x0000000000419869: pop rbp; pop r12; pop rbx; ret; 
0x0000000000419cd7: pop rbp; pop r12; pop rbx; ret; 
0x0000000000419df5: pop rbp; pop r12; pop rbx; ret; 
0x0000000000419f43: pop rbp; pop r12; pop rbx; ret; 
0x000000000041a0dd: pop rbp; pop r12; pop rbx; ret; 
0x000000000041a180: pop rbp; pop r12; pop rbx; ret; 
0x000000000041a214: pop rbp; pop r12; pop rbx; ret; 
0x000000000041a528: pop rbp; pop r12; pop rbx; ret; 
0x000000000041a5dc: pop rbp; pop r12; pop rbx; ret; 
0x000000000041a887: pop rbp; pop r12; pop rbx; ret; 
0x000000000041b432: pop rbp; pop r12; pop rbx; ret; 
0x000000000041b482: pop rbp; pop r12; pop rbx; ret; 
0x000000000041b4c2: pop rbp; pop r12; pop rbx; ret; 
0x000000000041b99a: pop rbp; pop r12; pop rbx; ret; 
0x000000000041ba55: pop rbp; pop r12; pop rbx; ret; 
0x000000000041bb18: pop rbp; pop r12; pop rbx; ret; 
0x000000000041bba4: pop rbp; pop r12; pop rbx; ret; 
0x000000000041bdc5: pop rbp; pop r12; pop rbx; ret; 
0x000000000041be55: pop rbp; pop r12; pop rbx; ret; 
0x000000000041c1b0: pop rbp; pop r12; pop rbx; ret; 
0x000000000041c26a: pop rbp; pop r12; pop rbx; ret; 
0x000000000041c4ba: pop rbp; pop r12; pop rbx; ret; 
0x000000000041d019: pop rbp; pop r12; pop rbx; ret; 
0x000000000041d92a: pop rbp; pop r12; pop rbx; ret; 
0x000000000041da31: pop rbp; pop r12; pop rbx; ret; 
0x000000000041dac6: pop rbp; pop r12; pop rbx; ret; 
0x000000000041dca7: pop rbp; pop r12; pop rbx; ret; 
0x000000000041ddbb: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e159: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e322: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e4c6: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e540: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e5c0: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e65e: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e6fe: pop rbp; pop r12; pop rbx; ret; 
0x000000000041e9cc: pop rbp; pop r12; pop rbx; ret; 
0x000000000041ea5a: pop rbp; pop r12; pop rbx; ret; 
0x000000000041eac5: pop rbp; pop r12; pop rbx; ret; 
0x000000000041eb3f: pop rbp; pop r12; pop rbx; ret; 
0x000000000041ec41: pop rbp; pop r12; pop rbx; ret; 
0x000000000041ed55: pop rbp; pop r12; pop rbx; ret; 
0x000000000041f04e: pop rbp; pop r12; pop rbx; ret; 
0x000000000041f3a1: pop rbp; pop r12; pop rbx; ret; 
0x000000000041f5fc: pop rbp; pop r12; pop rbx; ret; 
0x000000000041f992: pop rbp; pop r12; pop rbx; ret; 
0x000000000041fb4e: pop rbp; pop r12; pop rbx; ret; 
0x000000000041fc23: pop rbp; pop r12; pop rbx; ret; 
0x000000000041fe2e: pop rbp; pop r12; pop rbx; ret; 
0x000000000042044a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000420635: pop rbp; pop r12; pop rbx; ret; 
0x00000000004206db: pop rbp; pop r12; pop rbx; ret; 
0x0000000000420774: pop rbp; pop r12; pop rbx; ret; 
0x000000000042085b: pop rbp; pop r12; pop rbx; ret; 
0x0000000000420972: pop rbp; pop r12; pop rbx; ret; 
0x0000000000420d5b: pop rbp; pop r12; pop rbx; ret; 
0x0000000000421331: pop rbp; pop r12; pop rbx; ret; 
0x0000000000421581: pop rbp; pop r12; pop rbx; ret; 
0x00000000004218e4: pop rbp; pop r12; pop rbx; ret; 
0x0000000000421e26: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422206: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422414: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422479: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422547: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422653: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422743: pop rbp; pop r12; pop rbx; ret; 
0x0000000000422e15: pop rbp; pop r12; pop rbx; ret; 
0x00000000004233af: pop rbp; pop r12; pop rbx; ret; 
0x0000000000423e10: pop rbp; pop r12; pop rbx; ret; 
0x0000000000424161: pop rbp; pop r12; pop rbx; ret; 
0x0000000000424932: pop rbp; pop r12; pop rbx; ret; 
0x0000000000424b37: pop rbp; pop r12; pop rbx; ret; 
0x0000000000424d09: pop rbp; pop r12; pop rbx; ret; 
0x0000000000424dfd: pop rbp; pop r12; pop rbx; ret; 
0x00000000004251cf: pop rbp; pop r12; pop rbx; ret; 
0x00000000004253cb: pop rbp; pop r12; pop rbx; ret; 
0x0000000000425736: pop rbp; pop r12; pop rbx; ret; 
0x0000000000425993: pop rbp; pop r12; pop rbx; ret; 
0x0000000000425ab3: pop rbp; pop r12; pop rbx; ret; 
0x00000000004261cf: pop rbp; pop r12; pop rbx; ret; 
0x0000000000426722: pop rbp; pop r12; pop rbx; ret; 
0x0000000000426897: pop rbp; pop r12; pop rbx; ret; 
0x000000000042692f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000426b26: pop rbp; pop r12; pop rbx; ret; 
0x00000000004270d1: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427734: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427973: pop rbp; pop r12; pop rbx; ret; 
0x00000000004279bf: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427afa: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427b53: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427c49: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427de3: pop rbp; pop r12; pop rbx; ret; 
0x0000000000427f9b: pop rbp; pop r12; pop rbx; ret; 
0x0000000000428038: pop rbp; pop r12; pop rbx; ret; 
0x0000000000428103: pop rbp; pop r12; pop rbx; ret; 
0x0000000000428221: pop rbp; pop r12; pop rbx; ret; 
0x00000000004282bb: pop rbp; pop r12; pop rbx; ret; 
0x00000000004283c4: pop rbp; pop r12; pop rbx; ret; 
0x0000000000428479: pop rbp; pop r12; pop rbx; ret; 
0x0000000000428dbf: pop rbp; pop r12; pop rbx; ret; 
0x00000000004290ed: pop rbp; pop r12; pop rbx; ret; 
0x0000000000429470: pop rbp; pop r12; pop rbx; ret; 
0x00000000004297a2: pop rbp; pop r12; pop rbx; ret; 
0x0000000000429807: pop rbp; pop r12; pop rbx; ret; 
0x00000000004299bd: pop rbp; pop r12; pop rbx; ret; 
0x0000000000429c9e: pop rbp; pop r12; pop rbx; ret; 
0x0000000000429d2e: pop rbp; pop r12; pop rbx; ret; 
0x0000000000429dbe: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a1da: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a265: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a31b: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a40f: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a498: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a585: pop rbp; pop r12; pop rbx; ret; 
0x000000000042a64d: pop rbp; pop r12; pop rbx; ret; 
0x000000000042aff4: pop rbp; pop r12; pop rbx; ret; 
0x000000000042b31b: pop rbp; pop r12; pop rbx; ret; 
0x000000000042b718: pop rbp; pop r12; pop rbx; ret; 
0x000000000042bb95: pop rbp; pop r12; pop rbx; ret; 
0x000000000042bbf4: pop rbp; pop r12; pop rbx; ret; 
0x000000000042c09e: pop rbp; pop r12; pop rbx; ret; 
0x000000000042c12e: pop rbp; pop r12; pop rbx; ret; 
0x000000000042c1be: pop rbp; pop r12; pop rbx; ret; 
0x000000000042c667: pop rbp; pop r12; pop rbx; ret; 
0x000000000042cc77: pop rbp; pop r12; pop rbx; ret; 
0x000000000042cd07: pop rbp; pop r12; pop rbx; ret; 
0x000000000042ce32: pop rbp; pop r12; pop rbx; ret; 
0x000000000042cf14: pop rbp; pop r12; pop rbx; ret; 
0x000000000042cff4: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d0cd: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d2b9: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d2f8: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d399: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d44c: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d50c: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d5ad: pop rbp; pop r12; pop rbx; ret; 
0x000000000042d6f4: pop rbp; pop r12; pop rbx; ret; 
0x000000000042da4c: pop rbp; pop r12; pop rbx; ret; 
0x000000000042daea: pop rbp; pop r12; pop rbx; ret; 
0x000000000042dbda: pop rbp; pop r12; pop rbx; ret; 
0x000000000042e254: pop rbp; pop r12; pop rbx; ret; 
0x000000000042e30b: pop rbp; pop r12; pop rbx; ret; 
0x000000000042e3c5: pop rbp; pop r12; pop rbx; ret; 
0x000000000042e488: pop rbp; pop r12; pop rbx; ret; 
0x000000000042e555: pop rbp; pop r12; pop rbx; ret; 
0x000000000042ef53: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f0ca: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f1db: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f2f9: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f328: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f3d3: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f482: pop rbp; pop r12; pop rbx; ret; 
0x000000000042f61a: pop rbp; pop r12; pop rbx; ret; 
0x000000000042fd05: pop rbp; pop r12; pop rbx; ret; 
0x000000000042fd44: pop rbp; pop r12; pop rbx; ret; 
0x000000000042fd79: pop rbp; pop r12; pop rbx; ret; 
0x000000000042fda8: pop rbp; pop r12; pop rbx; ret; 
0x000000000042ff46: pop rbp; pop r12; pop rbx; ret; 
0x000000000043018f: pop rbp; pop r12; pop rbx; ret; 
0x000000000043026f: pop rbp; pop r12; pop rbx; ret; 
0x00000000004302eb: pop rbp; pop r12; pop rbx; ret; 
0x000000000043031d: pop rbp; pop r12; pop rbx; ret; 
0x0000000000430422: pop rbp; pop r12; pop rbx; ret; 
0x0000000000430f86: pop rbp; pop r12; pop rbx; ret; 
0x000000000043108a: pop rbp; pop r12; pop rbx; ret; 
0x00000000004310bb: pop rbp; pop r12; pop rbx; ret; 
0x000000000043123f: pop rbp; pop r12; pop rbx; ret; 
0x00000000004317c9: pop rbp; pop r12; pop rbx; ret; 
0x00000000004317fb: pop rbp; pop r12; pop rbx; ret; 
0x0000000000431c09: pop rbp; pop r12; pop rbx; ret; 
0x0000000000431c3b: pop rbp; pop r12; pop rbx; ret; 
0x00000000004320b9: pop rbp; pop r12; pop rbx; ret; 
0x00000000004320eb: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433a3c: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433c45: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433d75: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433dda: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433e3a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433eab: pop rbp; pop r12; pop rbx; ret; 
0x0000000000433f1b: pop rbp; pop r12; pop rbx; ret; 
0x000000000043479c: pop rbp; pop r12; pop rbx; ret; 
0x0000000000434861: pop rbp; pop r12; pop rbx; ret; 
0x0000000000434a06: pop rbp; pop r12; pop rbx; ret; 
0x0000000000434d70: pop rbp; pop r12; pop rbx; ret; 
0x0000000000434e91: pop rbp; pop r12; pop rbx; ret; 
0x0000000000438ce4: pop rbp; pop r12; pop rbx; ret; 
0x0000000000439c76: pop rbp; pop r12; pop rbx; ret; 
0x000000000043a0be: pop rbp; pop r12; pop rbx; ret; 
0x000000000043a22e: pop rbp; pop r12; pop rbx; ret; 
0x000000000043b0f0: pop rbp; pop r12; pop rbx; ret; 
0x000000000043b811: pop rbp; pop r12; pop rbx; ret; 
0x000000000043baab: pop rbp; pop r12; pop rbx; ret; 
0x000000000043bd9e: pop rbp; pop r12; pop rbx; ret; 
0x000000000043cf82: pop rbp; pop r12; pop rbx; ret; 
0x000000000043d162: pop rbp; pop r12; pop rbx; ret; 
0x000000000043d92b: pop rbp; pop r12; pop rbx; ret; 
0x000000000043e76f: pop rbp; pop r12; pop rbx; ret; 
0x000000000043e83b: pop rbp; pop r12; pop rbx; ret; 
0x000000000043e9c0: pop rbp; pop r12; pop rbx; ret; 
0x000000000043ea8f: pop rbp; pop r12; pop rbx; ret; 
0x000000000043ebbd: pop rbp; pop r12; pop rbx; ret; 
0x000000000043ec8f: pop rbp; pop r12; pop rbx; ret; 
0x000000000043edfb: pop rbp; pop r12; pop rbx; ret; 
0x000000000043eec0: pop rbp; pop r12; pop rbx; ret; 
0x000000000043ef5c: pop rbp; pop r12; pop rbx; ret; 
0x000000000043efbb: pop rbp; pop r12; pop rbx; ret; 
0x000000000043f0db: pop rbp; pop r12; pop rbx; ret; 
0x000000000043f19b: pop rbp; pop r12; pop rbx; ret; 
0x000000000043fb40: pop rbp; pop r12; pop rbx; ret; 
0x00000000004404b4: pop rbp; pop r12; pop rbx; ret; 
0x0000000000440695: pop rbp; pop r12; pop rbx; ret; 
0x0000000000440ef6: pop rbp; pop r12; pop rbx; ret; 
0x0000000000442021: pop rbp; pop r12; pop rbx; ret; 
0x000000000044210d: pop rbp; pop r12; pop rbx; ret; 
0x00000000004422e2: pop rbp; pop r12; pop rbx; ret; 
0x00000000004423d1: pop rbp; pop r12; pop rbx; ret; 
0x000000000044252c: pop rbp; pop r12; pop rbx; ret; 
0x0000000000442621: pop rbp; pop r12; pop rbx; ret; 
0x00000000004427cd: pop rbp; pop r12; pop rbx; ret; 
0x00000000004428c2: pop rbp; pop r12; pop rbx; ret; 
0x000000000044297e: pop rbp; pop r12; pop rbx; ret; 
0x00000000004429db: pop rbp; pop r12; pop rbx; ret; 
0x0000000000442b1d: pop rbp; pop r12; pop rbx; ret; 
0x0000000000442c0d: pop rbp; pop r12; pop rbx; ret; 
0x00000000004435c7: pop rbp; pop r12; pop rbx; ret; 
0x00000000004439b2: pop rbp; pop r12; pop rbx; ret; 
0x0000000000443d5f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000443e43: pop rbp; pop r12; pop rbx; ret; 
0x0000000000444124: pop rbp; pop r12; pop rbx; ret; 
0x000000000044431d: pop rbp; pop r12; pop rbx; ret; 
0x000000000044490a: pop rbp; pop r12; pop rbx; ret; 
0x000000000044562f: pop rbp; pop r12; pop rbx; ret; 
0x000000000044568b: pop rbp; pop r12; pop rbx; ret; 
0x0000000000445c58: pop rbp; pop r12; pop rbx; ret; 
0x0000000000445eb7: pop rbp; pop r12; pop rbx; ret; 
0x0000000000445fb3: pop rbp; pop r12; pop rbx; ret; 
0x0000000000446006: pop rbp; pop r12; pop rbx; ret; 
0x000000000044605a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000446fe8: pop rbp; pop r12; pop rbx; ret; 
0x00000000004470c8: pop rbp; pop r12; pop rbx; ret; 
0x00000000004471fb: pop rbp; pop r12; pop rbx; ret; 
0x000000000044729e: pop rbp; pop r12; pop rbx; ret; 
0x000000000044739b: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447487: pop rbp; pop r12; pop rbx; ret; 
0x00000000004476a9: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447ad2: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447b46: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447c1b: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447c53: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447d0d: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447df6: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447e63: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447f0a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000447f8a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000448027: pop rbp; pop r12; pop rbx; ret; 
0x000000000044937a: pop rbp; pop r12; pop rbx; ret; 
0x000000000044a022: pop rbp; pop r12; pop rbx; ret; 
0x000000000044a1c1: pop rbp; pop r12; pop rbx; ret; 
0x000000000044b11a: pop rbp; pop r12; pop rbx; ret; 
0x000000000044ba0d: pop rbp; pop r12; pop rbx; ret; 
0x000000000044ba69: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bbf2: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bc40: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bcf5: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bd45: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bde6: pop rbp; pop r12; pop rbx; ret; 
0x000000000044be6a: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bea3: pop rbp; pop r12; pop rbx; ret; 
0x000000000044bfea: pop rbp; pop r12; pop rbx; ret; 
0x000000000044c076: pop rbp; pop r12; pop rbx; ret; 
0x000000000044c0d2: pop rbp; pop r12; pop rbx; ret; 
0x000000000044c50a: pop rbp; pop r12; pop rbx; ret; 
0x000000000044c66e: pop rbp; pop r12; pop rbx; ret; 
0x000000000044c700: pop rbp; pop r12; pop rbx; ret; 
0x000000000044c7c0: pop rbp; pop r12; pop rbx; ret; 
0x000000000044cf37: pop rbp; pop r12; pop rbx; ret; 
0x000000000044d099: pop rbp; pop r12; pop rbx; ret; 
0x000000000044d5af: pop rbp; pop r12; pop rbx; ret; 
0x000000000044d95b: pop rbp; pop r12; pop rbx; ret; 
0x000000000044dcaf: pop rbp; pop r12; pop rbx; ret; 
0x000000000044e1b0: pop rbp; pop r12; pop rbx; ret; 
0x000000000044e276: pop rbp; pop r12; pop rbx; ret; 
0x000000000044e320: pop rbp; pop r12; pop rbx; ret; 
0x000000000044e3f8: pop rbp; pop r12; pop rbx; ret; 
0x000000000044e4a0: pop rbp; pop r12; pop rbx; ret; 
0x000000000044e57b: pop rbp; pop r12; pop rbx; ret; 
0x000000000044eba7: pop rbp; pop r12; pop rbx; ret; 
0x000000000044ec1a: pop rbp; pop r12; pop rbx; ret; 
0x000000000044f44b: pop rbp; pop r12; pop rbx; ret; 
0x000000000044f716: pop rbp; pop r12; pop rbx; ret; 
0x000000000044f7fa: pop rbp; pop r12; pop rbx; ret; 
0x000000000044fcc9: pop rbp; pop r12; pop rbx; ret; 
0x0000000000450200: pop rbp; pop r12; pop rbx; ret; 
0x0000000000450408: pop rbp; pop r12; pop rbx; ret; 
0x000000000045045b: pop rbp; pop r12; pop rbx; ret; 
0x00000000004507c3: pop rbp; pop r12; pop rbx; ret; 
0x00000000004509cb: pop rbp; pop r12; pop rbx; ret; 
0x0000000000450b26: pop rbp; pop r12; pop rbx; ret; 
0x0000000000450d67: pop rbp; pop r12; pop rbx; ret; 
0x0000000000450e07: pop rbp; pop r12; pop rbx; ret; 
0x000000000045124a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000452889: pop rbp; pop r12; pop rbx; ret; 
0x0000000000452b2d: pop rbp; pop r12; pop rbx; ret; 
0x0000000000452de2: pop rbp; pop r12; pop rbx; ret; 
0x00000000004530fa: pop rbp; pop r12; pop rbx; ret; 
0x000000000045331a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000453bb1: pop rbp; pop r12; pop rbx; ret; 
0x0000000000453c98: pop rbp; pop r12; pop rbx; ret; 
0x0000000000453eae: pop rbp; pop r12; pop rbx; ret; 
0x0000000000453f03: pop rbp; pop r12; pop rbx; ret; 
0x0000000000453f53: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454004: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454257: pop rbp; pop r12; pop rbx; ret; 
0x000000000045458a: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454682: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454a0f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454aa3: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454caa: pop rbp; pop r12; pop rbx; ret; 
0x0000000000454f13: pop rbp; pop r12; pop rbx; ret; 
0x00000000004550d0: pop rbp; pop r12; pop rbx; ret; 
0x00000000004564b4: pop rbp; pop r12; pop rbx; ret; 
0x0000000000456ac7: pop rbp; pop r12; pop rbx; ret; 
0x000000000045717b: pop rbp; pop r12; pop rbx; ret; 
0x00000000004571e5: pop rbp; pop r12; pop rbx; ret; 
0x000000000045761c: pop rbp; pop r12; pop rbx; ret; 
0x0000000000457672: pop rbp; pop r12; pop rbx; ret; 
0x0000000000457abf: pop rbp; pop r12; pop rbx; ret; 
0x0000000000457c5f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000457e1f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000458884: pop rbp; pop r12; pop rbx; ret; 
0x0000000000458db4: pop rbp; pop r12; pop rbx; ret; 
0x0000000000459253: pop rbp; pop r12; pop rbx; ret; 
0x000000000045949f: pop rbp; pop r12; pop rbx; ret; 
0x0000000000459960: pop rbp; pop r12; pop rbx; ret; 
0x0000000000459a04: pop rbp; pop r12; pop rbx; ret; 
0x0000000000459ca5: pop rbp; pop r12; pop rbx; ret; 
0x0000000000459ea4: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a18a: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a21c: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a524: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a7a5: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a838: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a8c8: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a958: pop rbp; pop r12; pop rbx; ret; 
0x000000000045a9e8: pop rbp; pop r12; pop rbx; ret; 
0x000000000045b5c9: pop rbp; pop r12; pop rbx; ret; 
0x000000000045b73f: pop rbp; pop r12; pop rbx; ret; 
0x000000000045b836: pop rbp; pop r12; pop rbx; ret; 
0x000000000045b8ea: pop rbp; pop r12; pop rbx; ret; 
0x000000000045c033: pop rbp; pop r12; pop rbx; ret; 
0x000000000045c45b: pop rbp; pop r12; pop rbx; ret; 
0x000000000045c560: pop rbp; pop r12; pop rbx; ret; 
0x000000000045c6c0: pop rbp; pop r12; pop rbx; ret; 
0x000000000045c747: pop rbp; pop r12; pop rbx; ret; 
0x000000000045c7c5: pop rbp; pop r12; pop rbx; ret; 
0x000000000040108c: pop rbp; ret; 
0x00000000004010d5: pop rbp; ret; 
0x000000000040122f: pop rbp; ret; 
0x000000000040137a: pop rbp; ret; 
0x0000000000401403: pop rbp; ret; 
0x0000000000401505: pop rbp; ret; 
0x000000000040164a: pop rbp; ret; 
0x0000000000401df8: pop rbp; ret; 
0x0000000000401e2b: pop rbp; ret; 
0x0000000000401e5e: pop rbp; ret; 
0x0000000000401e91: pop rbp; ret; 
0x0000000000401ed4: pop rbp; ret; 
0x0000000000401f17: pop rbp; ret; 
0x0000000000401f5a: pop rbp; ret; 
0x0000000000401f9e: pop rbp; ret; 
0x00000000004027b8: pop rbp; ret; 
0x00000000004027d3: pop rbp; ret; 
0x000000000040284f: pop rbp; ret; 
0x0000000000402892: pop rbp; ret; 
0x00000000004028ca: pop rbp; ret; 
0x00000000004028fe: pop rbp; ret; 
0x0000000000402917: pop rbp; ret; 
0x00000000004033f0: pop rbp; ret; 
0x0000000000403566: pop rbp; ret; 
0x0000000000403bb2: pop rbp; ret; 
0x0000000000403c79: pop rbp; ret; 
0x0000000000403d0c: pop rbp; ret; 
0x0000000000404088: pop rbp; ret; 
0x0000000000404485: pop rbp; ret; 
0x0000000000404503: pop rbp; ret; 
0x0000000000404f33: pop rbp; ret; 
0x0000000000404f5f: pop rbp; ret; 
0x0000000000404fae: pop rbp; ret; 
0x0000000000404fce: pop rbp; ret; 
0x0000000000404fee: pop rbp; ret; 
0x000000000040500e: pop rbp; ret; 
0x000000000040502e: pop rbp; ret; 
0x000000000040504e: pop rbp; ret; 
0x000000000040506e: pop rbp; ret; 
0x0000000000405179: pop rbp; ret; 
0x0000000000406769: pop rbp; ret; 
0x0000000000408703: pop rbp; ret; 
0x0000000000408d39: pop rbp; ret; 
0x000000000040914a: pop rbp; ret; 
0x00000000004094df: pop rbp; ret; 
0x0000000000409553: pop rbp; ret; 
0x000000000040a04b: pop rbp; ret; 
0x000000000040a72f: pop rbp; ret; 
0x000000000040a80f: pop rbp; ret; 
0x000000000040a8ae: pop rbp; ret; 
0x000000000040a927: pop rbp; ret; 
0x000000000040a9a6: pop rbp; ret; 
0x000000000040aa2f: pop rbp; ret; 
0x000000000040b4fa: pop rbp; ret; 
0x000000000040b5bf: pop rbp; ret; 
0x000000000040b65a: pop rbp; ret; 
0x000000000040b6d7: pop rbp; ret; 
0x000000000040b7d1: pop rbp; ret; 
0x000000000040b8ba: pop rbp; ret; 
0x000000000040c32e: pop rbp; ret; 
0x000000000040c6f2: pop rbp; ret; 
0x000000000040c76b: pop rbp; ret; 
0x000000000040cb70: pop rbp; ret; 
0x000000000040d1c4: pop rbp; ret; 
0x000000000040dc1c: pop rbp; ret; 
0x000000000040e459: pop rbp; ret; 
0x000000000040e7f2: pop rbp; ret; 
0x000000000040e86f: pop rbp; ret; 
0x000000000040e991: pop rbp; ret; 
0x000000000040ea40: pop rbp; ret; 
0x000000000040eabf: pop rbp; ret; 
0x000000000040ebce: pop rbp; ret; 
0x000000000040ece8: pop rbp; ret; 
0x000000000040edf7: pop rbp; ret; 
0x000000000040ee71: pop rbp; ret; 
0x000000000040ef60: pop rbp; ret; 
0x0000000000410362: pop rbp; ret; 
0x000000000041154a: pop rbp; ret; 
0x000000000041179a: pop rbp; ret; 
0x00000000004119be: pop rbp; ret; 
0x0000000000411a7e: pop rbp; ret; 
0x0000000000411aaf: pop rbp; ret; 
0x0000000000411ba8: pop rbp; ret; 
0x0000000000411bf8: pop rbp; ret; 
0x0000000000412051: pop rbp; ret; 
0x0000000000412b05: pop rbp; ret; 
0x0000000000412ef4: pop rbp; ret; 
0x0000000000412f35: pop rbp; ret; 
0x0000000000412fd6: pop rbp; ret; 
0x0000000000414c57: pop rbp; ret; 
0x0000000000415949: pop rbp; ret; 
0x00000000004161c3: pop rbp; ret; 
0x0000000000416223: pop rbp; ret; 
0x0000000000416909: pop rbp; ret; 
0x0000000000417cac: pop rbp; ret; 
0x0000000000417ccc: pop rbp; ret; 
0x0000000000417cec: pop rbp; ret; 
0x0000000000417d0c: pop rbp; ret; 
0x0000000000417d2c: pop rbp; ret; 
0x0000000000417d4c: pop rbp; ret; 
0x0000000000417dae: pop rbp; ret; 
0x0000000000417e8c: pop rbp; ret; 
0x000000000041849e: pop rbp; ret; 
0x00000000004185d8: pop rbp; ret; 
0x000000000041863e: pop rbp; ret; 
0x00000000004187c7: pop rbp; ret; 
0x0000000000418aca: pop rbp; ret; 
0x0000000000418ce2: pop rbp; ret; 
0x0000000000418d2a: pop rbp; ret; 
0x000000000041defd: pop rbp; ret; 
0x000000000041e05c: pop rbp; ret; 
0x000000000041e7cf: pop rbp; ret; 
0x000000000041e89d: pop rbp; ret; 
0x000000000041fa48: pop rbp; ret; 
0x0000000000426e09: pop rbp; ret; 
0x00000000004298f3: pop rbp; ret; 
0x0000000000429be1: pop rbp; ret; 
0x0000000000429ef1: pop rbp; ret; 
0x000000000042bce0: pop rbp; ret; 
0x000000000042bfe6: pop rbp; ret; 
0x000000000042c2f1: pop rbp; ret; 
0x000000000042d8f5: pop rbp; ret; 
0x000000000042d9a5: pop rbp; ret; 
0x000000000042dc8d: pop rbp; ret; 
0x000000000042de58: pop rbp; ret; 
0x000000000042df6b: pop rbp; ret; 
0x000000000042e07b: pop rbp; ret; 
0x000000000042e0ff: pop rbp; ret; 
0x000000000042e172: pop rbp; ret; 
0x000000000042e33b: pop rbp; ret; 
0x000000000042e648: pop rbp; ret; 
0x000000000042e6b1: pop rbp; ret; 
0x000000000042e7ac: pop rbp; ret; 
0x000000000042eb8d: pop rbp; ret; 
0x000000000042eba9: pop rbp; ret; 
0x000000000042ecdc: pop rbp; ret; 
0x000000000042ed38: pop rbp; ret; 
0x000000000042ee62: pop rbp; ret; 
0x000000000042f215: pop rbp; ret; 
0x000000000042f6b8: pop rbp; ret; 
0x000000000042f714: pop rbp; ret; 
0x000000000042f7be: pop rbp; ret; 
0x000000000042f808: pop rbp; ret; 
0x000000000042f867: pop rbp; ret; 
0x000000000042f885: pop rbp; ret; 
0x000000000042f938: pop rbp; ret; 
0x000000000042f9a8: pop rbp; ret; 
0x000000000042fa1d: pop rbp; ret; 
0x000000000042fb62: pop rbp; ret; 
0x000000000042fc25: pop rbp; ret; 
0x000000000042ffb0: pop rbp; ret; 
0x0000000000430014: pop rbp; ret; 
0x00000000004300b5: pop rbp; ret; 
0x00000000004304d7: pop rbp; ret; 
0x0000000000430509: pop rbp; ret; 
0x0000000000430573: pop rbp; ret; 
0x00000000004305a6: pop rbp; ret; 
0x0000000000430605: pop rbp; ret; 
0x000000000043061f: pop rbp; ret; 
0x0000000000430693: pop rbp; ret; 
0x00000000004306c6: pop rbp; ret; 
0x00000000004306e7: pop rbp; ret; 
0x000000000043071c: pop rbp; ret; 
0x0000000000430798: pop rbp; ret; 
0x00000000004307d5: pop rbp; ret; 
0x00000000004309ee: pop rbp; ret; 
0x0000000000430af7: pop rbp; ret; 
0x0000000000430b79: pop rbp; ret; 
0x0000000000430bf8: pop rbp; ret; 
0x0000000000430c35: pop rbp; ret; 
0x0000000000430e6b: pop rbp; ret; 
0x00000000004313e7: pop rbp; ret; 
0x00000000004314ad: pop rbp; ret; 
0x0000000000431563: pop rbp; ret; 
0x000000000043157c: pop rbp; ret; 
0x000000000043158c: pop rbp; ret; 
0x0000000000431e26: pop rbp; ret; 
0x0000000000431e49: pop rbp; ret; 
0x0000000000431e66: pop rbp; ret; 
0x0000000000431e86: pop rbp; ret; 
0x0000000000431f1f: pop rbp; ret; 
0x0000000000431f58: pop rbp; ret; 
0x0000000000431f8f: pop rbp; ret; 
0x0000000000431fc8: pop rbp; ret; 
0x000000000043508a: pop rbp; ret; 
0x000000000043511a: pop rbp; ret; 
0x00000000004351d2: pop rbp; ret; 
0x0000000000435272: pop rbp; ret; 
0x000000000043541e: pop rbp; ret; 
0x000000000043559c: pop rbp; ret; 
0x000000000043633f: pop rbp; ret; 
0x00000000004368d3: pop rbp; ret; 
0x0000000000436a22: pop rbp; ret; 
0x0000000000436a4c: pop rbp; ret; 
0x0000000000436b0c: pop rbp; ret; 
0x0000000000436b23: pop rbp; ret; 
0x0000000000436b43: pop rbp; ret; 
0x0000000000436bb9: pop rbp; ret; 
0x0000000000436bd3: pop rbp; ret; 
0x0000000000436c52: pop rbp; ret; 
0x0000000000436d09: pop rbp; ret; 
0x0000000000436d45: pop rbp; ret; 
0x0000000000436d87: pop rbp; ret; 
0x0000000000436f7c: pop rbp; ret; 
0x00000000004372da: pop rbp; ret; 
0x0000000000438bf3: pop rbp; ret; 
0x0000000000438d1c: pop rbp; ret; 
0x0000000000438d4f: pop rbp; ret; 
0x000000000043906f: pop rbp; ret; 
0x00000000004390a9: pop rbp; ret; 
0x00000000004390d9: pop rbp; ret; 
0x000000000043910f: pop rbp; ret; 
0x00000000004393f9: pop rbp; ret; 
0x000000000043945f: pop rbp; ret; 
0x000000000043955e: pop rbp; ret; 
0x0000000000439630: pop rbp; ret; 
0x00000000004396be: pop rbp; ret; 
0x0000000000439822: pop rbp; ret; 
0x00000000004398a9: pop rbp; ret; 
0x0000000000439cc5: pop rbp; ret; 
0x000000000043a6f3: pop rbp; ret; 
0x000000000043ab33: pop rbp; ret; 
0x000000000043b11d: pop rbp; ret; 
0x000000000043b198: pop rbp; ret; 
0x000000000043b1cf: pop rbp; ret; 
0x000000000043b398: pop rbp; ret; 
0x000000000043bf9c: pop rbp; ret; 
0x000000000043c0f5: pop rbp; ret; 
0x000000000043d07f: pop rbp; ret; 
0x000000000043d103: pop rbp; ret; 
0x000000000043d245: pop rbp; ret; 
0x000000000043d355: pop rbp; ret; 
0x000000000043d56b: pop rbp; ret; 
0x000000000043d689: pop rbp; ret; 
0x000000000043dfe3: pop rbp; ret; 
0x000000000043e132: pop rbp; ret; 
0x000000000043e29f: pop rbp; ret; 
0x000000000043e35f: pop rbp; ret; 
0x000000000043e598: pop rbp; ret; 
0x000000000043e647: pop rbp; ret; 
0x000000000043efed: pop rbp; ret; 
0x000000000043f013: pop rbp; ret; 
0x000000000043f396: pop rbp; ret; 
0x000000000043f5f3: pop rbp; ret; 
0x000000000043f7a6: pop rbp; ret; 
0x000000000043f8d2: pop rbp; ret; 
0x000000000043fa6f: pop rbp; ret; 
0x00000000004405af: pop rbp; ret; 
0x0000000000440633: pop rbp; ret; 
0x0000000000440778: pop rbp; ret; 
0x000000000044088b: pop rbp; ret; 
0x0000000000440aa1: pop rbp; ret; 
0x0000000000440beb: pop rbp; ret; 
0x00000000004416d3: pop rbp; ret; 
0x0000000000441822: pop rbp; ret; 
0x0000000000441a89: pop rbp; ret; 
0x0000000000441b89: pop rbp; ret; 
0x0000000000441e2b: pop rbp; ret; 
0x0000000000441ed7: pop rbp; ret; 
0x0000000000442a0d: pop rbp; ret; 
0x0000000000442a33: pop rbp; ret; 
0x0000000000442e19: pop rbp; ret; 
0x0000000000443075: pop rbp; ret; 
0x000000000044322a: pop rbp; ret; 
0x0000000000443352: pop rbp; ret; 
0x00000000004434f0: pop rbp; ret; 
0x0000000000443aec: pop rbp; ret; 
0x0000000000443bbb: pop rbp; ret; 
0x0000000000444aca: pop rbp; ret; 
0x0000000000444bd9: pop rbp; ret; 
0x0000000000445786: pop rbp; ret; 
0x0000000000445895: pop rbp; ret; 
0x0000000000446cc1: pop rbp; ret; 
0x000000000044927a: pop rbp; ret; 
0x0000000000449953: pop rbp; ret; 
0x0000000000449a95: pop rbp; ret; 
0x0000000000449abc: pop rbp; ret; 
0x0000000000449b68: pop rbp; ret; 
0x0000000000449b83: pop rbp; ret; 
0x000000000044b012: pop rbp; ret; 
0x000000000044b6f3: pop rbp; ret; 
0x000000000044b835: pop rbp; ret; 
0x000000000044b85c: pop rbp; ret; 
0x000000000044b908: pop rbp; ret; 
0x000000000044b923: pop rbp; ret; 
0x000000000044d014: pop rbp; ret; 
0x000000000044d3d0: pop rbp; ret; 
0x000000000044d51e: pop rbp; ret; 
0x000000000044d706: pop rbp; ret; 
0x000000000044d8ce: pop rbp; ret; 
0x000000000044db1c: pop rbp; ret; 
0x000000000044dc14: pop rbp; ret; 
0x000000000044ddbc: pop rbp; ret; 
0x000000000044def6: pop rbp; ret; 
0x000000000044e0ea: pop rbp; ret; 
0x000000000044fde0: pop rbp; ret; 
0x000000000044fec2: pop rbp; ret; 
0x000000000044ffb9: pop rbp; ret; 
0x000000000045006e: pop rbp; ret; 
0x0000000000450f10: pop rbp; ret; 
0x00000000004513ca: pop rbp; ret; 
0x0000000000451818: pop rbp; ret; 
0x0000000000451b3b: pop rbp; ret; 
0x0000000000451e76: pop rbp; ret; 
0x00000000004521b9: pop rbp; ret; 
0x0000000000452c71: pop rbp; ret; 
0x00000000004531d9: pop rbp; ret; 
0x00000000004531fd: pop rbp; ret; 
0x00000000004535bb: pop rbp; ret; 
0x0000000000453a5e: pop rbp; ret; 
0x000000000045446a: pop rbp; ret; 
0x0000000000455896: pop rbp; ret; 
0x0000000000455e79: pop rbp; ret; 
0x0000000000455fc6: pop rbp; ret; 
0x0000000000458fc0: pop rbp; ret; 
0x0000000000458fdf: pop rbp; ret; 
0x0000000000459009: pop rbp; ret; 
0x0000000000459029: pop rbp; ret; 
0x000000000045903f: pop rbp; ret; 
0x000000000045ad27: pop rbp; ret; 
0x000000000045b1b4: pop rbp; ret; 
0x000000000045bc1a: pop rbp; ret; 
0x000000000045bfce: pop rbp; ret; 
0x0000000000436d00: pop rbp; ror byte ptr [rbx + rcx*4 + 0x65], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000426095: pop rbx; add byte ptr [rax], al; add al, ch; ret 0xfffa; 
0x000000000043114d: pop rbx; add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000040f46c: pop rbx; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000431707: pop rbx; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004507d9: pop rbx; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000402983: pop rbx; add dword ptr [rax], eax; ret; 
0x00000000004451c7: pop rbx; cld; jmp qword ptr [rsi - 0x77]; 
0x0000000000456e01: pop rbx; mov al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402a45: pop rbx; ret; 
0x0000000000402ccd: pop rbx; ret; 
0x0000000000402d2e: pop rbx; ret; 
0x0000000000402db1: pop rbx; ret; 
0x00000000004032cb: pop rbx; ret; 
0x0000000000403315: pop rbx; ret; 
0x0000000000403a18: pop rbx; ret; 
0x0000000000403b25: pop rbx; ret; 
0x0000000000403c2f: pop rbx; ret; 
0x0000000000403d47: pop rbx; ret; 
0x0000000000403d98: pop rbx; ret; 
0x0000000000403e9c: pop rbx; ret; 
0x00000000004040d2: pop rbx; ret; 
0x0000000000404153: pop rbx; ret; 
0x0000000000404182: pop rbx; ret; 
0x00000000004041f8: pop rbx; ret; 
0x00000000004046a6: pop rbx; ret; 
0x0000000000404726: pop rbx; ret; 
0x00000000004047de: pop rbx; ret; 
0x0000000000404866: pop rbx; ret; 
0x0000000000404afd: pop rbx; ret; 
0x0000000000404b79: pop rbx; ret; 
0x0000000000404bc1: pop rbx; ret; 
0x0000000000404c16: pop rbx; ret; 
0x0000000000404c69: pop rbx; ret; 
0x0000000000404cc6: pop rbx; ret; 
0x0000000000405168: pop rbx; ret; 
0x0000000000406270: pop rbx; ret; 
0x0000000000406538: pop rbx; ret; 
0x0000000000406819: pop rbx; ret; 
0x0000000000406997: pop rbx; ret; 
0x00000000004069fd: pop rbx; ret; 
0x0000000000406a48: pop rbx; ret; 
0x0000000000406ad0: pop rbx; ret; 
0x0000000000406c93: pop rbx; ret; 
0x0000000000406cfb: pop rbx; ret; 
0x0000000000406d39: pop rbx; ret; 
0x0000000000406dbe: pop rbx; ret; 
0x0000000000406f13: pop rbx; ret; 
0x0000000000406f70: pop rbx; ret; 
0x0000000000407199: pop rbx; ret; 
0x0000000000407246: pop rbx; ret; 
0x00000000004072cc: pop rbx; ret; 
0x00000000004073d1: pop rbx; ret; 
0x0000000000407451: pop rbx; ret; 
0x0000000000407721: pop rbx; ret; 
0x00000000004077b1: pop rbx; ret; 
0x0000000000407b4a: pop rbx; ret; 
0x0000000000407df5: pop rbx; ret; 
0x0000000000408972: pop rbx; ret; 
0x0000000000408a8b: pop rbx; ret; 
0x00000000004093ce: pop rbx; ret; 
0x0000000000409d5d: pop rbx; ret; 
0x0000000000409df2: pop rbx; ret; 
0x0000000000409fd5: pop rbx; ret; 
0x000000000040a188: pop rbx; ret; 
0x000000000040a24d: pop rbx; ret; 
0x000000000040a650: pop rbx; ret; 
0x000000000040ad27: pop rbx; ret; 
0x000000000040ae78: pop rbx; ret; 
0x000000000040afc7: pop rbx; ret; 
0x000000000040b36e: pop rbx; ret; 
0x000000000040b3a8: pop rbx; ret; 
0x000000000040bab1: pop rbx; ret; 
0x000000000040bb2c: pop rbx; ret; 
0x000000000040bc1a: pop rbx; ret; 
0x000000000040bea0: pop rbx; ret; 
0x000000000040c46c: pop rbx; ret; 
0x000000000040c4b8: pop rbx; ret; 
0x000000000040c528: pop rbx; ret; 
0x000000000040c584: pop rbx; ret; 
0x000000000040c620: pop rbx; ret; 
0x000000000040c830: pop rbx; ret; 
0x000000000040c969: pop rbx; ret; 
0x000000000040ca62: pop rbx; ret; 
0x000000000040cb3a: pop rbx; ret; 
0x000000000040ccb7: pop rbx; ret; 
0x000000000040cd0c: pop rbx; ret; 
0x000000000040cd2f: pop rbx; ret; 
0x000000000040cddb: pop rbx; ret; 
0x000000000040ce74: pop rbx; ret; 
0x000000000040cf32: pop rbx; ret; 
0x000000000040cfef: pop rbx; ret; 
0x000000000040d06a: pop rbx; ret; 
0x000000000040d0c9: pop rbx; ret; 
0x000000000040d134: pop rbx; ret; 
0x000000000040d222: pop rbx; ret; 
0x000000000040d281: pop rbx; ret; 
0x000000000040d2d2: pop rbx; ret; 
0x000000000040d33e: pop rbx; ret; 
0x000000000040d391: pop rbx; ret; 
0x000000000040d3f1: pop rbx; ret; 
0x000000000040d4ad: pop rbx; ret; 
0x000000000040d66b: pop rbx; ret; 
0x000000000040d6aa: pop rbx; ret; 
0x000000000040d709: pop rbx; ret; 
0x000000000040d767: pop rbx; ret; 
0x000000000040d7dc: pop rbx; ret; 
0x000000000040d84c: pop rbx; ret; 
0x000000000040d93f: pop rbx; ret; 
0x000000000040da74: pop rbx; ret; 
0x000000000040dac4: pop rbx; ret; 
0x000000000040dc8f: pop rbx; ret; 
0x000000000040dcd1: pop rbx; ret; 
0x000000000040ddd0: pop rbx; ret; 
0x000000000040de28: pop rbx; ret; 
0x000000000040de92: pop rbx; ret; 
0x000000000040df0d: pop rbx; ret; 
0x000000000040df50: pop rbx; ret; 
0x000000000040dfa0: pop rbx; ret; 
0x000000000040e003: pop rbx; ret; 
0x000000000040e07b: pop rbx; ret; 
0x000000000040e134: pop rbx; ret; 
0x000000000040e177: pop rbx; ret; 
0x000000000040e2c9: pop rbx; ret; 
0x000000000040e4ed: pop rbx; ret; 
0x000000000040e5d4: pop rbx; ret; 
0x000000000040e673: pop rbx; ret; 
0x000000000040e6af: pop rbx; ret; 
0x000000000040e76e: pop rbx; ret; 
0x000000000040eee7: pop rbx; ret; 
0x000000000040ef2b: pop rbx; ret; 
0x000000000040f08e: pop rbx; ret; 
0x000000000040f118: pop rbx; ret; 
0x000000000040f1b8: pop rbx; ret; 
0x000000000040f28e: pop rbx; ret; 
0x000000000040f2be: pop rbx; ret; 
0x000000000040f34e: pop rbx; ret; 
0x000000000040f3e0: pop rbx; ret; 
0x000000000040f476: pop rbx; ret; 
0x000000000040f4ae: pop rbx; ret; 
0x000000000040f53e: pop rbx; ret; 
0x000000000040f5d0: pop rbx; ret; 
0x000000000040f664: pop rbx; ret; 
0x000000000040f6f6: pop rbx; ret; 
0x000000000040f767: pop rbx; ret; 
0x000000000040f815: pop rbx; ret; 
0x000000000040f8f1: pop rbx; ret; 
0x000000000040f9dc: pop rbx; ret; 
0x000000000040fa6c: pop rbx; ret; 
0x000000000040fafc: pop rbx; ret; 
0x000000000040fb6b: pop rbx; ret; 
0x000000000040fc33: pop rbx; ret; 
0x000000000040fdc4: pop rbx; ret; 
0x000000000040fe9d: pop rbx; ret; 
0x000000000040ff8d: pop rbx; ret; 
0x000000000040fff7: pop rbx; ret; 
0x0000000000410053: pop rbx; ret; 
0x00000000004100de: pop rbx; ret; 
0x0000000000410155: pop rbx; ret; 
0x00000000004101e9: pop rbx; ret; 
0x000000000041026d: pop rbx; ret; 
0x00000000004102f8: pop rbx; ret; 
0x00000000004103aa: pop rbx; ret; 
0x00000000004103e9: pop rbx; ret; 
0x0000000000410436: pop rbx; ret; 
0x0000000000410479: pop rbx; ret; 
0x00000000004104b9: pop rbx; ret; 
0x00000000004104f4: pop rbx; ret; 
0x000000000041076b: pop rbx; ret; 
0x00000000004107a4: pop rbx; ret; 
0x0000000000410dad: pop rbx; ret; 
0x0000000000410e2c: pop rbx; ret; 
0x0000000000410f28: pop rbx; ret; 
0x000000000041101a: pop rbx; ret; 
0x000000000041109c: pop rbx; ret; 
0x000000000041111e: pop rbx; ret; 
0x000000000041124b: pop rbx; ret; 
0x000000000041129a: pop rbx; ret; 
0x00000000004112ea: pop rbx; ret; 
0x00000000004113db: pop rbx; ret; 
0x000000000041144b: pop rbx; ret; 
0x00000000004117bd: pop rbx; ret; 
0x000000000041184a: pop rbx; ret; 
0x00000000004118f9: pop rbx; ret; 
0x0000000000411c28: pop rbx; ret; 
0x00000000004121a4: pop rbx; ret; 
0x00000000004124fd: pop rbx; ret; 
0x0000000000412909: pop rbx; ret; 
0x0000000000412cd6: pop rbx; ret; 
0x0000000000412dc0: pop rbx; ret; 
0x0000000000412e75: pop rbx; ret; 
0x0000000000412ffd: pop rbx; ret; 
0x0000000000413059: pop rbx; ret; 
0x00000000004130b9: pop rbx; ret; 
0x0000000000413105: pop rbx; ret; 
0x00000000004131b9: pop rbx; ret; 
0x0000000000413240: pop rbx; ret; 
0x0000000000413297: pop rbx; ret; 
0x0000000000413352: pop rbx; ret; 
0x00000000004133f4: pop rbx; ret; 
0x0000000000413451: pop rbx; ret; 
0x000000000041351c: pop rbx; ret; 
0x0000000000413719: pop rbx; ret; 
0x000000000041385a: pop rbx; ret; 
0x0000000000413936: pop rbx; ret; 
0x0000000000413951: pop rbx; ret; 
0x0000000000413a06: pop rbx; ret; 
0x0000000000413aa9: pop rbx; ret; 
0x0000000000413b77: pop rbx; ret; 
0x0000000000413d32: pop rbx; ret; 
0x0000000000413ea5: pop rbx; ret; 
0x0000000000413f1c: pop rbx; ret; 
0x00000000004140b3: pop rbx; ret; 
0x00000000004141a0: pop rbx; ret; 
0x0000000000414290: pop rbx; ret; 
0x000000000041432d: pop rbx; ret; 
0x0000000000414422: pop rbx; ret; 
0x00000000004144eb: pop rbx; ret; 
0x0000000000414533: pop rbx; ret; 
0x0000000000414651: pop rbx; ret; 
0x00000000004146af: pop rbx; ret; 
0x0000000000414751: pop rbx; ret; 
0x00000000004147b1: pop rbx; ret; 
0x0000000000414a8f: pop rbx; ret; 
0x0000000000414b36: pop rbx; ret; 
0x0000000000414e11: pop rbx; ret; 
0x0000000000414e60: pop rbx; ret; 
0x0000000000414f11: pop rbx; ret; 
0x0000000000414fa1: pop rbx; ret; 
0x0000000000415015: pop rbx; ret; 
0x0000000000415082: pop rbx; ret; 
0x00000000004151a1: pop rbx; ret; 
0x000000000041536b: pop rbx; ret; 
0x0000000000415402: pop rbx; ret; 
0x000000000041545c: pop rbx; ret; 
0x000000000041575b: pop rbx; ret; 
0x000000000041583d: pop rbx; ret; 
0x00000000004158bd: pop rbx; ret; 
0x0000000000415c22: pop rbx; ret; 
0x0000000000415d09: pop rbx; ret; 
0x0000000000415e5e: pop rbx; ret; 
0x0000000000415e8e: pop rbx; ret; 
0x0000000000415ebe: pop rbx; ret; 
0x0000000000415ed2: pop rbx; ret; 
0x0000000000415f0e: pop rbx; ret; 
0x0000000000415f3e: pop rbx; ret; 
0x0000000000415f6b: pop rbx; ret; 
0x0000000000415f9e: pop rbx; ret; 
0x0000000000415fce: pop rbx; ret; 
0x0000000000415ffe: pop rbx; ret; 
0x000000000041602e: pop rbx; ret; 
0x000000000041605e: pop rbx; ret; 
0x000000000041608e: pop rbx; ret; 
0x00000000004160a2: pop rbx; ret; 
0x0000000000416467: pop rbx; ret; 
0x000000000041680f: pop rbx; ret; 
0x00000000004169e2: pop rbx; ret; 
0x0000000000416a02: pop rbx; ret; 
0x0000000000416a6d: pop rbx; ret; 
0x0000000000416aba: pop rbx; ret; 
0x0000000000416b48: pop rbx; ret; 
0x0000000000416bd8: pop rbx; ret; 
0x0000000000416c10: pop rbx; ret; 
0x0000000000416c50: pop rbx; ret; 
0x0000000000416ce8: pop rbx; ret; 
0x0000000000416d78: pop rbx; ret; 
0x0000000000416e2e: pop rbx; ret; 
0x0000000000416fb9: pop rbx; ret; 
0x0000000000417018: pop rbx; ret; 
0x00000000004170ad: pop rbx; ret; 
0x0000000000417182: pop rbx; ret; 
0x000000000041728b: pop rbx; ret; 
0x0000000000417392: pop rbx; ret; 
0x0000000000417657: pop rbx; ret; 
0x00000000004176e1: pop rbx; ret; 
0x0000000000417761: pop rbx; ret; 
0x00000000004177e1: pop rbx; ret; 
0x00000000004178b9: pop rbx; ret; 
0x0000000000417b0a: pop rbx; ret; 
0x0000000000417b2c: pop rbx; ret; 
0x0000000000417b7c: pop rbx; ret; 
0x0000000000417c5b: pop rbx; ret; 
0x0000000000417eec: pop rbx; ret; 
0x0000000000417f4f: pop rbx; ret; 
0x0000000000417fce: pop rbx; ret; 
0x0000000000418337: pop rbx; ret; 
0x00000000004183e3: pop rbx; ret; 
0x0000000000418532: pop rbx; ret; 
0x0000000000418573: pop rbx; ret; 
0x00000000004188ca: pop rbx; ret; 
0x0000000000418980: pop rbx; ret; 
0x00000000004189bb: pop rbx; ret; 
0x0000000000418a02: pop rbx; ret; 
0x0000000000418c95: pop rbx; ret; 
0x0000000000418fc3: pop rbx; ret; 
0x0000000000419005: pop rbx; ret; 
0x0000000000419090: pop rbx; ret; 
0x0000000000419288: pop rbx; ret; 
0x000000000041930e: pop rbx; ret; 
0x00000000004194be: pop rbx; ret; 
0x0000000000419536: pop rbx; ret; 
0x0000000000419611: pop rbx; ret; 
0x0000000000419738: pop rbx; ret; 
0x000000000041976c: pop rbx; ret; 
0x00000000004197b6: pop rbx; ret; 
0x000000000041986c: pop rbx; ret; 
0x0000000000419cda: pop rbx; ret; 
0x0000000000419df8: pop rbx; ret; 
0x0000000000419f46: pop rbx; ret; 
0x0000000000419fb1: pop rbx; ret; 
0x000000000041a00c: pop rbx; ret; 
0x000000000041a049: pop rbx; ret; 
0x000000000041a0e0: pop rbx; ret; 
0x000000000041a183: pop rbx; ret; 
0x000000000041a217: pop rbx; ret; 
0x000000000041a25f: pop rbx; ret; 
0x000000000041a2b7: pop rbx; ret; 
0x000000000041a2ff: pop rbx; ret; 
0x000000000041a33e: pop rbx; ret; 
0x000000000041a355: pop rbx; ret; 
0x000000000041a3b6: pop rbx; ret; 
0x000000000041a52b: pop rbx; ret; 
0x000000000041a5df: pop rbx; ret; 
0x000000000041a660: pop rbx; ret; 
0x000000000041a6d0: pop rbx; ret; 
0x000000000041a88a: pop rbx; ret; 
0x000000000041a9c6: pop rbx; ret; 
0x000000000041adc4: pop rbx; ret; 
0x000000000041ae25: pop rbx; ret; 
0x000000000041b3fe: pop rbx; ret; 
0x000000000041b435: pop rbx; ret; 
0x000000000041b485: pop rbx; ret; 
0x000000000041b4c5: pop rbx; ret; 
0x000000000041b4f6: pop rbx; ret; 
0x000000000041b658: pop rbx; ret; 
0x000000000041b99d: pop rbx; ret; 
0x000000000041ba58: pop rbx; ret; 
0x000000000041bb1b: pop rbx; ret; 
0x000000000041bba7: pop rbx; ret; 
0x000000000041bbeb: pop rbx; ret; 
0x000000000041bc97: pop rbx; ret; 
0x000000000041bdc8: pop rbx; ret; 
0x000000000041be58: pop rbx; ret; 
0x000000000041beab: pop rbx; ret; 
0x000000000041bf4b: pop rbx; ret; 
0x000000000041bfb0: pop rbx; ret; 
0x000000000041c1b3: pop rbx; ret; 
0x000000000041c26d: pop rbx; ret; 
0x000000000041c30a: pop rbx; ret; 
0x000000000041c404: pop rbx; ret; 
0x000000000041c4bd: pop rbx; ret; 
0x000000000041c4e1: pop rbx; ret; 
0x000000000041c511: pop rbx; ret; 
0x000000000041c576: pop rbx; ret; 
0x000000000041c681: pop rbx; ret; 
0x000000000041c712: pop rbx; ret; 
0x000000000041c76b: pop rbx; ret; 
0x000000000041c7bb: pop rbx; ret; 
0x000000000041c83e: pop rbx; ret; 
0x000000000041c8be: pop rbx; ret; 
0x000000000041c93f: pop rbx; ret; 
0x000000000041ca06: pop rbx; ret; 
0x000000000041caed: pop rbx; ret; 
0x000000000041cb34: pop rbx; ret; 
0x000000000041cb81: pop rbx; ret; 
0x000000000041cbd4: pop rbx; ret; 
0x000000000041cc8e: pop rbx; ret; 
0x000000000041cd05: pop rbx; ret; 
0x000000000041ce61: pop rbx; ret; 
0x000000000041d01c: pop rbx; ret; 
0x000000000041d09e: pop rbx; ret; 
0x000000000041d11e: pop rbx; ret; 
0x000000000041d19f: pop rbx; ret; 
0x000000000041d2b7: pop rbx; ret; 
0x000000000041d434: pop rbx; ret; 
0x000000000041d59f: pop rbx; ret; 
0x000000000041d730: pop rbx; ret; 
0x000000000041d7d8: pop rbx; ret; 
0x000000000041d8b7: pop rbx; ret; 
0x000000000041d92d: pop rbx; ret; 
0x000000000041d994: pop rbx; ret; 
0x000000000041da34: pop rbx; ret; 
0x000000000041dac9: pop rbx; ret; 
0x000000000041dbbb: pop rbx; ret; 
0x000000000041dcaa: pop rbx; ret; 
0x000000000041ddbe: pop rbx; ret; 
0x000000000041e15c: pop rbx; ret; 
0x000000000041e325: pop rbx; ret; 
0x000000000041e4c9: pop rbx; ret; 
0x000000000041e543: pop rbx; ret; 
0x000000000041e5c3: pop rbx; ret; 
0x000000000041e661: pop rbx; ret; 
0x000000000041e701: pop rbx; ret; 
0x000000000041e9cf: pop rbx; ret; 
0x000000000041ea5d: pop rbx; ret; 
0x000000000041eac8: pop rbx; ret; 
0x000000000041eb42: pop rbx; ret; 
0x000000000041ec44: pop rbx; ret; 
0x000000000041ed58: pop rbx; ret; 
0x000000000041eee2: pop rbx; ret; 
0x000000000041ef5b: pop rbx; ret; 
0x000000000041f007: pop rbx; ret; 
0x000000000041f051: pop rbx; ret; 
0x000000000041f16f: pop rbx; ret; 
0x000000000041f3a4: pop rbx; ret; 
0x000000000041f5ff: pop rbx; ret; 
0x000000000041f724: pop rbx; ret; 
0x000000000041f817: pop rbx; ret; 
0x000000000041f995: pop rbx; ret; 
0x000000000041f9b5: pop rbx; ret; 
0x000000000041f9e0: pop rbx; ret; 
0x000000000041fb51: pop rbx; ret; 
0x000000000041fc26: pop rbx; ret; 
0x000000000041fc81: pop rbx; ret; 
0x000000000041fce2: pop rbx; ret; 
0x000000000041fe31: pop rbx; ret; 
0x000000000041ff61: pop rbx; ret; 
0x0000000000420055: pop rbx; ret; 
0x00000000004200ef: pop rbx; ret; 
0x00000000004201bf: pop rbx; ret; 
0x000000000042025a: pop rbx; ret; 
0x000000000042030b: pop rbx; ret; 
0x000000000042039a: pop rbx; ret; 
0x000000000042044d: pop rbx; ret; 
0x0000000000420504: pop rbx; ret; 
0x00000000004205a3: pop rbx; ret; 
0x0000000000420638: pop rbx; ret; 
0x0000000000420670: pop rbx; ret; 
0x00000000004206de: pop rbx; ret; 
0x0000000000420707: pop rbx; ret; 
0x0000000000420777: pop rbx; ret; 
0x000000000042085e: pop rbx; ret; 
0x00000000004208aa: pop rbx; ret; 
0x0000000000420909: pop rbx; ret; 
0x0000000000420975: pop rbx; ret; 
0x00000000004209d8: pop rbx; ret; 
0x0000000000420a2a: pop rbx; ret; 
0x0000000000420aa8: pop rbx; ret; 
0x0000000000420b44: pop rbx; ret; 
0x0000000000420b9a: pop rbx; ret; 
0x0000000000420c1e: pop rbx; ret; 
0x0000000000420c9e: pop rbx; ret; 
0x0000000000420d5e: pop rbx; ret; 
0x0000000000420d7d: pop rbx; ret; 
0x0000000000420dcb: pop rbx; ret; 
0x0000000000420e1b: pop rbx; ret; 
0x0000000000420e9e: pop rbx; ret; 
0x0000000000420f1e: pop rbx; ret; 
0x0000000000420f9f: pop rbx; ret; 
0x000000000042109e: pop rbx; ret; 
0x0000000000421193: pop rbx; ret; 
0x00000000004211df: pop rbx; ret; 
0x000000000042122f: pop rbx; ret; 
0x0000000000421334: pop rbx; ret; 
0x0000000000421364: pop rbx; ret; 
0x0000000000421399: pop rbx; ret; 
0x00000000004213c3: pop rbx; ret; 
0x00000000004213f9: pop rbx; ret; 
0x0000000000421485: pop rbx; ret; 
0x0000000000421584: pop rbx; ret; 
0x00000000004215b4: pop rbx; ret; 
0x00000000004215e9: pop rbx; ret; 
0x0000000000421613: pop rbx; ret; 
0x0000000000421649: pop rbx; ret; 
0x00000000004216d4: pop rbx; ret; 
0x000000000042177f: pop rbx; ret; 
0x000000000042183a: pop rbx; ret; 
0x00000000004218e7: pop rbx; ret; 
0x000000000042198e: pop rbx; ret; 
0x0000000000421a1b: pop rbx; ret; 
0x0000000000421aa9: pop rbx; ret; 
0x0000000000421b25: pop rbx; ret; 
0x0000000000421c81: pop rbx; ret; 
0x0000000000421e29: pop rbx; ret; 
0x0000000000421eae: pop rbx; ret; 
0x0000000000421f2e: pop rbx; ret; 
0x0000000000421faf: pop rbx; ret; 
0x0000000000422209: pop rbx; ret; 
0x00000000004222b2: pop rbx; ret; 
0x0000000000422337: pop rbx; ret; 
0x000000000042239c: pop rbx; ret; 
0x0000000000422417: pop rbx; ret; 
0x000000000042247c: pop rbx; ret; 
0x000000000042254a: pop rbx; ret; 
0x0000000000422656: pop rbx; ret; 
0x00000000004226a4: pop rbx; ret; 
0x00000000004226e7: pop rbx; ret; 
0x0000000000422746: pop rbx; ret; 
0x00000000004227b4: pop rbx; ret; 
0x0000000000422e18: pop rbx; ret; 
0x0000000000422ec5: pop rbx; ret; 
0x0000000000422f75: pop rbx; ret; 
0x0000000000423025: pop rbx; ret; 
0x0000000000423053: pop rbx; ret; 
0x00000000004230de: pop rbx; ret; 
0x0000000000423185: pop rbx; ret; 
0x0000000000423235: pop rbx; ret; 
0x00000000004232e5: pop rbx; ret; 
0x00000000004233b2: pop rbx; ret; 
0x0000000000423432: pop rbx; ret; 
0x00000000004234b2: pop rbx; ret; 
0x0000000000423532: pop rbx; ret; 
0x00000000004235b8: pop rbx; ret; 
0x0000000000423665: pop rbx; ret; 
0x0000000000423715: pop rbx; ret; 
0x00000000004237c5: pop rbx; ret; 
0x0000000000423bcc: pop rbx; ret; 
0x0000000000423c5e: pop rbx; ret; 
0x0000000000423e13: pop rbx; ret; 
0x0000000000423ea6: pop rbx; ret; 
0x0000000000423f6c: pop rbx; ret; 
0x0000000000424164: pop rbx; ret; 
0x00000000004241b4: pop rbx; ret; 
0x0000000000424460: pop rbx; ret; 
0x00000000004245df: pop rbx; ret; 
0x0000000000424625: pop rbx; ret; 
0x0000000000424935: pop rbx; ret; 
0x0000000000424b3a: pop rbx; ret; 
0x0000000000424bcf: pop rbx; ret; 
0x0000000000424d0c: pop rbx; ret; 
0x0000000000424d6a: pop rbx; ret; 
0x0000000000424e00: pop rbx; ret; 
0x0000000000424f82: pop rbx; ret; 
0x0000000000424fe5: pop rbx; ret; 
0x00000000004250b2: pop rbx; ret; 
0x00000000004251d2: pop rbx; ret; 
0x00000000004253ce: pop rbx; ret; 
0x0000000000425739: pop rbx; ret; 
0x000000000042582f: pop rbx; ret; 
0x0000000000425996: pop rbx; ret; 
0x0000000000425ab6: pop rbx; ret; 
0x0000000000425b73: pop rbx; ret; 
0x0000000000425c08: pop rbx; ret; 
0x00000000004261d2: pop rbx; ret; 
0x0000000000426725: pop rbx; ret; 
0x00000000004267f6: pop rbx; ret; 
0x000000000042689a: pop rbx; ret; 
0x0000000000426932: pop rbx; ret; 
0x0000000000426b29: pop rbx; ret; 
0x0000000000426bbb: pop rbx; ret; 
0x0000000000426c98: pop rbx; ret; 
0x00000000004270d4: pop rbx; ret; 
0x000000000042752e: pop rbx; ret; 
0x0000000000427737: pop rbx; ret; 
0x0000000000427796: pop rbx; ret; 
0x00000000004277c7: pop rbx; ret; 
0x00000000004277fd: pop rbx; ret; 
0x0000000000427880: pop rbx; ret; 
0x0000000000427976: pop rbx; ret; 
0x00000000004279c2: pop rbx; ret; 
0x0000000000427afd: pop rbx; ret; 
0x0000000000427b56: pop rbx; ret; 
0x0000000000427b9a: pop rbx; ret; 
0x0000000000427c4c: pop rbx; ret; 
0x0000000000427de6: pop rbx; ret; 
0x0000000000427f9e: pop rbx; ret; 
0x000000000042803b: pop rbx; ret; 
0x0000000000428106: pop rbx; ret; 
0x0000000000428224: pop rbx; ret; 
0x00000000004282be: pop rbx; ret; 
0x00000000004283c7: pop rbx; ret; 
0x000000000042847c: pop rbx; ret; 
0x0000000000428dc2: pop rbx; ret; 
0x0000000000428e50: pop rbx; ret; 
0x00000000004290f0: pop rbx; ret; 
0x0000000000429473: pop rbx; ret; 
0x00000000004297a5: pop rbx; ret; 
0x000000000042980a: pop rbx; ret; 
0x0000000000429821: pop rbx; ret; 
0x0000000000429946: pop rbx; ret; 
0x00000000004299c0: pop rbx; ret; 
0x0000000000429a11: pop rbx; ret; 
0x0000000000429a61: pop rbx; ret; 
0x0000000000429c1b: pop rbx; ret; 
0x0000000000429ca1: pop rbx; ret; 
0x0000000000429d31: pop rbx; ret; 
0x0000000000429dc1: pop rbx; ret; 
0x000000000042a033: pop rbx; ret; 
0x000000000042a1dd: pop rbx; ret; 
0x000000000042a268: pop rbx; ret; 
0x000000000042a31e: pop rbx; ret; 
0x000000000042a412: pop rbx; ret; 
0x000000000042a49b: pop rbx; ret; 
0x000000000042a588: pop rbx; ret; 
0x000000000042a650: pop rbx; ret; 
0x000000000042aff7: pop rbx; ret; 
0x000000000042b080: pop rbx; ret; 
0x000000000042b31e: pop rbx; ret; 
0x000000000042b71b: pop rbx; ret; 
0x000000000042bb98: pop rbx; ret; 
0x000000000042bbf7: pop rbx; ret; 
0x000000000042bc11: pop rbx; ret; 
0x000000000042bd59: pop rbx; ret; 
0x000000000042be3e: pop rbx; ret; 
0x000000000042be7d: pop rbx; ret; 
0x000000000042c01b: pop rbx; ret; 
0x000000000042c0a1: pop rbx; ret; 
0x000000000042c131: pop rbx; ret; 
0x000000000042c1c1: pop rbx; ret; 
0x000000000042c433: pop rbx; ret; 
0x000000000042c4c0: pop rbx; ret; 
0x000000000042c546: pop rbx; ret; 
0x000000000042c5d0: pop rbx; ret; 
0x000000000042c66a: pop rbx; ret; 
0x000000000042c6e6: pop rbx; ret; 
0x000000000042c770: pop rbx; ret; 
0x000000000042c800: pop rbx; ret; 
0x000000000042c886: pop rbx; ret; 
0x000000000042c910: pop rbx; ret; 
0x000000000042c996: pop rbx; ret; 
0x000000000042ca45: pop rbx; ret; 
0x000000000042cac6: pop rbx; ret; 
0x000000000042cb50: pop rbx; ret; 
0x000000000042cc7a: pop rbx; ret; 
0x000000000042cd0a: pop rbx; ret; 
0x000000000042ce35: pop rbx; ret; 
0x000000000042cf17: pop rbx; ret; 
0x000000000042cff7: pop rbx; ret; 
0x000000000042d0d0: pop rbx; ret; 
0x000000000042d2bc: pop rbx; ret; 
0x000000000042d2fb: pop rbx; ret; 
0x000000000042d39c: pop rbx; ret; 
0x000000000042d44f: pop rbx; ret; 
0x000000000042d50f: pop rbx; ret; 
0x000000000042d5b0: pop rbx; ret; 
0x000000000042d5fd: pop rbx; ret; 
0x000000000042d6f7: pop rbx; ret; 
0x000000000042d7a1: pop rbx; ret; 
0x000000000042da4f: pop rbx; ret; 
0x000000000042daed: pop rbx; ret; 
0x000000000042db18: pop rbx; ret; 
0x000000000042db48: pop rbx; ret; 
0x000000000042dbdd: pop rbx; ret; 
0x000000000042dcd8: pop rbx; ret; 
0x000000000042e257: pop rbx; ret; 
0x000000000042e30e: pop rbx; ret; 
0x000000000042e3c8: pop rbx; ret; 
0x000000000042e48b: pop rbx; ret; 
0x000000000042e558: pop rbx; ret; 
0x000000000042e601: pop rbx; ret; 
0x000000000042e778: pop rbx; ret; 
0x000000000042e83e: pop rbx; ret; 
0x000000000042ef56: pop rbx; ret; 
0x000000000042f0cd: pop rbx; ret; 
0x000000000042f1de: pop rbx; ret; 
0x000000000042f26c: pop rbx; ret; 
0x000000000042f29e: pop rbx; ret; 
0x000000000042f2cd: pop rbx; ret; 
0x000000000042f2fc: pop rbx; ret; 
0x000000000042f32b: pop rbx; ret; 
0x000000000042f3d6: pop rbx; ret; 
0x000000000042f485: pop rbx; ret; 
0x000000000042f61d: pop rbx; ret; 
0x000000000042fc5f: pop rbx; ret; 
0x000000000042fd08: pop rbx; ret; 
0x000000000042fd47: pop rbx; ret; 
0x000000000042fd7c: pop rbx; ret; 
0x000000000042fdab: pop rbx; ret; 
0x000000000042ff49: pop rbx; ret; 
0x0000000000430192: pop rbx; ret; 
0x0000000000430272: pop rbx; ret; 
0x00000000004302ee: pop rbx; ret; 
0x0000000000430320: pop rbx; ret; 
0x0000000000430425: pop rbx; ret; 
0x0000000000430adc: pop rbx; ret; 
0x0000000000430f89: pop rbx; ret; 
0x000000000043108d: pop rbx; ret; 
0x00000000004310be: pop rbx; ret; 
0x00000000004311cd: pop rbx; ret; 
0x0000000000431242: pop rbx; ret; 
0x000000000043173d: pop rbx; ret; 
0x000000000043176d: pop rbx; ret; 
0x00000000004317cc: pop rbx; ret; 
0x00000000004317fe: pop rbx; ret; 
0x0000000000431b7d: pop rbx; ret; 
0x0000000000431bad: pop rbx; ret; 
0x0000000000431c0c: pop rbx; ret; 
0x0000000000431c3e: pop rbx; ret; 
0x000000000043202d: pop rbx; ret; 
0x000000000043205d: pop rbx; ret; 
0x00000000004320bc: pop rbx; ret; 
0x00000000004320ee: pop rbx; ret; 
0x0000000000432350: pop rbx; ret; 
0x00000000004323d4: pop rbx; ret; 
0x0000000000432548: pop rbx; ret; 
0x00000000004325c4: pop rbx; ret; 
0x0000000000432739: pop rbx; ret; 
0x00000000004327b4: pop rbx; ret; 
0x0000000000432921: pop rbx; ret; 
0x00000000004329a4: pop rbx; ret; 
0x0000000000432b00: pop rbx; ret; 
0x0000000000432b93: pop rbx; ret; 
0x0000000000432ce8: pop rbx; ret; 
0x0000000000432d63: pop rbx; ret; 
0x0000000000432ec9: pop rbx; ret; 
0x0000000000432f44: pop rbx; ret; 
0x00000000004330a1: pop rbx; ret; 
0x0000000000433144: pop rbx; ret; 
0x00000000004332b9: pop rbx; ret; 
0x0000000000433334: pop rbx; ret; 
0x0000000000433491: pop rbx; ret; 
0x0000000000433534: pop rbx; ret; 
0x00000000004338b3: pop rbx; ret; 
0x00000000004338db: pop rbx; ret; 
0x0000000000433a3f: pop rbx; ret; 
0x0000000000433aa8: pop rbx; ret; 
0x0000000000433b08: pop rbx; ret; 
0x0000000000433b8c: pop rbx; ret; 
0x0000000000433c0d: pop rbx; ret; 
0x0000000000433c48: pop rbx; ret; 
0x0000000000433c63: pop rbx; ret; 
0x0000000000433c87: pop rbx; ret; 
0x0000000000433d78: pop rbx; ret; 
0x0000000000433ddd: pop rbx; ret; 
0x0000000000433e3d: pop rbx; ret; 
0x0000000000433eae: pop rbx; ret; 
0x0000000000433f1e: pop rbx; ret; 
0x000000000043479f: pop rbx; ret; 
0x0000000000434864: pop rbx; ret; 
0x0000000000434a09: pop rbx; ret; 
0x0000000000434b14: pop rbx; ret; 
0x0000000000434b64: pop rbx; ret; 
0x0000000000434bb4: pop rbx; ret; 
0x0000000000434c04: pop rbx; ret; 
0x0000000000434c53: pop rbx; ret; 
0x0000000000434d73: pop rbx; ret; 
0x0000000000434e94: pop rbx; ret; 
0x0000000000434ffa: pop rbx; ret; 
0x000000000043514b: pop rbx; ret; 
0x00000000004352a2: pop rbx; ret; 
0x00000000004352f3: pop rbx; ret; 
0x0000000000435337: pop rbx; ret; 
0x000000000043535f: pop rbx; ret; 
0x00000000004353a9: pop rbx; ret; 
0x00000000004353d1: pop rbx; ret; 
0x00000000004363d7: pop rbx; ret; 
0x0000000000436473: pop rbx; ret; 
0x00000000004368b2: pop rbx; ret; 
0x0000000000438ce7: pop rbx; ret; 
0x00000000004399e6: pop rbx; ret; 
0x0000000000439a24: pop rbx; ret; 
0x0000000000439a56: pop rbx; ret; 
0x0000000000439a86: pop rbx; ret; 
0x0000000000439c79: pop rbx; ret; 
0x000000000043a0c1: pop rbx; ret; 
0x000000000043a231: pop rbx; ret; 
0x000000000043b0f3: pop rbx; ret; 
0x000000000043b814: pop rbx; ret; 
0x000000000043b856: pop rbx; ret; 
0x000000000043b90c: pop rbx; ret; 
0x000000000043baae: pop rbx; ret; 
0x000000000043bda1: pop rbx; ret; 
0x000000000043c2a0: pop rbx; ret; 
0x000000000043c414: pop rbx; ret; 
0x000000000043c614: pop rbx; ret; 
0x000000000043cf30: pop rbx; ret; 
0x000000000043cf85: pop rbx; ret; 
0x000000000043cfe8: pop rbx; ret; 
0x000000000043d165: pop rbx; ret; 
0x000000000043d624: pop rbx; ret; 
0x000000000043d715: pop rbx; ret; 
0x000000000043d7d5: pop rbx; ret; 
0x000000000043d894: pop rbx; ret; 
0x000000000043d92e: pop rbx; ret; 
0x000000000043d9e8: pop rbx; ret; 
0x000000000043da76: pop rbx; ret; 
0x000000000043db03: pop rbx; ret; 
0x000000000043db95: pop rbx; ret; 
0x000000000043dc58: pop rbx; ret; 
0x000000000043dce5: pop rbx; ret; 
0x000000000043dda4: pop rbx; ret; 
0x000000000043de38: pop rbx; ret; 
0x000000000043def9: pop rbx; ret; 
0x000000000043dfb4: pop rbx; ret; 
0x000000000043e1c5: pop rbx; ret; 
0x000000000043e1e0: pop rbx; ret; 
0x000000000043e387: pop rbx; ret; 
0x000000000043e3a5: pop rbx; ret; 
0x000000000043e3c8: pop rbx; ret; 
0x000000000043e6aa: pop rbx; ret; 
0x000000000043e6d7: pop rbx; ret; 
0x000000000043e772: pop rbx; ret; 
0x000000000043e83e: pop rbx; ret; 
0x000000000043e8cf: pop rbx; ret; 
0x000000000043e8f0: pop rbx; ret; 
0x000000000043e9c3: pop rbx; ret; 
0x000000000043ea92: pop rbx; ret; 
0x000000000043eb2d: pop rbx; ret; 
0x000000000043ebc0: pop rbx; ret; 
0x000000000043ec92: pop rbx; ret; 
0x000000000043ed2f: pop rbx; ret; 
0x000000000043edfe: pop rbx; ret; 
0x000000000043eec3: pop rbx; ret; 
0x000000000043ef5f: pop rbx; ret; 
0x000000000043efbe: pop rbx; ret; 
0x000000000043f0de: pop rbx; ret; 
0x000000000043f19e: pop rbx; ret; 
0x000000000043f1e9: pop rbx; ret; 
0x000000000043fb43: pop rbx; ret; 
0x0000000000440460: pop rbx; ret; 
0x00000000004404b7: pop rbx; ret; 
0x0000000000440518: pop rbx; ret; 
0x0000000000440698: pop rbx; ret; 
0x0000000000440b86: pop rbx; ret; 
0x0000000000440c9a: pop rbx; ret; 
0x0000000000440d55: pop rbx; ret; 
0x0000000000440e36: pop rbx; ret; 
0x0000000000440ef9: pop rbx; ret; 
0x0000000000440fda: pop rbx; ret; 
0x0000000000441065: pop rbx; ret; 
0x0000000000441118: pop rbx; ret; 
0x00000000004411c7: pop rbx; ret; 
0x00000000004412aa: pop rbx; ret; 
0x000000000044135a: pop rbx; ret; 
0x0000000000441436: pop rbx; ret; 
0x00000000004414ea: pop rbx; ret; 
0x00000000004415cb: pop rbx; ret; 
0x00000000004416a6: pop rbx; ret; 
0x00000000004418d7: pop rbx; ret; 
0x00000000004418f0: pop rbx; ret; 
0x0000000000441983: pop rbx; ret; 
0x0000000000441ba7: pop rbx; ret; 
0x0000000000441c3e: pop rbx; ret; 
0x0000000000441c58: pop rbx; ret; 
0x0000000000441f3d: pop rbx; ret; 
0x0000000000441f67: pop rbx; ret; 
0x0000000000442024: pop rbx; ret; 
0x0000000000442110: pop rbx; ret; 
0x00000000004421d1: pop rbx; ret; 
0x00000000004421f0: pop rbx; ret; 
0x00000000004422e5: pop rbx; ret; 
0x00000000004423d4: pop rbx; ret; 
0x000000000044248f: pop rbx; ret; 
0x000000000044252f: pop rbx; ret; 
0x0000000000442624: pop rbx; ret; 
0x00000000004426e1: pop rbx; ret; 
0x00000000004427d0: pop rbx; ret; 
0x00000000004428c5: pop rbx; ret; 
0x0000000000442981: pop rbx; ret; 
0x00000000004429de: pop rbx; ret; 
0x0000000000442b20: pop rbx; ret; 
0x0000000000442c10: pop rbx; ret; 
0x0000000000442c69: pop rbx; ret; 
0x00000000004435ca: pop rbx; ret; 
0x00000000004439b5: pop rbx; ret; 
0x0000000000443d62: pop rbx; ret; 
0x0000000000443da9: pop rbx; ret; 
0x0000000000443e46: pop rbx; ret; 
0x0000000000443e97: pop rbx; ret; 
0x0000000000443f41: pop rbx; ret; 
0x000000000044405b: pop rbx; ret; 
0x0000000000444127: pop rbx; ret; 
0x00000000004441b4: pop rbx; ret; 
0x00000000004441fc: pop rbx; ret; 
0x0000000000444234: pop rbx; ret; 
0x000000000044427c: pop rbx; ret; 
0x00000000004442c6: pop rbx; ret; 
0x0000000000444320: pop rbx; ret; 
0x000000000044490d: pop rbx; ret; 
0x00000000004449b1: pop rbx; ret; 
0x0000000000444f26: pop rbx; ret; 
0x0000000000445632: pop rbx; ret; 
0x000000000044568e: pop rbx; ret; 
0x0000000000445c5b: pop rbx; ret; 
0x0000000000445eba: pop rbx; ret; 
0x0000000000445f66: pop rbx; ret; 
0x0000000000445fb6: pop rbx; ret; 
0x0000000000446009: pop rbx; ret; 
0x000000000044605d: pop rbx; ret; 
0x00000000004461b2: pop rbx; ret; 
0x0000000000446dac: pop rbx; ret; 
0x0000000000446e0d: pop rbx; ret; 
0x0000000000446feb: pop rbx; ret; 
0x00000000004470cb: pop rbx; ret; 
0x00000000004471fe: pop rbx; ret; 
0x00000000004472a1: pop rbx; ret; 
0x000000000044739e: pop rbx; ret; 
0x000000000044748a: pop rbx; ret; 
0x0000000000447519: pop rbx; ret; 
0x00000000004476ac: pop rbx; ret; 
0x0000000000447786: pop rbx; ret; 
0x0000000000447965: pop rbx; ret; 
0x000000000044799d: pop rbx; ret; 
0x0000000000447a08: pop rbx; ret; 
0x0000000000447a5a: pop rbx; ret; 
0x0000000000447ad5: pop rbx; ret; 
0x0000000000447b49: pop rbx; ret; 
0x0000000000447ba1: pop rbx; ret; 
0x0000000000447c1e: pop rbx; ret; 
0x0000000000447c56: pop rbx; ret; 
0x0000000000447d10: pop rbx; ret; 
0x0000000000447df9: pop rbx; ret; 
0x0000000000447e2b: pop rbx; ret; 
0x0000000000447e66: pop rbx; ret; 
0x0000000000447e82: pop rbx; ret; 
0x0000000000447f0d: pop rbx; ret; 
0x0000000000447f8d: pop rbx; ret; 
0x0000000000447fd9: pop rbx; ret; 
0x000000000044802a: pop rbx; ret; 
0x00000000004480aa: pop rbx; ret; 
0x000000000044834c: pop rbx; ret; 
0x00000000004483f5: pop rbx; ret; 
0x00000000004484aa: pop rbx; ret; 
0x000000000044937d: pop rbx; ret; 
0x000000000044942e: pop rbx; ret; 
0x0000000000449933: pop rbx; ret; 
0x000000000044a025: pop rbx; ret; 
0x000000000044a1c4: pop rbx; ret; 
0x000000000044b11d: pop rbx; ret; 
0x000000000044b1ce: pop rbx; ret; 
0x000000000044b6d3: pop rbx; ret; 
0x000000000044b945: pop rbx; ret; 
0x000000000044b991: pop rbx; ret; 
0x000000000044ba10: pop rbx; ret; 
0x000000000044ba6c: pop rbx; ret; 
0x000000000044ba88: pop rbx; ret; 
0x000000000044babb: pop rbx; ret; 
0x000000000044bb79: pop rbx; ret; 
0x000000000044bbf5: pop rbx; ret; 
0x000000000044bc43: pop rbx; ret; 
0x000000000044bca2: pop rbx; ret; 
0x000000000044bcf8: pop rbx; ret; 
0x000000000044bd48: pop rbx; ret; 
0x000000000044bde9: pop rbx; ret; 
0x000000000044be6d: pop rbx; ret; 
0x000000000044bea6: pop rbx; ret; 
0x000000000044bee7: pop rbx; ret; 
0x000000000044bf58: pop rbx; ret; 
0x000000000044bfed: pop rbx; ret; 
0x000000000044c018: pop rbx; ret; 
0x000000000044c079: pop rbx; ret; 
0x000000000044c0d5: pop rbx; ret; 
0x000000000044c50d: pop rbx; ret; 
0x000000000044c671: pop rbx; ret; 
0x000000000044c703: pop rbx; ret; 
0x000000000044c7c3: pop rbx; ret; 
0x000000000044cb24: pop rbx; ret; 
0x000000000044ce19: pop rbx; ret; 
0x000000000044cf3a: pop rbx; ret; 
0x000000000044d09c: pop rbx; ret; 
0x000000000044d0c8: pop rbx; ret; 
0x000000000044d18c: pop rbx; ret; 
0x000000000044d283: pop rbx; ret; 
0x000000000044d2c5: pop rbx; ret; 
0x000000000044d415: pop rbx; ret; 
0x000000000044d5b2: pop rbx; ret; 
0x000000000044d95e: pop rbx; ret; 
0x000000000044db5d: pop rbx; ret; 
0x000000000044dcb2: pop rbx; ret; 
0x000000000044dfda: pop rbx; ret; 
0x000000000044e1b3: pop rbx; ret; 
0x000000000044e279: pop rbx; ret; 
0x000000000044e323: pop rbx; ret; 
0x000000000044e3fb: pop rbx; ret; 
0x000000000044e4a3: pop rbx; ret; 
0x000000000044e57e: pop rbx; ret; 
0x000000000044e61d: pop rbx; ret; 
0x000000000044ebaa: pop rbx; ret; 
0x000000000044ec1d: pop rbx; ret; 
0x000000000044ed32: pop rbx; ret; 
0x000000000044f0a4: pop rbx; ret; 
0x000000000044f0e0: pop rbx; ret; 
0x000000000044f13d: pop rbx; ret; 
0x000000000044f1dd: pop rbx; ret; 
0x000000000044f44e: pop rbx; ret; 
0x000000000044f4fd: pop rbx; ret; 
0x000000000044f62d: pop rbx; ret; 
0x000000000044f719: pop rbx; ret; 
0x000000000044f7fd: pop rbx; ret; 
0x000000000044f83d: pop rbx; ret; 
0x000000000044fa02: pop rbx; ret; 
0x000000000044fccc: pop rbx; ret; 
0x0000000000450203: pop rbx; ret; 
0x000000000045022f: pop rbx; ret; 
0x000000000045040b: pop rbx; ret; 
0x000000000045045e: pop rbx; ret; 
0x0000000000450500: pop rbx; ret; 
0x0000000000450539: pop rbx; ret; 
0x00000000004505f3: pop rbx; ret; 
0x0000000000450696: pop rbx; ret; 
0x00000000004507c6: pop rbx; ret; 
0x0000000000450864: pop rbx; ret; 
0x00000000004509ce: pop rbx; ret; 
0x0000000000450b29: pop rbx; ret; 
0x0000000000450bbc: pop rbx; ret; 
0x0000000000450c80: pop rbx; ret; 
0x0000000000450d6a: pop rbx; ret; 
0x0000000000450e0a: pop rbx; ret; 
0x000000000045124d: pop rbx; ret; 
0x0000000000451503: pop rbx; ret; 
0x000000000045227f: pop rbx; ret; 
0x000000000045288c: pop rbx; ret; 
0x0000000000452b30: pop rbx; ret; 
0x0000000000452de5: pop rbx; ret; 
0x0000000000452efa: pop rbx; ret; 
0x0000000000452f1b: pop rbx; ret; 
0x0000000000452f39: pop rbx; ret; 
0x0000000000452f5b: pop rbx; ret; 
0x00000000004530fd: pop rbx; ret; 
0x0000000000453184: pop rbx; ret; 
0x0000000000453226: pop rbx; ret; 
0x0000000000453265: pop rbx; ret; 
0x00000000004532ab: pop rbx; ret; 
0x000000000045331d: pop rbx; ret; 
0x000000000045335b: pop rbx; ret; 
0x0000000000453467: pop rbx; ret; 
0x000000000045387c: pop rbx; ret; 
0x0000000000453ae6: pop rbx; ret; 
0x0000000000453bb4: pop rbx; ret; 
0x0000000000453c9b: pop rbx; ret; 
0x0000000000453cf1: pop rbx; ret; 
0x0000000000453daa: pop rbx; ret; 
0x0000000000453e47: pop rbx; ret; 
0x0000000000453eb1: pop rbx; ret; 
0x0000000000453f06: pop rbx; ret; 
0x0000000000453f56: pop rbx; ret; 
0x0000000000453fc1: pop rbx; ret; 
0x0000000000454007: pop rbx; ret; 
0x00000000004540cf: pop rbx; ret; 
0x000000000045425a: pop rbx; ret; 
0x000000000045458d: pop rbx; ret; 
0x0000000000454685: pop rbx; ret; 
0x0000000000454a12: pop rbx; ret; 
0x0000000000454aa6: pop rbx; ret; 
0x0000000000454ad2: pop rbx; ret; 
0x0000000000454b21: pop rbx; ret; 
0x0000000000454b77: pop rbx; ret; 
0x0000000000454cad: pop rbx; ret; 
0x0000000000454f16: pop rbx; ret; 
0x00000000004550d3: pop rbx; ret; 
0x00000000004551d8: pop rbx; ret; 
0x0000000000455271: pop rbx; ret; 
0x0000000000455321: pop rbx; ret; 
0x00000000004553b6: pop rbx; ret; 
0x0000000000455466: pop rbx; ret; 
0x0000000000455507: pop rbx; ret; 
0x000000000045563e: pop rbx; ret; 
0x000000000045576e: pop rbx; ret; 
0x00000000004557b6: pop rbx; ret; 
0x000000000045592c: pop rbx; ret; 
0x0000000000455b69: pop rbx; ret; 
0x0000000000455b89: pop rbx; ret; 
0x0000000000456046: pop rbx; ret; 
0x00000000004560ea: pop rbx; ret; 
0x000000000045619c: pop rbx; ret; 
0x00000000004562fc: pop rbx; ret; 
0x00000000004564b7: pop rbx; ret; 
0x00000000004565b2: pop rbx; ret; 
0x00000000004566a6: pop rbx; ret; 
0x000000000045670e: pop rbx; ret; 
0x0000000000456aca: pop rbx; ret; 
0x0000000000456b2a: pop rbx; ret; 
0x0000000000456bdc: pop rbx; ret; 
0x0000000000456c3e: pop rbx; ret; 
0x0000000000456ce2: pop rbx; ret; 
0x0000000000456f42: pop rbx; ret; 
0x0000000000456f74: pop rbx; ret; 
0x00000000004570e6: pop rbx; ret; 
0x000000000045717e: pop rbx; ret; 
0x00000000004571e8: pop rbx; ret; 
0x00000000004575dc: pop rbx; ret; 
0x000000000045761f: pop rbx; ret; 
0x0000000000457675: pop rbx; ret; 
0x0000000000457906: pop rbx; ret; 
0x0000000000457998: pop rbx; ret; 
0x0000000000457a28: pop rbx; ret; 
0x0000000000457ac2: pop rbx; ret; 
0x0000000000457b58: pop rbx; ret; 
0x0000000000457bc3: pop rbx; ret; 
0x0000000000457c62: pop rbx; ret; 
0x0000000000457d02: pop rbx; ret; 
0x0000000000457d8e: pop rbx; ret; 
0x0000000000457e22: pop rbx; ret; 
0x0000000000457eb8: pop rbx; ret; 
0x0000000000457f3e: pop rbx; ret; 
0x0000000000457fbe: pop rbx; ret; 
0x0000000000458076: pop rbx; ret; 
0x0000000000458108: pop rbx; ret; 
0x0000000000458198: pop rbx; ret; 
0x0000000000458246: pop rbx; ret; 
0x00000000004582d8: pop rbx; ret; 
0x000000000045836c: pop rbx; ret; 
0x000000000045845d: pop rbx; ret; 
0x00000000004584ab: pop rbx; ret; 
0x0000000000458500: pop rbx; ret; 
0x0000000000458590: pop rbx; ret; 
0x0000000000458638: pop rbx; ret; 
0x0000000000458688: pop rbx; ret; 
0x00000000004586ae: pop rbx; ret; 
0x0000000000458737: pop rbx; ret; 
0x0000000000458887: pop rbx; ret; 
0x00000000004589d9: pop rbx; ret; 
0x0000000000458a5b: pop rbx; ret; 
0x0000000000458b0a: pop rbx; ret; 
0x0000000000458b4c: pop rbx; ret; 
0x0000000000458b8c: pop rbx; ret; 
0x0000000000458c16: pop rbx; ret; 
0x0000000000458db7: pop rbx; ret; 
0x0000000000459256: pop rbx; ret; 
0x00000000004594a2: pop rbx; ret; 
0x0000000000459549: pop rbx; ret; 
0x0000000000459963: pop rbx; ret; 
0x0000000000459a07: pop rbx; ret; 
0x0000000000459ca8: pop rbx; ret; 
0x0000000000459ea7: pop rbx; ret; 
0x0000000000459f53: pop rbx; ret; 
0x0000000000459f9e: pop rbx; ret; 
0x000000000045a048: pop rbx; ret; 
0x000000000045a08e: pop rbx; ret; 
0x000000000045a18d: pop rbx; ret; 
0x000000000045a21f: pop rbx; ret; 
0x000000000045a527: pop rbx; ret; 
0x000000000045a7a8: pop rbx; ret; 
0x000000000045a83b: pop rbx; ret; 
0x000000000045a8cb: pop rbx; ret; 
0x000000000045a95b: pop rbx; ret; 
0x000000000045a9eb: pop rbx; ret; 
0x000000000045b1f5: pop rbx; ret; 
0x000000000045b233: pop rbx; ret; 
0x000000000045b5cc: pop rbx; ret; 
0x000000000045b649: pop rbx; ret; 
0x000000000045b742: pop rbx; ret; 
0x000000000045b839: pop rbx; ret; 
0x000000000045b8ed: pop rbx; ret; 
0x000000000045bb3e: pop rbx; ret; 
0x000000000045bde5: pop rbx; ret; 
0x000000000045c036: pop rbx; ret; 
0x000000000045c17a: pop rbx; ret; 
0x000000000045c1d0: pop rbx; ret; 
0x000000000045c20a: pop rbx; ret; 
0x000000000045c24a: pop rbx; ret; 
0x000000000045c330: pop rbx; ret; 
0x000000000045c3f5: pop rbx; ret; 
0x000000000045c45e: pop rbx; ret; 
0x000000000045c563: pop rbx; ret; 
0x000000000045c6c3: pop rbx; ret; 
0x000000000045c74a: pop rbx; ret; 
0x000000000045c7c8: pop rbx; ret; 
0x000000000045cc90: pop rbx; ret; 
0x000000000045cdac: pop rbx; ret; 
0x000000000045d413: pop rbx; ret; 
0x000000000044c42e: pop rbx; sti; dec dword ptr [rax + 0x63]; ret; 
0x0000000000457401: pop rbx; stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000423bf3: pop rcx; add al, byte ptr [rsi]; add byte ptr [rbx + 0x1e88300], cl; ret; 
0x000000000042fda3: pop rcx; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040f65a: pop rcx; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004130d8: pop rcx; add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000411a23: pop rcx; mov cl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000451c93: pop rcx; xor al, 0xfc; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004337e7: pop rdi; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045320b: pop rdi; cld; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000045320a: pop rdi; cld; dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000043290d: pop rdi; cmpsd dword ptr [rsi], dword ptr [rdi]; std; jmp qword ptr [rsi - 0x77]; 
0x0000000000403e95: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000404b72: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000406269: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407192: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004072c5: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000407b43: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040896b: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000408a84: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004093c7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409d56: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000409deb: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a181: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040a649: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ad20: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040afc0: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040be99: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cdd4: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040ce6d: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040cf2b: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d664: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d7d5: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040d845: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040e2c2: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f80e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000040f8ea: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000410da6: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041219d: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004124f6: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412902: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412ccf: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000412e6e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004139ff: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413aa2: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413b70: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413d2b: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413e9e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414199: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414289: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000414326: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041441b: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004144e4: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417011: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004170a6: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000417650: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004176da: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041775a: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004177da: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004178b2: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419865: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419cd3: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000419df1: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041a524: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041b996: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041ba51: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bb14: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bba0: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041bdc1: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041be51: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041da2d: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041e9c8: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f98e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041fb4a: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042492e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000424b33: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004253c7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042598f: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000425aaf: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042671e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004270cd: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427af6: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427c45: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000427ddf: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042979e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042bb91: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042cc73: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042da48: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e484: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042e551: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042f1d7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000042ff42: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043041e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000431086: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000433a38: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434798: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043485d: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434a02: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434d6c: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000434e8d: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000438ce0: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043a0ba: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b0ec: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043b80d: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043baa7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043bd9a: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043efb7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043fb3c: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004429d7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004435c3: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000444906: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044562b: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000445c54: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000446fe4: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004470c4: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004471f7: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447397: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447483: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004476a5: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447d09: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000447df2: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a01e: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044a1bd: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bbee: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bde2: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c506: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044c7bc: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e272: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e3f4: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e577: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044eba3: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044ec16: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044f712: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044fcc5: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004501fc: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000452885: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453bad: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000453eaa: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454ca6: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000454f0f: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004550cc: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a520: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045a7a1: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c55c: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000045c6bc: pop rdi; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041d49d: pop rdi; push 0x388b0006; call rdx; 
0x00000000004571ad: pop rdi; sar edx, cl; dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x00000000004572cd: pop rdi; stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041050d: pop rdx; add al, byte ptr [rax]; add byte ptr [rbp + 0x31], cl; fisttp dword ptr [rcx - 0x39]; ret 0; 
0x000000000043babc: pop rdx; add al, byte ptr [rax]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043badb: pop rdx; add al, byte ptr [rax]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043116d: pop rdx; add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043118d: pop rdx; add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041599a: pop rdx; out 6, al; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000043f2c3: pop rdx; std; jmp qword ptr [rdi + 0x47]; 
0x000000000040f10e: pop rsi; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000443a30: pop rsi; add dh, dl; movups xmmword ptr [r8], xmm0; ret; 
0x000000000042729e: pop rsi; mov esp, 0x3a8b0005; call rax; 
0x0000000000402dac: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000403b20: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000403e97: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004041f3: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000404b74: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040626b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004069f8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000407194: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000407241: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004072c7: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004073cc: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040744c: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000407b45: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040896d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000408a86: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004093c9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000409d58: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000409ded: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040a183: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040a64b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040ad22: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040afc2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040bc15: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040be9b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040c467: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040c523: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040c61b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040c964: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040cb35: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040cdd6: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040ce6f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040cf2d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040d4a8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040d666: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040d704: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040d7d7: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040d847: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040da6f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040e2c4: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040f762: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040f810: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040f8ec: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040fc2e: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000040fdbf: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000410da8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041219f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004124f8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000412904: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000412cd1: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000412dbb: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000412e70: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413855: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413931: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413a01: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413aa4: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413b72: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413d2d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000413ea0: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041419b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041428b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000414328: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041441d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004144e6: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004153fd: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000417013: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004170a8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000417652: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004176dc: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041775c: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004177dc: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004178b4: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041897b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000419867: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000419cd5: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000419df3: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000419f41: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041a17e: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041a212: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041a526: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041b998: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041ba53: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041bb16: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041bba2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041bdc3: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041be53: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041c1ae: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041d017: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041da2f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041e157: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041e320: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041e4c4: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041e9ca: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041f39f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041f5fa: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041f990: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041fb4c: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000420633: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000420772: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042132f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042157f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000421e24: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000422204: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e0e: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000424930: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000424b35: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000424d07: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004253c9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000425991: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000425ab1: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004261cd: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000426720: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042692d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000426b24: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004270cf: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000427732: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000427af8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000427c47: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000427de1: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000427f99: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042821f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000428dbd: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004290eb: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004297a0: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042a1d8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042aff2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042b319: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042bb93: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042cc75: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042cf12: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042cff2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042d2b7: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042d5ab: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042d6f2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042da4a: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042e486: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042e553: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042f0c8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042f1d9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042f3d1: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042f480: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042f618: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000042ff44: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043018d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043026d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000430420: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000431088: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043123d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000433a3a: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000433ea9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000433f19: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043479a: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043485f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000434a04: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000434d6e: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000434e8f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000438ce2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000439c74: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043a0bc: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043b0ee: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043b80f: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043baa9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043bd9c: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043d160: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043efb9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000043fb3e: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000440693: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004429d9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004435c5: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004439b0: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000443e41: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000444908: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044562d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000445c56: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000445eb5: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000446004: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000446fe6: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004470c6: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004471f9: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044729c: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447399: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447485: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004476a7: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447b44: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447c19: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447d0b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447df4: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f08: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000447f88: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044a020: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044a1bf: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044bbf0: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044bde4: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044be68: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044c508: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044c7be: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044cf35: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044e274: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044e3f6: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044e579: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044eba5: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044ec18: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044f714: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044f7f8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044fcc7: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004501fe: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000450b24: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000450d65: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000450e05: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000452887: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b2b: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000452de0: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004530f8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000453baf: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000453eac: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f01: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000453f51: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000454ca8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000454f11: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x00000000004550ce: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000458db2: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000459a02: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045a522: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045a7a3: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045b5c7: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045b73d: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045b8e8: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045c55e: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045c6be: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045c745: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000045c7c3: pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000044c0ce: pop rsi; sti; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000458ace: pop rsi; xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004528be: pop rsp; add al, byte ptr [rax]; lea rax, [rsi + rcx]; ret; 
0x00000000004316ee: pop rsp; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045087a: pop rsp; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004054a5: pop rsp; or byte ptr [rsi + 0xf], ah; sub eax, ecx; lea rsp, [rsp + 0x28]; ret; 
0x0000000000402ccc: pop rsp; pop rbx; ret; 
0x0000000000402d2d: pop rsp; pop rbx; ret; 
0x0000000000402db0: pop rsp; pop rbx; ret; 
0x0000000000403a17: pop rsp; pop rbx; ret; 
0x0000000000403b24: pop rsp; pop rbx; ret; 
0x0000000000403c2e: pop rsp; pop rbx; ret; 
0x0000000000403d46: pop rsp; pop rbx; ret; 
0x0000000000403d97: pop rsp; pop rbx; ret; 
0x0000000000403e9b: pop rsp; pop rbx; ret; 
0x00000000004040d1: pop rsp; pop rbx; ret; 
0x00000000004041f7: pop rsp; pop rbx; ret; 
0x0000000000404afc: pop rsp; pop rbx; ret; 
0x0000000000404b78: pop rsp; pop rbx; ret; 
0x0000000000404bc0: pop rsp; pop rbx; ret; 
0x0000000000404c15: pop rsp; pop rbx; ret; 
0x0000000000404c68: pop rsp; pop rbx; ret; 
0x0000000000404cc5: pop rsp; pop rbx; ret; 
0x0000000000405167: pop rsp; pop rbx; ret; 
0x000000000040626f: pop rsp; pop rbx; ret; 
0x0000000000406537: pop rsp; pop rbx; ret; 
0x0000000000406818: pop rsp; pop rbx; ret; 
0x0000000000406996: pop rsp; pop rbx; ret; 
0x00000000004069fc: pop rsp; pop rbx; ret; 
0x0000000000406a47: pop rsp; pop rbx; ret; 
0x0000000000406acf: pop rsp; pop rbx; ret; 
0x0000000000406c92: pop rsp; pop rbx; ret; 
0x0000000000406cfa: pop rsp; pop rbx; ret; 
0x0000000000406d38: pop rsp; pop rbx; ret; 
0x0000000000406dbd: pop rsp; pop rbx; ret; 
0x0000000000406f12: pop rsp; pop rbx; ret; 
0x0000000000406f6f: pop rsp; pop rbx; ret; 
0x0000000000407198: pop rsp; pop rbx; ret; 
0x0000000000407245: pop rsp; pop rbx; ret; 
0x00000000004072cb: pop rsp; pop rbx; ret; 
0x00000000004073d0: pop rsp; pop rbx; ret; 
0x0000000000407450: pop rsp; pop rbx; ret; 
0x0000000000407720: pop rsp; pop rbx; ret; 
0x00000000004077b0: pop rsp; pop rbx; ret; 
0x0000000000407b49: pop rsp; pop rbx; ret; 
0x0000000000407df4: pop rsp; pop rbx; ret; 
0x0000000000408971: pop rsp; pop rbx; ret; 
0x0000000000408a8a: pop rsp; pop rbx; ret; 
0x00000000004093cd: pop rsp; pop rbx; ret; 
0x0000000000409d5c: pop rsp; pop rbx; ret; 
0x0000000000409df1: pop rsp; pop rbx; ret; 
0x0000000000409fd4: pop rsp; pop rbx; ret; 
0x000000000040a187: pop rsp; pop rbx; ret; 
0x000000000040a24c: pop rsp; pop rbx; ret; 
0x000000000040a64f: pop rsp; pop rbx; ret; 
0x000000000040ad26: pop rsp; pop rbx; ret; 
0x000000000040ae77: pop rsp; pop rbx; ret; 
0x000000000040afc6: pop rsp; pop rbx; ret; 
0x000000000040b36d: pop rsp; pop rbx; ret; 
0x000000000040b3a7: pop rsp; pop rbx; ret; 
0x000000000040bb2b: pop rsp; pop rbx; ret; 
0x000000000040bc19: pop rsp; pop rbx; ret; 
0x000000000040be9f: pop rsp; pop rbx; ret; 
0x000000000040c46b: pop rsp; pop rbx; ret; 
0x000000000040c4b7: pop rsp; pop rbx; ret; 
0x000000000040c527: pop rsp; pop rbx; ret; 
0x000000000040c583: pop rsp; pop rbx; ret; 
0x000000000040c61f: pop rsp; pop rbx; ret; 
0x000000000040c82f: pop rsp; pop rbx; ret; 
0x000000000040c968: pop rsp; pop rbx; ret; 
0x000000000040ca61: pop rsp; pop rbx; ret; 
0x000000000040cb39: pop rsp; pop rbx; ret; 
0x000000000040ccb6: pop rsp; pop rbx; ret; 
0x000000000040cd0b: pop rsp; pop rbx; ret; 
0x000000000040cdda: pop rsp; pop rbx; ret; 
0x000000000040ce73: pop rsp; pop rbx; ret; 
0x000000000040cf31: pop rsp; pop rbx; ret; 
0x000000000040d0c8: pop rsp; pop rbx; ret; 
0x000000000040d133: pop rsp; pop rbx; ret; 
0x000000000040d221: pop rsp; pop rbx; ret; 
0x000000000040d280: pop rsp; pop rbx; ret; 
0x000000000040d2d1: pop rsp; pop rbx; ret; 
0x000000000040d33d: pop rsp; pop rbx; ret; 
0x000000000040d390: pop rsp; pop rbx; ret; 
0x000000000040d3f0: pop rsp; pop rbx; ret; 
0x000000000040d4ac: pop rsp; pop rbx; ret; 
0x000000000040d66a: pop rsp; pop rbx; ret; 
0x000000000040d6a9: pop rsp; pop rbx; ret; 
0x000000000040d708: pop rsp; pop rbx; ret; 
0x000000000040d766: pop rsp; pop rbx; ret; 
0x000000000040d7db: pop rsp; pop rbx; ret; 
0x000000000040d84b: pop rsp; pop rbx; ret; 
0x000000000040d93e: pop rsp; pop rbx; ret; 
0x000000000040da73: pop rsp; pop rbx; ret; 
0x000000000040dac3: pop rsp; pop rbx; ret; 
0x000000000040ddcf: pop rsp; pop rbx; ret; 
0x000000000040de27: pop rsp; pop rbx; ret; 
0x000000000040de91: pop rsp; pop rbx; ret; 
0x000000000040df0c: pop rsp; pop rbx; ret; 
0x000000000040df4f: pop rsp; pop rbx; ret; 
0x000000000040df9f: pop rsp; pop rbx; ret; 
0x000000000040e002: pop rsp; pop rbx; ret; 
0x000000000040e07a: pop rsp; pop rbx; ret; 
0x000000000040e133: pop rsp; pop rbx; ret; 
0x000000000040e176: pop rsp; pop rbx; ret; 
0x000000000040e2c8: pop rsp; pop rbx; ret; 
0x000000000040e6ae: pop rsp; pop rbx; ret; 
0x000000000040e76d: pop rsp; pop rbx; ret; 
0x000000000040eee6: pop rsp; pop rbx; ret; 
0x000000000040f08d: pop rsp; pop rbx; ret; 
0x000000000040f117: pop rsp; pop rbx; ret; 
0x000000000040f1b7: pop rsp; pop rbx; ret; 
0x000000000040f28d: pop rsp; pop rbx; ret; 
0x000000000040f2bd: pop rsp; pop rbx; ret; 
0x000000000040f34d: pop rsp; pop rbx; ret; 
0x000000000040f3df: pop rsp; pop rbx; ret; 
0x000000000040f475: pop rsp; pop rbx; ret; 
0x000000000040f4ad: pop rsp; pop rbx; ret; 
0x000000000040f53d: pop rsp; pop rbx; ret; 
0x000000000040f5cf: pop rsp; pop rbx; ret; 
0x000000000040f663: pop rsp; pop rbx; ret; 
0x000000000040f6f5: pop rsp; pop rbx; ret; 
0x000000000040f766: pop rsp; pop rbx; ret; 
0x000000000040f814: pop rsp; pop rbx; ret; 
0x000000000040f8f0: pop rsp; pop rbx; ret; 
0x000000000040f9db: pop rsp; pop rbx; ret; 
0x000000000040fa6b: pop rsp; pop rbx; ret; 
0x000000000040fafb: pop rsp; pop rbx; ret; 
0x000000000040fb6a: pop rsp; pop rbx; ret; 
0x000000000040fc32: pop rsp; pop rbx; ret; 
0x000000000040fdc3: pop rsp; pop rbx; ret; 
0x000000000040fe9c: pop rsp; pop rbx; ret; 
0x000000000040ff8c: pop rsp; pop rbx; ret; 
0x000000000040fff6: pop rsp; pop rbx; ret; 
0x0000000000410052: pop rsp; pop rbx; ret; 
0x000000000041026c: pop rsp; pop rbx; ret; 
0x00000000004102f7: pop rsp; pop rbx; ret; 
0x00000000004104f3: pop rsp; pop rbx; ret; 
0x00000000004107a3: pop rsp; pop rbx; ret; 
0x0000000000410dac: pop rsp; pop rbx; ret; 
0x0000000000410e2b: pop rsp; pop rbx; ret; 
0x0000000000410f27: pop rsp; pop rbx; ret; 
0x0000000000411019: pop rsp; pop rbx; ret; 
0x000000000041109b: pop rsp; pop rbx; ret; 
0x000000000041111d: pop rsp; pop rbx; ret; 
0x000000000041124a: pop rsp; pop rbx; ret; 
0x0000000000411299: pop rsp; pop rbx; ret; 
0x00000000004112e9: pop rsp; pop rbx; ret; 
0x00000000004113da: pop rsp; pop rbx; ret; 
0x000000000041144a: pop rsp; pop rbx; ret; 
0x0000000000411849: pop rsp; pop rbx; ret; 
0x00000000004118f8: pop rsp; pop rbx; ret; 
0x0000000000411c27: pop rsp; pop rbx; ret; 
0x00000000004121a3: pop rsp; pop rbx; ret; 
0x00000000004124fc: pop rsp; pop rbx; ret; 
0x0000000000412908: pop rsp; pop rbx; ret; 
0x0000000000412cd5: pop rsp; pop rbx; ret; 
0x0000000000412dbf: pop rsp; pop rbx; ret; 
0x0000000000412e74: pop rsp; pop rbx; ret; 
0x0000000000413058: pop rsp; pop rbx; ret; 
0x0000000000413351: pop rsp; pop rbx; ret; 
0x000000000041351b: pop rsp; pop rbx; ret; 
0x0000000000413718: pop rsp; pop rbx; ret; 
0x0000000000413859: pop rsp; pop rbx; ret; 
0x0000000000413935: pop rsp; pop rbx; ret; 
0x0000000000413a05: pop rsp; pop rbx; ret; 
0x0000000000413aa8: pop rsp; pop rbx; ret; 
0x0000000000413b76: pop rsp; pop rbx; ret; 
0x0000000000413d31: pop rsp; pop rbx; ret; 
0x0000000000413ea4: pop rsp; pop rbx; ret; 
0x0000000000413f1b: pop rsp; pop rbx; ret; 
0x00000000004140b2: pop rsp; pop rbx; ret; 
0x000000000041419f: pop rsp; pop rbx; ret; 
0x000000000041428f: pop rsp; pop rbx; ret; 
0x000000000041432c: pop rsp; pop rbx; ret; 
0x0000000000414421: pop rsp; pop rbx; ret; 
0x00000000004144ea: pop rsp; pop rbx; ret; 
0x0000000000414650: pop rsp; pop rbx; ret; 
0x0000000000414750: pop rsp; pop rbx; ret; 
0x00000000004147b0: pop rsp; pop rbx; ret; 
0x0000000000414b35: pop rsp; pop rbx; ret; 
0x0000000000414e10: pop rsp; pop rbx; ret; 
0x0000000000414f10: pop rsp; pop rbx; ret; 
0x0000000000414fa0: pop rsp; pop rbx; ret; 
0x0000000000415081: pop rsp; pop rbx; ret; 
0x00000000004151a0: pop rsp; pop rbx; ret; 
0x000000000041536a: pop rsp; pop rbx; ret; 
0x0000000000415401: pop rsp; pop rbx; ret; 
0x000000000041545b: pop rsp; pop rbx; ret; 
0x000000000041575a: pop rsp; pop rbx; ret; 
0x000000000041583c: pop rsp; pop rbx; ret; 
0x00000000004158bc: pop rsp; pop rbx; ret; 
0x0000000000415d08: pop rsp; pop rbx; ret; 
0x0000000000415e5d: pop rsp; pop rbx; ret; 
0x0000000000415e8d: pop rsp; pop rbx; ret; 
0x0000000000415ebd: pop rsp; pop rbx; ret; 
0x0000000000415f0d: pop rsp; pop rbx; ret; 
0x0000000000415f3d: pop rsp; pop rbx; ret; 
0x0000000000415f6a: pop rsp; pop rbx; ret; 
0x0000000000415f9d: pop rsp; pop rbx; ret; 
0x0000000000415fcd: pop rsp; pop rbx; ret; 
0x0000000000415ffd: pop rsp; pop rbx; ret; 
0x000000000041602d: pop rsp; pop rbx; ret; 
0x000000000041605d: pop rsp; pop rbx; ret; 
0x000000000041608d: pop rsp; pop rbx; ret; 
0x000000000041680e: pop rsp; pop rbx; ret; 
0x0000000000416b47: pop rsp; pop rbx; ret; 
0x0000000000416bd7: pop rsp; pop rbx; ret; 
0x0000000000416ce7: pop rsp; pop rbx; ret; 
0x0000000000416d77: pop rsp; pop rbx; ret; 
0x0000000000416e2d: pop rsp; pop rbx; ret; 
0x0000000000416fb8: pop rsp; pop rbx; ret; 
0x0000000000417017: pop rsp; pop rbx; ret; 
0x00000000004170ac: pop rsp; pop rbx; ret; 
0x0000000000417181: pop rsp; pop rbx; ret; 
0x0000000000417391: pop rsp; pop rbx; ret; 
0x0000000000417656: pop rsp; pop rbx; ret; 
0x00000000004176e0: pop rsp; pop rbx; ret; 
0x0000000000417760: pop rsp; pop rbx; ret; 
0x00000000004177e0: pop rsp; pop rbx; ret; 
0x00000000004178b8: pop rsp; pop rbx; ret; 
0x0000000000417b7b: pop rsp; pop rbx; ret; 
0x0000000000417f4e: pop rsp; pop rbx; ret; 
0x0000000000418336: pop rsp; pop rbx; ret; 
0x0000000000418531: pop rsp; pop rbx; ret; 
0x000000000041897f: pop rsp; pop rbx; ret; 
0x0000000000418c94: pop rsp; pop rbx; ret; 
0x0000000000418fc2: pop rsp; pop rbx; ret; 
0x00000000004194bd: pop rsp; pop rbx; ret; 
0x0000000000419535: pop rsp; pop rbx; ret; 
0x0000000000419610: pop rsp; pop rbx; ret; 
0x0000000000419737: pop rsp; pop rbx; ret; 
0x00000000004197b5: pop rsp; pop rbx; ret; 
0x000000000041986b: pop rsp; pop rbx; ret; 
0x0000000000419cd9: pop rsp; pop rbx; ret; 
0x0000000000419df7: pop rsp; pop rbx; ret; 
0x0000000000419f45: pop rsp; pop rbx; ret; 
0x0000000000419fb0: pop rsp; pop rbx; ret; 
0x000000000041a00b: pop rsp; pop rbx; ret; 
0x000000000041a0df: pop rsp; pop rbx; ret; 
0x000000000041a182: pop rsp; pop rbx; ret; 
0x000000000041a216: pop rsp; pop rbx; ret; 
0x000000000041a25e: pop rsp; pop rbx; ret; 
0x000000000041a2b6: pop rsp; pop rbx; ret; 
0x000000000041a2fe: pop rsp; pop rbx; ret; 
0x000000000041a52a: pop rsp; pop rbx; ret; 
0x000000000041a5de: pop rsp; pop rbx; ret; 
0x000000000041a889: pop rsp; pop rbx; ret; 
0x000000000041ae24: pop rsp; pop rbx; ret; 
0x000000000041b434: pop rsp; pop rbx; ret; 
0x000000000041b484: pop rsp; pop rbx; ret; 
0x000000000041b4c4: pop rsp; pop rbx; ret; 
0x000000000041b99c: pop rsp; pop rbx; ret; 
0x000000000041ba57: pop rsp; pop rbx; ret; 
0x000000000041bb1a: pop rsp; pop rbx; ret; 
0x000000000041bba6: pop rsp; pop rbx; ret; 
0x000000000041bbea: pop rsp; pop rbx; ret; 
0x000000000041bdc7: pop rsp; pop rbx; ret; 
0x000000000041be57: pop rsp; pop rbx; ret; 
0x000000000041c1b2: pop rsp; pop rbx; ret; 
0x000000000041c26c: pop rsp; pop rbx; ret; 
0x000000000041c403: pop rsp; pop rbx; ret; 
0x000000000041c4bc: pop rsp; pop rbx; ret; 
0x000000000041c680: pop rsp; pop rbx; ret; 
0x000000000041c76a: pop rsp; pop rbx; ret; 
0x000000000041c7ba: pop rsp; pop rbx; ret; 
0x000000000041c83d: pop rsp; pop rbx; ret; 
0x000000000041c8bd: pop rsp; pop rbx; ret; 
0x000000000041c93e: pop rsp; pop rbx; ret; 
0x000000000041caec: pop rsp; pop rbx; ret; 
0x000000000041ce60: pop rsp; pop rbx; ret; 
0x000000000041d01b: pop rsp; pop rbx; ret; 
0x000000000041d09d: pop rsp; pop rbx; ret; 
0x000000000041d11d: pop rsp; pop rbx; ret; 
0x000000000041d19e: pop rsp; pop rbx; ret; 
0x000000000041d2b6: pop rsp; pop rbx; ret; 
0x000000000041d433: pop rsp; pop rbx; ret; 
0x000000000041d59e: pop rsp; pop rbx; ret; 
0x000000000041d72f: pop rsp; pop rbx; ret; 
0x000000000041d92c: pop rsp; pop rbx; ret; 
0x000000000041da33: pop rsp; pop rbx; ret; 
0x000000000041dac8: pop rsp; pop rbx; ret; 
0x000000000041dca9: pop rsp; pop rbx; ret; 
0x000000000041ddbd: pop rsp; pop rbx; ret; 
0x000000000041e15b: pop rsp; pop rbx; ret; 
0x000000000041e324: pop rsp; pop rbx; ret; 
0x000000000041e4c8: pop rsp; pop rbx; ret; 
0x000000000041e542: pop rsp; pop rbx; ret; 
0x000000000041e5c2: pop rsp; pop rbx; ret; 
0x000000000041e660: pop rsp; pop rbx; ret; 
0x000000000041e700: pop rsp; pop rbx; ret; 
0x000000000041e9ce: pop rsp; pop rbx; ret; 
0x000000000041ea5c: pop rsp; pop rbx; ret; 
0x000000000041eac7: pop rsp; pop rbx; ret; 
0x000000000041eb41: pop rsp; pop rbx; ret; 
0x000000000041ec43: pop rsp; pop rbx; ret; 
0x000000000041ed57: pop rsp; pop rbx; ret; 
0x000000000041eee1: pop rsp; pop rbx; ret; 
0x000000000041f006: pop rsp; pop rbx; ret; 
0x000000000041f050: pop rsp; pop rbx; ret; 
0x000000000041f16e: pop rsp; pop rbx; ret; 
0x000000000041f3a3: pop rsp; pop rbx; ret; 
0x000000000041f5fe: pop rsp; pop rbx; ret; 
0x000000000041f723: pop rsp; pop rbx; ret; 
0x000000000041f816: pop rsp; pop rbx; ret; 
0x000000000041f994: pop rsp; pop rbx; ret; 
0x000000000041fb50: pop rsp; pop rbx; ret; 
0x000000000041fc25: pop rsp; pop rbx; ret; 
0x000000000041fc80: pop rsp; pop rbx; ret; 
0x000000000041fce1: pop rsp; pop rbx; ret; 
0x000000000041fe30: pop rsp; pop rbx; ret; 
0x000000000041ff60: pop rsp; pop rbx; ret; 
0x0000000000420054: pop rsp; pop rbx; ret; 
0x00000000004200ee: pop rsp; pop rbx; ret; 
0x00000000004201be: pop rsp; pop rbx; ret; 
0x0000000000420259: pop rsp; pop rbx; ret; 
0x000000000042030a: pop rsp; pop rbx; ret; 
0x0000000000420399: pop rsp; pop rbx; ret; 
0x000000000042044c: pop rsp; pop rbx; ret; 
0x0000000000420503: pop rsp; pop rbx; ret; 
0x00000000004205a2: pop rsp; pop rbx; ret; 
0x0000000000420637: pop rsp; pop rbx; ret; 
0x00000000004206dd: pop rsp; pop rbx; ret; 
0x0000000000420776: pop rsp; pop rbx; ret; 
0x000000000042085d: pop rsp; pop rbx; ret; 
0x0000000000420908: pop rsp; pop rbx; ret; 
0x0000000000420974: pop rsp; pop rbx; ret; 
0x00000000004209d7: pop rsp; pop rbx; ret; 
0x0000000000420a29: pop rsp; pop rbx; ret; 
0x0000000000420aa7: pop rsp; pop rbx; ret; 
0x0000000000420b43: pop rsp; pop rbx; ret; 
0x0000000000420b99: pop rsp; pop rbx; ret; 
0x0000000000420c1d: pop rsp; pop rbx; ret; 
0x0000000000420c9d: pop rsp; pop rbx; ret; 
0x0000000000420d5d: pop rsp; pop rbx; ret; 
0x0000000000420dca: pop rsp; pop rbx; ret; 
0x0000000000420e1a: pop rsp; pop rbx; ret; 
0x0000000000420e9d: pop rsp; pop rbx; ret; 
0x0000000000420f1d: pop rsp; pop rbx; ret; 
0x0000000000420f9e: pop rsp; pop rbx; ret; 
0x000000000042109d: pop rsp; pop rbx; ret; 
0x0000000000421192: pop rsp; pop rbx; ret; 
0x0000000000421333: pop rsp; pop rbx; ret; 
0x0000000000421583: pop rsp; pop rbx; ret; 
0x000000000042177e: pop rsp; pop rbx; ret; 
0x0000000000421839: pop rsp; pop rbx; ret; 
0x00000000004218e6: pop rsp; pop rbx; ret; 
0x000000000042198d: pop rsp; pop rbx; ret; 
0x0000000000421c80: pop rsp; pop rbx; ret; 
0x0000000000421e28: pop rsp; pop rbx; ret; 
0x0000000000421ead: pop rsp; pop rbx; ret; 
0x0000000000421f2d: pop rsp; pop rbx; ret; 
0x0000000000421fae: pop rsp; pop rbx; ret; 
0x0000000000422208: pop rsp; pop rbx; ret; 
0x0000000000422336: pop rsp; pop rbx; ret; 
0x000000000042239b: pop rsp; pop rbx; ret; 
0x0000000000422416: pop rsp; pop rbx; ret; 
0x000000000042247b: pop rsp; pop rbx; ret; 
0x0000000000422549: pop rsp; pop rbx; ret; 
0x0000000000422655: pop rsp; pop rbx; ret; 
0x0000000000422745: pop rsp; pop rbx; ret; 
0x0000000000422e17: pop rsp; pop rbx; ret; 
0x00000000004230dd: pop rsp; pop rbx; ret; 
0x00000000004233b1: pop rsp; pop rbx; ret; 
0x00000000004235b7: pop rsp; pop rbx; ret; 
0x0000000000423c5d: pop rsp; pop rbx; ret; 
0x0000000000423e12: pop rsp; pop rbx; ret; 
0x0000000000423f6b: pop rsp; pop rbx; ret; 
0x0000000000424163: pop rsp; pop rbx; ret; 
0x00000000004241b3: pop rsp; pop rbx; ret; 
0x000000000042445f: pop rsp; pop rbx; ret; 
0x0000000000424934: pop rsp; pop rbx; ret; 
0x0000000000424b39: pop rsp; pop rbx; ret; 
0x0000000000424d0b: pop rsp; pop rbx; ret; 
0x0000000000424dff: pop rsp; pop rbx; ret; 
0x0000000000424f81: pop rsp; pop rbx; ret; 
0x00000000004251d1: pop rsp; pop rbx; ret; 
0x00000000004253cd: pop rsp; pop rbx; ret; 
0x0000000000425738: pop rsp; pop rbx; ret; 
0x0000000000425995: pop rsp; pop rbx; ret; 
0x0000000000425ab5: pop rsp; pop rbx; ret; 
0x00000000004261d1: pop rsp; pop rbx; ret; 
0x0000000000426724: pop rsp; pop rbx; ret; 
0x0000000000426899: pop rsp; pop rbx; ret; 
0x0000000000426931: pop rsp; pop rbx; ret; 
0x0000000000426b28: pop rsp; pop rbx; ret; 
0x00000000004270d3: pop rsp; pop rbx; ret; 
0x0000000000427736: pop rsp; pop rbx; ret; 
0x0000000000427795: pop rsp; pop rbx; ret; 
0x000000000042787f: pop rsp; pop rbx; ret; 
0x0000000000427975: pop rsp; pop rbx; ret; 
0x00000000004279c1: pop rsp; pop rbx; ret; 
0x0000000000427afc: pop rsp; pop rbx; ret; 
0x0000000000427b55: pop rsp; pop rbx; ret; 
0x0000000000427b99: pop rsp; pop rbx; ret; 
0x0000000000427c4b: pop rsp; pop rbx; ret; 
0x0000000000427de5: pop rsp; pop rbx; ret; 
0x0000000000427f9d: pop rsp; pop rbx; ret; 
0x000000000042803a: pop rsp; pop rbx; ret; 
0x0000000000428105: pop rsp; pop rbx; ret; 
0x0000000000428223: pop rsp; pop rbx; ret; 
0x00000000004282bd: pop rsp; pop rbx; ret; 
0x00000000004283c6: pop rsp; pop rbx; ret; 
0x000000000042847b: pop rsp; pop rbx; ret; 
0x0000000000428dc1: pop rsp; pop rbx; ret; 
0x0000000000428e4f: pop rsp; pop rbx; ret; 
0x00000000004290ef: pop rsp; pop rbx; ret; 
0x0000000000429472: pop rsp; pop rbx; ret; 
0x00000000004297a4: pop rsp; pop rbx; ret; 
0x0000000000429809: pop rsp; pop rbx; ret; 
0x00000000004299bf: pop rsp; pop rbx; ret; 
0x0000000000429ca0: pop rsp; pop rbx; ret; 
0x0000000000429d30: pop rsp; pop rbx; ret; 
0x0000000000429dc0: pop rsp; pop rbx; ret; 
0x000000000042a032: pop rsp; pop rbx; ret; 
0x000000000042a1dc: pop rsp; pop rbx; ret; 
0x000000000042a267: pop rsp; pop rbx; ret; 
0x000000000042a31d: pop rsp; pop rbx; ret; 
0x000000000042a411: pop rsp; pop rbx; ret; 
0x000000000042a49a: pop rsp; pop rbx; ret; 
0x000000000042a587: pop rsp; pop rbx; ret; 
0x000000000042a64f: pop rsp; pop rbx; ret; 
0x000000000042aff6: pop rsp; pop rbx; ret; 
0x000000000042b07f: pop rsp; pop rbx; ret; 
0x000000000042b31d: pop rsp; pop rbx; ret; 
0x000000000042b71a: pop rsp; pop rbx; ret; 
0x000000000042bb97: pop rsp; pop rbx; ret; 
0x000000000042bbf6: pop rsp; pop rbx; ret; 
0x000000000042bd58: pop rsp; pop rbx; ret; 
0x000000000042be3d: pop rsp; pop rbx; ret; 
0x000000000042c0a0: pop rsp; pop rbx; ret; 
0x000000000042c130: pop rsp; pop rbx; ret; 
0x000000000042c1c0: pop rsp; pop rbx; ret; 
0x000000000042c432: pop rsp; pop rbx; ret; 
0x000000000042c4bf: pop rsp; pop rbx; ret; 
0x000000000042c5cf: pop rsp; pop rbx; ret; 
0x000000000042c669: pop rsp; pop rbx; ret; 
0x000000000042c76f: pop rsp; pop rbx; ret; 
0x000000000042c7ff: pop rsp; pop rbx; ret; 
0x000000000042c90f: pop rsp; pop rbx; ret; 
0x000000000042ca44: pop rsp; pop rbx; ret; 
0x000000000042cb4f: pop rsp; pop rbx; ret; 
0x000000000042cc79: pop rsp; pop rbx; ret; 
0x000000000042cd09: pop rsp; pop rbx; ret; 
0x000000000042ce34: pop rsp; pop rbx; ret; 
0x000000000042cf16: pop rsp; pop rbx; ret; 
0x000000000042cff6: pop rsp; pop rbx; ret; 
0x000000000042d0cf: pop rsp; pop rbx; ret; 
0x000000000042d2bb: pop rsp; pop rbx; ret; 
0x000000000042d2fa: pop rsp; pop rbx; ret; 
0x000000000042d39b: pop rsp; pop rbx; ret; 
0x000000000042d44e: pop rsp; pop rbx; ret; 
0x000000000042d50e: pop rsp; pop rbx; ret; 
0x000000000042d5af: pop rsp; pop rbx; ret; 
0x000000000042d5fc: pop rsp; pop rbx; ret; 
0x000000000042d6f6: pop rsp; pop rbx; ret; 
0x000000000042d7a0: pop rsp; pop rbx; ret; 
0x000000000042da4e: pop rsp; pop rbx; ret; 
0x000000000042daec: pop rsp; pop rbx; ret; 
0x000000000042db17: pop rsp; pop rbx; ret; 
0x000000000042db47: pop rsp; pop rbx; ret; 
0x000000000042dbdc: pop rsp; pop rbx; ret; 
0x000000000042e256: pop rsp; pop rbx; ret; 
0x000000000042e30d: pop rsp; pop rbx; ret; 
0x000000000042e3c7: pop rsp; pop rbx; ret; 
0x000000000042e48a: pop rsp; pop rbx; ret; 
0x000000000042e557: pop rsp; pop rbx; ret; 
0x000000000042e777: pop rsp; pop rbx; ret; 
0x000000000042ef55: pop rsp; pop rbx; ret; 
0x000000000042f0cc: pop rsp; pop rbx; ret; 
0x000000000042f1dd: pop rsp; pop rbx; ret; 
0x000000000042f26b: pop rsp; pop rbx; ret; 
0x000000000042f29d: pop rsp; pop rbx; ret; 
0x000000000042f2cc: pop rsp; pop rbx; ret; 
0x000000000042f2fb: pop rsp; pop rbx; ret; 
0x000000000042f32a: pop rsp; pop rbx; ret; 
0x000000000042f3d5: pop rsp; pop rbx; ret; 
0x000000000042f484: pop rsp; pop rbx; ret; 
0x000000000042f61c: pop rsp; pop rbx; ret; 
0x000000000042fc5e: pop rsp; pop rbx; ret; 
0x000000000042fd07: pop rsp; pop rbx; ret; 
0x000000000042fd46: pop rsp; pop rbx; ret; 
0x000000000042fd7b: pop rsp; pop rbx; ret; 
0x000000000042fdaa: pop rsp; pop rbx; ret; 
0x000000000042ff48: pop rsp; pop rbx; ret; 
0x0000000000430191: pop rsp; pop rbx; ret; 
0x0000000000430271: pop rsp; pop rbx; ret; 
0x00000000004302ed: pop rsp; pop rbx; ret; 
0x000000000043031f: pop rsp; pop rbx; ret; 
0x0000000000430424: pop rsp; pop rbx; ret; 
0x0000000000430adb: pop rsp; pop rbx; ret; 
0x0000000000430f88: pop rsp; pop rbx; ret; 
0x000000000043108c: pop rsp; pop rbx; ret; 
0x00000000004310bd: pop rsp; pop rbx; ret; 
0x00000000004311cc: pop rsp; pop rbx; ret; 
0x0000000000431241: pop rsp; pop rbx; ret; 
0x000000000043173c: pop rsp; pop rbx; ret; 
0x000000000043176c: pop rsp; pop rbx; ret; 
0x00000000004317cb: pop rsp; pop rbx; ret; 
0x00000000004317fd: pop rsp; pop rbx; ret; 
0x0000000000431b7c: pop rsp; pop rbx; ret; 
0x0000000000431bac: pop rsp; pop rbx; ret; 
0x0000000000431c0b: pop rsp; pop rbx; ret; 
0x0000000000431c3d: pop rsp; pop rbx; ret; 
0x000000000043202c: pop rsp; pop rbx; ret; 
0x000000000043205c: pop rsp; pop rbx; ret; 
0x00000000004320bb: pop rsp; pop rbx; ret; 
0x00000000004320ed: pop rsp; pop rbx; ret; 
0x00000000004338b2: pop rsp; pop rbx; ret; 
0x0000000000433a3e: pop rsp; pop rbx; ret; 
0x0000000000433aa7: pop rsp; pop rbx; ret; 
0x0000000000433b07: pop rsp; pop rbx; ret; 
0x0000000000433b8b: pop rsp; pop rbx; ret; 
0x0000000000433c0c: pop rsp; pop rbx; ret; 
0x0000000000433c47: pop rsp; pop rbx; ret; 
0x0000000000433d77: pop rsp; pop rbx; ret; 
0x0000000000433ddc: pop rsp; pop rbx; ret; 
0x0000000000433e3c: pop rsp; pop rbx; ret; 
0x0000000000433ead: pop rsp; pop rbx; ret; 
0x0000000000433f1d: pop rsp; pop rbx; ret; 
0x000000000043479e: pop rsp; pop rbx; ret; 
0x0000000000434863: pop rsp; pop rbx; ret; 
0x0000000000434a08: pop rsp; pop rbx; ret; 
0x0000000000434d72: pop rsp; pop rbx; ret; 
0x0000000000434e93: pop rsp; pop rbx; ret; 
0x0000000000438ce6: pop rsp; pop rbx; ret; 
0x00000000004399e5: pop rsp; pop rbx; ret; 
0x0000000000439a23: pop rsp; pop rbx; ret; 
0x0000000000439c78: pop rsp; pop rbx; ret; 
0x000000000043a0c0: pop rsp; pop rbx; ret; 
0x000000000043a230: pop rsp; pop rbx; ret; 
0x000000000043b0f2: pop rsp; pop rbx; ret; 
0x000000000043b813: pop rsp; pop rbx; ret; 
0x000000000043baad: pop rsp; pop rbx; ret; 
0x000000000043bda0: pop rsp; pop rbx; ret; 
0x000000000043c413: pop rsp; pop rbx; ret; 
0x000000000043cf2f: pop rsp; pop rbx; ret; 
0x000000000043cf84: pop rsp; pop rbx; ret; 
0x000000000043cfe7: pop rsp; pop rbx; ret; 
0x000000000043d164: pop rsp; pop rbx; ret; 
0x000000000043d623: pop rsp; pop rbx; ret; 
0x000000000043d7d4: pop rsp; pop rbx; ret; 
0x000000000043d893: pop rsp; pop rbx; ret; 
0x000000000043d92d: pop rsp; pop rbx; ret; 
0x000000000043d9e7: pop rsp; pop rbx; ret; 
0x000000000043da75: pop rsp; pop rbx; ret; 
0x000000000043db94: pop rsp; pop rbx; ret; 
0x000000000043dc57: pop rsp; pop rbx; ret; 
0x000000000043dda3: pop rsp; pop rbx; ret; 
0x000000000043de37: pop rsp; pop rbx; ret; 
0x000000000043def8: pop rsp; pop rbx; ret; 
0x000000000043dfb3: pop rsp; pop rbx; ret; 
0x000000000043e1c4: pop rsp; pop rbx; ret; 
0x000000000043e6a9: pop rsp; pop rbx; ret; 
0x000000000043e771: pop rsp; pop rbx; ret; 
0x000000000043e83d: pop rsp; pop rbx; ret; 
0x000000000043e8ce: pop rsp; pop rbx; ret; 
0x000000000043e9c2: pop rsp; pop rbx; ret; 
0x000000000043ea91: pop rsp; pop rbx; ret; 
0x000000000043eb2c: pop rsp; pop rbx; ret; 
0x000000000043ebbf: pop rsp; pop rbx; ret; 
0x000000000043ec91: pop rsp; pop rbx; ret; 
0x000000000043ed2e: pop rsp; pop rbx; ret; 
0x000000000043edfd: pop rsp; pop rbx; ret; 
0x000000000043eec2: pop rsp; pop rbx; ret; 
0x000000000043ef5e: pop rsp; pop rbx; ret; 
0x000000000043efbd: pop rsp; pop rbx; ret; 
0x000000000043f0dd: pop rsp; pop rbx; ret; 
0x000000000043f19d: pop rsp; pop rbx; ret; 
0x000000000043fb42: pop rsp; pop rbx; ret; 
0x000000000044045f: pop rsp; pop rbx; ret; 
0x00000000004404b6: pop rsp; pop rbx; ret; 
0x0000000000440517: pop rsp; pop rbx; ret; 
0x0000000000440697: pop rsp; pop rbx; ret; 
0x0000000000440b85: pop rsp; pop rbx; ret; 
0x0000000000440d54: pop rsp; pop rbx; ret; 
0x0000000000440e35: pop rsp; pop rbx; ret; 
0x0000000000440ef8: pop rsp; pop rbx; ret; 
0x0000000000440fd9: pop rsp; pop rbx; ret; 
0x0000000000441064: pop rsp; pop rbx; ret; 
0x00000000004411c6: pop rsp; pop rbx; ret; 
0x00000000004412a9: pop rsp; pop rbx; ret; 
0x0000000000441435: pop rsp; pop rbx; ret; 
0x00000000004414e9: pop rsp; pop rbx; ret; 
0x00000000004415ca: pop rsp; pop rbx; ret; 
0x00000000004416a5: pop rsp; pop rbx; ret; 
0x00000000004418d6: pop rsp; pop rbx; ret; 
0x0000000000441982: pop rsp; pop rbx; ret; 
0x0000000000441c3d: pop rsp; pop rbx; ret; 
0x0000000000441f3c: pop rsp; pop rbx; ret; 
0x0000000000442023: pop rsp; pop rbx; ret; 
0x000000000044210f: pop rsp; pop rbx; ret; 
0x00000000004421d0: pop rsp; pop rbx; ret; 
0x00000000004422e4: pop rsp; pop rbx; ret; 
0x00000000004423d3: pop rsp; pop rbx; ret; 
0x000000000044248e: pop rsp; pop rbx; ret; 
0x000000000044252e: pop rsp; pop rbx; ret; 
0x0000000000442623: pop rsp; pop rbx; ret; 
0x00000000004426e0: pop rsp; pop rbx; ret; 
0x00000000004427cf: pop rsp; pop rbx; ret; 
0x00000000004428c4: pop rsp; pop rbx; ret; 
0x0000000000442980: pop rsp; pop rbx; ret; 
0x00000000004429dd: pop rsp; pop rbx; ret; 
0x0000000000442b1f: pop rsp; pop rbx; ret; 
0x0000000000442c0f: pop rsp; pop rbx; ret; 
0x00000000004435c9: pop rsp; pop rbx; ret; 
0x00000000004439b4: pop rsp; pop rbx; ret; 
0x0000000000443d61: pop rsp; pop rbx; ret; 
0x0000000000443da8: pop rsp; pop rbx; ret; 
0x0000000000443e45: pop rsp; pop rbx; ret; 
0x0000000000444126: pop rsp; pop rbx; ret; 
0x00000000004441fb: pop rsp; pop rbx; ret; 
0x000000000044427b: pop rsp; pop rbx; ret; 
0x00000000004442c5: pop rsp; pop rbx; ret; 
0x000000000044431f: pop rsp; pop rbx; ret; 
0x000000000044490c: pop rsp; pop rbx; ret; 
0x00000000004449b0: pop rsp; pop rbx; ret; 
0x0000000000445631: pop rsp; pop rbx; ret; 
0x000000000044568d: pop rsp; pop rbx; ret; 
0x0000000000445c5a: pop rsp; pop rbx; ret; 
0x0000000000445eb9: pop rsp; pop rbx; ret; 
0x0000000000445f65: pop rsp; pop rbx; ret; 
0x0000000000445fb5: pop rsp; pop rbx; ret; 
0x0000000000446008: pop rsp; pop rbx; ret; 
0x000000000044605c: pop rsp; pop rbx; ret; 
0x00000000004461b1: pop rsp; pop rbx; ret; 
0x0000000000446fea: pop rsp; pop rbx; ret; 
0x00000000004470ca: pop rsp; pop rbx; ret; 
0x00000000004471fd: pop rsp; pop rbx; ret; 
0x00000000004472a0: pop rsp; pop rbx; ret; 
0x000000000044739d: pop rsp; pop rbx; ret; 
0x0000000000447489: pop rsp; pop rbx; ret; 
0x0000000000447518: pop rsp; pop rbx; ret; 
0x00000000004476ab: pop rsp; pop rbx; ret; 
0x0000000000447a07: pop rsp; pop rbx; ret; 
0x0000000000447a59: pop rsp; pop rbx; ret; 
0x0000000000447ad4: pop rsp; pop rbx; ret; 
0x0000000000447b48: pop rsp; pop rbx; ret; 
0x0000000000447ba0: pop rsp; pop rbx; ret; 
0x0000000000447c1d: pop rsp; pop rbx; ret; 
0x0000000000447c55: pop rsp; pop rbx; ret; 
0x0000000000447d0f: pop rsp; pop rbx; ret; 
0x0000000000447df8: pop rsp; pop rbx; ret; 
0x0000000000447e2a: pop rsp; pop rbx; ret; 
0x0000000000447e65: pop rsp; pop rbx; ret; 
0x0000000000447f0c: pop rsp; pop rbx; ret; 
0x0000000000447f8c: pop rsp; pop rbx; ret; 
0x0000000000448029: pop rsp; pop rbx; ret; 
0x00000000004480a9: pop rsp; pop rbx; ret; 
0x000000000044834b: pop rsp; pop rbx; ret; 
0x00000000004483f4: pop rsp; pop rbx; ret; 
0x00000000004484a9: pop rsp; pop rbx; ret; 
0x000000000044937c: pop rsp; pop rbx; ret; 
0x000000000044a024: pop rsp; pop rbx; ret; 
0x000000000044a1c3: pop rsp; pop rbx; ret; 
0x000000000044b11c: pop rsp; pop rbx; ret; 
0x000000000044b990: pop rsp; pop rbx; ret; 
0x000000000044ba0f: pop rsp; pop rbx; ret; 
0x000000000044ba6b: pop rsp; pop rbx; ret; 
0x000000000044baba: pop rsp; pop rbx; ret; 
0x000000000044bbf4: pop rsp; pop rbx; ret; 
0x000000000044bc42: pop rsp; pop rbx; ret; 
0x000000000044bca1: pop rsp; pop rbx; ret; 
0x000000000044bcf7: pop rsp; pop rbx; ret; 
0x000000000044bd47: pop rsp; pop rbx; ret; 
0x000000000044bde8: pop rsp; pop rbx; ret; 
0x000000000044be6c: pop rsp; pop rbx; ret; 
0x000000000044bea5: pop rsp; pop rbx; ret; 
0x000000000044bf57: pop rsp; pop rbx; ret; 
0x000000000044bfec: pop rsp; pop rbx; ret; 
0x000000000044c017: pop rsp; pop rbx; ret; 
0x000000000044c078: pop rsp; pop rbx; ret; 
0x000000000044c0d4: pop rsp; pop rbx; ret; 
0x000000000044c50c: pop rsp; pop rbx; ret; 
0x000000000044c670: pop rsp; pop rbx; ret; 
0x000000000044c702: pop rsp; pop rbx; ret; 
0x000000000044c7c2: pop rsp; pop rbx; ret; 
0x000000000044cf39: pop rsp; pop rbx; ret; 
0x000000000044d09b: pop rsp; pop rbx; ret; 
0x000000000044d0c7: pop rsp; pop rbx; ret; 
0x000000000044d18b: pop rsp; pop rbx; ret; 
0x000000000044d282: pop rsp; pop rbx; ret; 
0x000000000044d5b1: pop rsp; pop rbx; ret; 
0x000000000044d95d: pop rsp; pop rbx; ret; 
0x000000000044dcb1: pop rsp; pop rbx; ret; 
0x000000000044dfd9: pop rsp; pop rbx; ret; 
0x000000000044e1b2: pop rsp; pop rbx; ret; 
0x000000000044e278: pop rsp; pop rbx; ret; 
0x000000000044e322: pop rsp; pop rbx; ret; 
0x000000000044e3fa: pop rsp; pop rbx; ret; 
0x000000000044e4a2: pop rsp; pop rbx; ret; 
0x000000000044e57d: pop rsp; pop rbx; ret; 
0x000000000044e61c: pop rsp; pop rbx; ret; 
0x000000000044eba9: pop rsp; pop rbx; ret; 
0x000000000044ec1c: pop rsp; pop rbx; ret; 
0x000000000044f1dc: pop rsp; pop rbx; ret; 
0x000000000044f44d: pop rsp; pop rbx; ret; 
0x000000000044f62c: pop rsp; pop rbx; ret; 
0x000000000044f718: pop rsp; pop rbx; ret; 
0x000000000044f7fc: pop rsp; pop rbx; ret; 
0x000000000044fa01: pop rsp; pop rbx; ret; 
0x000000000044fccb: pop rsp; pop rbx; ret; 
0x0000000000450202: pop rsp; pop rbx; ret; 
0x000000000045040a: pop rsp; pop rbx; ret; 
0x000000000045045d: pop rsp; pop rbx; ret; 
0x00000000004504ff: pop rsp; pop rbx; ret; 
0x00000000004507c5: pop rsp; pop rbx; ret; 
0x00000000004509cd: pop rsp; pop rbx; ret; 
0x0000000000450b28: pop rsp; pop rbx; ret; 
0x0000000000450bbb: pop rsp; pop rbx; ret; 
0x0000000000450c7f: pop rsp; pop rbx; ret; 
0x0000000000450d69: pop rsp; pop rbx; ret; 
0x0000000000450e09: pop rsp; pop rbx; ret; 
0x000000000045124c: pop rsp; pop rbx; ret; 
0x000000000045227e: pop rsp; pop rbx; ret; 
0x000000000045288b: pop rsp; pop rbx; ret; 
0x0000000000452b2f: pop rsp; pop rbx; ret; 
0x0000000000452de4: pop rsp; pop rbx; ret; 
0x00000000004530fc: pop rsp; pop rbx; ret; 
0x0000000000453264: pop rsp; pop rbx; ret; 
0x00000000004532aa: pop rsp; pop rbx; ret; 
0x000000000045331c: pop rsp; pop rbx; ret; 
0x000000000045335a: pop rsp; pop rbx; ret; 
0x0000000000453466: pop rsp; pop rbx; ret; 
0x0000000000453bb3: pop rsp; pop rbx; ret; 
0x0000000000453c9a: pop rsp; pop rbx; ret; 
0x0000000000453e46: pop rsp; pop rbx; ret; 
0x0000000000453eb0: pop rsp; pop rbx; ret; 
0x0000000000453f05: pop rsp; pop rbx; ret; 
0x0000000000453f55: pop rsp; pop rbx; ret; 
0x0000000000453fc0: pop rsp; pop rbx; ret; 
0x0000000000454006: pop rsp; pop rbx; ret; 
0x0000000000454259: pop rsp; pop rbx; ret; 
0x000000000045458c: pop rsp; pop rbx; ret; 
0x0000000000454684: pop rsp; pop rbx; ret; 
0x0000000000454a11: pop rsp; pop rbx; ret; 
0x0000000000454aa5: pop rsp; pop rbx; ret; 
0x0000000000454cac: pop rsp; pop rbx; ret; 
0x0000000000454f15: pop rsp; pop rbx; ret; 
0x00000000004550d2: pop rsp; pop rbx; ret; 
0x0000000000455320: pop rsp; pop rbx; ret; 
0x0000000000455465: pop rsp; pop rbx; ret; 
0x00000000004562fb: pop rsp; pop rbx; ret; 
0x00000000004564b6: pop rsp; pop rbx; ret; 
0x00000000004565b1: pop rsp; pop rbx; ret; 
0x0000000000456ac9: pop rsp; pop rbx; ret; 
0x0000000000456bdb: pop rsp; pop rbx; ret; 
0x0000000000456c3d: pop rsp; pop rbx; ret; 
0x0000000000456ce1: pop rsp; pop rbx; ret; 
0x00000000004570e5: pop rsp; pop rbx; ret; 
0x000000000045717d: pop rsp; pop rbx; ret; 
0x00000000004571e7: pop rsp; pop rbx; ret; 
0x000000000045761e: pop rsp; pop rbx; ret; 
0x0000000000457674: pop rsp; pop rbx; ret; 
0x0000000000457905: pop rsp; pop rbx; ret; 
0x0000000000457997: pop rsp; pop rbx; ret; 
0x0000000000457a27: pop rsp; pop rbx; ret; 
0x0000000000457ac1: pop rsp; pop rbx; ret; 
0x0000000000457b57: pop rsp; pop rbx; ret; 
0x0000000000457c61: pop rsp; pop rbx; ret; 
0x0000000000457d01: pop rsp; pop rbx; ret; 
0x0000000000457e21: pop rsp; pop rbx; ret; 
0x0000000000457eb7: pop rsp; pop rbx; ret; 
0x0000000000458075: pop rsp; pop rbx; ret; 
0x0000000000458107: pop rsp; pop rbx; ret; 
0x0000000000458197: pop rsp; pop rbx; ret; 
0x0000000000458245: pop rsp; pop rbx; ret; 
0x00000000004582d7: pop rsp; pop rbx; ret; 
0x000000000045845c: pop rsp; pop rbx; ret; 
0x00000000004584ff: pop rsp; pop rbx; ret; 
0x0000000000458687: pop rsp; pop rbx; ret; 
0x0000000000458736: pop rsp; pop rbx; ret; 
0x0000000000458886: pop rsp; pop rbx; ret; 
0x00000000004589d8: pop rsp; pop rbx; ret; 
0x0000000000458b09: pop rsp; pop rbx; ret; 
0x0000000000458c15: pop rsp; pop rbx; ret; 
0x0000000000458db6: pop rsp; pop rbx; ret; 
0x0000000000459255: pop rsp; pop rbx; ret; 
0x00000000004594a1: pop rsp; pop rbx; ret; 
0x0000000000459962: pop rsp; pop rbx; ret; 
0x0000000000459a06: pop rsp; pop rbx; ret; 
0x0000000000459ca7: pop rsp; pop rbx; ret; 
0x0000000000459ea6: pop rsp; pop rbx; ret; 
0x0000000000459f52: pop rsp; pop rbx; ret; 
0x0000000000459f9d: pop rsp; pop rbx; ret; 
0x000000000045a047: pop rsp; pop rbx; ret; 
0x000000000045a08d: pop rsp; pop rbx; ret; 
0x000000000045a18c: pop rsp; pop rbx; ret; 
0x000000000045a21e: pop rsp; pop rbx; ret; 
0x000000000045a526: pop rsp; pop rbx; ret; 
0x000000000045a7a7: pop rsp; pop rbx; ret; 
0x000000000045a83a: pop rsp; pop rbx; ret; 
0x000000000045a8ca: pop rsp; pop rbx; ret; 
0x000000000045a95a: pop rsp; pop rbx; ret; 
0x000000000045a9ea: pop rsp; pop rbx; ret; 
0x000000000045b5cb: pop rsp; pop rbx; ret; 
0x000000000045b648: pop rsp; pop rbx; ret; 
0x000000000045b741: pop rsp; pop rbx; ret; 
0x000000000045b838: pop rsp; pop rbx; ret; 
0x000000000045b8ec: pop rsp; pop rbx; ret; 
0x000000000045bb3d: pop rsp; pop rbx; ret; 
0x000000000045bde4: pop rsp; pop rbx; ret; 
0x000000000045c035: pop rsp; pop rbx; ret; 
0x000000000045c179: pop rsp; pop rbx; ret; 
0x000000000045c1cf: pop rsp; pop rbx; ret; 
0x000000000045c209: pop rsp; pop rbx; ret; 
0x000000000045c249: pop rsp; pop rbx; ret; 
0x000000000045c32f: pop rsp; pop rbx; ret; 
0x000000000045c45d: pop rsp; pop rbx; ret; 
0x000000000045c562: pop rsp; pop rbx; ret; 
0x000000000045c6c2: pop rsp; pop rbx; ret; 
0x000000000045c749: pop rsp; pop rbx; ret; 
0x000000000045c7c7: pop rsp; pop rbx; ret; 
0x000000000045cc8f: pop rsp; pop rbx; ret; 
0x000000000045cdab: pop rsp; pop rbx; ret; 
0x000000000045d412: pop rsp; pop rbx; ret; 
0x000000000043262f: popfq; and al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004329bf: popfq; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041035a: popfq; call 0x4901035e; mov esp, ebp; pop rbp; ret; 
0x000000000040aa20: popfq; call 0x4d00aa24; mov esp, dword ptr [rbp - 0x110]; mov rsp, rbp; pop rbp; ret; 
0x000000000042845f: popfq; mov eax, 0x388b0005; call rdx; 
0x00000000004190b7: popfq; or al, byte ptr [rip + 0x648d4800]; and al, 8; ret; 
0x00000000004191c7: popfq; or dword ptr [rip + 0x648d4800], eax; and al, 8; ret; 
0x0000000000423c6f: popfq; out dx, al; add eax, 0x48028900; lea esp, [rsp + 8]; ret; 
0x00000000004014af: popfq; push -0x6717ffff; ret; 
0x000000000043b190: popfq; push 0x48fffffa; mov esp, ebp; pop rbp; ret; 
0x0000000000452c62: popfq; push 0x4cffffff; mov esp, dword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x000000000045cbbf: popfq; push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042dbb7: popfq; ret; 
0x0000000000454607: popfq; ret; 
0x000000000045475e: popfq; ret; 
0x000000000045524c: popfq; ret; 
0x00000000004552f0: popfq; ret; 
0x0000000000454001: popfq; rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000045669d: psubsw mm7, mm3; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004451c1: push -0x17ffffff; pop bx; cld; jmp qword ptr [rsi - 0x77]; 
0x00000000004145f4: push -0x17ffffff; ret; 
0x000000000041a652: push -0x1c; add al, 0; mov rax, qword ptr [rax]; mov qword ptr [rbx + 0x98], rax; pop rbx; ret; 
0x00000000004331a2: push -0x1f; add al, byte ptr [rax]; addss xmm0, dword ptr [rax]; ret; 
0x000000000042e76c: push -0x27770002; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042e76b: push -0x27770002; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004484a7: push -0x3ca4a3bf; add byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp - 8]; lea rax, [rip + 0x3b8a4]; call qword ptr [rax + 0x10]; 
0x00000000004014b0: push -0x6717ffff; ret; 
0x0000000000411c77: push -0x72b70000; add r8b, byte ptr [r9 + 0xf]; mov dh, 0x55; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x000000000040e5b0: push -0x72b80000; jl 0xe5db; or al, ch; ret; 
0x000000000044e8ac: push -0x74b70004; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044e8ab: push -0x74b70004; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000041e569: push -0x74b7fffa; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65785; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4e9: push -0x74b7fffa; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65805; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452066: push -0x7a000001; ror byte ptr [rdi], 0x85; ret; 
0x000000000040dad7: push -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040dad6: push -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004322a0: push 0; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x000000000043229f: push 0; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x00000000004322d4: push 0; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000411aa9: push 0; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004572e8: push 0; add byte ptr [rax], al; call 0x1e30; lea rsp, [rsp + 8]; ret; 
0x0000000000453842: push 0x17; cld; dec dword ptr [rdx + 0x48082444]; lea esp, [rsp + 0xf8]; ret; 
0x0000000000445f5e: push 0x24648d48; js 0x45fa6; pop rsp; pop rbx; ret; 
0x00000000004363c9: push 0x2eb01c0; mov bl, 1; mov al, bl; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041d49e: push 0x388b0006; call rdx; 
0x000000000041d4ea: push 0x3a8b0006; call rax; 
0x000000000043d61e: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043d7cf: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043d88e: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043d9e2: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043dc52: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043dd9e: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043def3: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000043dfae: push 0x41000001; pop rsp; pop rbx; ret; 
0x0000000000440d4f: push 0x41000001; pop rsp; pop rbx; ret; 
0x000000000041d012: push 0x41000002; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x0000000000421e1f: push 0x41000002; pop rsi; pop r13; pop r12; pop rbx; ret; 
0x000000000041ce5b: push 0x41000002; pop rsp; pop rbx; ret; 
0x0000000000421c7b: push 0x41000002; pop rsp; pop rbx; ret; 
0x000000000044e8a7: push 0x41e8fffc; push -0x74b70004; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000445418: push 0x48000001; lea eax, [rip + 0x3e93d]; call qword ptr [rax + 0x50]; 
0x0000000000445493: push 0x48000001; mov edi, dword ptr [rsp + 0x170]; lea rax, [rip + 0x3e8ba]; call qword ptr [rax + 0x50]; 
0x00000000004160fc: push 0x480006df; lea esp, [rsp + 8]; ret; 
0x000000000043b191: push 0x48fffffa; mov esp, ebp; pop rbp; ret; 
0x0000000000409143: push 0x48ffffff; mov esp, ebp; pop rbp; ret; 
0x0000000000458fb9: push 0x48ffffff; mov esp, ebp; pop rbp; ret; 
0x0000000000445771: push 0x4cffffff; mov ebp, dword ptr [rbp - 0x90]; mov r14, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043bf8e: push 0x4cffffff; mov edi, dword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000436a0d: push 0x4cffffff; mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e11d: push 0x4cffffff; mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x000000000044180d: push 0x4cffffff; mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000444ab5: push 0x4cffffff; mov esi, dword ptr [rbp - 0x90]; mov r15, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000452c63: push 0x4cffffff; mov esp, dword ptr [rbp - 0x90]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440282: push 0x4e; std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004404b2: push 0x5c415d41; pop rbx; ret; 
0x000000000040c465: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000040fdbd: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000041e31e: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000041e4c2: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000042f3cf: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000042f47e: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000043018b: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000043026b: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000044729a: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000044cf33: push 0x5d415e41; pop r12; pop rbx; ret; 
0x000000000043b73e: push 0x6348fffc; ret; 
0x000000000040e663: push 0x74c08548; add eax, 0x6942e8; add byte ptr [rax - 0x73], cl; and al, 0x70; pop rbx; ret; 
0x000000000044e8a6: push 0xfffc; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004012dd: push 1; add al, ch; imul eax, ebp, 1; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044fa1d: push qword ptr [rax + 0x648d4801]; and al, 8; ret; 
0x000000000041b119: push qword ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041faf7: push qword ptr [rax]; shr al, cl; push rcx; fdivp st(6); jmp qword ptr [rsi + 0x41]; 
0x0000000000434069: push qword ptr [rbp + 0x11]; test rsi, rsi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x0000000000433ff9: push qword ptr [rbp + 0xd]; test rsi, rsi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340fe: push qword ptr [rbp + 0xd]; test rsi, rsi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x000000000043415e: push qword ptr [rbp + 0xd]; test rsi, rsi; je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x000000000045bc2a: push qword ptr [rbp + 7]; lea rdi, [rip + 0x2824c]; movsx esi, si; call 0x5bc50; lea rsp, [rsp + 8]; ret; 
0x00000000004479b9: push qword ptr [rbp + 8]; xor eax, eax; ret; 
0x0000000000413bff: push qword ptr [rbp + rax + 0x48]; cmp esi, edi; jne 0x13be8; cmp rsi, rdi; sete al; ret; 
0x000000000040d892: push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411572: push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 0x10]; ret; 
0x0000000000411ae2: push qword ptr [rbp + rax + 0x48]; mov eax, dword ptr [rdi - 8]; ret; 
0x00000000004030d2: push qword ptr [rbp + rcx + 0x48]; lea eax, [rip + 0x80d94]; cmp qword ptr [rax], 0; jne 0x30e5; xor eax, eax; ret; 
0x000000000042fde0: push qword ptr [rbp - 0x13]; cmp rdx, rax; jle 0x2fdf0; mov rax, 0xffffffffffffffff; ret; 
0x0000000000419767: push qword ptr [rbx + 0x5bd88801]; ret; 
0x0000000000403365: push qword ptr [rbx + rax + 0x48]; mov eax, dword ptr [rdi]; ret; 
0x0000000000411ac2: push qword ptr [rcx + rcx + 0x48]; mov eax, dword ptr [rdi - 8]; add rax, 1; ret; 
0x000000000041300a: push qword ptr [rcx + rcx + 0x48]; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x000000000041300a: push qword ptr [rcx + rcx + 0x48]; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; lea rsp, [rsp + 8]; ret; 
0x000000000041b249: push qword ptr [rcx]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004395ad: push qword ptr [rcx]; shr al, cl; imul edi, ebx, -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004137b3: push qword ptr [rdi + rax + 0x48]; cmp dword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x00000000004480e2: push qword ptr [rdi + rax - 0x75]; cld; sub eax, 4; ret; 
0x000000000044bef2: push qword ptr [rdi + rax - 0x75]; cld; sub eax, 4; ret; 
0x0000000000431acd: push qword ptr [rdx]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000411552: push qword ptr [rsi + rax + 0x66]; mov eax, dword ptr [rdi - 0x16]; jmp 0x1155f; mov ax, 2; and eax, 0xffff; ret; 
0x000000000040d872: push qword ptr [rsi + rax + 0x66]; mov eax, dword ptr [rdi - 0x16]; jmp 0xd87f; mov ax, 1; and eax, 0xffff; ret; 
0x000000000041372a: push qword ptr [rsi + rcx + 0x48]; mov edi, eax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044fcb3: push qword ptr [rsi + rcx + 0x4d]; test esi, esi; je 0x4fcc4; mov rdi, r15; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x000000000043b865: push qword ptr [rsp + rax + 0x48]; mov eax, dword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b895: push qword ptr [rsp + rax + 0x48]; mov eax, dword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000044c0e5: push qword ptr [rsp + rax + 0x48]; mov eax, dword ptr [rax - 8]; shl rax, 1; ret; 
0x0000000000403355: push qword ptr [rsp + rax + 0x48]; mov eax, dword ptr [rdi + 8]; ret; 
0x0000000000434a15: push qword ptr [rsp + rax + 0x48]; mov ecx, dword ptr [rcx - 8]; cmp ecx, 1; jge 0x34a24; xor al, al; ret; 
0x000000000042e7b2: push qword ptr [rsp + rax + 0x48]; mov edi, dword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x0000000000456afa: push qword ptr [rsp + rax + 0x48]; mov esi, dword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x00000000004144f2: push r8; ret; 
0x00000000004130b0: push rax; adc byte ptr [rax + 0x648d48d8], cl; and al, 0x20; pop rbx; ret; 
0x00000000004131b0: push rax; adc byte ptr [rax + 0x648d48d8], cl; and al, 0x20; pop rbx; ret; 
0x00000000004149c4: push rax; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004484bd: push rax; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000455729: push rax; adc byte ptr [rax - 0x75], cl; or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000419270: push rax; adc byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000449d35: push rax; adc byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; out 0x48, eax; lea eax, [rip + 0x3a01c]; call qword ptr [rax + 0x10]; 
0x000000000041304d: push rax; adc byte ptr [rcx + rcx*4 + 0x23], cl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000444c98: push rax; adc byte ptr [rcx], dh; leave; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d2c: push rax; adc byte ptr [rcx], dh; leave; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004470fe: push rax; adc byte ptr [rcx], dh; leave; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x0000000000449baf: push rax; add byte ptr [rax], al; ret; 
0x00000000004137b9: push rax; add byte ptr [rbp - 0x55], dh; ret; 
0x00000000004043f6: push rax; add cl, byte ptr [rax + 0x39]; bnd jl 0x43ff; xor eax, eax; ret; 
0x0000000000459fbd: push rax; add dh, byte ptr [rbp + rbx - 0x39]; add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x000000000042488c: push rax; add dword ptr [rax + 0x63], ecx; ret; 
0x0000000000408489: push rax; add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0x667f; 
0x000000000040846a: push rax; add dword ptr [rax + 0xf], ecx; mov edi, 0x3948a445; ret 0xd7e; 
0x0000000000414510: push rax; add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x0000000000459fcb: push rax; add dword ptr [rdi + rcx - 0x39], esi; add al, 0xb0; xlatb; add byte ptr [rax], al; ret; 
0x0000000000449b9f: push rax; add rdx, 1; cmp word ptr [rsi + rdx*2], 0; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000041d26f: push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c9: push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d53f: push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x00000000004484ff: push rax; and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000448542: push rax; and byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004555f9: push rax; and byte ptr [rax - 0x75], cl; or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000044851f: push rax; and byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448562: push rax; and byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041d6b9: push rax; and byte ptr [rbx + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f6ca: push rax; and byte ptr [rdi + rcx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f7c2: push rax; and byte ptr [rdi + rcx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f6b7: push rax; and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f7af: push rax; and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f12b: push rax; and byte ptr [rsi + rax + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f651: push rax; and byte ptr [rsi + rdx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f71d; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000041f751: push rax; and byte ptr [rsi + rdx + 0x48], bh; cmp dword ptr [rbx + 0x40], 0; je 0x1f810; mov rdi, rbx; call qword ptr [rbx + 0x40]; 
0x000000000043c160: push rax; call 0x1b3c5e2; jmp 0x3c16a; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x00000000004342ad: push rax; cmp byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043b53f: push rax; cmp byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; out 0x48, eax; lea eax, [rip + 0x48812]; call qword ptr [rax + 0x38]; 
0x000000000041ef55: push rax; cmp byte ptr [rbx + 0x5bd88801], dh; ret; 
0x0000000000413710: push rax; jo 0x1375b; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004147a8: push rax; jo 0x147f3; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044f9f9: push rax; jo 0x4fa44; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000415188: push rax; js 0x15114; ret; 
0x000000000043446d: push rax; js 0x344b8; lea esp, [rsp + 8]; ret; 
0x0000000000426b8f: push rax; lea rdx, [rip - 0x58]; mov qword ptr [rax + 0x48], rdx; ret; 
0x000000000041dae3: push rax; lea rsp, [rsp + 8]; ret; 
0x000000000041f623: push rax; lea rsp, [rsp + 8]; ret; 
0x00000000004342cd: push rax; lea rsp, [rsp + 8]; ret; 
0x0000000000423b9e: push rax; mov qword ptr [rip + 0x6127a], rdx; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x000000000040a013: push rax; or byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x0000000000413014: push rax; or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004149a4: push rax; or byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041da91: push rax; or byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8941; 
0x000000000041d9f9: push rax; or byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x29], cl; ret 0x8949; 
0x000000000045b8f4: push rax; or byte ptr [rcx - 0x100f1e], al; dec dword ptr [rcx]; mov dword ptr [rax + 8], edx; ret; 
0x000000000045b914: push rax; or byte ptr [rcx - 0x100f1e], al; dec dword ptr [rcx]; mov dword ptr [rax + 8], edx; ret; 
0x0000000000413b2f: push rax; or cl, byte ptr [rax - 0x7d]; ret 0xf01; 
0x0000000000404865: push rax; pop rbx; ret; 
0x000000000045836b: push rax; pop rbx; ret; 
0x0000000000423b9d: push rax; push rax; mov qword ptr [rip + 0x6127a], rdx; mov rax, qword ptr [rax + 0x58]; mov qword ptr [rip + 0x44fff], rax; ret; 
0x00000000004144f3: push rax; ret; 
0x000000000042562c: push rax; ret; 
0x0000000000414dee: push rax; sbb al, 0x48; mov esi, dword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414c9f: push rax; sbb al, 0x48; mov esi, dword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x000000000041d26b: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c5: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d53b: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d6b5: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rbx + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f6b3: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f7ab: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f127: push rax; sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rsi + rax + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x0000000000402d44: push rax; sbb byte ptr [rax + 0x63], cl; or byte ptr [rax + 0x39], cl; ret 0x2e7c; 
0x0000000000446d5c: push rax; sbb byte ptr [rax + 0x63], cl; ret; 
0x00000000004484dd: push rax; sbb byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042365c: push rax; sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000431c77: push rax; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c76: push rax; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456a29: push rax; sti; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044b97c: push rax; sti; jmp qword ptr [rsi + 0x42]; 
0x000000000043b8ed: push rax; sub byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000420a3b: push rax; xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x000000000041dc1e: push rbp; add byte ptr [rax + 0x63], cl; ret; 
0x000000000041dd1e: push rbp; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000411c81: push rbp; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x000000000040ed5f: push rbp; clc; lea rax, [rip + 0x73db8]; movzx esi, word ptr [rax]; lea rax, [rip + 0x74fee]; call qword ptr [rax + 8]; 
0x000000000040ec66: push rbp; clc; lea rax, [rip + 0x750f1]; call qword ptr [rax + 8]; 
0x0000000000450f07: push rbp; clc; mov rbx, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000404f5a: push rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004033eb: push rbp; cld; mov rsp, rbp; pop rbp; ret; 
0x000000000045c82c: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c84f: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8d2: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8f2: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c91b: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c975: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9a7: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9d4: push rbp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457747: push rbp; cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044de64: push rbp; fadd dword ptr [rbp - 0x74f88325]; fdivr dword ptr [r9]; ret; 
0x0000000000415a17: push rbp; in eax, 6; add byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x0000000000415e17: push rbp; loope 0x15e20; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000408e8b: push rbp; mov byte ptr [rdi], cl; mov edi, 0xbf0f9855; mov byte ptr [r9], r13b; ret 0xbf0f; 
0x0000000000431580: push rbp; mov rbp, rsp; call 0x313f0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431570: push rbp; mov rbp, rsp; call 0x314b0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e7a0: push rbp; mov rbp, rsp; call 0x368c0; mov rsp, rbp; pop rbp; ret; 
0x0000000000401e30: push rbp; mov rbp, rsp; lea rsp, [rsp - 0x10]; mov rax, rdi; mov rdi, rsi; syscall; 
0x0000000000401e00: push rbp; mov rbp, rsp; lea rsp, [rsp - 0x10]; mov rax, rdi; syscall; 
0x0000000000405170: push rbp; mov rbp, rsp; mov al, 1; mov rsp, rbp; pop rbp; ret; 
0x0000000000449947: push rbp; ret; 
0x000000000042dda1: push rbp; ror byte ptr [rdi], 0xb7; ret 0xc189; 
0x0000000000431807: push rbp; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431827: push rbp; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431847: push rbp; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431917: push rbp; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431916: push rbp; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431897: push rbp; std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318b7: push rbp; std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318d7: push rbp; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431fde: push rbx; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000431ff7: push rbx; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045caff: push rbx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cafe: push rbx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb27: push rbx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb42: push rbx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000423bc0: push rbx; mov rbx, rdi; call 0x2990; call qword ptr [rbx + 0x28]; 
0x0000000000423bc0: push rbx; mov rbx, rdi; call 0x2990; call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x000000000043b900: push rbx; mov rbx, rdi; call 0x3b8e0; add rax, rbx; pop rbx; ret; 
0x00000000004169f0: push rbx; mov rbx, rdi; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169d0: push rbx; mov rbx, rdi; lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x0000000000401969: push rbx; ret 1; 
0x000000000040bff9: push rbx; sbb byte ptr [rax], al; add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x000000000042e18a: push rcx; add al, byte ptr [rax]; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431a97: push rcx; add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000446e6d: push rcx; add dword ptr [rax], eax; lea rsp, [rsp + 0x28]; ret; 
0x000000000045085b: push rcx; cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000044c97a: push rcx; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000041521b: push rcx; cmp byte ptr [rip + 0x4810ff00], al; lea esp, [rsp + 8]; ret; 
0x000000000041fafb: push rcx; fdivp st(6); jmp qword ptr [rsi + 0x41]; 
0x000000000040179b: push rcx; ret; 
0x00000000004442bb: push rcx; sbb eax, 0x8d480000; and al, 8; pop r12; pop rbx; ret; 
0x000000000043ffd0: push rcx; std; dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x00000000004319df: push rcx; std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a2f: push rcx; std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a4f: push rcx; std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004572ab: push rcx; stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043bdc9: push rdi; add al, byte ptr [rax]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x000000000043bdc2: push rdi; add al, byte ptr [rax]; lea rdx, [rip + 0x257f4]; call 0x3baf0; lea rsp, [rsp + 8]; ret; 
0x0000000000431b47: push rdi; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000041394e: push rdi; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000413268: push rdi; add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413bb5: push rdi; add edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044f9ae: push rdi; cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000434000: push rdi; mov rax, 0xffffffffffffffff; ret; 
0x000000000043fa47: push rdi; or byte ptr [rax + 0x63], cl; ret; 
0x00000000004434c5: push rdi; or byte ptr [rax + 0x63], cl; ret; 
0x0000000000417ce5: push rdi; or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000457b25: push rdi; ret; 
0x00000000004533a5: push rdi; sub eax, dword ptr [rdx]; add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438baa: push rdx; add byte ptr [rax], al; add al, ch; insd dword ptr [rdi], dx; ret 0xfffd; 
0x0000000000431a74: push rdx; add byte ptr [rax], al; fstp qword ptr [rsp]; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000416e6d: push rdx; add dword ptr [rax - 0x73], ecx; add al, 0x11; ret; 
0x0000000000450528: push rdx; add eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000450595: push rdx; add eax, dword ptr [rax]; call qword ptr [rax]; 
0x0000000000459ada: push rdx; add ecx, dword ptr [rcx]; ror byte ptr [rcx + 0x648d4806], 1; and al, 8; ret; 
0x000000000044b9af: push rdx; clc; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x0000000000420ac3: push rdx; clc; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x000000000045cb62: push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cb82: push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cba2: push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cbc0: push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045cbe0: push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043a9ba: push rdx; cmp byte ptr [rax - 0x74b7eefc], cl; add al, 0x24; add dword ptr [rax + 0x38], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000443f8f: push rdx; cvtpi2ps xmm0, mm0; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334c2: push rdx; fiadd word ptr [rdx]; add dl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x0000000000444f17: push rdx; movups xmm0, xmmword ptr [rsp + 0x20]; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x0000000000445f58: push rdx; movups xmm0, xmmword ptr [rsp + 0x68]; lea rsp, [rsp + 0x78]; pop r12; pop rbx; ret; 
0x0000000000447777: push rdx; movups xmm0, xmmword ptr [rsp + 0x68]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000446eff: push rdx; movups xmm1, xmmword ptr [rsp + 0x20]; call 0x43660; lea rsp, [rsp + 0x28]; ret; 
0x0000000000447960: push rdx; movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x0000000000457c2a: push rdx; ret 2; 
0x000000000043fdef: push rdx; std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000042a596: push rsi; adc eax, 0x8d48fffe; and al, 8; ret; 
0x0000000000427a36: push rsi; add al, 2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000453223: push rsi; add al, byte ptr [rax]; pop rbx; ret; 
0x00000000004125a9: push rsi; add al, byte ptr [rcx + 0xf]; mov dh, 0x46; add dword ptr [rax + 1], ecx; ret 0x8b48; 
0x0000000000431634: push rsi; add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431657: push rsi; add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431656: push rsi; add byte ptr [rax], al; fstp dword ptr [rsp]; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000449ba7: push rsi; add byte ptr [rax], al; jne 0x49b98; mov word ptr [rax + rdx*2], 0; ret; 
0x000000000042e5e7: push rsi; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000412f2f: push rsi; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000042edf6: push rsi; add byte ptr [rax], r8b; lea rsp, [rsp + 8]; ret; 
0x000000000043a328: push rsi; add byte ptr [rbp - 0x24], dh; lea rsp, [rsp + 8]; ret; 
0x000000000045c216: push rsi; add eax, 0x8d48fffc; and al, 8; ret; 
0x0000000000413418: push rsi; add eax, 0xc7894800; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000456856: push rsi; and al, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041927b: push rsi; and byte ptr [rax - 0x77], cl; fistp qword ptr [rcx + 5]; rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x0000000000432aa6: push rsi; and eax, 0x8d480000; and al, 8; ret; 
0x000000000044a083: push rsi; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a0bc: push rsi; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044a101: push rsi; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c126: push rsi; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000454fa6: push rsi; cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000045c80f: push rsi; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c878: push rsi; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c877: push rsi; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c8ab: push rsi; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000425126: push rsi; inc dword ptr [rip - 0x3876b800]; call 0x24dc0; lea rsp, [rsp + 8]; ret; 
0x0000000000402980: push rsi; jmp 0x184a0; ret; 
0x0000000000420d56: push rsi; js 0x20d58; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000431796: push rsi; push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431777: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431776: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431787: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431797: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431817: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431837: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bd6: push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417fc4: push rsp; adc byte ptr [rax], bl; cmp qword ptr [rbx + 8], 0; ja 0x17fa0; pop rbx; ret; 
0x000000000045b86a: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b96a: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b98a: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9aa: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9cc: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045b9ea: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000045ba0a: push rsp; add byte ptr [rax], al; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000414845: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cc44: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cd95: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440174: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004402c5: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e794: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451535: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451845: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004522d4: push rsp; and al, 0x10; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000413082: push rsp; and al, 0x10; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413215: push rsp; and al, 0x10; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004133b5: push rsp; and al, 0x10; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000043c789: push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae8: push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb9: push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440018: push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b69: push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea9: push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000040a00e: push rsp; and al, 0x18; mov word ptr [rax + 8], dx; lea rsp, [rsp + 0x28]; ret; 
0x000000000044e8ed: push rsp; and al, 0x20; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c90f: push rsp; and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe3f: push rsp; and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000042de86: push rsp; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deb3: push rsp; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df89: push rsp; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042e193: push rsp; and al, 8; lea rsp, [rsp + 0x18]; ret; 
0x000000000042dcd0: push rsp; and al, 8; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000042de7d: push rsp; and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042deaa: push rsp; and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000042df80: push rsp; and al, 8; mov rax, qword ptr [rsp]; mov rdx, qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004135ce: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043c63e: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fb6e: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044e63e: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044ed5e: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044eeee: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f1fe: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044f8ae: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044faae: push rsp; and al, 8; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x00000000004588d7: push rsp; and al, 8; mov rsi, rsp; call 0x58800; lea rsp, [rsp + 0x18]; ret; 
0x0000000000459ef5: push rsp; and al, 8; mov rsi, rsp; call 0x59e20; lea rsp, [rsp + 0x18]; ret; 
0x000000000044fc14: push rsp; cld; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000045c93f: push rsp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045c9f8: push rsp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca2a: push rsp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca5a: push rsp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca88: push rsp; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004586f8: push rsp; idiv bl; jmp qword ptr [rsi + 0x41]; 
0x0000000000456a28: push rsp; push rax; sti; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004318fa: push rsp; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043fc76: push rsp; std; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000044e046: pushfq; std; jmp qword ptr [rsi + 0x41]; 
0x00000000004385f0: pushfq; xchg ebp, eax; add eax, dword ptr [rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000040c57c: rcl byte ptr [rbx]; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004024f2: rcl cl, 0xe8; lea rax, [rcx + rax - 8]; cmp rdx, rax; jbe 0x24eb; ret; 
0x000000000045c82b: rcl dword ptr [rbp - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040507f: rcl ebx, 0xe2; or edi, edx; call 0x5090; lea rsp, [rsp + 8]; ret; 
0x00000000004232dc: rcr byte ptr [rdi + rdi*8], 1; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043118c: rcr byte ptr [rdx], 1; add bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040f6eb: rcr dword ptr [rax], 0; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000041e02b: rcr dword ptr [rsi + rax], 1; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402847: rcr ecx, 0xfd; fstp st(1); mov rsp, rbp; pop rbp; ret; 
0x000000000044387c: rcr edi, 0x7c; and al, 8; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x000000000041b742: rep movsq qword ptr [rdi], qword ptr [rsi]; lea rdi, [rip + 0x696a4]; mov rsi, rax; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbc2: rep movsq qword ptr [rdi], qword ptr [rsi]; lea rdi, [rip + 0x76194]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db52: rep movsq qword ptr [rdi], qword ptr [rsi]; lea rdi, [rip + 0x76204]; mov rsi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad9c: rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x00000000004586a2: rep movsq qword ptr [rdi], qword ptr [rsi]; mov edi, dword ptr [rax]; call 0x2ee0; mov dword ptr [rbx], eax; pop rbx; ret; 
0x0000000000419285: rep movsq qword ptr [rdi], qword ptr [rsi]; pop rbx; ret; 
0x000000000040db32: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db64: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db82: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dba2: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbd4: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbf2: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a1c: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000416a32: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041902c: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000419042: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b70c: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b722: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041b754: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239dc: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239f2: rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004576ea: repne cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000405c10: ret 0; 
0x0000000000410516: ret 0; 
0x0000000000418aab: ret 0; 
0x000000000043be8f: ret 0; 
0x00000000004479b2: ret 0; 
0x0000000000452997: ret 0; 
0x000000000045bbfb: ret 0; 
0x0000000000402256: ret 0x1000; 
0x0000000000402fa0: ret 0x10bf; 
0x000000000041dc25: ret 0x117d; 
0x00000000004576b3: ret 0x11bf; 
0x0000000000404702: ret 0x11eb; 
0x000000000040cd7a: ret 0x127e; 
0x000000000040f7aa: ret 0x127e; 
0x00000000004576e3: ret 0x12bf; 
0x0000000000433858: ret 0x12e8; 
0x00000000004468b1: ret 0x130; 
0x0000000000457710: ret 0x13bf; 
0x000000000042aacf: ret 0x147e; 
0x0000000000407a22: ret 0x148; 
0x000000000040b9c0: ret 0x148; 
0x0000000000457740: ret 0x14bf; 
0x00000000004593f2: ret 0x158b; 
0x000000000045c913: ret 0x15bf; 
0x000000000040483e: ret 0x15eb; 
0x0000000000424893: ret 0x1675; 
0x000000000042888f: ret 0x167e; 
0x0000000000432463: ret 0x1788; 
0x0000000000432653: ret 0x1788; 
0x0000000000457556: ret 0x17bf; 
0x000000000043969a: ret 0x17f; 
0x0000000000426f88: ret 0x187d; 
0x0000000000403978: ret 0x197f; 
0x000000000040394b: ret 0x19eb; 
0x000000000045c432: ret 0x19eb; 
0x00000000004250ed: ret 0x1b75; 
0x0000000000425796: ret 0x1b75; 
0x0000000000402b20: ret 0x1bf; 
0x0000000000459414: ret 0x1c3b; 
0x0000000000444664: ret 0x1c75; 
0x0000000000452a7a: ret 0x1eeb; 
0x0000000000445317: ret 0x20b9; 
0x0000000000445347: ret 0x20b9; 
0x0000000000437d84: ret 0x217d; 
0x000000000043f942: ret 0x21d; 
0x00000000004569d2: ret 0x22c; 
0x000000000040599a: ret 0x2481; 
0x00000000004059b2: ret 0x2481; 
0x000000000041dd25: ret 0x277d; 
0x000000000045018a: ret 0x283; 
0x0000000000438742: ret 0x28c; 
0x00000000004089d2: ret 0x2941; 
0x000000000042fdb6: ret 0x2948; 
0x00000000004344f5: ret 0x2948; 
0x0000000000407130: ret 0x294c; 
0x000000000042bc7b: ret 0x2a7e; 
0x000000000042988c: ret 0x2c7e; 
0x000000000045933a: ret 0x2c9; 
0x000000000040bc86: ret 0x2d66; 
0x000000000040bcbe: ret 0x2d66; 
0x000000000040bfff: ret 0x2d66; 
0x000000000040c062: ret 0x2d66; 
0x000000000040c3c3: ret 0x2d66; 
0x000000000040c8bb: ret 0x2d66; 
0x000000000040cacc: ret 0x2d66; 
0x000000000040d56c: ret 0x2d66; 
0x000000000040d58d: ret 0x2d66; 
0x000000000041ca93: ret 0x2d66; 
0x000000000041cf44: ret 0x2d66; 
0x000000000041e232: ret 0x2d66; 
0x0000000000402d4c: ret 0x2e7c; 
0x0000000000452a6a: ret 0x2eeb; 
0x0000000000429331: ret 0x2f75; 
0x0000000000435a3e: ret 0x30be; 
0x000000000043a18e: ret 0x30be; 
0x0000000000448994: ret 0x30be; 
0x000000000044a704: ret 0x30be; 
0x0000000000402ea0: ret 0x314d; 
0x000000000040b3c0: ret 0x314d; 
0x0000000000433cb2: ret 0x314d; 
0x0000000000423cd8: ret 0x32e8; 
0x0000000000433738: ret 0x32e8; 
0x0000000000444751: ret 0x337e; 
0x000000000043e667: ret 0x3575; 
0x0000000000425105: ret 0x375; 
0x000000000042b599: ret 0x3775; 
0x0000000000441ef7: ret 0x3875; 
0x00000000004344d9: ret 0x3901; 
0x0000000000434529: ret 0x3901; 
0x0000000000418781: ret 0x3948; 
0x000000000044d218: ret 0x3948; 
0x00000000004592f7: ret 0x3948; 
0x0000000000409da4: ret 0x3a75; 
0x00000000004592a9: ret 0x3b01; 
0x000000000040e320: ret 0x3b49; 
0x000000000040e350: ret 0x3b49; 
0x00000000004592e1: ret 0x3c3b; 
0x0000000000405aae: ret 0x3c83; 
0x000000000043aaba: ret 0x3de; 
0x0000000000452a5a: ret 0x3eeb; 
0x0000000000430a16: ret 0x3f7f; 
0x0000000000430e96: ret 0x3f7f; 
0x000000000040707d: ret 0x4001; 
0x00000000004072fa: ret 0x4001; 
0x000000000040cf72: ret 0x4001; 
0x0000000000410b58: ret 0x4001; 
0x000000000043f9ea: ret 0x407e; 
0x000000000044346a: ret 0x407e; 
0x0000000000401161: ret 0x40; 
0x00000000004011c3: ret 0x40; 
0x00000000004012c1: ret 0x40; 
0x0000000000401323: ret 0x40; 
0x0000000000401591: ret 0x40; 
0x0000000000410863: ret 0x4101; 
0x00000000004113a2: ret 0x4101; 
0x0000000000411412: ret 0x4101; 
0x000000000043a4bf: ret 0x4101; 
0x0000000000408b29: ret 0x4166; 
0x00000000004099f6: ret 0x4166; 
0x00000000004288b0: ret 0x4167; 
0x000000000042aaee: ret 0x4167; 
0x000000000043d028: ret 0x417e; 
0x000000000043d1bf: ret 0x417e; 
0x000000000043d4a3: ret 0x417e; 
0x000000000043f282: ret 0x417e; 
0x0000000000440558: ret 0x417e; 
0x00000000004406ef: ret 0x417e; 
0x00000000004409d3: ret 0x417e; 
0x0000000000442d02: ret 0x417e; 
0x000000000044d319: ret 0x417e; 
0x000000000044d465: ret 0x417e; 
0x000000000044d60c: ret 0x417e; 
0x000000000044d7f6: ret 0x417e; 
0x000000000044da42: ret 0x417e; 
0x000000000044de0c: ret 0x417f; 
0x000000000043e4ca: ret 0x431; 
0x0000000000411312: ret 0x4401; 
0x0000000000459423: ret 0x448b; 
0x0000000000404102: ret 0x4501; 
0x000000000040b7a2: ret 0x474; 
0x000000000040462a: ret 0x4801; 
0x000000000040474b: ret 0x4801; 
0x0000000000407060: ret 0x4801; 
0x000000000040f041: ret 0x4801; 
0x0000000000418bc9: ret 0x4801; 
0x00000000004253b4: ret 0x4801; 
0x000000000042b9ba: ret 0x4801; 
0x000000000042ba96: ret 0x4801; 
0x000000000042ef12: ret 0x4801; 
0x000000000042fc43: ret 0x4801; 
0x000000000042fc7d: ret 0x4801; 
0x000000000042fdbc: ret 0x4801; 
0x0000000000430a12: ret 0x4801; 
0x0000000000430e92: ret 0x4801; 
0x00000000004310cd: ret 0x4801; 
0x000000000043121a: ret 0x4801; 
0x00000000004341a9: ret 0x4801; 
0x000000000043a961: ret 0x4801; 
0x000000000043b29a: ret 0x4801; 
0x00000000004492fb: ret 0x4801; 
0x000000000044a06a: ret 0x4801; 
0x000000000044a0aa: ret 0x4801; 
0x000000000044b09b: ret 0x4801; 
0x000000000044d071: ret 0x4801; 
0x000000000044db32: ret 0x4801; 
0x000000000044db4b: ret 0x4801; 
0x000000000044e17c: ret 0x4801; 
0x000000000044e23e: ret 0x4801; 
0x000000000044f41b: ret 0x4801; 
0x00000000004592e8: ret 0x4801; 
0x000000000045999d: ret 0x4801; 
0x000000000045bd19: ret 0x4801; 
0x0000000000414514: ret 0x4802; 
0x00000000004598bd: ret 0x4804; 
0x0000000000443cd0: ret 0x4807; 
0x0000000000447a76: ret 0x480; 
0x0000000000402092: ret 0x4820; 
0x00000000004467da: ret 0x4838; 
0x00000000004397ea: ret 0x483; 
0x0000000000404690: ret 0x4901; 
0x00000000004047c8: ret 0x4901; 
0x000000000042a3bd: ret 0x4901; 
0x000000000042a3e5: ret 0x4901; 
0x000000000042f566: ret 0x4901; 
0x000000000042f5fe: ret 0x4901; 
0x000000000043f5be: ret 0x4901; 
0x0000000000443040: ret 0x4901; 
0x000000000044de05: ret 0x4901; 
0x00000000004106c2: ret 0x4904; 
0x0000000000410758: ret 0x4904; 
0x0000000000402059: ret 0x4908; 
0x0000000000403160: ret 0x4908; 
0x00000000004597b0: ret 0x4ba; 
0x0000000000459870: ret 0x4ba; 
0x000000000040b6f1: ret 0x4c01; 
0x0000000000411edb: ret 0x4c01; 
0x0000000000418a71: ret 0x4c01; 
0x000000000044d598: ret 0x4c01; 
0x000000000044dc98: ret 0x4c01; 
0x000000000045bbc1: ret 0x4c01; 
0x00000000004020f2: ret 0x4c40; 
0x000000000043504a: ret 0x4cc; 
0x000000000040b40b: ret 0x4d01; 
0x0000000000433cfb: ret 0x4d01; 
0x0000000000402034: ret 0x4d04; 
0x0000000000452ace: ret 0x4d08; 
0x00000000004015f3: ret 0x4e; 
0x0000000000452a4a: ret 0x4eeb; 
0x0000000000401ef7: ret 0x50f; 
0x000000000042ac25: ret 0x5275; 
0x000000000040bff7: ret 0x53e8; 
0x000000000040a1ea: ret 0x542; 
0x000000000040658f: ret 0x5488; 
0x00000000004065a8: ret 0x5488; 
0x00000000004065c1: ret 0x5488; 
0x00000000004065e2: ret 0x5488; 
0x000000000042c03a: ret 0x57c; 
0x0000000000424e2f: ret 0x58b; 
0x0000000000429c3a: ret 0x5a0; 
0x00000000004289e7: ret 0x5a75; 
0x000000000045949d: ret 0x5d41; 
0x00000000004108b8: ret 0x5eb; 
0x0000000000410bb3: ret 0x5eb; 
0x0000000000452a3a: ret 0x5eeb; 
0x000000000042648a: ret 0x5f1; 
0x00000000004220aa: ret 0x61d; 
0x0000000000405df1: ret 0x6348; 
0x0000000000424e4d: ret 0x6348; 
0x0000000000437ccd: ret 0x6348; 
0x000000000043d1b9: ret 0x6348; 
0x000000000043d49d: ret 0x6348; 
0x00000000004406e9: ret 0x6348; 
0x00000000004409cd: ret 0x6348; 
0x000000000043b6a5: ret 0x6349; 
0x000000000043d022: ret 0x6349; 
0x000000000043f9e4: ret 0x6349; 
0x0000000000440552: ret 0x6349; 
0x0000000000443464: ret 0x6349; 
0x0000000000449ea8: ret 0x6349; 
0x000000000044c390: ret 0x6349; 
0x000000000040a0da: ret 0x634c; 
0x000000000040542a: ret 0x6601; 
0x000000000040f932: ret 0x6601; 
0x0000000000449ba2: ret 0x6601; 
0x0000000000453959: ret 0x6603; 
0x000000000045bec9: ret 0x6603; 
0x00000000004032be: ret 0x6608; 
0x0000000000403308: ret 0x6608; 
0x0000000000417ddd: ret 0x6608; 
0x0000000000402593: ret 0x6666; 
0x0000000000408492: ret 0x667f; 
0x000000000041c3ba: ret 0x67a; 
0x000000000041e63f: ret 0x67e; 
0x000000000041e6df: ret 0x67e; 
0x00000000004066b7: ret 0x6b48; 
0x0000000000407bc2: ret 0x6b48; 
0x0000000000407c17: ret 0x6b48; 
0x0000000000444871: ret 0x6b48; 
0x00000000004466fc: ret 0x6b48; 
0x0000000000446a24: ret 0x6b48; 
0x0000000000446ab6: ret 0x6b48; 
0x0000000000446ac4: ret 0x6b48; 
0x0000000000452a27: ret 0x6ee9; 
0x000000000040bf9a: ret 0x7400; 
0x000000000040c0c9: ret 0x7400; 
0x000000000045556f: ret 0x7400; 
0x000000000045569f: ret 0x7400; 
0x0000000000402000: ret 0x7401; 
0x0000000000402173: ret 0x7401; 
0x0000000000402011: ret 0x7402; 
0x0000000000402183: ret 0x7402; 
0x0000000000402025: ret 0x7404; 
0x0000000000402197: ret 0x7404; 
0x0000000000401ffb: ret 0x7407; 
0x000000000040216e: ret 0x7407; 
0x0000000000444c40: ret 0x7ae8; 
0x00000000004592bc: ret 0x7c80; 
0x00000000004479c2: ret 0x8001; 
0x0000000000410867: ret 0x8041; 
0x00000000004020db: ret 0x80; 
0x00000000004052b1: ret 0x8166; 
0x0000000000408eb9: ret 0x8166; 
0x0000000000452a14: ret 0x81e9; 
0x0000000000425549: ret 0x820f; 
0x0000000000403140: ret 0x8301; 
0x0000000000453953: ret 0x8301; 
0x000000000045bec3: ret 0x8301; 
0x00000000004587aa: ret 0x8341; 
0x00000000004039f2: ret 0x8348; 
0x0000000000419626: ret 0x8348; 
0x000000000041a366: ret 0x8348; 
0x0000000000424f32: ret 0x8348; 
0x00000000004253b1: ret 0x8348; 
0x000000000042dd12: ret 0x8348; 
0x000000000042e5bd: ret 0x8348; 
0x000000000042fcf0: ret 0x8348; 
0x000000000042fd30: ret 0x8348; 
0x000000000043f5bb: ret 0x8348; 
0x000000000044303d: ret 0x8348; 
0x0000000000402166: ret 0x8349; 
0x000000000042f5e2: ret 0x8349; 
0x0000000000403f85: ret 0x8548; 
0x000000000040c289: ret 0x8548; 
0x000000000040cfa6: ret 0x8548; 
0x000000000040d011: ret 0x8548; 
0x000000000040e400: ret 0x8548; 
0x000000000042a841: ret 0x8548; 
0x00000000004342f1: ret 0x8548; 
0x0000000000434331: ret 0x8548; 
0x0000000000434371: ret 0x8548; 
0x00000000004343b1: ret 0x8548; 
0x00000000004343f1: ret 0x8548; 
0x0000000000434431: ret 0x8548; 
0x0000000000452a9a: ret 0x8548; 
0x0000000000409efa: ret 0x8566; 
0x000000000041a406: ret 0x870f; 
0x000000000042fde5: ret 0x87e; 
0x0000000000425122: ret 0x8801; 
0x00000000004512c8: ret 0x880a; 
0x00000000004512dd: ret 0x880a; 
0x0000000000404001: ret 0x8841; 
0x0000000000439b6a: ret 0x8841; 
0x0000000000404a72: ret 0x8901; 
0x0000000000404ab2: ret 0x8901; 
0x000000000043a55e: ret 0x8901; 
0x0000000000452899: ret 0x8901; 
0x0000000000456f06: ret 0x8901; 
0x0000000000405563: ret 0x8941; 
0x000000000041da99: ret 0x8941; 
0x000000000044539d: ret 0x8941; 
0x0000000000407a48: ret 0x8944; 
0x0000000000407a4e: ret 0x8944; 
0x0000000000407a54: ret 0x8944; 
0x0000000000407a87: ret 0x8944; 
0x0000000000408569: ret 0x8944; 
0x0000000000426f54: ret 0x8944; 
0x00000000004451a0: ret 0x8944; 
0x00000000004453b2: ret 0x8944; 
0x0000000000404c80: ret 0x8948; 
0x00000000004057d6: ret 0x8948; 
0x0000000000407a8d: ret 0x8948; 
0x000000000040823f: ret 0x8948; 
0x000000000040888e: ret 0x8948; 
0x0000000000408895: ret 0x8948; 
0x0000000000408f0c: ret 0x8948; 
0x000000000040a3ad: ret 0x8948; 
0x000000000040b15e: ret 0x8948; 
0x000000000040e4fe: ret 0x8948; 
0x0000000000419278: ret 0x8948; 
0x0000000000419bd0: ret 0x8948; 
0x000000000042db05: ret 0x8948; 
0x000000000042db35: ret 0x8948; 
0x000000000043366d: ret 0x8948; 
0x00000000004336ed: ret 0x8948; 
0x000000000043377d: ret 0x8948; 
0x000000000043380d: ret 0x8948; 
0x000000000043588c: ret 0x8948; 
0x000000000043761f: ret 0x8948; 
0x0000000000437c7c: ret 0x8948; 
0x0000000000437cdd: ret 0x8948; 
0x0000000000437f92: ret 0x8948; 
0x0000000000438175: ret 0x8948; 
0x00000000004381bb: ret 0x8948; 
0x0000000000438252: ret 0x8948; 
0x00000000004383f4: ret 0x8948; 
0x000000000043843a: ret 0x8948; 
0x000000000043b4f9: ret 0x8948; 
0x000000000043b57b: ret 0x8948; 
0x000000000043bbc4: ret 0x8948; 
0x000000000043bd0b: ret 0x8948; 
0x000000000043bd27: ret 0x8948; 
0x000000000043d2e9: ret 0x8948; 
0x000000000043d502: ret 0x8948; 
0x0000000000440819: ret 0x8948; 
0x0000000000440a32: ret 0x8948; 
0x00000000004463bd: ret 0x8948; 
0x00000000004465ef: ret 0x8948; 
0x0000000000447de3: ret 0x8948; 
0x0000000000448810: ret 0x8948; 
0x0000000000449ce9: ret 0x8948; 
0x0000000000449d74: ret 0x8948; 
0x000000000044a580: ret 0x8948; 
0x000000000044bdd3: ret 0x8948; 
0x000000000044c1c9: ret 0x8948; 
0x000000000044c25a: ret 0x8948; 
0x000000000044c9e4: ret 0x8948; 
0x000000000044d306: ret 0x8948; 
0x000000000044d456: ret 0x8948; 
0x000000000044d5f9: ret 0x8948; 
0x000000000044d8af: ret 0x8948; 
0x000000000044dafd: ret 0x8948; 
0x000000000044de61: ret 0x8948; 
0x000000000044ded7: ret 0x8948; 
0x000000000044f0f2: ret 0x8948; 
0x000000000044f542: ret 0x8948; 
0x000000000045007a: ret 0x8948; 
0x0000000000450083: ret 0x8948; 
0x00000000004500f9: ret 0x8948; 
0x0000000000450102: ret 0x8948; 
0x000000000045010b: ret 0x8948; 
0x0000000000452825: ret 0x8948; 
0x0000000000455602: ret 0x8948; 
0x0000000000455732: ret 0x8948; 
0x0000000000455f3c: ret 0x8948; 
0x00000000004588bc: ret 0x8948; 
0x0000000000458f57: ret 0x8948; 
0x0000000000459803: ret 0x8948; 
0x00000000004598a7: ret 0x8948; 
0x0000000000459eda: ret 0x8948; 
0x000000000040889b: ret 0x8949; 
0x000000000040f890: ret 0x8949; 
0x000000000041da01: ret 0x8949; 
0x0000000000443cfd: ret 0x8949; 
0x000000000045c06d: ret 0x8949; 
0x0000000000407a3c: ret 0x894c; 
0x0000000000407a5a: ret 0x894c; 
0x0000000000407a6a: ret 0x894c; 
0x0000000000407a76: ret 0x894c; 
0x0000000000408938: ret 0x894c; 
0x00000000004205fd: ret 0x894c; 
0x000000000042f91d: ret 0x894c; 
0x000000000044830c: ret 0x894c; 
0x00000000004483b5: ret 0x894c; 
0x000000000044d0b5: ret 0x894c; 
0x0000000000401f37: ret 0x894d; 
0x0000000000401f77: ret 0x894d; 
0x0000000000407efa: ret 0x8966; 
0x00000000004080c2: ret 0x8966; 
0x0000000000408623: ret 0x8966; 
0x0000000000408e88: ret 0x8966; 
0x0000000000408e9c: ret 0x8966; 
0x0000000000409af8: ret 0x8966; 
0x0000000000409c62: ret 0x8966; 
0x0000000000432843: ret 0x8966; 
0x0000000000432a33: ret 0x8966; 
0x00000000004030f2: ret 0x8a01; 
0x000000000043775a: ret 0x8a01; 
0x00000000004336b0: ret 0x8a40; 
0x0000000000408956: ret 0x8b48; 
0x0000000000408f0f: ret 0x8b48; 
0x000000000040b990: ret 0x8b48; 
0x000000000040b9f0: ret 0x8b48; 
0x000000000040c177: ret 0x8b48; 
0x000000000040c2b5: ret 0x8b48; 
0x0000000000411c85: ret 0x8b48; 
0x00000000004125b2: ret 0x8b48; 
0x0000000000413780: ret 0x8b48; 
0x00000000004192bc: ret 0x8b48; 
0x000000000041934c: ret 0x8b48; 
0x0000000000419362: ret 0x8b48; 
0x000000000041938c: ret 0x8b48; 
0x00000000004193a2: ret 0x8b48; 
0x0000000000419555: ret 0x8b48; 
0x000000000041956b: ret 0x8b48; 
0x000000000041ef30: ret 0x8b48; 
0x000000000041ef46: ret 0x8b48; 
0x0000000000423d7d: ret 0x8b48; 
0x0000000000426776: ret 0x8b48; 
0x00000000004267b1: ret 0x8b48; 
0x000000000042f093: ret 0x8b48; 
0x000000000043bc3f: ret 0x8b48; 
0x000000000043f558: ret 0x8b48; 
0x0000000000442fda: ret 0x8b48; 
0x000000000044d7e2: ret 0x8b48; 
0x000000000044da32: ret 0x8b48; 
0x0000000000453210: ret 0x8b48; 
0x0000000000455ccc: ret 0x8b48; 
0x000000000045930d: ret 0x8b48; 
0x00000000004598f7: ret 0x8b48; 
0x0000000000459937: ret 0x8b48; 
0x000000000043f341: ret 0x8b49; 
0x000000000043fafb: ret 0x8b49; 
0x0000000000402ad0: ret 0x8bf; 
0x0000000000404013: ret 0x8d48; 
0x0000000000407b60: ret 0x8d48; 
0x000000000040c0da: ret 0x8d48; 
0x000000000040cfc4: ret 0x8d48; 
0x000000000040d034: ret 0x8d48; 
0x00000000004122da: ret 0x8d48; 
0x0000000000413f78: ret 0x8d48; 
0x000000000041795a: ret 0x8d48; 
0x00000000004179c2: ret 0x8d48; 
0x0000000000424d27: ret 0x8d48; 
0x0000000000426e32: ret 0x8d48; 
0x0000000000437cd7: ret 0x8d48; 
0x0000000000439bac: ret 0x8d48; 
0x0000000000439c0c: ret 0x8d48; 
0x000000000043ae95: ret 0x8d48; 
0x0000000000443a26: ret 0x8d48; 
0x000000000044cd6c: ret 0x8d48; 
0x000000000044ce34: ret 0x8d48; 
0x000000000044d03c: ret 0x8d48; 
0x0000000000455580: ret 0x8d48; 
0x00000000004556b0: ret 0x8d48; 
0x000000000040f889: ret 0x8d49; 
0x0000000000457146: ret 0x8d49; 
0x00000000004571b3: ret 0x8d49; 
0x000000000041f8d2: ret 0x8d4c; 
0x000000000040465a: ret 0x8d67; 
0x00000000004046e2: ret 0x8d67; 
0x00000000004298d0: ret 0x8d7d; 
0x00000000004452f7: ret 0x8e0f; 
0x0000000000445abe: ret 0x8e0f; 
0x0000000000405695: ret 0x8f0f; 
0x0000000000405bbc: ret 0x8f0f; 
0x0000000000424cf7: ret 0x8f0f; 
0x000000000042bcbd: ret 0x907d; 
0x0000000000405dfc: ret 0x917d; 
0x0000000000452a01: ret 0x94e9; 
0x0000000000409c9c: ret 0x950f; 
0x000000000040a6f2: ret 0x97d; 
0x000000000040a7d2: ret 0x97d; 
0x000000000040a877: ret 0x97d; 
0x000000000040a8f0: ret 0x97d; 
0x000000000040a96f: ret 0x97d; 
0x000000000040a9f8: ret 0x97d; 
0x00000000004467fc: ret 0x98; 
0x0000000000443765: ret 0x9948; 
0x00000000004587d7: ret 0x9948; 
0x000000000045ca80: ret 0x9abf; 
0x00000000004337ca: ret 0xa0e8; 
0x000000000044bad6: ret 0xa75; 
0x00000000004482f6: ret 0xa7c; 
0x000000000040a497: ret 0xa7d; 
0x00000000004529ee: ret 0xa7e9; 
0x000000000042fdd6: ret 0xa7f; 
0x0000000000426d75: ret 0xa8b; 
0x00000000004055d6: ret 0xaf7f; 
0x0000000000405966: ret 0xaf7f; 
0x000000000045353a: ret 0xb0e8; 
0x0000000000434531: ret 0xb60f; 
0x0000000000459306: ret 0xb60f; 
0x00000000004084da: ret 0xb70f; 
0x0000000000408572: ret 0xb70f; 
0x0000000000402e15: ret 0xb841; 
0x0000000000403010: ret 0xb841; 
0x0000000000456e60: ret 0xb841; 
0x00000000004597cb: ret 0xba04; 
0x000000000045988b: ret 0xba04; 
0x00000000004597e7: ret 0xba05; 
0x00000000004529db: ret 0xbae9; 
0x000000000040a610: ret 0xbd7f; 
0x00000000004032b2: ret 0xbeb; 
0x00000000004032fc: ret 0xbeb; 
0x0000000000417dd1: ret 0xbeb; 
0x0000000000444bfc: ret 0xbee8; 
0x00000000004089c1: ret 0xbf0f; 
0x0000000000408e96: ret 0xbf0f; 
0x0000000000408ed7: ret 0xbf0f; 
0x0000000000409376: ret 0xbf0f; 
0x000000000040939d: ret 0xbf0f; 
0x0000000000409a0e: ret 0xbf0f; 
0x0000000000454b16: ret 0xc085; 
0x0000000000419dc1: ret 0xc0; 
0x000000000045c391: ret 0xc101; 
0x0000000000408b46: ret 0xc129; 
0x0000000000407a18: ret 0xc148; 
0x000000000040cc14: ret 0xc148; 
0x000000000043f1ae: ret 0xc148; 
0x0000000000442c2e: ret 0xc148; 
0x0000000000443cd4: ret 0xc148; 
0x0000000000444866: ret 0xc148; 
0x000000000044bc1e: ret 0xc148; 
0x000000000044f0f5: ret 0xc148; 
0x000000000044f4a5: ret 0xc148; 
0x000000000044f545: ret 0xc148; 
0x000000000045008c: ret 0xc148; 
0x000000000045c062: ret 0xc148; 
0x0000000000455a34: ret 0xc188; 
0x0000000000455a74: ret 0xc188; 
0x0000000000455aac: ret 0xc188; 
0x0000000000455aec: ret 0xc188; 
0x0000000000403581: ret 0xc189; 
0x000000000042dda5: ret 0xc189; 
0x000000000042ddc0: ret 0xc189; 
0x0000000000439b68: ret 0xc208; 
0x00000000004557b5: ret 0xc35b; 
0x0000000000414c16: ret 0xc383; 
0x0000000000432468: ret 0xc3; 
0x0000000000432658: ret 0xc3; 
0x0000000000432849: ret 0xc3; 
0x0000000000432a39: ret 0xc3; 
0x00000000004376b8: ret 0xc57d; 
0x0000000000403f12: ret 0xc601; 
0x000000000042bacf: ret 0xc601; 
0x00000000004593ca: ret 0xc683; 
0x0000000000456c4c: ret 0xc748; 
0x0000000000456c6c: ret 0xc748; 
0x0000000000456d7c: ret 0xc748; 
0x0000000000456d9c: ret 0xc748; 
0x000000000040a406: ret 0xc7d; 
0x000000000043f5c5: ret 0xc7e; 
0x0000000000443047: ret 0xc7e; 
0x00000000004529c8: ret 0xcde9; 
0x000000000040a366: ret 0xd089; 
0x00000000004092e7: ret 0xd148; 
0x000000000040f04b: ret 0xd148; 
0x0000000000442dc1: ret 0xd148; 
0x000000000044357b: ret 0xd148; 
0x000000000040a14b: ret 0xd189; 
0x0000000000417af5: ret 0xd189; 
0x000000000043b7c2: ret 0xd389; 
0x0000000000449fd3: ret 0xd389; 
0x000000000044c4bb: ret 0xd389; 
0x0000000000408473: ret 0xd7e; 
0x0000000000410aa3: ret 0xd800; 
0x0000000000407a82: ret 0xd889; 
0x0000000000410abd: ret 0xdc00; 
0x000000000040e3c9: ret 0xdc7f; 
0x0000000000434140: ret 0xdd75; 
0x0000000000455485: ret 0xe0; 
0x00000000004555bb: ret 0xe0; 
0x00000000004556eb: ret 0xe0; 
0x0000000000455787: ret 0xe0; 
0x00000000004557ab: ret 0xe0; 
0x0000000000409be8: ret 0xe281; 
0x000000000042e1f4: ret 0xe281; 
0x000000000042e213: ret 0xe281; 
0x000000000044e2d0: ret 0xe281; 
0x000000000044e38a: ret 0xe281; 
0x0000000000450114: ret 0xe281; 
0x00000000004548b6: ret 0xe281; 
0x000000000040634d: ret 0xe283; 
0x000000000040660c: ret 0xe283; 
0x000000000040668e: ret 0xe283; 
0x00000000004066ef: ret 0xe283; 
0x000000000040670f: ret 0xe283; 
0x0000000000424018: ret 0xe283; 
0x000000000042401f: ret 0xe283; 
0x0000000000424030: ret 0xe283; 
0x0000000000424041: ret 0xe283; 
0x0000000000424052: ret 0xe283; 
0x0000000000424084: ret 0xe283; 
0x000000000042408b: ret 0xe283; 
0x0000000000424099: ret 0xe283; 
0x00000000004240a7: ret 0xe283; 
0x00000000004240b5: ret 0xe283; 
0x0000000000417aea: ret 0xe2c1; 
0x000000000042500e: ret 0xe883; 
0x000000000045c8a3: ret 0xe8bf; 
0x000000000040254d: ret 0xe8d1; 
0x000000000045549b: ret 0xe8e0; 
0x0000000000455798: ret 0xe8e0; 
0x000000000041057e: ret 0xe901; 
0x00000000004105b9: ret 0xe902; 
0x000000000041060b: ret 0xe903; 
0x000000000042e1ec: ret 0xeac1; 
0x000000000042e20b: ret 0xeac1; 
0x0000000000403136: ret 0xeb01; 
0x000000000041072b: ret 0xeb01; 
0x0000000000410731: ret 0xeb02; 
0x0000000000410737: ret 0xeb03; 
0x00000000004024fc: ret 0xec76; 
0x000000000040247a: ret 0xee76; 
0x000000000040256e: ret 0xee76; 
0x0000000000452a8a: ret 0xeeb; 
0x0000000000413b33: ret 0xf01; 
0x000000000041ba71: ret 0xf01; 
0x0000000000446d01: ret 0xf01; 
0x000000000040c05a: ret 0xf0e8; 
0x000000000040607a: ret 0xf2f8; 
0x0000000000406122: ret 0xf2f8; 
0x00000000004075c1: ret 0xf30; 
0x000000000040a540: ret 0xf30; 
0x000000000040a56d: ret 0xf30; 
0x0000000000430147: ret 0xf41; 
0x0000000000430227: ret 0xf41; 
0x000000000040945a: ret 0xf48; 
0x0000000000409ad1: ret 0xf48; 
0x000000000040200e: ret 0xf601; 
0x0000000000402022: ret 0xf602; 
0x0000000000405f6b: ret 0xf66; 
0x0000000000409a09: ret 0xf748; 
0x000000000044375e: ret 0xf748; 
0x0000000000454b0f: ret 0xf748; 
0x0000000000423dbf: ret 0xf7e; 
0x000000000041f901: ret 0xf883; 
0x000000000044688c: ret 0xf8; 
0x00000000004082da: ret 0xf; 
0x000000000045c91a: ret 0xfa55; 
0x00000000004040f1: ret 0xfa80; 
0x000000000045a02a: ret 0xfa8a; 
0x000000000044c95a: ret 0xfb5f; 
0x000000000045c3ea: ret 0xfb8b; 
0x0000000000457dda: ret 0xfb99; 
0x000000000044369a: ret 0xfbf1; 
0x000000000045af8a: ret 0xfc19; 
0x00000000004505ea: ret 0xfc49; 
0x000000000043e7da: ret 0xfc8e; 
0x000000000043ad4a: ret 0xfc8f; 
0x00000000004426ba: ret 0xfc93; 
0x00000000004483ea: ret 0xfccb; 
0x0000000000440eda: ret 0xfccd; 
0x000000000043545a: ret 0xfcd4; 
0x00000000004471ea: ret 0xfcdd; 
0x00000000004371ca: ret 0xfd5d; 
0x0000000000429c0a: ret 0xfe61; 
0x00000000004287aa: ret 0xfe67; 
0x00000000004317ba: ret 0xfe6e; 
0x000000000045cb1f: ret 0xfebf; 
0x00000000004053f7: ret 0xff2; 
0x000000000040542f: ret 0xff2; 
0x0000000000405e11: ret 0xff2; 
0x0000000000408723: ret 0xff2; 
0x00000000004437ba: ret 0xff2; 
0x0000000000402b00: ret 0xff31; 
0x0000000000402077: ret 0xff49; 
0x00000000004089c4: ret 0xffb9; 
0x0000000000408eda: ret 0xffb9; 
0x0000000000420afa: ret 0xffbc; 
0x0000000000408b39: ret 0xffbe; 
0x00000000004594ea: ret 0xffbe; 
0x0000000000459b11: ret 0xffbe; 
0x000000000040d0aa: ret 0xfff3; 
0x000000000045aaea: ret 0xfff5; 
0x0000000000401cba: ret 0xfff6; 
0x000000000042609a: ret 0xfffa; 
0x0000000000458da7: ret 0xfffb; 
0x000000000043663c: ret 0xfffc; 
0x000000000043ad31: ret 0xfffc; 
0x000000000044164e: ret 0xfffc; 
0x0000000000441a59: ret 0xfffc; 
0x0000000000441bf7: ret 0xfffc; 
0x00000000004434bd: ret 0xfffc; 
0x000000000044be3a: ret 0xfffc; 
0x0000000000426c95: ret 0xfffd; 
0x0000000000426ce0: ret 0xfffd; 
0x0000000000427cba: ret 0xfffd; 
0x0000000000438bb0: ret 0xfffd; 
0x000000000041f02a: ret 0xfffe; 
0x00000000004026b5: ret 0xffff; 
0x0000000000404a65: ret 0xffff; 
0x0000000000404aa4: ret 0xffff; 
0x00000000004072ab: ret 0xffff; 
0x000000000040abf9: ret 0xffff; 
0x000000000041130b: ret 0xffff; 
0x000000000041139b: ret 0xffff; 
0x000000000041140b: ret 0xffff; 
0x000000000041881f: ret 0xffff; 
0x000000000042dc59: ret 0xffff; 
0x000000000043120e: ret 0xffff; 
0x000000000043755f: ret 0xffff; 
0x0000000000437b63: ret 0xffff; 
0x000000000043ac7e: ret 0xffff; 
0x000000000043ac9f: ret 0xffff; 
0x000000000045b4cc: ret 0xffff; 
0x0000000000401554: ret 1; 
0x0000000000401585: ret 1; 
0x00000000004015b2: ret 1; 
0x00000000004015e3: ret 1; 
0x0000000000401614: ret 1; 
0x00000000004017fe: ret 1; 
0x000000000040182f: ret 1; 
0x00000000004018e6: ret 1; 
0x000000000040196a: ret 1; 
0x00000000004019a0: ret 1; 
0x00000000004026d5: ret 1; 
0x0000000000408b34: ret 1; 
0x0000000000457c2b: ret 2; 
0x0000000000439a99: ret 3; 
0x0000000000425634: ret 4; 
0x000000000042563f: ret 4; 
0x0000000000425649: ret 4; 
0x0000000000425698: ret 4; 
0x00000000004256a5: ret 4; 
0x00000000004256af: ret 4; 
0x000000000042574c: ret 4; 
0x000000000042576e: ret 4; 
0x00000000004354fe: ret 4; 
0x0000000000426c75: ret 5; 
0x0000000000426c82: ret 5; 
0x0000000000426cc1: ret 5; 
0x0000000000426cce: ret 5; 
0x0000000000448b52: ret 5; 
0x0000000000459818: ret 6; 
0x0000000000459827: ret 7; 
0x0000000000412f8c: ret; 
0x0000000000412fd7: ret; 
0x0000000000412ffe: ret; 
0x000000000041301b: ret; 
0x000000000041305a: ret; 
0x00000000004130ba: ret; 
0x0000000000413106: ret; 
0x00000000004131ba: ret; 
0x00000000004131e2: ret; 
0x0000000000413241: ret; 
0x0000000000413298: ret; 
0x0000000000413353: ret; 
0x0000000000413383: ret; 
0x00000000004133f5: ret; 
0x0000000000413452: ret; 
0x000000000041351d: ret; 
0x0000000000413555: ret; 
0x000000000041356e: ret; 
0x0000000000413571: ret; 
0x000000000041358c: ret; 
0x000000000041358f: ret; 
0x000000000041359e: ret; 
0x00000000004135a1: ret; 
0x00000000004136d0: ret; 
0x000000000041371a: ret; 
0x0000000000413740: ret; 
0x0000000000413753: ret; 
0x00000000004137bd: ret; 
0x000000000041380a: ret; 
0x000000000041385b: ret; 
0x000000000041386e: ret; 
0x0000000000413871: ret; 
0x00000000004138e1: ret; 
0x0000000000413937: ret; 
0x0000000000413952: ret; 
0x0000000000413963: ret; 
0x00000000004139a1: ret; 
0x0000000000413a07: ret; 
0x0000000000413a41: ret; 
0x0000000000413aaa: ret; 
0x0000000000413af5: ret; 
0x0000000000413b78: ret; 
0x0000000000413b85: ret; 
0x0000000000413b94: ret; 
0x0000000000413bbe: ret; 
0x0000000000413bd9: ret; 
0x0000000000413c0d: ret; 
0x0000000000413c10: ret; 
0x0000000000413c24: ret; 
0x0000000000413d33: ret; 
0x0000000000413ea6: ret; 
0x0000000000413eb3: ret; 
0x0000000000413ec3: ret; 
0x0000000000413f1d: ret; 
0x0000000000413f23: ret; 
0x0000000000413f33: ret; 
0x0000000000413fa0: ret; 
0x00000000004140b4: ret; 
0x000000000041413d: ret; 
0x00000000004141a1: ret; 
0x000000000041422d: ret; 
0x0000000000414291: ret; 
0x000000000041432e: ret; 
0x000000000041433f: ret; 
0x000000000041436c: ret; 
0x0000000000414423: ret; 
0x000000000041445c: ret; 
0x00000000004144ec: ret; 
0x00000000004144f4: ret; 
0x0000000000414534: ret; 
0x00000000004145f9: ret; 
0x0000000000414652: ret; 
0x0000000000414666: ret; 
0x0000000000414673: ret; 
0x00000000004146b0: ret; 
0x00000000004146e9: ret; 
0x0000000000414703: ret; 
0x0000000000414752: ret; 
0x00000000004147b2: ret; 
0x00000000004147d6: ret; 
0x00000000004147fd: ret; 
0x000000000041481b: ret; 
0x0000000000414969: ret; 
0x000000000041498a: ret; 
0x00000000004149ab: ret; 
0x00000000004149cb: ret; 
0x00000000004149e9: ret; 
0x0000000000414a19: ret; 
0x0000000000414a4d: ret; 
0x0000000000414a90: ret; 
0x0000000000414ae8: ret; 
0x0000000000414b37: ret; 
0x0000000000414c0e: ret; 
0x0000000000414c18: ret; 
0x0000000000414c58: ret; 
0x0000000000414ce8: ret; 
0x0000000000414e12: ret; 
0x0000000000414e3a: ret; 
0x0000000000414e61: ret; 
0x0000000000414e89: ret; 
0x0000000000414f12: ret; 
0x0000000000414fa2: ret; 
0x0000000000415016: ret; 
0x0000000000415083: ret; 
0x00000000004150e8: ret; 
0x0000000000415107: ret; 
0x000000000041512c: ret; 
0x000000000041518b: ret; 
0x00000000004151a2: ret; 
0x00000000004151c6: ret; 
0x00000000004151f6: ret; 
0x0000000000415226: ret; 
0x0000000000415256: ret; 
0x000000000041528e: ret; 
0x000000000041536c: ret; 
0x0000000000415403: ret; 
0x000000000041542f: ret; 
0x000000000041545d: ret; 
0x0000000000415470: ret; 
0x0000000000415490: ret; 
0x00000000004154b0: ret; 
0x00000000004154d0: ret; 
0x00000000004154f0: ret; 
0x0000000000415510: ret; 
0x0000000000415541: ret; 
0x000000000041556f: ret; 
0x0000000000415591: ret; 
0x00000000004155be: ret; 
0x00000000004155d5: ret; 
0x00000000004155f5: ret; 
0x0000000000415610: ret; 
0x0000000000415630: ret; 
0x0000000000415650: ret; 
0x000000000041567d: ret; 
0x000000000041569c: ret; 
0x00000000004156d1: ret; 
0x000000000041575c: ret; 
0x0000000000415770: ret; 
0x0000000000415790: ret; 
0x00000000004157b0: ret; 
0x000000000041583e: ret; 
0x00000000004158be: ret; 
0x00000000004158e3: ret; 
0x0000000000415913: ret; 
0x000000000041594a: ret; 
0x0000000000415972: ret; 
0x00000000004159a3: ret; 
0x00000000004159ce: ret; 
0x00000000004159e0: ret; 
0x0000000000415a05: ret; 
0x0000000000415a25: ret; 
0x0000000000415a43: ret; 
0x0000000000415a65: ret; 
0x0000000000415a83: ret; 
0x0000000000415aa0: ret; 
0x0000000000415ac0: ret; 
0x0000000000415ae0: ret; 
0x0000000000415b00: ret; 
0x0000000000415b20: ret; 
0x0000000000415b4f: ret; 
0x0000000000415b6c: ret; 
0x0000000000415b9b: ret; 
0x0000000000415c1c: ret; 
0x0000000000415c23: ret; 
0x0000000000415c40: ret; 
0x0000000000415c60: ret; 
0x0000000000415c80: ret; 
0x0000000000415d0a: ret; 
0x0000000000415d28: ret; 
0x0000000000415d48: ret; 
0x0000000000415d66: ret; 
0x0000000000415d86: ret; 
0x0000000000415da8: ret; 
0x0000000000415dc6: ret; 
0x0000000000415de0: ret; 
0x0000000000415e00: ret; 
0x0000000000415e20: ret; 
0x0000000000415e5f: ret; 
0x0000000000415e8f: ret; 
0x0000000000415ebf: ret; 
0x0000000000415ed3: ret; 
0x0000000000415f0f: ret; 
0x0000000000415f3f: ret; 
0x0000000000415f6c: ret; 
0x0000000000415f9f: ret; 
0x0000000000415fcf: ret; 
0x0000000000415fff: ret; 
0x000000000041602f: ret; 
0x000000000041605f: ret; 
0x000000000041608f: ret; 
0x00000000004160a3: ret; 
0x00000000004160c5: ret; 
0x00000000004160e5: ret; 
0x0000000000416105: ret; 
0x0000000000416125: ret; 
0x0000000000416145: ret; 
0x0000000000416160: ret; 
0x00000000004161c4: ret; 
0x0000000000416224: ret; 
0x0000000000416240: ret; 
0x0000000000416265: ret; 
0x0000000000416283: ret; 
0x00000000004162a5: ret; 
0x00000000004162c3: ret; 
0x00000000004162e0: ret; 
0x0000000000416300: ret; 
0x0000000000416320: ret; 
0x0000000000416340: ret; 
0x0000000000416360: ret; 
0x000000000041638f: ret; 
0x00000000004163ac: ret; 
0x00000000004163df: ret; 
0x0000000000416461: ret; 
0x0000000000416468: ret; 
0x0000000000416480: ret; 
0x00000000004164a0: ret; 
0x00000000004164c0: ret; 
0x00000000004164e8: ret; 
0x0000000000416508: ret; 
0x0000000000416526: ret; 
0x0000000000416546: ret; 
0x0000000000416568: ret; 
0x0000000000416586: ret; 
0x00000000004165a0: ret; 
0x00000000004165c0: ret; 
0x00000000004165f1: ret; 
0x000000000041661f: ret; 
0x0000000000416641: ret; 
0x000000000041666f: ret; 
0x000000000041668d: ret; 
0x00000000004166ae: ret; 
0x00000000004166c5: ret; 
0x00000000004166e5: ret; 
0x0000000000416700: ret; 
0x000000000041672d: ret; 
0x000000000041674c: ret; 
0x0000000000416781: ret; 
0x0000000000416810: ret; 
0x0000000000416830: ret; 
0x0000000000416850: ret; 
0x0000000000416870: ret; 
0x00000000004168a3: ret; 
0x00000000004168d3: ret; 
0x000000000041690a: ret; 
0x0000000000416932: ret; 
0x0000000000416963: ret; 
0x000000000041698e: ret; 
0x00000000004169a0: ret; 
0x00000000004169ce: ret; 
0x00000000004169e3: ret; 
0x0000000000416a03: ret; 
0x0000000000416a1f: ret; 
0x0000000000416a35: ret; 
0x0000000000416a6e: ret; 
0x0000000000416abb: ret; 
0x0000000000416b1f: ret; 
0x0000000000416b49: ret; 
0x0000000000416baf: ret; 
0x0000000000416bd9: ret; 
0x0000000000416c11: ret; 
0x0000000000416c51: ret; 
0x0000000000416cb9: ret; 
0x0000000000416cbf: ret; 
0x0000000000416ce9: ret; 
0x0000000000416d4f: ret; 
0x0000000000416d79: ret; 
0x0000000000416dfb: ret; 
0x0000000000416e2f: ret; 
0x0000000000416e3e: ret; 
0x0000000000416e4f: ret; 
0x0000000000416e73: ret; 
0x0000000000416fba: ret; 
0x0000000000416fe0: ret; 
0x0000000000417009: ret; 
0x0000000000417019: ret; 
0x000000000041702f: ret; 
0x0000000000417077: ret; 
0x0000000000417082: ret; 
0x000000000041708a: ret; 
0x00000000004170ae: ret; 
0x0000000000417183: ret; 
0x000000000041728c: ret; 
0x0000000000417393: ret; 
0x000000000041755d: ret; 
0x0000000000417658: ret; 
0x000000000041766f: ret; 
0x0000000000417699: ret; 
0x00000000004176c2: ret; 
0x00000000004176e2: ret; 
0x0000000000417719: ret; 
0x0000000000417742: ret; 
0x0000000000417762: ret; 
0x0000000000417799: ret; 
0x00000000004177c2: ret; 
0x00000000004177e2: ret; 
0x00000000004177ff: ret; 
0x000000000041780f: ret; 
0x0000000000417878: ret; 
0x0000000000417882: ret; 
0x00000000004178ba: ret; 
0x00000000004178cf: ret; 
0x00000000004178ef: ret; 
0x0000000000417930: ret; 
0x0000000000417a52: ret; 
0x0000000000417b0b: ret; 
0x0000000000417b18: ret; 
0x0000000000417b27: ret; 
0x0000000000417b2d: ret; 
0x0000000000417b7d: ret; 
0x0000000000417bb4: ret; 
0x0000000000417bcd: ret; 
0x0000000000417bd8: ret; 
0x0000000000417be8: ret; 
0x0000000000417bf8: ret; 
0x0000000000417c1d: ret; 
0x0000000000417c29: ret; 
0x0000000000417c5c: ret; 
0x0000000000417c85: ret; 
0x0000000000417cad: ret; 
0x0000000000417ccd: ret; 
0x0000000000417ced: ret; 
0x0000000000417d0d: ret; 
0x0000000000417d2d: ret; 
0x0000000000417d4d: ret; 
0x0000000000417daf: ret; 
0x0000000000417df1: ret; 
0x0000000000417e34: ret; 
0x0000000000417e8d: ret; 
0x0000000000417ea4: ret; 
0x0000000000417eed: ret; 
0x0000000000417f50: ret; 
0x0000000000417f83: ret; 
0x0000000000417fcf: ret; 
0x0000000000418156: ret; 
0x00000000004181a9: ret; 
0x00000000004181ee: ret; 
0x00000000004181fa: ret; 
0x0000000000418227: ret; 
0x0000000000418235: ret; 
0x0000000000418338: ret; 
0x0000000000418354: ret; 
0x000000000041836f: ret; 
0x00000000004183a0: ret; 
0x00000000004183e4: ret; 
0x0000000000418456: ret; 
0x000000000041849f: ret; 
0x0000000000418533: ret; 
0x0000000000418574: ret; 
0x00000000004185ad: ret; 
0x00000000004185d9: ret; 
0x000000000041863f: ret; 
0x0000000000418651: ret; 
0x0000000000418671: ret; 
0x00000000004186a3: ret; 
0x00000000004187c8: ret; 
0x00000000004188cb: ret; 
0x0000000000418981: ret; 
0x00000000004189bc: ret; 
0x0000000000418a03: ret; 
0x0000000000418acb: ret; 
0x0000000000418af1: ret; 
0x0000000000418bed: ret; 
0x0000000000418c0a: ret; 
0x0000000000418c2a: ret; 
0x0000000000418c44: ret; 
0x0000000000418c6a: ret; 
0x0000000000418c96: ret; 
0x0000000000418ca0: ret; 
0x0000000000418ce3: ret; 
0x0000000000418d2b: ret; 
0x0000000000418fc4: ret; 
0x0000000000418ff0: ret; 
0x0000000000419006: ret; 
0x000000000041901f: ret; 
0x000000000041902f: ret; 
0x0000000000419045: ret; 
0x0000000000419073: ret; 
0x0000000000419076: ret; 
0x0000000000419091: ret; 
0x00000000004190af: ret; 
0x00000000004190c0: ret; 
0x00000000004190df: ret; 
0x00000000004190f0: ret; 
0x0000000000419110: ret; 
0x0000000000419130: ret; 
0x0000000000419150: ret; 
0x000000000041916f: ret; 
0x0000000000419180: ret; 
0x000000000041919f: ret; 
0x00000000004191b0: ret; 
0x00000000004191d0: ret; 
0x00000000004191f6: ret; 
0x0000000000419210: ret; 
0x0000000000419230: ret; 
0x0000000000419289: ret; 
0x000000000041930f: ret; 
0x0000000000419339: ret; 
0x000000000041936f: ret; 
0x0000000000419377: ret; 
0x00000000004193af: ret; 
0x00000000004193bf: ret; 
0x0000000000419434: ret; 
0x0000000000419435: ret; 
0x00000000004194bf: ret; 
0x0000000000419537: ret; 
0x0000000000419593: ret; 
0x00000000004195cb: ret; 
0x0000000000419612: ret; 
0x000000000041969b: ret; 
0x000000000041969f: ret; 
0x0000000000419739: ret; 
0x000000000041976d: ret; 
0x00000000004197b7: ret; 
0x000000000041986d: ret; 
0x0000000000419893: ret; 
0x0000000000419b90: ret; 
0x0000000000419cdb: ret; 
0x0000000000419d7d: ret; 
0x0000000000419df9: ret; 
0x0000000000419f47: ret; 
0x0000000000419f87: ret; 
0x0000000000419fa6: ret; 
0x0000000000419fb2: ret; 
0x000000000041a00d: ret; 
0x000000000041a04a: ret; 
0x000000000041a0e1: ret; 
0x000000000041a184: ret; 
0x000000000041a218: ret; 
0x000000000041a260: ret; 
0x000000000041a2b8: ret; 
0x000000000041a300: ret; 
0x000000000041a33f: ret; 
0x000000000041a351: ret; 
0x000000000041a356: ret; 
0x000000000041a375: ret; 
0x000000000041a380: ret; 
0x000000000041a398: ret; 
0x000000000041a3b7: ret; 
0x000000000041a4ad: ret; 
0x000000000041a4ed: ret; 
0x000000000041a52c: ret; 
0x000000000041a5e0: ret; 
0x000000000041a636: ret; 
0x000000000041a661: ret; 
0x000000000041a693: ret; 
0x000000000041a6d1: ret; 
0x000000000041a745: ret; 
0x000000000041a78c: ret; 
0x000000000041a869: ret; 
0x000000000041a88b: ret; 
0x000000000041a895: ret; 
0x000000000041a90c: ret; 
0x000000000041a93e: ret; 
0x000000000041a99b: ret; 
0x000000000041a9c7: ret; 
0x000000000041aa09: ret; 
0x000000000041aa50: ret; 
0x000000000041aa81: ret; 
0x000000000041aab2: ret; 
0x000000000041aae2: ret; 
0x000000000041ab13: ret; 
0x000000000041ab31: ret; 
0x000000000041ab50: ret; 
0x000000000041ab6f: ret; 
0x000000000041ab80: ret; 
0x000000000041aba0: ret; 
0x000000000041abc0: ret; 
0x000000000041abe0: ret; 
0x000000000041ac00: ret; 
0x000000000041ac20: ret; 
0x000000000041ac40: ret; 
0x000000000041ac60: ret; 
0x000000000041ac80: ret; 
0x000000000041aca0: ret; 
0x000000000041acc0: ret; 
0x000000000041ace0: ret; 
0x000000000041ad00: ret; 
0x000000000041ad20: ret; 
0x000000000041ad40: ret; 
0x000000000041ad60: ret; 
0x000000000041ad80: ret; 
0x000000000041ada1: ret; 
0x000000000041adc5: ret; 
0x000000000041adf9: ret; 
0x000000000041ae26: ret; 
0x000000000041ae40: ret; 
0x000000000041ae60: ret; 
0x000000000041ae80: ret; 
0x000000000041aea0: ret; 
0x000000000041aec0: ret; 
0x000000000041aee0: ret; 
0x000000000041af00: ret; 
0x000000000041af20: ret; 
0x000000000041af40: ret; 
0x000000000041af60: ret; 
0x000000000041af80: ret; 
0x000000000041b082: ret; 
0x000000000041b0a6: ret; 
0x000000000041b0c1: ret; 
0x000000000041b0e4: ret; 
0x000000000041b104: ret; 
0x000000000041b121: ret; 
0x000000000041b144: ret; 
0x000000000041b17c: ret; 
0x000000000041b192: ret; 
0x000000000041b1b2: ret; 
0x000000000041b1e7: ret; 
0x000000000041b21c: ret; 
0x000000000041b232: ret; 
0x000000000041b251: ret; 
0x000000000041b289: ret; 
0x000000000041b2b7: ret; 
0x000000000041b2ec: ret; 
0x000000000041b319: ret; 
0x000000000041b347: ret; 
0x000000000041b377: ret; 
0x000000000041b396: ret; 
0x000000000041b3dd: ret; 
0x000000000041b3f6: ret; 
0x000000000041b3ff: ret; 
0x000000000041b422: ret; 
0x000000000041b436: ret; 
0x000000000041b479: ret; 
0x000000000041b486: ret; 
0x000000000041b4b2: ret; 
0x000000000041b4c6: ret; 
0x000000000041b4f7: ret; 
0x000000000041b584: ret; 
0x000000000041b5a0: ret; 
0x000000000041b5c0: ret; 
0x000000000041b5df: ret; 
0x000000000041b631: ret; 
0x000000000041b659: ret; 
0x000000000041b670: ret; 
0x000000000041b69e: ret; 
0x000000000041b6b0: ret; 
0x000000000041b6d0: ret; 
0x000000000041b6ef: ret; 
0x000000000041b6ff: ret; 
0x000000000041b70f: ret; 
0x000000000041b725: ret; 
0x000000000041b757: ret; 
0x000000000041b852: ret; 
0x000000000041b86f: ret; 
0x000000000041b87f: ret; 
0x000000000041b88f: ret; 
0x000000000041b89f: ret; 
0x000000000041b8b2: ret; 
0x000000000041b8cf: ret; 
0x000000000041b8e6: ret; 
0x000000000041b8ff: ret; 
0x000000000041b91e: ret; 
0x000000000041b99e: ret; 
0x000000000041b9be: ret; 
0x000000000041ba59: ret; 
0x000000000041ba91: ret; 
0x000000000041babc: ret; 
0x000000000041bb1c: ret; 
0x000000000041bb3c: ret; 
0x000000000041bba8: ret; 
0x000000000041bbec: ret; 
0x000000000041bc98: ret; 
0x000000000041bce6: ret; 
0x000000000041bd36: ret; 
0x000000000041bdc9: ret; 
0x000000000041be59: ret; 
0x000000000041be6f: ret; 
0x000000000041beac: ret; 
0x000000000041bef9: ret; 
0x000000000041bf0f: ret; 
0x000000000041bf4c: ret; 
0x000000000041bfb1: ret; 
0x000000000041c1b4: ret; 
0x000000000041c26e: ret; 
0x000000000041c30b: ret; 
0x000000000041c405: ret; 
0x000000000041c4be: ret; 
0x000000000041c4cb: ret; 
0x000000000041c4e2: ret; 
0x000000000041c512: ret; 
0x000000000041c577: ret; 
0x000000000041c682: ret; 
0x000000000041c713: ret; 
0x000000000041c76c: ret; 
0x000000000041c7bc: ret; 
0x000000000041c83f: ret; 
0x000000000041c8bf: ret; 
0x000000000041c940: ret; 
0x000000000041ca07: ret; 
0x000000000041caee: ret; 
0x000000000041cb35: ret; 
0x000000000041cb82: ret; 
0x000000000041cbd5: ret; 
0x000000000041cc8f: ret; 
0x000000000041cd06: ret; 
0x000000000041ce62: ret; 
0x000000000041d01d: ret; 
0x000000000041d09f: ret; 
0x000000000041d11f: ret; 
0x000000000041d169: ret; 
0x000000000041d1a0: ret; 
0x000000000041d2b8: ret; 
0x000000000041d2f9: ret; 
0x000000000041d435: ret; 
0x000000000041d479: ret; 
0x000000000041d5a0: ret; 
0x000000000041d5e9: ret; 
0x000000000041d731: ret; 
0x000000000041d779: ret; 
0x000000000041d79b: ret; 
0x000000000041d7d9: ret; 
0x000000000041d7e7: ret; 
0x000000000041d80e: ret; 
0x000000000041d841: ret; 
0x000000000041d881: ret; 
0x000000000041d8b8: ret; 
0x000000000041d92e: ret; 
0x000000000041d995: ret; 
0x000000000041da35: ret; 
0x000000000041daca: ret; 
0x000000000041daea: ret; 
0x000000000041dbbc: ret; 
0x000000000041dc22: ret; 
0x000000000041dcab: ret; 
0x000000000041dd1a: ret; 
0x000000000041dd22: ret; 
0x000000000041ddbf: ret; 
0x000000000041defe: ret; 
0x000000000041e05d: ret; 
0x000000000041e0d4: ret; 
0x000000000041e15d: ret; 
0x000000000041e326: ret; 
0x000000000041e4ca: ret; 
0x000000000041e544: ret; 
0x000000000041e5c4: ret; 
0x000000000041e63c: ret; 
0x000000000041e647: ret; 
0x000000000041e662: ret; 
0x000000000041e6dc: ret; 
0x000000000041e6e7: ret; 
0x000000000041e702: ret; 
0x000000000041e7d0: ret; 
0x000000000041e89e: ret; 
0x000000000041e955: ret; 
0x000000000041e9d0: ret; 
0x000000000041ea5e: ret; 
0x000000000041eac9: ret; 
0x000000000041eb43: ret; 
0x000000000041ec45: ret; 
0x000000000041ed59: ret; 
0x000000000041eee3: ret; 
0x000000000041ef5c: ret; 
0x000000000041ef89: ret; 
0x000000000041f008: ret; 
0x000000000041f052: ret; 
0x000000000041f170: ret; 
0x000000000041f3a5: ret; 
0x000000000041f600: ret; 
0x000000000041f62a: ret; 
0x000000000041f725: ret; 
0x000000000041f818: ret; 
0x000000000041f926: ret; 
0x000000000041f996: ret; 
0x000000000041f9b6: ret; 
0x000000000041f9e1: ret; 
0x000000000041fa49: ret; 
0x000000000041fb52: ret; 
0x000000000041fc27: ret; 
0x000000000041fc82: ret; 
0x000000000041fce3: ret; 
0x000000000041fe32: ret; 
0x000000000041ff62: ret; 
0x0000000000420056: ret; 
0x00000000004200f0: ret; 
0x00000000004201c0: ret; 
0x000000000042025b: ret; 
0x000000000042030c: ret; 
0x000000000042039b: ret; 
0x000000000042044e: ret; 
0x0000000000420505: ret; 
0x00000000004205a4: ret; 
0x0000000000420639: ret; 
0x0000000000420671: ret; 
0x00000000004206df: ret; 
0x0000000000420708: ret; 
0x0000000000420778: ret; 
0x000000000042085f: ret; 
0x0000000000420872: ret; 
0x00000000004208ab: ret; 
0x000000000042090a: ret; 
0x0000000000420976: ret; 
0x00000000004209d9: ret; 
0x0000000000420a2b: ret; 
0x0000000000420a48: ret; 
0x0000000000420aa9: ret; 
0x0000000000420ad2: ret; 
0x0000000000420b45: ret; 
0x0000000000420b9b: ret; 
0x0000000000420c1f: ret; 
0x0000000000420c9f: ret; 
0x0000000000420d5f: ret; 
0x0000000000420d7e: ret; 
0x0000000000420dcc: ret; 
0x0000000000420e1c: ret; 
0x0000000000420e9f: ret; 
0x0000000000420f1f: ret; 
0x0000000000420f69: ret; 
0x0000000000420fa0: ret; 
0x000000000042109f: ret; 
0x0000000000421194: ret; 
0x00000000004211e0: ret; 
0x0000000000421230: ret; 
0x0000000000421335: ret; 
0x0000000000421365: ret; 
0x000000000042139a: ret; 
0x00000000004213c4: ret; 
0x00000000004213fa: ret; 
0x0000000000421449: ret; 
0x0000000000421486: ret; 
0x0000000000421585: ret; 
0x00000000004215b5: ret; 
0x00000000004215ea: ret; 
0x0000000000421614: ret; 
0x000000000042164a: ret; 
0x00000000004216d5: ret; 
0x0000000000421780: ret; 
0x000000000042183b: ret; 
0x00000000004218e8: ret; 
0x000000000042198f: ret; 
0x0000000000421a1c: ret; 
0x0000000000421aaa: ret; 
0x0000000000421b26: ret; 
0x0000000000421c82: ret; 
0x0000000000421e2a: ret; 
0x0000000000421eaf: ret; 
0x0000000000421f2f: ret; 
0x0000000000421fb0: ret; 
0x0000000000421fcf: ret; 
0x0000000000421fdf: ret; 
0x0000000000421fef: ret; 
0x0000000000421fff: ret; 
0x0000000000422015: ret; 
0x000000000042202f: ret; 
0x000000000042203f: ret; 
0x000000000042220a: ret; 
0x00000000004222b3: ret; 
0x0000000000422338: ret; 
0x000000000042239d: ret; 
0x0000000000422418: ret; 
0x000000000042247d: ret; 
0x0000000000422539: ret; 
0x000000000042254b: ret; 
0x000000000042258b: ret; 
0x00000000004225c3: ret; 
0x0000000000422657: ret; 
0x00000000004226a5: ret; 
0x00000000004226b7: ret; 
0x00000000004226e8: ret; 
0x0000000000422747: ret; 
0x00000000004227b5: ret; 
0x000000000042283a: ret; 
0x00000000004228f8: ret; 
0x00000000004229d3: ret; 
0x0000000000422e19: ret; 
0x0000000000422ec6: ret; 
0x0000000000422f76: ret; 
0x0000000000423026: ret; 
0x0000000000423054: ret; 
0x00000000004230df: ret; 
0x0000000000423186: ret; 
0x0000000000423236: ret; 
0x00000000004232e6: ret; 
0x00000000004233b3: ret; 
0x0000000000423433: ret; 
0x00000000004234b3: ret; 
0x0000000000423533: ret; 
0x00000000004235b9: ret; 
0x0000000000423666: ret; 
0x0000000000423716: ret; 
0x00000000004237c6: ret; 
0x00000000004237e5: ret; 
0x00000000004237f7: ret; 
0x0000000000423817: ret; 
0x0000000000423847: ret; 
0x000000000042387d: ret; 
0x000000000042389b: ret; 
0x00000000004238c1: ret; 
0x00000000004238eb: ret; 
0x0000000000423911: ret; 
0x0000000000423922: ret; 
0x0000000000423932: ret; 
0x0000000000423942: ret; 
0x0000000000423952: ret; 
0x0000000000423962: ret; 
0x0000000000423972: ret; 
0x0000000000423982: ret; 
0x0000000000423992: ret; 
0x00000000004239a2: ret; 
0x00000000004239b2: ret; 
0x00000000004239c2: ret; 
0x00000000004239df: ret; 
0x00000000004239f5: ret; 
0x0000000000423a10: ret; 
0x0000000000423a30: ret; 
0x0000000000423a50: ret; 
0x0000000000423a70: ret; 
0x0000000000423a90: ret; 
0x0000000000423ab6: ret; 
0x0000000000423ad0: ret; 
0x0000000000423af0: ret; 
0x0000000000423b10: ret; 
0x0000000000423b30: ret; 
0x0000000000423b50: ret; 
0x0000000000423b6e: ret; 
0x0000000000423bb1: ret; 
0x0000000000423bcd: ret; 
0x0000000000423be9: ret; 
0x0000000000423bfc: ret; 
0x0000000000423c5f: ret; 
0x0000000000423c7a: ret; 
0x0000000000423cdf: ret; 
0x0000000000423d3f: ret; 
0x0000000000423e14: ret; 
0x0000000000423e3f: ret; 
0x0000000000423ea7: ret; 
0x0000000000423eb8: ret; 
0x0000000000423ed0: ret; 
0x0000000000423efe: ret; 
0x0000000000423f19: ret; 
0x0000000000423f40: ret; 
0x0000000000423f6d: ret; 
0x0000000000423f8f: ret; 
0x0000000000423fa4: ret; 
0x0000000000423fa7: ret; 
0x0000000000424165: ret; 
0x00000000004241b5: ret; 
0x0000000000424211: ret; 
0x0000000000424344: ret; 
0x00000000004243a6: ret; 
0x00000000004243ec: ret; 
0x0000000000424402: ret; 
0x0000000000424461: ret; 
0x00000000004244e9: ret; 
0x00000000004245e0: ret; 
0x0000000000424626: ret; 
0x0000000000424638: ret; 
0x0000000000424648: ret; 
0x0000000000424890: ret; 
0x0000000000424936: ret; 
0x0000000000424b3b: ret; 
0x0000000000424b88: ret; 
0x0000000000424bd0: ret; 
0x0000000000424d0d: ret; 
0x0000000000424d48: ret; 
0x0000000000424d6b: ret; 
0x0000000000424db1: ret; 
0x0000000000424e01: ret; 
0x0000000000424ed6: ret; 
0x0000000000424efc: ret; 
0x0000000000424f83: ret; 
0x0000000000424fe6: ret; 
0x00000000004250b3: ret; 
0x000000000042510a: ret; 
0x000000000042510d: ret; 
0x0000000000425137: ret; 
0x00000000004251d3: ret; 
0x0000000000425279: ret; 
0x00000000004253cf: ret; 
0x000000000042540c: ret; 
0x000000000042544d: ret; 
0x000000000042546f: ret; 
0x0000000000425490: ret; 
0x00000000004254bb: ret; 
0x000000000042553b: ret; 
0x000000000042554c: ret; 
0x0000000000425576: ret; 
0x00000000004255d8: ret; 
0x00000000004255fe: ret; 
0x0000000000425618: ret; 
0x000000000042562d: ret; 
0x000000000042564f: ret; 
0x00000000004256f1: ret; 
0x00000000004256f9: ret; 
0x000000000042573a: ret; 
0x0000000000425830: ret; 
0x0000000000425858: ret; 
0x0000000000425878: ret; 
0x00000000004258d9: ret; 
0x0000000000425997: ret; 
0x00000000004259fa: ret; 
0x0000000000425a5a: ret; 
0x0000000000425ab7: ret; 
0x0000000000425afb: ret; 
0x0000000000425b02: ret; 
0x0000000000425b51: ret; 
0x0000000000425b74: ret; 
0x0000000000425bbd: ret; 
0x0000000000425bfd: ret; 
0x0000000000425c09: ret; 
0x0000000000425c37: ret; 
0x0000000000425c63: ret; 
0x0000000000425cfd: ret; 
0x00000000004261c0: ret; 
0x00000000004261c3: ret; 
0x00000000004261d3: ret; 
0x00000000004261fb: ret; 
0x00000000004262b6: ret; 
0x00000000004264f7: ret; 
0x00000000004265c6: ret; 
0x0000000000426726: ret; 
0x000000000042675e: ret; 
0x00000000004267f7: ret; 
0x000000000042689b: ret; 
0x0000000000426933: ret; 
0x0000000000426b2a: ret; 
0x0000000000426b33: ret; 
0x0000000000426b4a: ret; 
0x0000000000426b9c: ret; 
0x0000000000426bbc: ret; 
0x0000000000426bf9: ret; 
0x0000000000426c39: ret; 
0x0000000000426c61: ret; 
0x0000000000426c99: ret; 
0x0000000000426ce8: ret; 
0x0000000000426d02: ret; 
0x0000000000426d26: ret; 
0x0000000000426d46: ret; 
0x0000000000426d66: ret; 
0x0000000000426dbb: ret; 
0x0000000000426dc3: ret; 
0x0000000000426e0a: ret; 
0x0000000000426ea4: ret; 
0x00000000004270d5: ret; 
0x000000000042721e: ret; 
0x0000000000427499: ret; 
0x000000000042752f: ret; 
0x0000000000427587: ret; 
0x00000000004275e0: ret; 
0x000000000042768f: ret; 
0x0000000000427738: ret; 
0x0000000000427751: ret; 
0x0000000000427797: ret; 
0x00000000004277c8: ret; 
0x00000000004277fe: ret; 
0x000000000042782c: ret; 
0x0000000000427881: ret; 
0x00000000004278c1: ret; 
0x0000000000427977: ret; 
0x00000000004279a7: ret; 
0x00000000004279ba: ret; 
0x00000000004279c3: ret; 
0x00000000004279e5: ret; 
0x00000000004279ff: ret; 
0x0000000000427a0f: ret; 
0x0000000000427a24: ret; 
0x0000000000427a3f: ret; 
0x0000000000427a55: ret; 
0x0000000000427a75: ret; 
0x0000000000427a95: ret; 
0x0000000000427afe: ret; 
0x0000000000427b57: ret; 
0x0000000000427b9b: ret; 
0x0000000000427bac: ret; 
0x0000000000427be5: ret; 
0x0000000000427c4d: ret; 
0x0000000000427cdd: ret; 
0x0000000000427d6b: ret; 
0x0000000000427de7: ret; 
0x0000000000427f9f: ret; 
0x000000000042803c: ret; 
0x0000000000428107: ret; 
0x0000000000428225: ret; 
0x00000000004282bf: ret; 
0x00000000004283c8: ret; 
0x00000000004283df: ret; 
0x0000000000428419: ret; 
0x000000000042847d: ret; 
0x0000000000428dc3: ret; 
0x0000000000428e51: ret; 
0x0000000000428e6f: ret; 
0x00000000004290f1: ret; 
0x00000000004292c7: ret; 
0x0000000000429399: ret; 
0x00000000004293ea: ret; 
0x0000000000429474: ret; 
0x0000000000429604: ret; 
0x00000000004297a6: ret; 
0x000000000042980b: ret; 
0x0000000000429822: ret; 
0x00000000004298f4: ret; 
0x0000000000429947: ret; 
0x000000000042995f: ret; 
0x000000000042996f: ret; 
0x00000000004299c1: ret; 
0x0000000000429a12: ret; 
0x0000000000429a62: ret; 
0x0000000000429ab0: ret; 
0x0000000000429b48: ret; 
0x0000000000429be2: ret; 
0x0000000000429c17: ret; 
0x0000000000429c1a: ret; 
0x0000000000429c1c: ret; 
0x0000000000429c6f: ret; 
0x0000000000429ca2: ret; 
0x0000000000429cff: ret; 
0x0000000000429d32: ret; 
0x0000000000429d8f: ret; 
0x0000000000429dc2: ret; 
0x0000000000429ef2: ret; 
0x0000000000429f35: ret; 
0x000000000042a034: ret; 
0x000000000042a1de: ret; 
0x000000000042a269: ret; 
0x000000000042a31f: ret; 
0x000000000042a347: ret; 
0x000000000042a413: ret; 
0x000000000042a49c: ret; 
0x000000000042a589: ret; 
0x000000000042a59f: ret; 
0x000000000042a651: ret; 
0x000000000042aff8: ret; 
0x000000000042b081: ret; 
0x000000000042b09f: ret; 
0x000000000042b31f: ret; 
0x000000000042b530: ret; 
0x000000000042b678: ret; 
0x000000000042b71c: ret; 
0x000000000042b8d0: ret; 
0x000000000042b90d: ret; 
0x000000000042b95b: ret; 
0x000000000042bb99: ret; 
0x000000000042bbf8: ret; 
0x000000000042bc12: ret; 
0x000000000042bce1: ret; 
0x000000000042bd5a: ret; 
0x000000000042bd6f: ret; 
0x000000000042bd7f: ret; 
0x000000000042bdc1: ret; 
0x000000000042be3f: ret; 
0x000000000042be7e: ret; 
0x000000000042beb1: ret; 
0x000000000042beb4: ret; 
0x000000000042bf48: ret; 
0x000000000042bf94: ret; 
0x000000000042bfe7: ret; 
0x000000000042c017: ret; 
0x000000000042c01a: ret; 
0x000000000042c01c: ret; 
0x000000000042c06f: ret; 
0x000000000042c0a2: ret; 
0x000000000042c0ff: ret; 
0x000000000042c132: ret; 
0x000000000042c18f: ret; 
0x000000000042c1c2: ret; 
0x000000000042c2f2: ret; 
0x000000000042c331: ret; 
0x000000000042c434: ret; 
0x000000000042c498: ret; 
0x000000000042c4c1: ret; 
0x000000000042c520: ret; 
0x000000000042c547: ret; 
0x000000000042c5a8: ret; 
0x000000000042c5d1: ret; 
0x000000000042c640: ret; 
0x000000000042c66b: ret; 
0x000000000042c6c0: ret; 
0x000000000042c6e7: ret; 
0x000000000042c748: ret; 
0x000000000042c771: ret; 
0x000000000042c7d8: ret; 
0x000000000042c801: ret; 
0x000000000042c860: ret; 
0x000000000042c887: ret; 
0x000000000042c8e8: ret; 
0x000000000042c911: ret; 
0x000000000042c970: ret; 
0x000000000042c997: ret; 
0x000000000042ca13: ret; 
0x000000000042ca46: ret; 
0x000000000042caa0: ret; 
0x000000000042cac7: ret; 
0x000000000042cb28: ret; 
0x000000000042cb51: ret; 
0x000000000042cc7b: ret; 
0x000000000042cce0: ret; 
0x000000000042cd0b: ret; 
0x000000000042cdab: ret; 
0x000000000042ce36: ret; 
0x000000000042cf18: ret; 
0x000000000042cff8: ret; 
0x000000000042d0d1: ret; 
0x000000000042d259: ret; 
0x000000000042d2bd: ret; 
0x000000000042d2fc: ret; 
0x000000000042d39d: ret; 
0x000000000042d40d: ret; 
0x000000000042d450: ret; 
0x000000000042d4cd: ret; 
0x000000000042d510: ret; 
0x000000000042d522: ret; 
0x000000000042d532: ret; 
0x000000000042d589: ret; 
0x000000000042d5b1: ret; 
0x000000000042d5fe: ret; 
0x000000000042d699: ret; 
0x000000000042d6f8: ret; 
0x000000000042d750: ret; 
0x000000000042d7a2: ret; 
0x000000000042d7c6: ret; 
0x000000000042d7e6: ret; 
0x000000000042d804: ret; 
0x000000000042d824: ret; 
0x000000000042d83b: ret; 
0x000000000042d84b: ret; 
0x000000000042d8f6: ret; 
0x000000000042d9a6: ret; 
0x000000000042da50: ret; 
0x000000000042daee: ret; 
0x000000000042db19: ret; 
0x000000000042db49: ret; 
0x000000000042dbb8: ret; 
0x000000000042dbde: ret; 
0x000000000042dc8e: ret; 
0x000000000042dcd9: ret; 
0x000000000042de59: ret; 
0x000000000042de8e: ret; 
0x000000000042debb: ret; 
0x000000000042df6c: ret; 
0x000000000042df91: ret; 
0x000000000042e07c: ret; 
0x000000000042e100: ret; 
0x000000000042e173: ret; 
0x000000000042e19b: ret; 
0x000000000042e258: ret; 
0x000000000042e30f: ret; 
0x000000000042e33c: ret; 
0x000000000042e34c: ret; 
0x000000000042e35c: ret; 
0x000000000042e385: ret; 
0x000000000042e3b0: ret; 
0x000000000042e3c1: ret; 
0x000000000042e3c9: ret; 
0x000000000042e3f5: ret; 
0x000000000042e412: ret; 
0x000000000042e45f: ret; 
0x000000000042e47b: ret; 
0x000000000042e48c: ret; 
0x000000000042e525: ret; 
0x000000000042e548: ret; 
0x000000000042e559: ret; 
0x000000000042e5a2: ret; 
0x000000000042e5da: ret; 
0x000000000042e5ef: ret; 
0x000000000042e602: ret; 
0x000000000042e625: ret; 
0x000000000042e649: ret; 
0x000000000042e6b2: ret; 
0x000000000042e779: ret; 
0x000000000042e795: ret; 
0x000000000042e7ad: ret; 
0x000000000042e7bf: ret; 
0x000000000042e818: ret; 
0x000000000042e83f: ret; 
0x000000000042e8c5: ret; 
0x000000000042e8fc: ret; 
0x000000000042e90a: ret; 
0x000000000042eb8e: ret; 
0x000000000042ebaa: ret; 
0x000000000042ec75: ret; 
0x000000000042ecc4: ret; 
0x000000000042ecdd: ret; 
0x000000000042ecef: ret; 
0x000000000042ed01: ret; 
0x000000000042ed39: ret; 
0x000000000042ed4f: ret; 
0x000000000042ed5f: ret; 
0x000000000042ed6f: ret; 
0x000000000042ed87: ret; 
0x000000000042eda5: ret; 
0x000000000042edbf: ret; 
0x000000000042edcf: ret; 
0x000000000042ede7: ret; 
0x000000000042edff: ret; 
0x000000000042ee2a: ret; 
0x000000000042ee63: ret; 
0x000000000042ee93: ret; 
0x000000000042ef57: ret; 
0x000000000042ef74: ret; 
0x000000000042f0ce: ret; 
0x000000000042f0e1: ret; 
0x000000000042f1df: ret; 
0x000000000042f1f8: ret; 
0x000000000042f216: ret; 
0x000000000042f25b: ret; 
0x000000000042f26d: ret; 
0x000000000042f29f: ret; 
0x000000000042f2ce: ret; 
0x000000000042f2fd: ret; 
0x000000000042f32c: ret; 
0x000000000042f3a2: ret; 
0x000000000042f3d7: ret; 
0x000000000042f451: ret; 
0x000000000042f486: ret; 
0x000000000042f61e: ret; 
0x000000000042f66a: ret; 
0x000000000042f6b9: ret; 
0x000000000042f715: ret; 
0x000000000042f770: ret; 
0x000000000042f7bf: ret; 
0x000000000042f809: ret; 
0x000000000042f868: ret; 
0x000000000042f886: ret; 
0x000000000042f8d9: ret; 
0x000000000042f8e2: ret; 
0x000000000042f939: ret; 
0x000000000042f9a9: ret; 
0x000000000042fa1e: ret; 
0x000000000042fa81: ret; 
0x000000000042fad3: ret; 
0x000000000042fb3b: ret; 
0x000000000042fb63: ret; 
0x000000000042fbc0: ret; 
0x000000000042fbca: ret; 
0x000000000042fc26: ret; 
0x000000000042fc60: ret; 
0x000000000042fc8c: ret; 
0x000000000042fca5: ret; 
0x000000000042fccc: ret; 
0x000000000042fd09: ret; 
0x000000000042fd48: ret; 
0x000000000042fd7d: ret; 
0x000000000042fdac: ret; 
0x000000000042fdef: ret; 
0x000000000042fdf4: ret; 
0x000000000042fe66: ret; 
0x000000000042fed2: ret; 
0x000000000042ff4a: ret; 
0x000000000042ffb1: ret; 
0x0000000000430015: ret; 
0x00000000004300b6: ret; 
0x00000000004300d4: ret; 
0x000000000043013c: ret; 
0x0000000000430193: ret; 
0x00000000004301b4: ret; 
0x000000000043021c: ret; 
0x0000000000430273: ret; 
0x0000000000430298: ret; 
0x00000000004302be: ret; 
0x00000000004302ef: ret; 
0x0000000000430321: ret; 
0x0000000000430351: ret; 
0x0000000000430426: ret; 
0x0000000000430445: ret; 
0x0000000000430468: ret; 
0x00000000004304d8: ret; 
0x000000000043050a: ret; 
0x0000000000430574: ret; 
0x00000000004305a7: ret; 
0x0000000000430606: ret; 
0x0000000000430620: ret; 
0x0000000000430694: ret; 
0x00000000004306c7: ret; 
0x00000000004306e8: ret; 
0x000000000043071d: ret; 
0x0000000000430799: ret; 
0x00000000004307d6: ret; 
0x00000000004308ec: ret; 
0x0000000000430966: ret; 
0x00000000004309ef: ret; 
0x0000000000430a5d: ret; 
0x0000000000430aac: ret; 
0x0000000000430ad1: ret; 
0x0000000000430add: ret; 
0x0000000000430af8: ret; 
0x0000000000430b7a: ret; 
0x0000000000430bf9: ret; 
0x0000000000430c36: ret; 
0x0000000000430d4c: ret; 
0x0000000000430de3: ret; 
0x0000000000430e6c: ret; 
0x0000000000430edd: ret; 
0x0000000000430f3c: ret; 
0x0000000000430f78: ret; 
0x0000000000430f8a: ret; 
0x0000000000430fa1: ret; 
0x000000000043108e: ret; 
0x00000000004310bf: ret; 
0x00000000004310dc: ret; 
0x00000000004310e9: ret; 
0x00000000004310f2: ret; 
0x0000000000431112: ret; 
0x0000000000431132: ret; 
0x000000000043115d: ret; 
0x000000000043117d: ret; 
0x000000000043119b: ret; 
0x00000000004311ce: ret; 
0x0000000000431243: ret; 
0x0000000000431268: ret; 
0x0000000000431288: ret; 
0x00000000004312a8: ret; 
0x00000000004312c8: ret; 
0x00000000004312e8: ret; 
0x0000000000431308: ret; 
0x0000000000431328: ret; 
0x00000000004313e8: ret; 
0x00000000004314ae: ret; 
0x00000000004314e4: ret; 
0x0000000000431564: ret; 
0x000000000043157d: ret; 
0x000000000043158d: ret; 
0x00000000004315ad: ret; 
0x00000000004315d0: ret; 
0x00000000004315fd: ret; 
0x000000000043161d: ret; 
0x0000000000431644: ret; 
0x0000000000431667: ret; 
0x0000000000431675: ret; 
0x0000000000431696: ret; 
0x00000000004316af: ret; 
0x00000000004316c6: ret; 
0x00000000004316df: ret; 
0x00000000004316f6: ret; 
0x000000000043170f: ret; 
0x000000000043173e: ret; 
0x000000000043176e: ret; 
0x000000000043177f: ret; 
0x000000000043178f: ret; 
0x000000000043179f: ret; 
0x00000000004317cd: ret; 
0x00000000004317ff: ret; 
0x000000000043180f: ret; 
0x000000000043181f: ret; 
0x000000000043182f: ret; 
0x000000000043183f: ret; 
0x000000000043184f: ret; 
0x0000000000431865: ret; 
0x0000000000431888: ret; 
0x00000000004318a5: ret; 
0x00000000004318c5: ret; 
0x00000000004318e5: ret; 
0x0000000000431902: ret; 
0x000000000043191f: ret; 
0x0000000000431947: ret; 
0x0000000000431973: ret; 
0x000000000043199c: ret; 
0x00000000004319c0: ret; 
0x00000000004319ed: ret; 
0x0000000000431a10: ret; 
0x0000000000431a3d: ret; 
0x0000000000431a5d: ret; 
0x0000000000431a84: ret; 
0x0000000000431aa7: ret; 
0x0000000000431ab5: ret; 
0x0000000000431ad6: ret; 
0x0000000000431aef: ret; 
0x0000000000431b06: ret; 
0x0000000000431b1f: ret; 
0x0000000000431b36: ret; 
0x0000000000431b4f: ret; 
0x0000000000431b7e: ret; 
0x0000000000431bae: ret; 
0x0000000000431bbf: ret; 
0x0000000000431bcf: ret; 
0x0000000000431bdf: ret; 
0x0000000000431c0d: ret; 
0x0000000000431c3f: ret; 
0x0000000000431c4f: ret; 
0x0000000000431c5f: ret; 
0x0000000000431c6f: ret; 
0x0000000000431c7f: ret; 
0x0000000000431c8f: ret; 
0x0000000000431ca5: ret; 
0x0000000000431cc8: ret; 
0x0000000000431ce5: ret; 
0x0000000000431d05: ret; 
0x0000000000431d25: ret; 
0x0000000000431d39: ret; 
0x0000000000431d42: ret; 
0x0000000000431d5f: ret; 
0x0000000000431d87: ret; 
0x0000000000431db3: ret; 
0x0000000000431ddc: ret; 
0x0000000000431e00: ret; 
0x0000000000431e27: ret; 
0x0000000000431e4a: ret; 
0x0000000000431e67: ret; 
0x0000000000431e87: ret; 
0x0000000000431eb2: ret; 
0x0000000000431ed5: ret; 
0x0000000000431ee5: ret; 
0x0000000000431f20: ret; 
0x0000000000431f59: ret; 
0x0000000000431f90: ret; 
0x0000000000431fc9: ret; 
0x0000000000431fe6: ret; 
0x0000000000431fff: ret; 
0x000000000043202e: ret; 
0x000000000043205e: ret; 
0x000000000043206f: ret; 
0x0000000000432073: ret; 
0x000000000043208f: ret; 
0x00000000004320bd: ret; 
0x00000000004320ef: ret; 
0x00000000004320ff: ret; 
0x0000000000432106: ret; 
0x000000000043211f: ret; 
0x000000000043212f: ret; 
0x000000000043213f: ret; 
0x0000000000432155: ret; 
0x0000000000432178: ret; 
0x0000000000432195: ret; 
0x00000000004321b5: ret; 
0x00000000004321d5: ret; 
0x00000000004321f2: ret; 
0x000000000043220f: ret; 
0x0000000000432243: ret; 
0x000000000043227f: ret; 
0x00000000004322a8: ret; 
0x00000000004322dc: ret; 
0x00000000004322f4: ret; 
0x0000000000432305: ret; 
0x000000000043232b: ret; 
0x0000000000432351: ret; 
0x0000000000432366: ret; 
0x0000000000432377: ret; 
0x000000000043239b: ret; 
0x00000000004323d5: ret; 
0x00000000004323f8: ret; 
0x0000000000432418: ret; 
0x0000000000432427: ret; 
0x0000000000432448: ret; 
0x0000000000432469: ret; 
0x000000000043248a: ret; 
0x00000000004324a8: ret; 
0x00000000004324c4: ret; 
0x00000000004324e2: ret; 
0x00000000004324f5: ret; 
0x0000000000432519: ret; 
0x0000000000432549: ret; 
0x0000000000432556: ret; 
0x0000000000432567: ret; 
0x000000000043258b: ret; 
0x00000000004325c5: ret; 
0x00000000004325e8: ret; 
0x0000000000432608: ret; 
0x0000000000432617: ret; 
0x0000000000432638: ret; 
0x0000000000432659: ret; 
0x0000000000432678: ret; 
0x0000000000432696: ret; 
0x00000000004326b4: ret; 
0x00000000004326d2: ret; 
0x00000000004326e5: ret; 
0x0000000000432708: ret; 
0x000000000043273a: ret; 
0x0000000000432748: ret; 
0x0000000000432757: ret; 
0x000000000043277b: ret; 
0x00000000004327b5: ret; 
0x00000000004327d8: ret; 
0x00000000004327f8: ret; 
0x0000000000432807: ret; 
0x0000000000432828: ret; 
0x000000000043284a: ret; 
0x000000000043286b: ret; 
0x0000000000432888: ret; 
0x00000000004328a5: ret; 
0x00000000004328c4: ret; 
0x00000000004328d5: ret; 
0x00000000004328fb: ret; 
0x0000000000432922: ret; 
0x0000000000432938: ret; 
0x0000000000432947: ret; 
0x000000000043296b: ret; 
0x00000000004329a5: ret; 
0x00000000004329c8: ret; 
0x00000000004329e8: ret; 
0x00000000004329f7: ret; 
0x0000000000432a18: ret; 
0x0000000000432a3a: ret; 
0x0000000000432a5d: ret; 
0x0000000000432a7a: ret; 
0x0000000000432a95: ret; 
0x0000000000432aaf: ret; 
0x0000000000432ab5: ret; 
0x0000000000432ad7: ret; 
0x0000000000432b01: ret; 
0x0000000000432b16: ret; 
0x0000000000432b27: ret; 
0x0000000000432b52: ret; 
0x0000000000432b94: ret; 
0x0000000000432bb7: ret; 
0x0000000000432bd7: ret; 
0x0000000000432be7: ret; 
0x0000000000432c07: ret; 
0x0000000000432c23: ret; 
0x0000000000432c45: ret; 
0x0000000000432c63: ret; 
0x0000000000432c84: ret; 
0x0000000000432c9f: ret; 
0x0000000000432ca5: ret; 
0x0000000000432cbf: ret; 
0x0000000000432ce9: ret; 
0x0000000000432cf6: ret; 
0x0000000000432d07: ret; 
0x0000000000432d25: ret; 
0x0000000000432d64: ret; 
0x0000000000432d87: ret; 
0x0000000000432da7: ret; 
0x0000000000432db7: ret; 
0x0000000000432dd7: ret; 
0x0000000000432df3: ret; 
0x0000000000432e15: ret; 
0x0000000000432e33: ret; 
0x0000000000432e54: ret; 
0x0000000000432e72: ret; 
0x0000000000432e85: ret; 
0x0000000000432e9f: ret; 
0x0000000000432eca: ret; 
0x0000000000432ed7: ret; 
0x0000000000432ee8: ret; 
0x0000000000432f05: ret; 
0x0000000000432f45: ret; 
0x0000000000432f68: ret; 
0x0000000000432f88: ret; 
0x0000000000432f98: ret; 
0x0000000000432fb8: ret; 
0x0000000000432fd2: ret; 
0x0000000000432ff5: ret; 
0x0000000000433012: ret; 
0x0000000000433032: ret; 
0x0000000000433052: ret; 
0x0000000000433065: ret; 
0x000000000043307f: ret; 
0x00000000004330a2: ret; 
0x00000000004330b7: ret; 
0x00000000004330da: ret; 
0x0000000000433105: ret; 
0x0000000000433145: ret; 
0x0000000000433168: ret; 
0x0000000000433188: ret; 
0x00000000004331aa: ret; 
0x00000000004331c8: ret; 
0x00000000004331e2: ret; 
0x0000000000433205: ret; 
0x0000000000433222: ret; 
0x0000000000433242: ret; 
0x0000000000433262: ret; 
0x0000000000433275: ret; 
0x000000000043328f: ret; 
0x00000000004332ba: ret; 
0x00000000004332c7: ret; 
0x00000000004332d8: ret; 
0x00000000004332f5: ret; 
0x0000000000433335: ret; 
0x0000000000433358: ret; 
0x0000000000433378: ret; 
0x0000000000433388: ret; 
0x00000000004333a8: ret; 
0x00000000004333c2: ret; 
0x00000000004333e5: ret; 
0x0000000000433402: ret; 
0x0000000000433422: ret; 
0x0000000000433442: ret; 
0x0000000000433455: ret; 
0x000000000043346f: ret; 
0x0000000000433492: ret; 
0x00000000004334a7: ret; 
0x00000000004334ca: ret; 
0x00000000004334f5: ret; 
0x0000000000433535: ret; 
0x0000000000433558: ret; 
0x0000000000433578: ret; 
0x000000000043359a: ret; 
0x00000000004335b8: ret; 
0x00000000004335d2: ret; 
0x00000000004335f5: ret; 
0x0000000000433612: ret; 
0x0000000000433632: ret; 
0x000000000043364f: ret; 
0x0000000000433655: ret; 
0x000000000043367b: ret; 
0x000000000043368f: ret; 
0x0000000000433693: ret; 
0x00000000004336be: ret; 
0x00000000004336cf: ret; 
0x00000000004336d5: ret; 
0x00000000004336fb: ret; 
0x000000000043370f: ret; 
0x0000000000433713: ret; 
0x0000000000433743: ret; 
0x000000000043375f: ret; 
0x0000000000433765: ret; 
0x000000000043378b: ret; 
0x000000000043379f: ret; 
0x00000000004337a3: ret; 
0x00000000004337d5: ret; 
0x00000000004337ef: ret; 
0x00000000004337f5: ret; 
0x000000000043381b: ret; 
0x000000000043382f: ret; 
0x0000000000433832: ret; 
0x0000000000433863: ret; 
0x00000000004338b4: ret; 
0x00000000004338dc: ret; 
0x0000000000433901: ret; 
0x0000000000433925: ret; 
0x000000000043394d: ret; 
0x0000000000433963: ret; 
0x0000000000433983: ret; 
0x00000000004339f1: ret; 
0x0000000000433a40: ret; 
0x0000000000433a6b: ret; 
0x0000000000433aa9: ret; 
0x0000000000433acb: ret; 
0x0000000000433b09: ret; 
0x0000000000433b8d: ret; 
0x0000000000433b9a: ret; 
0x0000000000433ba5: ret; 
0x0000000000433ba8: ret; 
0x0000000000433c0e: ret; 
0x0000000000433c32: ret; 
0x0000000000433c41: ret; 
0x0000000000433c49: ret; 
0x0000000000433c60: ret; 
0x0000000000433c64: ret; 
0x0000000000433c84: ret; 
0x0000000000433c88: ret; 
0x0000000000433cc7: ret; 
0x0000000000433cee: ret; 
0x0000000000433d16: ret; 
0x0000000000433d36: ret; 
0x0000000000433d62: ret; 
0x0000000000433d71: ret; 
0x0000000000433d79: ret; 
0x0000000000433d94: ret; 
0x0000000000433dc7: ret; 
0x0000000000433dd6: ret; 
0x0000000000433dde: ret; 
0x0000000000433df4: ret; 
0x0000000000433e27: ret; 
0x0000000000433e36: ret; 
0x0000000000433e3e: ret; 
0x0000000000433eaf: ret; 
0x0000000000433f1f: ret; 
0x0000000000433f78: ret; 
0x0000000000433fcd: ret; 
0x0000000000433fe9: ret; 
0x0000000000434008: ret; 
0x0000000000434013: ret; 
0x0000000000434052: ret; 
0x0000000000434058: ret; 
0x000000000043407c: ret; 
0x0000000000434087: ret; 
0x00000000004340db: ret; 
0x00000000004340e1: ret; 
0x000000000043410d: ret; 
0x0000000000434118: ret; 
0x0000000000434143: ret; 
0x000000000043416d: ret; 
0x0000000000434178: ret; 
0x00000000004341b5: ret; 
0x00000000004341e8: ret; 
0x0000000000434218: ret; 
0x0000000000434234: ret; 
0x0000000000434254: ret; 
0x0000000000434273: ret; 
0x0000000000434293: ret; 
0x00000000004342b4: ret; 
0x00000000004342d4: ret; 
0x0000000000434311: ret; 
0x0000000000434351: ret; 
0x0000000000434391: ret; 
0x00000000004343d1: ret; 
0x0000000000434411: ret; 
0x0000000000434451: ret; 
0x0000000000434474: ret; 
0x0000000000434497: ret; 
0x0000000000434506: ret; 
0x000000000043454c: ret; 
0x000000000043458e: ret; 
0x00000000004345a4: ret; 
0x0000000000434659: ret; 
0x000000000043465d: ret; 
0x00000000004347a0: ret; 
0x0000000000434865: ret; 
0x0000000000434888: ret; 
0x00000000004348ea: ret; 
0x0000000000434910: ret; 
0x0000000000434a0a: ret; 
0x0000000000434a23: ret; 
0x0000000000434ac6: ret; 
0x0000000000434b15: ret; 
0x0000000000434b65: ret; 
0x0000000000434bb5: ret; 
0x0000000000434c05: ret; 
0x0000000000434c54: ret; 
0x0000000000434d74: ret; 
0x0000000000434e95: ret; 
0x0000000000434eaf: ret; 
0x0000000000434ece: ret; 
0x0000000000434ef0: ret; 
0x0000000000434f1d: ret; 
0x0000000000434f40: ret; 
0x0000000000434f64: ret; 
0x0000000000434f8c: ret; 
0x0000000000434fa4: ret; 
0x0000000000434fc4: ret; 
0x0000000000434ffb: ret; 
0x000000000043508b: ret; 
0x000000000043511b: ret; 
0x000000000043514c: ret; 
0x00000000004351d3: ret; 
0x00000000004351ef: ret; 
0x0000000000435273: ret; 
0x00000000004352a3: ret; 
0x00000000004352bf: ret; 
0x00000000004352cf: ret; 
0x00000000004352f4: ret; 
0x000000000043530f: ret; 
0x0000000000435331: ret; 
0x0000000000435338: ret; 
0x0000000000435359: ret; 
0x0000000000435360: ret; 
0x000000000043537f: ret; 
0x00000000004353a3: ret; 
0x00000000004353aa: ret; 
0x00000000004353cb: ret; 
0x00000000004353d2: ret; 
0x00000000004353ef: ret; 
0x0000000000435401: ret; 
0x000000000043541f: ret; 
0x00000000004354d5: ret; 
0x000000000043551f: ret; 
0x0000000000435566: ret; 
0x000000000043559d: ret; 
0x0000000000436340: ret; 
0x00000000004363d8: ret; 
0x000000000043646a: ret; 
0x000000000043646d: ret; 
0x0000000000436474: ret; 
0x00000000004364db: ret; 
0x0000000000436519: ret; 
0x0000000000436564: ret; 
0x0000000000436605: ret; 
0x00000000004368b3: ret; 
0x00000000004368d4: ret; 
0x00000000004369c0: ret; 
0x0000000000436a23: ret; 
0x0000000000436a4d: ret; 
0x0000000000436b0d: ret; 
0x0000000000436b24: ret; 
0x0000000000436b44: ret; 
0x0000000000436bba: ret; 
0x0000000000436bd4: ret; 
0x0000000000436c53: ret; 
0x0000000000436c82: ret; 
0x0000000000436d0a: ret; 
0x0000000000436d46: ret; 
0x0000000000436d88: ret; 
0x0000000000436f7d: ret; 
0x0000000000436f96: ret; 
0x0000000000436fb6: ret; 
0x00000000004372db: ret; 
0x00000000004372f6: ret; 
0x0000000000437317: ret; 
0x0000000000437336: ret; 
0x0000000000437357: ret; 
0x0000000000437376: ret; 
0x000000000043738f: ret; 
0x000000000043769b: ret; 
0x00000000004376d5: ret; 
0x00000000004376da: ret; 
0x00000000004383c1: ret; 
0x00000000004384cd: ret; 
0x00000000004386e9: ret; 
0x0000000000438bca: ret; 
0x0000000000438bf4: ret; 
0x0000000000438ce8: ret; 
0x0000000000438d1d: ret; 
0x0000000000438d50: ret; 
0x0000000000438d93: ret; 
0x0000000000438dc4: ret; 
0x0000000000438e0c: ret; 
0x0000000000438e26: ret; 
0x0000000000438e6c: ret; 
0x0000000000438e86: ret; 
0x0000000000438ecb: ret; 
0x0000000000438ef4: ret; 
0x0000000000438f16: ret; 
0x0000000000438f5b: ret; 
0x0000000000439015: ret; 
0x0000000000439070: ret; 
0x00000000004390aa: ret; 
0x00000000004390da: ret; 
0x0000000000439110: ret; 
0x0000000000439149: ret; 
0x0000000000439174: ret; 
0x00000000004391b9: ret; 
0x00000000004391d6: ret; 
0x0000000000439219: ret; 
0x0000000000439236: ret; 
0x0000000000439271: ret; 
0x00000000004392a4: ret; 
0x00000000004392e1: ret; 
0x0000000000439306: ret; 
0x0000000000439338: ret; 
0x0000000000439364: ret; 
0x00000000004393da: ret; 
0x00000000004393fa: ret; 
0x0000000000439460: ret; 
0x000000000043955f: ret; 
0x0000000000439587: ret; 
0x00000000004395ba: ret; 
0x0000000000439631: ret; 
0x00000000004396bf: ret; 
0x00000000004396d4: ret; 
0x00000000004396f7: ret; 
0x0000000000439734: ret; 
0x0000000000439777: ret; 
0x00000000004397a2: ret; 
0x0000000000439823: ret; 
0x00000000004398aa: ret; 
0x0000000000439964: ret; 
0x00000000004399e7: ret; 
0x0000000000439a25: ret; 
0x0000000000439a57: ret; 
0x0000000000439a87: ret; 
0x0000000000439aa6: ret; 
0x0000000000439b8a: ret; 
0x0000000000439bed: ret; 
0x0000000000439c7a: ret; 
0x0000000000439cc6: ret; 
0x0000000000439eee: ret; 
0x000000000043a0c2: ret; 
0x000000000043a232: ret; 
0x000000000043a331: ret; 
0x000000000043a37a: ret; 
0x000000000043a5c8: ret; 
0x000000000043a62a: ret; 
0x000000000043a6f4: ret; 
0x000000000043a7bf: ret; 
0x000000000043a823: ret; 
0x000000000043a936: ret; 
0x000000000043a99b: ret; 
0x000000000043a9cc: ret; 
0x000000000043aa93: ret; 
0x000000000043ab02: ret; 
0x000000000043ab34: ret; 
0x000000000043abe7: ret; 
0x000000000043ac89: ret; 
0x000000000043b0f4: ret; 
0x000000000043b11e: ret; 
0x000000000043b199: ret; 
0x000000000043b1d0: ret; 
0x000000000043b20f: ret; 
0x000000000043b234: ret; 
0x000000000043b25d: ret; 
0x000000000043b2b2: ret; 
0x000000000043b399: ret; 
0x000000000043b411: ret; 
0x000000000043b432: ret; 
0x000000000043b727: ret; 
0x000000000043b743: ret; 
0x000000000043b74e: ret; 
0x000000000043b815: ret; 
0x000000000043b853: ret; 
0x000000000043b857: ret; 
0x000000000043b873: ret; 
0x000000000043b883: ret; 
0x000000000043b8a3: ret; 
0x000000000043b8b3: ret; 
0x000000000043b8c2: ret; 
0x000000000043b8d2: ret; 
0x000000000043b8f4: ret; 
0x000000000043b90d: ret; 
0x000000000043ba50: ret; 
0x000000000043baaf: ret; 
0x000000000043bac9: ret; 
0x000000000043bae8: ret; 
0x000000000043bda2: ret; 
0x000000000043bdc1: ret; 
0x000000000043bdd6: ret; 
0x000000000043bed6: ret; 
0x000000000043bf08: ret; 
0x000000000043bf28: ret; 
0x000000000043bf46: ret; 
0x000000000043bf9d: ret; 
0x000000000043c0f6: ret; 
0x000000000043c16f: ret; 
0x000000000043c277: ret; 
0x000000000043c2a1: ret; 
0x000000000043c3e9: ret; 
0x000000000043c415: ret; 
0x000000000043c512: ret; 
0x000000000043c5eb: ret; 
0x000000000043c615: ret; 
0x000000000043c756: ret; 
0x000000000043c8cf: ret; 
0x000000000043c9e9: ret; 
0x000000000043cab0: ret; 
0x000000000043cc1e: ret; 
0x000000000043cd63: ret; 
0x000000000043ceb5: ret; 
0x000000000043cec3: ret; 
0x000000000043cee1: ret; 
0x000000000043cf31: ret; 
0x000000000043cf53: ret; 
0x000000000043cf86: ret; 
0x000000000043cfa0: ret; 
0x000000000043cfe9: ret; 
0x000000000043d080: ret; 
0x000000000043d0d9: ret; 
0x000000000043d104: ret; 
0x000000000043d166: ret; 
0x000000000043d1ab: ret; 
0x000000000043d1bc: ret; 
0x000000000043d246: ret; 
0x000000000043d27f: ret; 
0x000000000043d356: ret; 
0x000000000043d39a: ret; 
0x000000000043d4a0: ret; 
0x000000000043d56c: ret; 
0x000000000043d625: ret; 
0x000000000043d68a: ret; 
0x000000000043d716: ret; 
0x000000000043d7d6: ret; 
0x000000000043d895: ret; 
0x000000000043d92f: ret; 
0x000000000043d9e9: ret; 
0x000000000043da77: ret; 
0x000000000043db04: ret; 
0x000000000043db96: ret; 
0x000000000043dc59: ret; 
0x000000000043dce6: ret; 
0x000000000043dda5: ret; 
0x000000000043de39: ret; 
0x000000000043defa: ret; 
0x000000000043dfb5: ret; 
0x000000000043dfe4: ret; 
0x000000000043e069: ret; 
0x000000000043e133: ret; 
0x000000000043e1c6: ret; 
0x000000000043e1e1: ret; 
0x000000000043e2a0: ret; 
0x000000000043e360: ret; 
0x000000000043e388: ret; 
0x000000000043e3a6: ret; 
0x000000000043e3c9: ret; 
0x000000000043e4a0: ret; 
0x000000000043e599: ret; 
0x000000000043e648: ret; 
0x000000000043e65d: ret; 
0x000000000043e6ab: ret; 
0x000000000043e6d8: ret; 
0x000000000043e773: ret; 
0x000000000043e83f: ret; 
0x000000000043e8d0: ret; 
0x000000000043e8f1: ret; 
0x000000000043e9c4: ret; 
0x000000000043ea93: ret; 
0x000000000043eb2e: ret; 
0x000000000043ebc1: ret; 
0x000000000043ec93: ret; 
0x000000000043ed30: ret; 
0x000000000043edff: ret; 
0x000000000043eec4: ret; 
0x000000000043ef60: ret; 
0x000000000043efbf: ret; 
0x000000000043efee: ret; 
0x000000000043f014: ret; 
0x000000000043f0df: ret; 
0x000000000043f19f: ret; 
0x000000000043f1ea: ret; 
0x000000000043f27f: ret; 
0x000000000043f397: ret; 
0x000000000043f425: ret; 
0x000000000043f474: ret; 
0x000000000043f5f4: ret; 
0x000000000043f7a7: ret; 
0x000000000043f7d1: ret; 
0x000000000043f7f5: ret; 
0x000000000043f8d3: ret; 
0x000000000043f8fa: ret; 
0x000000000043f9de: ret; 
0x000000000043fa29: ret; 
0x000000000043fa4b: ret; 
0x000000000043fa70: ret; 
0x000000000043fb44: ret; 
0x000000000043fc86: ret; 
0x000000000043fdff: ret; 
0x000000000043ffe0: ret; 
0x000000000044014e: ret; 
0x0000000000440293: ret; 
0x00000000004403e5: ret; 
0x00000000004403f3: ret; 
0x0000000000440411: ret; 
0x0000000000440461: ret; 
0x0000000000440484: ret; 
0x00000000004404b8: ret; 
0x00000000004404d0: ret; 
0x0000000000440519: ret; 
0x00000000004405b0: ret; 
0x0000000000440634: ret; 
0x0000000000440699: ret; 
0x00000000004406db: ret; 
0x00000000004406ec: ret; 
0x0000000000440779: ret; 
0x00000000004407af: ret; 
0x000000000044088c: ret; 
0x00000000004408ca: ret; 
0x00000000004409d0: ret; 
0x0000000000440aa2: ret; 
0x0000000000440b87: ret; 
0x0000000000440bec: ret; 
0x0000000000440c9b: ret; 
0x0000000000440d56: ret; 
0x0000000000440e37: ret; 
0x0000000000440ee9: ret; 
0x0000000000440efa: ret; 
0x0000000000440fdb: ret; 
0x0000000000441066: ret; 
0x0000000000441119: ret; 
0x00000000004411c8: ret; 
0x00000000004412ab: ret; 
0x000000000044135b: ret; 
0x0000000000441437: ret; 
0x00000000004414eb: ret; 
0x0000000000441573: ret; 
0x00000000004415cc: ret; 
0x00000000004416a7: ret; 
0x00000000004416d4: ret; 
0x0000000000441759: ret; 
0x0000000000441823: ret; 
0x00000000004418bb: ret; 
0x00000000004418d8: ret; 
0x00000000004418f1: ret; 
0x0000000000441967: ret; 
0x0000000000441984: ret; 
0x0000000000441a8a: ret; 
0x0000000000441b09: ret; 
0x0000000000441b29: ret; 
0x0000000000441b8a: ret; 
0x0000000000441ba8: ret; 
0x0000000000441c15: ret; 
0x0000000000441c3f: ret; 
0x0000000000441c59: ret; 
0x0000000000441d30: ret; 
0x0000000000441e2c: ret; 
0x0000000000441ed8: ret; 
0x0000000000441eed: ret; 
0x0000000000441f3e: ret; 
0x0000000000441f68: ret; 
0x0000000000442025: ret; 
0x0000000000442111: ret; 
0x00000000004421d2: ret; 
0x00000000004421f1: ret; 
0x00000000004422b9: ret; 
0x00000000004422e6: ret; 
0x00000000004423d5: ret; 
0x0000000000442490: ret; 
0x0000000000442530: ret; 
0x0000000000442625: ret; 
0x00000000004426e2: ret; 
0x00000000004427d1: ret; 
0x00000000004428c6: ret; 
0x0000000000442982: ret; 
0x00000000004429df: ret; 
0x0000000000442a0e: ret; 
0x0000000000442a34: ret; 
0x0000000000442b21: ret; 
0x0000000000442c11: ret; 
0x0000000000442c6a: ret; 
0x0000000000442cff: ret; 
0x0000000000442e1a: ret; 
0x0000000000442ea5: ret; 
0x0000000000442ef4: ret; 
0x0000000000443076: ret; 
0x000000000044322b: ret; 
0x0000000000443251: ret; 
0x0000000000443275: ret; 
0x0000000000443353: ret; 
0x000000000044337a: ret; 
0x000000000044345e: ret; 
0x00000000004434c9: ret; 
0x00000000004434f1: ret; 
0x00000000004435cb: ret; 
0x0000000000443606: ret; 
0x0000000000443651: ret; 
0x000000000044370b: ret; 
0x00000000004437a4: ret; 
0x00000000004437e6: ret; 
0x000000000044385c: ret; 
0x000000000044388a: ret; 
0x00000000004439b6: ret; 
0x0000000000443a37: ret; 
0x0000000000443a7a: ret; 
0x0000000000443aed: ret; 
0x0000000000443b36: ret; 
0x0000000000443bbc: ret; 
0x0000000000443d63: ret; 
0x0000000000443daa: ret; 
0x0000000000443e47: ret; 
0x0000000000443e98: ret; 
0x0000000000443f42: ret; 
0x0000000000443f6e: ret; 
0x0000000000443f99: ret; 
0x0000000000443fcb: ret; 
0x0000000000443ff0: ret; 
0x000000000044405c: ret; 
0x0000000000444128: ret; 
0x000000000044416e: ret; 
0x0000000000444171: ret; 
0x0000000000444190: ret; 
0x00000000004441b5: ret; 
0x00000000004441d5: ret; 
0x00000000004441fd: ret; 
0x0000000000444210: ret; 
0x0000000000444235: ret; 
0x0000000000444255: ret; 
0x000000000044427d: ret; 
0x0000000000444295: ret; 
0x00000000004442c7: ret; 
0x00000000004442ea: ret; 
0x0000000000444321: ret; 
0x0000000000444797: ret; 
0x0000000000444856: ret; 
0x000000000044490e: ret; 
0x00000000004449b2: ret; 
0x0000000000444acb: ret; 
0x0000000000444bda: ret; 
0x0000000000444c07: ret; 
0x0000000000444c4b: ret; 
0x0000000000444c7d: ret; 
0x0000000000444ca6: ret; 
0x0000000000444cf1: ret; 
0x0000000000444d3a: ret; 
0x0000000000444f27: ret; 
0x00000000004453ec: ret; 
0x0000000000445633: ret; 
0x000000000044568f: ret; 
0x0000000000445787: ret; 
0x0000000000445896: ret; 
0x00000000004458c2: ret; 
0x0000000000445906: ret; 
0x000000000044592b: ret; 
0x000000000044595f: ret; 
0x0000000000445c5c: ret; 
0x0000000000445ebb: ret; 
0x0000000000445edc: ret; 
0x0000000000445f67: ret; 
0x0000000000445f8a: ret; 
0x0000000000445fb7: ret; 
0x000000000044600a: ret; 
0x0000000000446031: ret; 
0x000000000044605e: ret; 
0x00000000004461b3: ret; 
0x0000000000446bb9: ret; 
0x0000000000446cc2: ret; 
0x0000000000446d31: ret; 
0x0000000000446d60: ret; 
0x0000000000446dad: ret; 
0x0000000000446e0e: ret; 
0x0000000000446e75: ret; 
0x0000000000446e96: ret; 
0x0000000000446f10: ret; 
0x0000000000446f31: ret; 
0x0000000000446fbf: ret; 
0x0000000000446fec: ret; 
0x00000000004470cc: ret; 
0x00000000004470ed: ret; 
0x000000000044710c: ret; 
0x000000000044712d: ret; 
0x00000000004471ff: ret; 
0x0000000000447277: ret; 
0x00000000004472a2: ret; 
0x00000000004472c1: ret; 
0x0000000000447357: ret; 
0x000000000044739f: ret; 
0x00000000004473b1: ret; 
0x000000000044748b: ret; 
0x00000000004474f1: ret; 
0x000000000044751a: ret; 
0x0000000000447536: ret; 
0x00000000004476ad: ret; 
0x00000000004476c1: ret; 
0x00000000004476e1: ret; 
0x0000000000447787: ret; 
0x00000000004477c5: ret; 
0x000000000044780b: ret; 
0x000000000044784b: ret; 
0x0000000000447861: ret; 
0x0000000000447881: ret; 
0x00000000004478c2: ret; 
0x0000000000447906: ret; 
0x0000000000447946: ret; 
0x0000000000447966: ret; 
0x000000000044799e: ret; 
0x00000000004479af: ret; 
0x00000000004479be: ret; 
0x00000000004479ce: ret; 
0x0000000000447a09: ret; 
0x0000000000447a5b: ret; 
0x0000000000447a85: ret; 
0x0000000000447ad6: ret; 
0x0000000000447b4a: ret; 
0x0000000000447ba2: ret; 
0x0000000000447c1f: ret; 
0x0000000000447c57: ret; 
0x0000000000447c91: ret; 
0x0000000000447cdc: ret; 
0x0000000000447d11: ret; 
0x0000000000447d2e: ret; 
0x0000000000447d62: ret; 
0x0000000000447d89: ret; 
0x0000000000447dca: ret; 
0x0000000000447dfa: ret; 
0x0000000000447e2c: ret; 
0x0000000000447e67: ret; 
0x0000000000447e83: ret; 
0x0000000000447f0e: ret; 
0x0000000000447f8e: ret; 
0x0000000000447fa1: ret; 
0x0000000000447fb9: ret; 
0x0000000000447fda: ret; 
0x000000000044802b: ret; 
0x000000000044805b: ret; 
0x00000000004480ab: ret; 
0x00000000004480d0: ret; 
0x00000000004480eb: ret; 
0x00000000004480ee: ret; 
0x0000000000448256: ret; 
0x0000000000448270: ret; 
0x0000000000448273: ret; 
0x000000000044834d: ret; 
0x00000000004483f6: ret; 
0x00000000004484ab: ret; 
0x00000000004484c4: ret; 
0x00000000004484e4: ret; 
0x0000000000448506: ret; 
0x000000000044852c: ret; 
0x0000000000448549: ret; 
0x000000000044856f: ret; 
0x00000000004487b9: ret; 
0x000000000044927b: ret; 
0x000000000044937e: ret; 
0x0000000000449425: ret; 
0x0000000000449428: ret; 
0x000000000044942f: ret; 
0x000000000044948d: ret; 
0x00000000004494c9: ret; 
0x0000000000449516: ret; 
0x0000000000449621: ret; 
0x0000000000449934: ret; 
0x0000000000449948: ret; 
0x0000000000449954: ret; 
0x0000000000449a36: ret; 
0x0000000000449a96: ret; 
0x0000000000449abd: ret; 
0x0000000000449b69: ret; 
0x0000000000449b84: ret; 
0x0000000000449bb2: ret; 
0x0000000000449be7: ret; 
0x0000000000449c04: ret; 
0x0000000000449c07: ret; 
0x0000000000449c22: ret; 
0x0000000000449f2f: ret; 
0x0000000000449f4b: ret; 
0x0000000000449f56: ret; 
0x000000000044a026: ret; 
0x000000000044a08b: ret; 
0x000000000044a0c4: ret; 
0x000000000044a109: ret; 
0x000000000044a171: ret; 
0x000000000044a1c5: ret; 
0x000000000044a1eb: ret; 
0x000000000044a20b: ret; 
0x000000000044a227: ret; 
0x000000000044a247: ret; 
0x000000000044a269: ret; 
0x000000000044a28f: ret; 
0x000000000044a2ac: ret; 
0x000000000044a2d2: ret; 
0x000000000044afb9: ret; 
0x000000000044b013: ret; 
0x000000000044b11e: ret; 
0x000000000044b1c5: ret; 
0x000000000044b1c8: ret; 
0x000000000044b1cf: ret; 
0x000000000044b22d: ret; 
0x000000000044b269: ret; 
0x000000000044b2b6: ret; 
0x000000000044b3c1: ret; 
0x000000000044b6d4: ret; 
0x000000000044b6f4: ret; 
0x000000000044b7d6: ret; 
0x000000000044b836: ret; 
0x000000000044b85d: ret; 
0x000000000044b909: ret; 
0x000000000044b924: ret; 
0x000000000044b946: ret; 
0x000000000044b992: ret; 
0x000000000044b9bb: ret; 
0x000000000044ba11: ret; 
0x000000000044ba2f: ret; 
0x000000000044ba6d: ret; 
0x000000000044ba89: ret; 
0x000000000044babc: ret; 
0x000000000044baf1: ret; 
0x000000000044bb07: ret; 
0x000000000044bb47: ret; 
0x000000000044bb6b: ret; 
0x000000000044bb7a: ret; 
0x000000000044bbbe: ret; 
0x000000000044bbf6: ret; 
0x000000000044bc44: ret; 
0x000000000044bca3: ret; 
0x000000000044bcf9: ret; 
0x000000000044bd49: ret; 
0x000000000044bd69: ret; 
0x000000000044bdba: ret; 
0x000000000044bdea: ret; 
0x000000000044be6e: ret; 
0x000000000044be79: ret; 
0x000000000044bea7: ret; 
0x000000000044bee8: ret; 
0x000000000044befb: ret; 
0x000000000044befe: ret; 
0x000000000044bf20: ret; 
0x000000000044bf59: ret; 
0x000000000044bfee: ret; 
0x000000000044c019: ret; 
0x000000000044c07a: ret; 
0x000000000044c0d6: ret; 
0x000000000044c0ef: ret; 
0x000000000044c102: ret; 
0x000000000044c417: ret; 
0x000000000044c433: ret; 
0x000000000044c43e: ret; 
0x000000000044c50e: ret; 
0x000000000044c602: ret; 
0x000000000044c672: ret; 
0x000000000044c6a6: ret; 
0x000000000044c704: ret; 
0x000000000044c7c4: ret; 
0x000000000044c874: ret; 
0x000000000044c91f: ret; 
0x000000000044c92f: ret; 
0x000000000044c97f: ret; 
0x000000000044cad5: ret; 
0x000000000044cb25: ret; 
0x000000000044cb59: ret; 
0x000000000044cbcf: ret; 
0x000000000044cc6f: ret; 
0x000000000044cd0f: ret; 
0x000000000044cd95: ret; 
0x000000000044ce1a: ret; 
0x000000000044ce5a: ret; 
0x000000000044ce82: ret; 
0x000000000044ce92: ret; 
0x000000000044cf3b: ret; 
0x000000000044d015: ret; 
0x000000000044d09d: ret; 
0x000000000044d0c9: ret; 
0x000000000044d18d: ret; 
0x000000000044d284: ret; 
0x000000000044d2c2: ret; 
0x000000000044d2c6: ret; 
0x000000000044d3d1: ret; 
0x000000000044d412: ret; 
0x000000000044d416: ret; 
0x000000000044d51f: ret; 
0x000000000044d538: ret; 
0x000000000044d5b3: ret; 
0x000000000044d707: ret; 
0x000000000044d752: ret; 
0x000000000044d8cf: ret; 
0x000000000044d8e8: ret; 
0x000000000044d95f: ret; 
0x000000000044d9a2: ret; 
0x000000000044db1d: ret; 
0x000000000044db5a: ret; 
0x000000000044db5e: ret; 
0x000000000044dc15: ret; 
0x000000000044dc38: ret; 
0x000000000044dcb3: ret; 
0x000000000044ddbd: ret; 
0x000000000044de6e: ret; 
0x000000000044deb3: ret; 
0x000000000044def7: ret; 
0x000000000044df51: ret; 
0x000000000044df72: ret; 
0x000000000044df90: ret; 
0x000000000044dfae: ret; 
0x000000000044dfcf: ret; 
0x000000000044dfdb: ret; 
0x000000000044e0eb: ret; 
0x000000000044e1b4: ret; 
0x000000000044e27a: ret; 
0x000000000044e2fb: ret; 
0x000000000044e324: ret; 
0x000000000044e3b5: ret; 
0x000000000044e3fc: ret; 
0x000000000044e47b: ret; 
0x000000000044e4a4: ret; 
0x000000000044e535: ret; 
0x000000000044e57f: ret; 
0x000000000044e583: ret; 
0x000000000044e61e: ret; 
0x000000000044e764: ret; 
0x000000000044e859: ret; 
0x000000000044e8bc: ret; 
0x000000000044ea56: ret; 
0x000000000044ea8d: ret; 
0x000000000044ebab: ret; 
0x000000000044ec1e: ret; 
0x000000000044ec22: ret; 
0x000000000044ec32: ret; 
0x000000000044ed33: ret; 
0x000000000044ee7a: ret; 
0x000000000044eea3: ret; 
0x000000000044eeb7: ret; 
0x000000000044eec2: ret; 
0x000000000044f00a: ret; 
0x000000000044f033: ret; 
0x000000000044f044: ret; 
0x000000000044f052: ret; 
0x000000000044f0a5: ret; 
0x000000000044f0b4: ret; 
0x000000000044f0cd: ret; 
0x000000000044f0e1: ret; 
0x000000000044f100: ret; 
0x000000000044f125: ret; 
0x000000000044f12b: ret; 
0x000000000044f13e: ret; 
0x000000000044f145: ret; 
0x000000000044f1de: ret; 
0x000000000044f321: ret; 
0x000000000044f353: ret; 
0x000000000044f44f: ret; 
0x000000000044f487: ret; 
0x000000000044f494: ret; 
0x000000000044f4b0: ret; 
0x000000000044f4fe: ret; 
0x000000000044f53d: ret; 
0x000000000044f582: ret; 
0x000000000044f595: ret; 
0x000000000044f62e: ret; 
0x000000000044f653: ret; 
0x000000000044f71a: ret; 
0x000000000044f774: ret; 
0x000000000044f7fe: ret; 
0x000000000044f83e: ret; 
0x000000000044f889: ret; 
0x000000000044f9be: ret; 
0x000000000044fa03: ret; 
0x000000000044fa25: ret; 
0x000000000044fa46: ret; 
0x000000000044fa66: ret; 
0x000000000044fa86: ret; 
0x000000000044fc24: ret; 
0x000000000044fc81: ret; 
0x000000000044fccd: ret; 
0x000000000044fde1: ret; 
0x000000000044fec3: ret; 
0x000000000044ffba: ret; 
0x000000000045006f: ret; 
0x00000000004500a3: ret; 
0x0000000000450199: ret; 
0x0000000000450204: ret; 
0x0000000000450230: ret; 
0x0000000000450277: ret; 
0x00000000004503ac: ret; 
0x000000000045040c: ret; 
0x000000000045045f: ret; 
0x0000000000450501: ret; 
0x000000000045053a: ret; 
0x00000000004505f4: ret; 
0x0000000000450629: ret; 
0x0000000000450697: ret; 
0x00000000004507c7: ret; 
0x00000000004507e1: ret; 
0x0000000000450865: ret; 
0x0000000000450882: ret; 
0x00000000004509cf: ret; 
0x00000000004509e3: ret; 
0x0000000000450b2a: ret; 
0x0000000000450b4c: ret; 
0x0000000000450b6c: ret; 
0x0000000000450bbd: ret; 
0x0000000000450bf3: ret; 
0x0000000000450c29: ret; 
0x0000000000450c81: ret; 
0x0000000000450cae: ret; 
0x0000000000450cc2: ret; 
0x0000000000450d40: ret; 
0x0000000000450d6b: ret; 
0x0000000000450de0: ret; 
0x0000000000450e0b: ret; 
0x0000000000450e32: ret; 
0x0000000000450e71: ret; 
0x0000000000450e9f: ret; 
0x0000000000450f11: ret; 
0x000000000045124e: ret; 
0x000000000045127d: ret; 
0x00000000004512fd: ret; 
0x0000000000451349: ret; 
0x0000000000451379: ret; 
0x0000000000451385: ret; 
0x00000000004513cb: ret; 
0x0000000000451504: ret; 
0x000000000045165e: ret; 
0x0000000000451819: ret; 
0x0000000000451971: ret; 
0x0000000000451b3c: ret; 
0x0000000000451ca4: ret; 
0x0000000000451e77: ret; 
0x0000000000451fe7: ret; 
0x000000000045206e: ret; 
0x00000000004521ba: ret; 
0x0000000000452280: ret; 
0x00000000004522ab: ret; 
0x00000000004525d1: ret; 
0x0000000000452637: ret; 
0x0000000000452663: ret; 
0x0000000000452673: ret; 
0x000000000045288d: ret; 
0x00000000004528c5: ret; 
0x00000000004528cd: ret; 
0x0000000000452b31: ret; 
0x0000000000452b56: ret; 
0x0000000000452c72: ret; 
0x0000000000452c97: ret; 
0x0000000000452de6: ret; 
0x0000000000452e9a: ret; 
0x0000000000452ed8: ret; 
0x0000000000452efb: ret; 
0x0000000000452f1c: ret; 
0x0000000000452f3a: ret; 
0x0000000000452f5c: ret; 
0x000000000045308a: ret; 
0x00000000004530a8: ret; 
0x00000000004530e9: ret; 
0x00000000004530fe: ret; 
0x0000000000453141: ret; 
0x0000000000453185: ret; 
0x00000000004531da: ret; 
0x00000000004531fe: ret; 
0x0000000000453227: ret; 
0x000000000045324d: ret; 
0x0000000000453266: ret; 
0x00000000004532ac: ret; 
0x00000000004532c4: ret; 
0x000000000045331e: ret; 
0x0000000000453345: ret; 
0x0000000000453351: ret; 
0x000000000045335c: ret; 
0x000000000045336f: ret; 
0x0000000000453381: ret; 
0x00000000004533b0: ret; 
0x0000000000453435: ret; 
0x0000000000453468: ret; 
0x0000000000453570: ret; 
0x00000000004535bc: ret; 
0x0000000000453687: ret; 
0x0000000000453852: ret; 
0x000000000045387d: ret; 
0x0000000000453969: ret; 
0x00000000004539a2: ret; 
0x00000000004539cf: ret; 
0x0000000000453a5f: ret; 
0x0000000000453ae7: ret; 
0x0000000000453bb5: ret; 
0x0000000000453c45: ret; 
0x0000000000453c9c: ret; 
0x0000000000453cd7: ret; 
0x0000000000453cf2: ret; 
0x0000000000453d14: ret; 
0x0000000000453d77: ret; 
0x0000000000453dab: ret; 
0x0000000000453e12: ret; 
0x0000000000453e48: ret; 
0x0000000000453eb2: ret; 
0x0000000000453f07: ret; 
0x0000000000453f57: ret; 
0x0000000000453f72: ret; 
0x0000000000453f8f: ret; 
0x0000000000453fc2: ret; 
0x0000000000454008: ret; 
0x00000000004540d0: ret; 
0x000000000045425b: ret; 
0x0000000000454344: ret; 
0x000000000045446b: ret; 
0x000000000045458e: ret; 
0x0000000000454608: ret; 
0x0000000000454686: ret; 
0x00000000004546d8: ret; 
0x000000000045475f: ret; 
0x000000000045499f: ret; 
0x0000000000454a13: ret; 
0x0000000000454aa7: ret; 
0x0000000000454ad3: ret; 
0x0000000000454b1b: ret; 
0x0000000000454b22: ret; 
0x0000000000454b78: ret; 
0x0000000000454cae: ret; 
0x0000000000454de3: ret; 
0x0000000000454f17: ret; 
0x0000000000454fac: ret; 
0x00000000004550d4: ret; 
0x0000000000455107: ret; 
0x0000000000455115: ret; 
0x000000000045517f: ret; 
0x0000000000455193: ret; 
0x00000000004551ae: ret; 
0x00000000004551d9: ret; 
0x00000000004551e5: ret; 
0x000000000045524d: ret; 
0x0000000000455272: ret; 
0x00000000004552f1: ret; 
0x0000000000455322: ret; 
0x0000000000455359: ret; 
0x0000000000455392: ret; 
0x00000000004553b7: ret; 
0x0000000000455406: ret; 
0x0000000000455440: ret; 
0x0000000000455467: ret; 
0x0000000000455508: ret; 
0x000000000045555c: ret; 
0x0000000000455564: ret; 
0x0000000000455575: ret; 
0x00000000004555a5: ret; 
0x00000000004555b0: ret; 
0x0000000000455605: ret; 
0x000000000045560a: ret; 
0x000000000045563f: ret; 
0x000000000045568c: ret; 
0x0000000000455694: ret; 
0x00000000004556a5: ret; 
0x00000000004556d5: ret; 
0x00000000004556e0: ret; 
0x0000000000455735: ret; 
0x000000000045573a: ret; 
0x000000000045576f: ret; 
0x0000000000455779: ret; 
0x00000000004557b7: ret; 
0x00000000004557d2: ret; 
0x0000000000455897: ret; 
0x00000000004558d3: ret; 
0x000000000045592d: ret; 
0x000000000045596d: ret; 
0x00000000004559a7: ret; 
0x00000000004559d8: ret; 
0x0000000000455a1b: ret; 
0x0000000000455b1d: ret; 
0x0000000000455b34: ret; 
0x0000000000455b6a: ret; 
0x0000000000455b8a: ret; 
0x0000000000455ba9: ret; 
0x0000000000455bd1: ret; 
0x0000000000455e7a: ret; 
0x0000000000455eb2: ret; 
0x0000000000455fc7: ret; 
0x000000000045601e: ret; 
0x0000000000456047: ret; 
0x000000000045605f: ret; 
0x00000000004560eb: ret; 
0x0000000000456159: ret; 
0x000000000045619d: ret; 
0x00000000004562fd: ret; 
0x00000000004564b8: ret; 
0x00000000004565b3: ret; 
0x00000000004565e9: ret; 
0x00000000004566a7: ret; 
0x00000000004566b8: ret; 
0x000000000045670f: ret; 
0x000000000045673b: ret; 
0x000000000045682f: ret; 
0x000000000045683f: ret; 
0x000000000045684f: ret; 
0x000000000045685f: ret; 
0x0000000000456872: ret; 
0x0000000000456892: ret; 
0x00000000004568af: ret; 
0x00000000004568c2: ret; 
0x00000000004568df: ret; 
0x00000000004568ef: ret; 
0x0000000000456902: ret; 
0x0000000000456950: ret; 
0x0000000000456a31: ret; 
0x0000000000456acb: ret; 
0x0000000000456ae6: ret; 
0x0000000000456b0b: ret; 
0x0000000000456b2b: ret; 
0x0000000000456b71: ret; 
0x0000000000456bdd: ret; 
0x0000000000456c3f: ret; 
0x0000000000456c5c: ret; 
0x0000000000456c7c: ret; 
0x0000000000456ce3: ret; 
0x0000000000456d01: ret; 
0x0000000000456d23: ret; 
0x0000000000456d41: ret; 
0x0000000000456d66: ret; 
0x0000000000456d8c: ret; 
0x0000000000456dac: ret; 
0x0000000000456dc3: ret; 
0x0000000000456de4: ret; 
0x0000000000456de7: ret; 
0x0000000000456e0a: ret; 
0x0000000000456e27: ret; 
0x0000000000456e4c: ret; 
0x0000000000456e76: ret; 
0x0000000000456e9d: ret; 
0x0000000000456eba: ret; 
0x0000000000456f0f: ret; 
0x0000000000456f43: ret; 
0x0000000000456f75: ret; 
0x0000000000456f98: ret; 
0x0000000000457076: ret; 
0x00000000004570b9: ret; 
0x00000000004570ca: ret; 
0x00000000004570db: ret; 
0x00000000004570e7: ret; 
0x0000000000457107: ret; 
0x000000000045717f: ret; 
0x00000000004571e9: ret; 
0x0000000000457213: ret; 
0x0000000000457234: ret; 
0x0000000000457254: ret; 
0x0000000000457274: ret; 
0x0000000000457294: ret; 
0x00000000004572b4: ret; 
0x00000000004572d6: ret; 
0x00000000004572f6: ret; 
0x000000000045731a: ret; 
0x0000000000457334: ret; 
0x0000000000457354: ret; 
0x0000000000457377: ret; 
0x0000000000457397: ret; 
0x00000000004573ba: ret; 
0x00000000004573e4: ret; 
0x000000000045740a: ret; 
0x000000000045742b: ret; 
0x000000000045744a: ret; 
0x0000000000457467: ret; 
0x000000000045748d: ret; 
0x00000000004574ad: ret; 
0x00000000004574ca: ret; 
0x00000000004574ed: ret; 
0x0000000000457514: ret; 
0x0000000000457537: ret; 
0x0000000000457566: ret; 
0x000000000045758c: ret; 
0x00000000004575aa: ret; 
0x00000000004575ca: ret; 
0x00000000004575d9: ret; 
0x00000000004575dd: ret; 
0x0000000000457620: ret; 
0x0000000000457676: ret; 
0x000000000045769a: ret; 
0x00000000004576c3: ret; 
0x00000000004576f3: ret; 
0x0000000000457720: ret; 
0x0000000000457750: ret; 
0x000000000045777a: ret; 
0x000000000045778f: ret; 
0x000000000045779f: ret; 
0x00000000004577af: ret; 
0x00000000004577bf: ret; 
0x00000000004577cf: ret; 
0x00000000004577df: ret; 
0x00000000004577ef: ret; 
0x00000000004577f6: ret; 
0x000000000045780a: ret; 
0x000000000045781a: ret; 
0x0000000000457833: ret; 
0x0000000000457836: ret; 
0x0000000000457845: ret; 
0x00000000004578d6: ret; 
0x0000000000457907: ret; 
0x0000000000457972: ret; 
0x0000000000457999: ret; 
0x0000000000457a02: ret; 
0x0000000000457a29: ret; 
0x0000000000457a8b: ret; 
0x0000000000457a9a: ret; 
0x0000000000457ac3: ret; 
0x0000000000457b26: ret; 
0x0000000000457b32: ret; 
0x0000000000457b59: ret; 
0x0000000000457bc4: ret; 
0x0000000000457c3a: ret; 
0x0000000000457c63: ret; 
0x0000000000457cdc: ret; 
0x0000000000457d03: ret; 
0x0000000000457d6a: ret; 
0x0000000000457d8f: ret; 
0x0000000000457dfa: ret; 
0x0000000000457e23: ret; 
0x0000000000457e92: ret; 
0x0000000000457eb9: ret; 
0x0000000000457f1a: ret; 
0x0000000000457f3f: ret; 
0x0000000000457f9a: ret; 
0x0000000000457fbf: ret; 
0x0000000000458046: ret; 
0x0000000000458077: ret; 
0x00000000004580e2: ret; 
0x0000000000458109: ret; 
0x0000000000458172: ret; 
0x0000000000458199: ret; 
0x00000000004581af: ret; 
0x000000000045821e: ret; 
0x0000000000458247: ret; 
0x00000000004582b2: ret; 
0x00000000004582d9: ret; 
0x00000000004582f6: ret; 
0x0000000000458316: ret; 
0x000000000045836d: ret; 
0x000000000045837f: ret; 
0x000000000045838f: ret; 
0x000000000045839f: ret; 
0x00000000004583af: ret; 
0x00000000004583c4: ret; 
0x0000000000458437: ret; 
0x000000000045845e: ret; 
0x00000000004584ac: ret; 
0x0000000000458501: ret; 
0x000000000045856b: ret; 
0x0000000000458591: ret; 
0x00000000004585e1: ret; 
0x0000000000458639: ret; 
0x0000000000458689: ret; 
0x00000000004586af: ret; 
0x0000000000458738: ret; 
0x0000000000458776: ret; 
0x0000000000458789: ret; 
0x0000000000458792: ret; 
0x00000000004587ff: ret; 
0x0000000000458888: ret; 
0x00000000004588e7: ret; 
0x00000000004588ff: ret; 
0x00000000004589da: ret; 
0x0000000000458a37: ret; 
0x0000000000458a3a: ret; 
0x0000000000458a5c: ret; 
0x0000000000458a7a: ret; 
0x0000000000458a9a: ret; 
0x0000000000458aba: ret; 
0x0000000000458ad7: ret; 
0x0000000000458b0b: ret; 
0x0000000000458b4d: ret; 
0x0000000000458b8d: ret; 
0x0000000000458bf6: ret; 
0x0000000000458c07: ret; 
0x0000000000458c17: ret; 
0x0000000000458d79: ret; 
0x0000000000458db8: ret; 
0x0000000000458e9a: ret; 
0x0000000000458ea0: ret; 
0x0000000000458fc1: ret; 
0x0000000000458fe0: ret; 
0x000000000045900a: ret; 
0x000000000045902a: ret; 
0x0000000000459040: ret; 
0x000000000045906b: ret; 
0x000000000045908b: ret; 
0x00000000004590a1: ret; 
0x0000000000459257: ret; 
0x000000000045926d: ret; 
0x000000000045927e: ret; 
0x000000000045928c: ret; 
0x000000000045931c: ret; 
0x00000000004594a3: ret; 
0x00000000004594cb: ret; 
0x000000000045954a: ret; 
0x000000000045961a: ret; 
0x0000000000459769: ret; 
0x0000000000459774: ret; 
0x00000000004597a1: ret; 
0x00000000004597ac: ret; 
0x00000000004597c7: ret; 
0x00000000004597e3: ret; 
0x00000000004597ff: ret; 
0x0000000000459815: ret; 
0x0000000000459824: ret; 
0x0000000000459861: ret; 
0x000000000045986c: ret; 
0x0000000000459887: ret; 
0x00000000004598a3: ret; 
0x00000000004598b9: ret; 
0x00000000004598e9: ret; 
0x0000000000459901: ret; 
0x0000000000459929: ret; 
0x0000000000459941: ret; 
0x0000000000459964: ret; 
0x0000000000459a08: ret; 
0x0000000000459a58: ret; 
0x0000000000459a90: ret; 
0x0000000000459ae5: ret; 
0x0000000000459ca9: ret; 
0x0000000000459ce0: ret; 
0x0000000000459dbd: ret; 
0x0000000000459dd4: ret; 
0x0000000000459df1: ret; 
0x0000000000459e11: ret; 
0x0000000000459ea8: ret; 
0x0000000000459f05: ret; 
0x0000000000459f54: ret; 
0x0000000000459f9f: ret; 
0x0000000000459fc8: ret; 
0x0000000000459fd6: ret; 
0x0000000000459fde: ret; 
0x000000000045a049: ret; 
0x000000000045a08f: ret; 
0x000000000045a0a8: ret; 
0x000000000045a18e: ret; 
0x000000000045a220: ret; 
0x000000000045a23f: ret; 
0x000000000045a2a3: ret; 
0x000000000045a528: ret; 
0x000000000045a593: ret; 
0x000000000045a7a9: ret; 
0x000000000045a811: ret; 
0x000000000045a83c: ret; 
0x000000000045a8a1: ret; 
0x000000000045a8cc: ret; 
0x000000000045a931: ret; 
0x000000000045a95c: ret; 
0x000000000045a9c1: ret; 
0x000000000045a9ec: ret; 
0x000000000045aa59: ret; 
0x000000000045ad28: ret; 
0x000000000045ad71: ret; 
0x000000000045b0a9: ret; 
0x000000000045b1b5: ret; 
0x000000000045b1f6: ret; 
0x000000000045b234: ret; 
0x000000000045b4b9: ret; 
0x000000000045b5cd: ret; 
0x000000000045b64a: ret; 
0x000000000045b743: ret; 
0x000000000045b83a: ret; 
0x000000000045b84f: ret; 
0x000000000045b85f: ret; 
0x000000000045b877: ret; 
0x000000000045b8ee: ret; 
0x000000000045b901: ret; 
0x000000000045b921: ret; 
0x000000000045b95b: ret; 
0x000000000045b977: ret; 
0x000000000045b997: ret; 
0x000000000045b9b7: ret; 
0x000000000045b9d9: ret; 
0x000000000045b9f7: ret; 
0x000000000045ba17: ret; 
0x000000000045ba44: ret; 
0x000000000045ba61: ret; 
0x000000000045bb3f: ret; 
0x000000000045bb57: ret; 
0x000000000045bc1b: ret; 
0x000000000045bc41: ret; 
0x000000000045bd3d: ret; 
0x000000000045bd5a: ret; 
0x000000000045bd7a: ret; 
0x000000000045bd94: ret; 
0x000000000045bdba: ret; 
0x000000000045bde6: ret; 
0x000000000045bed9: ret; 
0x000000000045bf12: ret; 
0x000000000045bf3f: ret; 
0x000000000045bfcf: ret; 
0x000000000045c037: ret; 
0x000000000045c0db: ret; 
0x000000000045c0ef: ret; 
0x000000000045c105: ret; 
0x000000000045c11f: ret; 
0x000000000045c12f: ret; 
0x000000000045c13f: ret; 
0x000000000045c14f: ret; 
0x000000000045c17b: ret; 
0x000000000045c195: ret; 
0x000000000045c1d1: ret; 
0x000000000045c20b: ret; 
0x000000000045c21f: ret; 
0x000000000045c24b: ret; 
0x000000000045c25f: ret; 
0x000000000045c26f: ret; 
0x000000000045c27f: ret; 
0x000000000045c295: ret; 
0x000000000045c2af: ret; 
0x000000000045c2bf: ret; 
0x000000000045c331: ret; 
0x000000000045c3f6: ret; 
0x000000000045c421: ret; 
0x000000000045c45f: ret; 
0x000000000045c4e5: ret; 
0x000000000045c51d: ret; 
0x000000000045c564: ret; 
0x000000000045c637: ret; 
0x000000000045c670: ret; 
0x000000000045c6c4: ret; 
0x000000000045c74b: ret; 
0x000000000045c7c9: ret; 
0x000000000045c7e8: ret; 
0x000000000045c7ff: ret; 
0x000000000045c817: ret; 
0x000000000045c834: ret; 
0x000000000045c857: ret; 
0x000000000045c880: ret; 
0x000000000045c8b3: ret; 
0x000000000045c8da: ret; 
0x000000000045c8fa: ret; 
0x000000000045c923: ret; 
0x000000000045c947: ret; 
0x000000000045c97d: ret; 
0x000000000045c9af: ret; 
0x000000000045c9dc: ret; 
0x000000000045ca00: ret; 
0x000000000045ca32: ret; 
0x000000000045ca62: ret; 
0x000000000045ca90: ret; 
0x000000000045cac3: ret; 
0x000000000045cae1: ret; 
0x000000000045cb07: ret; 
0x000000000045cb2f: ret; 
0x000000000045cb4a: ret; 
0x000000000045cb6a: ret; 
0x000000000045cb8a: ret; 
0x000000000045cbaa: ret; 
0x000000000045cbc8: ret; 
0x000000000045cbe8: ret; 
0x000000000045cc91: ret; 
0x000000000045cdad: ret; 
0x000000000045cf3e: ret; 
0x000000000045d414: ret; 
0x0000000000401048: ret; 
0x000000000040105f: ret; 
0x000000000040108d: ret; 
0x00000000004010a4: ret; 
0x00000000004010d6: ret; 
0x00000000004010f8: ret; 
0x0000000000401129: ret; 
0x000000000040115a: ret; 
0x0000000000401187: ret; 
0x00000000004011b8: ret; 
0x00000000004011fe: ret; 
0x0000000000401230: ret; 
0x0000000000401258: ret; 
0x0000000000401289: ret; 
0x00000000004012ba: ret; 
0x00000000004012e7: ret; 
0x0000000000401318: ret; 
0x0000000000401349: ret; 
0x000000000040137b: ret; 
0x0000000000401398: ret; 
0x00000000004013d2: ret; 
0x0000000000401404: ret; 
0x0000000000401428: ret; 
0x000000000040146e: ret; 
0x0000000000401473: ret; 
0x00000000004014b5: ret; 
0x00000000004014ba: ret; 
0x0000000000401506: ret; 
0x0000000000401523: ret; 
0x0000000000401528: ret; 
0x0000000000401559: ret; 
0x000000000040158a: ret; 
0x00000000004015b7: ret; 
0x00000000004015e8: ret; 
0x0000000000401619: ret; 
0x000000000040164b: ret; 
0x0000000000401682: ret; 
0x00000000004016b3: ret; 
0x00000000004016e7: ret; 
0x0000000000401709: ret; 
0x0000000000401718: ret; 
0x000000000040173a: ret; 
0x0000000000401749: ret; 
0x000000000040176b: ret; 
0x000000000040177a: ret; 
0x000000000040179c: ret; 
0x00000000004017ab: ret; 
0x00000000004017c0: ret; 
0x00000000004017cd: ret; 
0x00000000004017dc: ret; 
0x00000000004017f1: ret; 
0x000000000040180d: ret; 
0x0000000000401822: ret; 
0x000000000040183e: ret; 
0x00000000004018d1: ret; 
0x0000000000401955: ret; 
0x000000000040198b: ret; 
0x00000000004019f3: ret; 
0x0000000000401a62: ret; 
0x0000000000401aa6: ret; 
0x0000000000401adc: ret; 
0x0000000000401b0d: ret; 
0x0000000000401b7c: ret; 
0x0000000000401bc0: ret; 
0x0000000000401c27: ret; 
0x0000000000401c58: ret; 
0x0000000000401cc7: ret; 
0x0000000000401d0b: ret; 
0x0000000000401d7e: ret; 
0x0000000000401db1: ret; 
0x0000000000401df9: ret; 
0x0000000000401e2c: ret; 
0x0000000000401e5f: ret; 
0x0000000000401e92: ret; 
0x0000000000401ed5: ret; 
0x0000000000401f18: ret; 
0x0000000000401f5b: ret; 
0x0000000000401f9f: ret; 
0x0000000000401fa9: ret; 
0x0000000000401fb3: ret; 
0x0000000000401fc4: ret; 
0x000000000040207d: ret; 
0x0000000000402100: ret; 
0x0000000000402105: ret; 
0x0000000000402114: ret; 
0x0000000000402119: ret; 
0x000000000040212a: ret; 
0x000000000040212f: ret; 
0x000000000040213e: ret; 
0x0000000000402143: ret; 
0x00000000004021ed: ret; 
0x0000000000402270: ret; 
0x0000000000402275: ret; 
0x0000000000402284: ret; 
0x0000000000402289: ret; 
0x000000000040229a: ret; 
0x000000000040229f: ret; 
0x00000000004022ad: ret; 
0x00000000004022b2: ret; 
0x00000000004022d2: ret; 
0x000000000040237c: ret; 
0x00000000004023c6: ret; 
0x00000000004023cb: ret; 
0x00000000004023d0: ret; 
0x00000000004023d5: ret; 
0x00000000004023dd: ret; 
0x00000000004023e2: ret; 
0x00000000004023e7: ret; 
0x00000000004023ec: ret; 
0x00000000004023f9: ret; 
0x000000000040246f: ret; 
0x000000000040247d: ret; 
0x00000000004024ef: ret; 
0x00000000004024ff: ret; 
0x0000000000402563: ret; 
0x0000000000402574: ret; 
0x00000000004025b2: ret; 
0x00000000004025bb: ret; 
0x00000000004025d9: ret; 
0x00000000004025fb: ret; 
0x0000000000402616: ret; 
0x0000000000402638: ret; 
0x0000000000402650: ret; 
0x0000000000402670: ret; 
0x0000000000402684: ret; 
0x0000000000402699: ret; 
0x00000000004026a6: ret; 
0x00000000004026c4: ret; 
0x00000000004026e4: ret; 
0x00000000004026f6: ret; 
0x000000000040270b: ret; 
0x0000000000402718: ret; 
0x0000000000402723: ret; 
0x0000000000402730: ret; 
0x0000000000402743: ret; 
0x0000000000402753: ret; 
0x0000000000402764: ret; 
0x0000000000402774: ret; 
0x0000000000402786: ret; 
0x0000000000402796: ret; 
0x00000000004027b9: ret; 
0x00000000004027d4: ret; 
0x0000000000402850: ret; 
0x0000000000402893: ret; 
0x00000000004028cb: ret; 
0x00000000004028ff: ret; 
0x0000000000402918: ret; 
0x000000000040294a: ret; 
0x0000000000402976: ret; 
0x0000000000402986: ret; 
0x00000000004029e1: ret; 
0x0000000000402a1c: ret; 
0x0000000000402a46: ret; 
0x0000000000402a67: ret; 
0x0000000000402a96: ret; 
0x0000000000402ab7: ret; 
0x0000000000402ae0: ret; 
0x0000000000402b0d: ret; 
0x0000000000402b30: ret; 
0x0000000000402b57: ret; 
0x0000000000402b7a: ret; 
0x0000000000402b9a: ret; 
0x0000000000402bb7: ret; 
0x0000000000402bda: ret; 
0x0000000000402bf7: ret; 
0x0000000000402c6e: ret; 
0x0000000000402cce: ret; 
0x0000000000402d2f: ret; 
0x0000000000402db2: ret; 
0x0000000000402dd7: ret; 
0x0000000000402e2b: ret; 
0x0000000000402e4a: ret; 
0x0000000000402e6a: ret; 
0x0000000000402e84: ret; 
0x0000000000402eb3: ret; 
0x0000000000402eda: ret; 
0x0000000000402ef7: ret; 
0x0000000000402f1a: ret; 
0x0000000000402f47: ret; 
0x0000000000402f6a: ret; 
0x0000000000402f8d: ret; 
0x0000000000402fb0: ret; 
0x0000000000402fd4: ret; 
0x0000000000402ffd: ret; 
0x0000000000403026: ret; 
0x000000000040304a: ret; 
0x000000000040306a: ret; 
0x000000000040308a: ret; 
0x00000000004030aa: ret; 
0x00000000004030ca: ret; 
0x00000000004030e4: ret; 
0x000000000040315d: ret; 
0x000000000040316a: ret; 
0x000000000040317f: ret; 
0x000000000040318f: ret; 
0x000000000040319f: ret; 
0x00000000004031af: ret; 
0x00000000004031bf: ret; 
0x00000000004031cf: ret; 
0x00000000004031df: ret; 
0x00000000004031e6: ret; 
0x00000000004031fa: ret; 
0x000000000040320a: ret; 
0x0000000000403223: ret; 
0x0000000000403226: ret; 
0x0000000000403235: ret; 
0x00000000004032cc: ret; 
0x00000000004032df: ret; 
0x0000000000403316: ret; 
0x0000000000403343: ret; 
0x000000000040335c: ret; 
0x000000000040336b: ret; 
0x00000000004033a8: ret; 
0x00000000004033b0: ret; 
0x00000000004033f1: ret; 
0x0000000000403418: ret; 
0x0000000000403435: ret; 
0x0000000000403455: ret; 
0x0000000000403475: ret; 
0x0000000000403495: ret; 
0x00000000004034b5: ret; 
0x00000000004034cf: ret; 
0x00000000004034e1: ret; 
0x0000000000403505: ret; 
0x0000000000403544: ret; 
0x0000000000403567: ret; 
0x0000000000403604: ret; 
0x000000000040369b: ret; 
0x00000000004036bc: ret; 
0x0000000000403722: ret; 
0x0000000000403733: ret; 
0x00000000004037a3: ret; 
0x00000000004037b4: ret; 
0x000000000040380f: ret; 
0x0000000000403815: ret; 
0x00000000004038ae: ret; 
0x00000000004038b4: ret; 
0x00000000004038c4: ret; 
0x0000000000403915: ret; 
0x000000000040391d: ret; 
0x00000000004039b1: ret; 
0x00000000004039b9: ret; 
0x00000000004039c9: ret; 
0x0000000000403a19: ret; 
0x0000000000403a48: ret; 
0x0000000000403a5e: ret; 
0x0000000000403a82: ret; 
0x0000000000403a8d: ret; 
0x0000000000403a9a: ret; 
0x0000000000403aaa: ret; 
0x0000000000403b26: ret; 
0x0000000000403bb3: ret; 
0x0000000000403c30: ret; 
0x0000000000403c7a: ret; 
0x0000000000403d0d: ret; 
0x0000000000403d48: ret; 
0x0000000000403d71: ret; 
0x0000000000403d74: ret; 
0x0000000000403d8a: ret; 
0x0000000000403d99: ret; 
0x0000000000403e9d: ret; 
0x0000000000404089: ret; 
0x00000000004040d3: ret; 
0x0000000000404154: ret; 
0x0000000000404168: ret; 
0x000000000040417f: ret; 
0x0000000000404183: ret; 
0x00000000004041ba: ret; 
0x00000000004041bd: ret; 
0x00000000004041f9: ret; 
0x000000000040421d: ret; 
0x0000000000404227: ret; 
0x0000000000404258: ret; 
0x0000000000404299: ret; 
0x000000000040429d: ret; 
0x00000000004043ff: ret; 
0x0000000000404486: ret; 
0x0000000000404504: ret; 
0x0000000000404534: ret; 
0x000000000040455c: ret; 
0x0000000000404565: ret; 
0x0000000000404575: ret; 
0x0000000000404586: ret; 
0x0000000000404596: ret; 
0x00000000004045a5: ret; 
0x00000000004045b7: ret; 
0x00000000004045c7: ret; 
0x00000000004045e6: ret; 
0x0000000000404606: ret; 
0x0000000000404650: ret; 
0x00000000004046a7: ret; 
0x00000000004046ca: ret; 
0x0000000000404727: ret; 
0x0000000000404781: ret; 
0x00000000004047df: ret; 
0x00000000004047fa: ret; 
0x0000000000404867: ret; 
0x0000000000404888: ret; 
0x00000000004048a5: ret; 
0x00000000004048bf: ret; 
0x00000000004048cf: ret; 
0x00000000004048df: ret; 
0x00000000004048ef: ret; 
0x00000000004048f3: ret; 
0x0000000000404903: ret; 
0x0000000000404912: ret; 
0x0000000000404922: ret; 
0x0000000000404933: ret; 
0x0000000000404943: ret; 
0x0000000000404968: ret; 
0x0000000000404985: ret; 
0x000000000040499f: ret; 
0x00000000004049af: ret; 
0x00000000004049bf: ret; 
0x00000000004049cf: ret; 
0x00000000004049d3: ret; 
0x00000000004049e3: ret; 
0x00000000004049f2: ret; 
0x0000000000404a02: ret; 
0x0000000000404a13: ret; 
0x0000000000404a23: ret; 
0x0000000000404a53: ret; 
0x0000000000404a97: ret; 
0x0000000000404acf: ret; 
0x0000000000404afe: ret; 
0x0000000000404b11: ret; 
0x0000000000404b7a: ret; 
0x0000000000404bc2: ret; 
0x0000000000404c17: ret; 
0x0000000000404c6a: ret; 
0x0000000000404cc7: ret; 
0x0000000000404cf8: ret; 
0x0000000000404d28: ret; 
0x0000000000404d58: ret; 
0x0000000000404d88: ret; 
0x0000000000404dbd: ret; 
0x0000000000404df0: ret; 
0x0000000000404e0c: ret; 
0x0000000000404e16: ret; 
0x0000000000404e35: ret; 
0x0000000000404e58: ret; 
0x0000000000404e6a: ret; 
0x0000000000404e7a: ret; 
0x0000000000404e8e: ret; 
0x0000000000404e9e: ret; 
0x0000000000404ec3: ret; 
0x0000000000404f06: ret; 
0x0000000000404f34: ret; 
0x0000000000404f60: ret; 
0x0000000000404f7f: ret; 
0x0000000000404f8f: ret; 
0x0000000000404faf: ret; 
0x0000000000404fcf: ret; 
0x0000000000404fef: ret; 
0x000000000040500f: ret; 
0x000000000040502f: ret; 
0x000000000040504f: ret; 
0x000000000040506f: ret; 
0x000000000040508e: ret; 
0x00000000004050fe: ret; 
0x0000000000405100: ret; 
0x0000000000405114: ret; 
0x0000000000405128: ret; 
0x000000000040513c: ret; 
0x0000000000405150: ret; 
0x0000000000405169: ret; 
0x000000000040517a: ret; 
0x0000000000405193: ret; 
0x00000000004051a6: ret; 
0x00000000004051c2: ret; 
0x00000000004051d5: ret; 
0x0000000000405280: ret; 
0x00000000004053d9: ret; 
0x000000000040540a: ret; 
0x0000000000405442: ret; 
0x00000000004054b0: ret; 
0x000000000040583a: ret; 
0x0000000000405a74: ret; 
0x0000000000406271: ret; 
0x0000000000406539: ret; 
0x0000000000406642: ret; 
0x000000000040676a: ret; 
0x0000000000406778: ret; 
0x000000000040678c: ret; 
0x00000000004067ba: ret; 
0x000000000040681a: ret; 
0x000000000040682b: ret; 
0x000000000040684b: ret; 
0x000000000040685b: ret; 
0x000000000040687b: ret; 
0x00000000004068a9: ret; 
0x0000000000406998: ret; 
0x00000000004069fe: ret; 
0x0000000000406a49: ret; 
0x0000000000406a6f: ret; 
0x0000000000406ad1: ret; 
0x0000000000406af4: ret; 
0x0000000000406b24: ret; 
0x0000000000406b43: ret; 
0x0000000000406b73: ret; 
0x0000000000406b90: ret; 
0x0000000000406bc6: ret; 
0x0000000000406c94: ret; 
0x0000000000406cfc: ret; 
0x0000000000406d3a: ret; 
0x0000000000406d5f: ret; 
0x0000000000406dbf: ret; 
0x0000000000406dcc: ret; 
0x0000000000406ded: ret; 
0x0000000000406dfa: ret; 
0x0000000000406e18: ret; 
0x0000000000406e27: ret; 
0x0000000000406e49: ret; 
0x0000000000406f14: ret; 
0x0000000000406f71: ret; 
0x0000000000406f83: ret; 
0x0000000000406f93: ret; 
0x0000000000406fb3: ret; 
0x0000000000407029: ret; 
0x00000000004070a9: ret; 
0x00000000004070e0: ret; 
0x000000000040719a: ret; 
0x0000000000407247: ret; 
0x000000000040727e: ret; 
0x00000000004072cd: ret; 
0x0000000000407304: ret; 
0x0000000000407310: ret; 
0x0000000000407335: ret; 
0x0000000000407339: ret; 
0x0000000000407356: ret; 
0x0000000000407359: ret; 
0x000000000040737d: ret; 
0x00000000004073d2: ret; 
0x00000000004073fd: ret; 
0x0000000000407452: ret; 
0x0000000000407499: ret; 
0x00000000004074d9: ret; 
0x0000000000407510: ret; 
0x000000000040755c: ret; 
0x000000000040759c: ret; 
0x00000000004075d1: ret; 
0x00000000004075f5: ret; 
0x0000000000407615: ret; 
0x0000000000407635: ret; 
0x000000000040766c: ret; 
0x0000000000407694: ret; 
0x0000000000407722: ret; 
0x00000000004077b2: ret; 
0x00000000004077db: ret; 
0x000000000040781a: ret; 
0x0000000000407846: ret; 
0x00000000004078a6: ret; 
0x00000000004078e2: ret; 
0x000000000040791a: ret; 
0x000000000040792a: ret; 
0x0000000000407955: ret; 
0x0000000000407b4b: ret; 
0x0000000000407b66: ret; 
0x0000000000407bd9: ret; 
0x0000000000407bea: ret; 
0x0000000000407dac: ret; 
0x0000000000407df6: ret; 
0x000000000040816a: ret; 
0x0000000000408183: ret; 
0x0000000000408401: ret; 
0x0000000000408418: ret; 
0x0000000000408460: ret; 
0x00000000004084c2: ret; 
0x00000000004084c8: ret; 
0x000000000040855e: ret; 
0x0000000000408564: ret; 
0x0000000000408704: ret; 
0x0000000000408755: ret; 
0x00000000004087bd: ret; 
0x00000000004087e4: ret; 
0x0000000000408840: ret; 
0x0000000000408846: ret; 
0x0000000000408973: ret; 
0x0000000000408a8c: ret; 
0x0000000000408c4c: ret; 
0x0000000000408cba: ret; 
0x0000000000408cfa: ret; 
0x0000000000408cff: ret; 
0x0000000000408d3a: ret; 
0x0000000000408dac: ret; 
0x0000000000408ef9: ret; 
0x0000000000408f3d: ret; 
0x0000000000408f7a: ret; 
0x0000000000408f98: ret; 
0x0000000000408fba: ret; 
0x0000000000408fdb: ret; 
0x000000000040908a: ret; 
0x00000000004090a6: ret; 
0x00000000004090c2: ret; 
0x00000000004090e1: ret; 
0x000000000040914b: ret; 
0x0000000000409181: ret; 
0x0000000000409299: ret; 
0x0000000000409363: ret; 
0x0000000000409370: ret; 
0x00000000004093cf: ret; 
0x000000000040948c: ret; 
0x00000000004094e0: ret; 
0x0000000000409554: ret; 
0x0000000000409adc: ret; 
0x0000000000409b23: ret; 
0x0000000000409d5e: ret; 
0x0000000000409db7: ret; 
0x0000000000409dc7: ret; 
0x0000000000409df3: ret; 
0x0000000000409e24: ret; 
0x0000000000409e52: ret; 
0x0000000000409ec7: ret; 
0x0000000000409ef8: ret; 
0x0000000000409fd6: ret; 
0x000000000040a01a: ret; 
0x000000000040a04c: ret; 
0x000000000040a189: ret; 
0x000000000040a1ad: ret; 
0x000000000040a24e: ret; 
0x000000000040a52b: ret; 
0x000000000040a530: ret; 
0x000000000040a533: ret; 
0x000000000040a651: ret; 
0x000000000040a730: ret; 
0x000000000040a810: ret; 
0x000000000040a8af: ret; 
0x000000000040a8cc: ret; 
0x000000000040a928: ret; 
0x000000000040a9a7: ret; 
0x000000000040aa30: ret; 
0x000000000040aa53: ret; 
0x000000000040ab48: ret; 
0x000000000040ab79: ret; 
0x000000000040ad28: ret; 
0x000000000040ae79: ret; 
0x000000000040ae95: ret; 
0x000000000040af69: ret; 
0x000000000040afc8: ret; 
0x000000000040b052: ret; 
0x000000000040b165: ret; 
0x000000000040b19b: ret; 
0x000000000040b299: ret; 
0x000000000040b2e9: ret; 
0x000000000040b36f: ret; 
0x000000000040b3a9: ret; 
0x000000000040b3d7: ret; 
0x000000000040b3fe: ret; 
0x000000000040b426: ret; 
0x000000000040b42d: ret; 
0x000000000040b46e: ret; 
0x000000000040b476: ret; 
0x000000000040b4fb: ret; 
0x000000000040b546: ret; 
0x000000000040b5c0: ret; 
0x000000000040b65b: ret; 
0x000000000040b6d8: ret; 
0x000000000040b709: ret; 
0x000000000040b7d2: ret; 
0x000000000040b7f3: ret; 
0x000000000040b807: ret; 
0x000000000040b865: ret; 
0x000000000040b882: ret; 
0x000000000040b8bb: ret; 
0x000000000040b8d5: ret; 
0x000000000040b91f: ret; 
0x000000000040b958: ret; 
0x000000000040b979: ret; 
0x000000000040b9a4: ret; 
0x000000000040b9d1: ret; 
0x000000000040ba0a: ret; 
0x000000000040ba70: ret; 
0x000000000040bab2: ret; 
0x000000000040bae2: ret; 
0x000000000040bb2d: ret; 
0x000000000040bc1b: ret; 
0x000000000040bc80: ret; 
0x000000000040bd68: ret; 
0x000000000040bea1: ret; 
0x000000000040c0a7: ret; 
0x000000000040c196: ret; 
0x000000000040c32f: ret; 
0x000000000040c46d: ret; 
0x000000000040c498: ret; 
0x000000000040c4b9: ret; 
0x000000000040c529: ret; 
0x000000000040c585: ret; 
0x000000000040c621: ret; 
0x000000000040c6f3: ret; 
0x000000000040c76c: ret; 
0x000000000040c7ff: ret; 
0x000000000040c831: ret; 
0x000000000040c96a: ret; 
0x000000000040ca16: ret; 
0x000000000040ca31: ret; 
0x000000000040ca63: ret; 
0x000000000040cb3b: ret; 
0x000000000040cb71: ret; 
0x000000000040cbc8: ret; 
0x000000000040cbf7: ret; 
0x000000000040cc69: ret; 
0x000000000040ccb8: ret; 
0x000000000040cd0d: ret; 
0x000000000040cd2b: ret; 
0x000000000040cd30: ret; 
0x000000000040cddc: ret; 
0x000000000040ce28: ret; 
0x000000000040ce75: ret; 
0x000000000040cedf: ret; 
0x000000000040cf33: ret; 
0x000000000040cf7c: ret; 
0x000000000040cf88: ret; 
0x000000000040cff0: ret; 
0x000000000040d06b: ret; 
0x000000000040d0ca: ret; 
0x000000000040d135: ret; 
0x000000000040d1c5: ret; 
0x000000000040d1e0: ret; 
0x000000000040d223: ret; 
0x000000000040d282: ret; 
0x000000000040d2d3: ret; 
0x000000000040d33f: ret; 
0x000000000040d392: ret; 
0x000000000040d3f2: ret; 
0x000000000040d4ae: ret; 
0x000000000040d66c: ret; 
0x000000000040d6ab: ret; 
0x000000000040d70a: ret; 
0x000000000040d768: ret; 
0x000000000040d7a0: ret; 
0x000000000040d7dd: ret; 
0x000000000040d810: ret; 
0x000000000040d84d: ret; 
0x000000000040d86a: ret; 
0x000000000040d884: ret; 
0x000000000040d899: ret; 
0x000000000040d89c: ret; 
0x000000000040d940: ret; 
0x000000000040d9ce: ret; 
0x000000000040d9dd: ret; 
0x000000000040d9ed: ret; 
0x000000000040d9fd: ret; 
0x000000000040da5e: ret; 
0x000000000040da75: ret; 
0x000000000040dab5: ret; 
0x000000000040dac5: ret; 
0x000000000040dadf: ret; 
0x000000000040daea: ret; 
0x000000000040daed: ret; 
0x000000000040db10: ret; 
0x000000000040db35: ret; 
0x000000000040db67: ret; 
0x000000000040db85: ret; 
0x000000000040dba5: ret; 
0x000000000040dbd7: ret; 
0x000000000040dbf5: ret; 
0x000000000040dc1d: ret; 
0x000000000040dc90: ret; 
0x000000000040dcd2: ret; 
0x000000000040dd02: ret; 
0x000000000040dd6b: ret; 
0x000000000040dd6f: ret; 
0x000000000040ddd1: ret; 
0x000000000040de29: ret; 
0x000000000040de93: ret; 
0x000000000040df0e: ret; 
0x000000000040df51: ret; 
0x000000000040dfa1: ret; 
0x000000000040e004: ret; 
0x000000000040e059: ret; 
0x000000000040e07c: ret; 
0x000000000040e135: ret; 
0x000000000040e178: ret; 
0x000000000040e1f1: ret; 
0x000000000040e2ca: ret; 
0x000000000040e36d: ret; 
0x000000000040e391: ret; 
0x000000000040e45a: ret; 
0x000000000040e4e7: ret; 
0x000000000040e4ee: ret; 
0x000000000040e523: ret; 
0x000000000040e5b9: ret; 
0x000000000040e5ce: ret; 
0x000000000040e5d5: ret; 
0x000000000040e674: ret; 
0x000000000040e6b0: ret; 
0x000000000040e703: ret; 
0x000000000040e76f: ret; 
0x000000000040e7f3: ret; 
0x000000000040e845: ret; 
0x000000000040e870: ret; 
0x000000000040e959: ret; 
0x000000000040e992: ret; 
0x000000000040ea29: ret; 
0x000000000040ea41: ret; 
0x000000000040ea95: ret; 
0x000000000040eac0: ret; 
0x000000000040ebcf: ret; 
0x000000000040ece9: ret; 
0x000000000040edf8: ret; 
0x000000000040ee72: ret; 
0x000000000040eee8: ret; 
0x000000000040ef19: ret; 
0x000000000040ef27: ret; 
0x000000000040ef2c: ret; 
0x000000000040ef61: ret; 
0x000000000040f08f: ret; 
0x000000000040f119: ret; 
0x000000000040f12f: ret; 
0x000000000040f1b9: ret; 
0x000000000040f28f: ret; 
0x000000000040f2bf: ret; 
0x000000000040f34f: ret; 
0x000000000040f3e1: ret; 
0x000000000040f477: ret; 
0x000000000040f4af: ret; 
0x000000000040f53f: ret; 
0x000000000040f5d1: ret; 
0x000000000040f665: ret; 
0x000000000040f6f7: ret; 
0x000000000040f768: ret; 
0x000000000040f816: ret; 
0x000000000040f8d9: ret; 
0x000000000040f8f2: ret; 
0x000000000040f93c: ret; 
0x000000000040f948: ret; 
0x000000000040f9b1: ret; 
0x000000000040f9dd: ret; 
0x000000000040fa41: ret; 
0x000000000040fa6d: ret; 
0x000000000040fad1: ret; 
0x000000000040fafd: ret; 
0x000000000040fb6c: ret; 
0x000000000040fc34: ret; 
0x000000000040fdc5: ret; 
0x000000000040fe2d: ret; 
0x000000000040fe95: ret; 
0x000000000040fe9e: ret; 
0x000000000040feb7: ret; 
0x000000000040ff1d: ret; 
0x000000000040ff85: ret; 
0x000000000040ff8e: ret; 
0x000000000040ffa7: ret; 
0x000000000040fff8: ret; 
0x0000000000410054: ret; 
0x00000000004100df: ret; 
0x0000000000410156: ret; 
0x00000000004101ea: ret; 
0x000000000041026e: ret; 
0x00000000004102f9: ret; 
0x0000000000410363: ret; 
0x000000000041037e: ret; 
0x00000000004103ab: ret; 
0x00000000004103ea: ret; 
0x0000000000410437: ret; 
0x000000000041047a: ret; 
0x00000000004104ba: ret; 
0x00000000004104f5: ret; 
0x000000000041065e: ret; 
0x00000000004106c6: ret; 
0x00000000004106ca: ret; 
0x000000000041075c: ret; 
0x0000000000410760: ret; 
0x000000000041076c: ret; 
0x00000000004107a5: ret; 
0x00000000004108bd: ret; 
0x0000000000410dae: ret; 
0x0000000000410e2d: ret; 
0x0000000000410f29: ret; 
0x000000000041101b: ret; 
0x000000000041109d: ret; 
0x000000000041111f: ret; 
0x000000000041124c: ret; 
0x0000000000411260: ret; 
0x000000000041129b: ret; 
0x00000000004112b0: ret; 
0x00000000004112eb: ret; 
0x0000000000411366: ret; 
0x00000000004113dc: ret; 
0x000000000041144c: ret; 
0x000000000041154b: ret; 
0x0000000000411564: ret; 
0x0000000000411579: ret; 
0x000000000041157c: ret; 
0x000000000041159a: ret; 
0x00000000004115b2: ret; 
0x00000000004115cf: ret; 
0x00000000004115e2: ret; 
0x00000000004115ff: ret; 
0x0000000000411616: ret; 
0x000000000041164b: ret; 
0x00000000004116fb: ret; 
0x0000000000411742: ret; 
0x000000000041179b: ret; 
0x00000000004117be: ret; 
0x00000000004117cf: ret; 
0x000000000041184b: ret; 
0x000000000041189a: ret; 
0x00000000004118fa: ret; 
0x0000000000411957: ret; 
0x00000000004119bf: ret; 
0x0000000000411a17: ret; 
0x0000000000411a7f: ret; 
0x0000000000411ab0: ret; 
0x0000000000411acd: ret; 
0x0000000000411ad0: ret; 
0x0000000000411ae9: ret; 
0x0000000000411af1: ret; 
0x0000000000411ba9: ret; 
0x0000000000411bf9: ret; 
0x0000000000411c29: ret; 
0x0000000000411dbc: ret; 
0x0000000000412052: ret; 
0x000000000041210c: ret; 
0x0000000000412173: ret; 
0x000000000041217a: ret; 
0x00000000004121a5: ret; 
0x00000000004124fe: ret; 
0x000000000041290a: ret; 
0x0000000000412b06: ret; 
0x0000000000412bc2: ret; 
0x0000000000412c0f: ret; 
0x0000000000412c62: ret; 
0x0000000000412c6a: ret; 
0x0000000000412cd7: ret; 
0x0000000000412d3c: ret; 
0x0000000000412dc1: ret; 
0x0000000000412e32: ret; 
0x0000000000412e76: ret; 
0x0000000000412ef5: ret; 
0x0000000000412f0f: ret; 
0x0000000000412f36: ret; 
0x0000000000412f53: ret; 
0x000000000045ca54: retf 0; add al, ch; adc dword ptr [rdx + rdi*8 - 1], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000045c96f: retf 0; add al, ch; call 0x4905c3ce; lea esp, [rsp + 8]; ret; 
0x000000000045c9ce: retf 0; add al, ch; mov dword ptr [rbp - 6], edx; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000403c72: retf 0x148; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004077d5: retf 0x1789; mov qword ptr [rsi], rax; ret; 
0x0000000000443a2a: retf 0x1de; add dl, dh; divps xmm0, xmmword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x00000000004275d5: retf 0x3148; shr bl, 5; sbb rax, rax; or al, 1; ret; 
0x0000000000443a21: retf 0x48f2; cvtpi2ps xmm0, mm2; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x000000000041ba88: retf 0x4c6; comiss xmm7, dword ptr [rcx]; sar byte ptr [rdi - 0x21], 1; ret; 
0x0000000000429805: retf 0x5d41; pop r12; pop rbx; ret; 
0x000000000045ca4f: retf 0x6348; sar byte ptr [rdi + 0xca], 1; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9c9: retf 0x6348; sar byte ptr [rdi + 0xca], 1; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000045770a: retf 0x6348; test dword ptr [rax - 0x77], 0x13bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402aca: retf 0x6348; test dword ptr [rax - 0x77], 0x8bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c89d: retf 0x6348; test dword ptr [rax - 0x77], 0xe8bfc2; add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000042fdb9: retf 0x8348; ret 0x4801; 
0x0000000000411ed8: retf 0x8348; ret 0x4c01; 
0x0000000000433fdd: retf 0x8548; sal byte ptr [rbp + 6], 0x48; sub edx, ecx; mov rax, rdx; ret; 
0x0000000000450bd3: retf 0x8548; sal byte ptr [rbx + rdx + 0x48], 0x89; out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000431d9e: retf 0x8944; ror dword ptr [rbp - 0x77], 0xc8; movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x000000000043195e: retf 0x8944; ror dword ptr [rbp - 0x77], 0xc8; movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f77: retf 0x8948; mov rsi, rdi; mov edi, 0xa; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402f31: retf 0x8948; mov rsi, rdi; mov edi, 9; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000401ef4: retf 0x894d; ret 0x50f; 
0x0000000000401f34: retf 0x894d; ret 0x894d; 
0x0000000000401f74: retf 0x894d; ret 0x894d; 
0x0000000000447117: retf 0x8d48; add eax, 0x2eb81; mov rdx, qword ptr [rax + 0x10]; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x00000000004470d7: retf 0x8d48; add eax, 0x2ebc1; mov rdx, qword ptr [rax + 0x10]; call 0x46f40; lea rsp, [rsp + 8]; ret; 
0x000000000043a995: retf 0x8d48; and al, 0x18; ret; 
0x0000000000403559: retf 0x8d48; js 0x355f; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x0000000000453ad9: retf 0x8d48; sbb al, 0x16; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000040ab39: retf 0x97e; movzx edx, cl; cmp byte ptr [rdi + rdx], 0x30; je 0xab30; mov rax, rcx; ret; 
0x000000000040abf1: retf 0xbbe9; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000045672c: retf 0xc148; cli; add eax, 0x3fe9c148; add rdx, rcx; mov rax, rdx; ret; 
0x000000000040255c: retf 0xd177; or rax, 0xffffffffffffffff; ret; 
0x000000000044f53a: retf 0xdb77; ret; 
0x000000000044f57f: retf 0xde77; ret; 
0x0000000000447d4c: retf 0xe17f; and ecx, 0xff; and r8d, 0xff; sub rcx, r8; mov rax, rcx; ret; 
0x0000000000402468: retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e8: retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x0000000000449bde: retf 0xe77f; mov word ptr [rax + rcx*2], 0; ret; 
0x0000000000404deb: retf 0xea7f; mov al, 1; ret; 
0x0000000000404db8: retf 0xed7f; mov al, 1; ret; 
0x0000000000402379: retf 0xf575; ret; 
0x0000000000429cf2: retf 0xff98; jmp qword ptr [rsi + 0x41]; 
0x0000000000429cf2: retf 0xff98; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x0000000000438ec2: retf 0xffe4; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000458585: retf 0xfffb; mov rax, rbx; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000455a12: retf 0xfffd; dec dword ptr [rax - 0x73]; and al, 0x18; ret; 
0x0000000000433ac2: retf 0xfffe; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004010c6: retf 1; call 0x17d50; mov rbx, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x00000000004391c9: retf 3; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000439229: retf 3; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000439293: retf 3; mov rsi, qword ptr [rsp]; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x000000000043909e: retf; add eax, dword ptr [rax]; call 0x38f60; mov rsp, rbp; pop rbp; ret; 
0x0000000000439104: retf; add eax, dword ptr [rax]; call 0x390b0; mov rsp, rbp; pop rbp; ret; 
0x0000000000439163: retf; add eax, dword ptr [rax]; mov rsi, qword ptr [rsp]; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000457691: retf; cmpsd dword ptr [rsi], dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042f664: retf; lea rsp, [rsp + 8]; ret; 
0x0000000000424d21: retf; or byte ptr [rsi], al; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x00000000004341b4: retf; ret; 
0x0000000000458a91: retf; xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417925: rol bh, cl; add eax, 0x521f0; jo 0x17930; add byte ptr [rax], al; ret; 
0x000000000043a324: rol byte ptr [rax + 0x56107c], cl; jne 0x3a308; lea rsp, [rsp + 8]; ret; 
0x000000000043372e: rol byte ptr [rax + 0xf], 0x95; mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c0: rol byte ptr [rax + 0xf], 0x95; mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043384e: rol byte ptr [rax + 0xf], 0x95; mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000434ab8: rol byte ptr [rax + rax*8 + 0x39450974], 0xc8; jg 0x34a38; ret; 
0x000000000044bedc: rol byte ptr [rax + rcx*2], 0x89; add al, 0x24; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004192b6: rol byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000045924e: rol byte ptr [rax], 0; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x00000000004479a7: rol byte ptr [rax], 0; lea rsp, [rsp + 8]; ret; 
0x00000000004031d9: rol byte ptr [rax], 0; sete al; ret; 
0x00000000004577e9: rol byte ptr [rax], 0; sete al; ret; 
0x0000000000402461: rol byte ptr [rbp + 0x480a75c0], 0x39; retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e1: rol byte ptr [rbp + 0x480a75c0], 0x39; retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x00000000004104ef: rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000041079f: rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x0000000000447ad0: rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x000000000044ba0b: rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x0000000000454002: rol byte ptr [rcx + 0x5d], 0x41; pop rsp; pop rbx; ret; 
0x0000000000447d07: rol byte ptr [rcx + 0x5f], 1; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044bbec: rol byte ptr [rcx + 0x5f], 1; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000043391c: rol byte ptr [rcx - 0x72b70003], 1; and al, 8; ret; 
0x000000000040254a: rol byte ptr [rcx - 0x77], 1; ret 0xe8d1; 
0x0000000000425851: rol byte ptr [rcx], 0x25; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000425871: rol byte ptr [rcx], 0x25; inc dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000042e5c9: rol byte ptr [rcx], 0x48; lea edi, [rdi + rax - 1]; call 0x47d20; lea rsp, [rsp + 8]; ret; 
0x0000000000434137: rol byte ptr [rcx], 0x48; test eax, eax; jne 0x34143; cmp rdx, r8; jne 0x34120; ret; 
0x0000000000404552: rol byte ptr [rcx], 0x66; cmp dword ptr [rdi + rax*2], 0xf4750000; ret; 
0x00000000004376ca: rol byte ptr [rcx], 0x80; jl 0x376d1; jmp ptr [rip + 0x63480875]; ret; 
0x000000000044de5e: rol byte ptr [rcx], 0x89; ret 0x8948; 
0x000000000044ce31: rol byte ptr [rcx], 0x89; ret 0x8d48; 
0x000000000044d039: rol byte ptr [rcx], 0x89; ret 0x8d48; 
0x0000000000455a31: rol byte ptr [rcx], 0x89; ret 0xc188; 
0x0000000000455a71: rol byte ptr [rcx], 0x89; ret 0xc188; 
0x0000000000455aa9: rol byte ptr [rcx], 0x89; ret 0xc188; 
0x0000000000455ae9: rol byte ptr [rcx], 0x89; ret 0xc188; 
0x0000000000456c49: rol byte ptr [rcx], 0x89; ret 0xc748; 
0x0000000000456c69: rol byte ptr [rcx], 0x89; ret 0xc748; 
0x0000000000456d79: rol byte ptr [rcx], 0x89; ret 0xc748; 
0x0000000000456d99: rol byte ptr [rcx], 0x89; ret 0xc748; 
0x000000000042675b: rol byte ptr [rcx], 0x89; ret; 
0x000000000044d74f: rol byte ptr [rcx], 0x89; ret; 
0x000000000044d99f: rol byte ptr [rcx], 0x89; ret; 
0x00000000004363ca: rol byte ptr [rcx], 0xeb; add dh, byte ptr [rbx + 0x48d88801]; lea esp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004365fe: rol byte ptr [rcx], 1; lea rsp, [rsp + 8]; ret; 
0x00000000004365fd: rol byte ptr [rcx], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000404de2: rol byte ptr [rdx + riz + 4], 1; pcmpeqw mm0, qword ptr [rdi]; cmp rdx, rcx; jg 0x4dd8; mov al, 1; ret; 
0x0000000000417c14: rol byte ptr [rsi], 0; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c3e: rol byte ptr [rsi], 0; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417a45: rol byte ptr [rsi], 1; add bh, al; add eax, 0x520ce; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000417ae3: rol cl, 1; call 0xffffffff89d1abf5; ret 0xe2c1; 
0x00000000004023c2: rol dword ptr [rax + 0x4c], 0xf; ret; 
0x000000000040ab3e: rol dword ptr [rax + 0x7430173c], 1; jmp 0xab8e; mov eax, ecx; ret; 
0x000000000040471d: rol dword ptr [rax + rcx*4 + 0xe], 0x48; lea esp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040485d: rol dword ptr [rax + rcx*4 + 0xe], 0x48; lea esp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000447d22: rol dword ptr [rax], 0; add byte ptr [rax], al; test rdx, rdx; jne 0x47d2f; xor eax, eax; ret; 
0x0000000000418cd6: rol dword ptr [rax], cl; add byte ptr [rax], al; call 0x18540; mov rsp, rbp; pop rbp; ret; 
0x00000000004587a7: rol dword ptr [rbp - 0x77], 1; ret 0x8341; 
0x000000000041f04c: rol dword ptr [rcx + 0x5d], cl; pop r12; pop rbx; ret; 
0x000000000044f532: rol dword ptr [rcx], 0x48; add esi, 2; cmp rdx, rcx; ja 0x4f518; ret; 
0x0000000000407307: rol dword ptr [rcx], 0x48; cmp esi, edx; jg 0x72f8; xor eax, eax; ret; 
0x000000000040cf7f: rol dword ptr [rcx], 0x48; cmp esi, edx; jg 0xcf70; xor eax, eax; ret; 
0x0000000000449b78: rol dword ptr [rdx], 0; call 0x49ac0; mov rsp, rbp; pop rbp; ret; 
0x0000000000449aad: rol dword ptr [rdx], 0; mov qword ptr [rsp], rax; call 0x49960; mov rsp, rbp; pop rbp; ret; 
0x000000000044f57b: rol dword ptr [rdx], 0x48; cmp edx, ecx; ja 0x4f560; ret; 
0x000000000040f93f: rol dword ptr [rdx], 0x48; cmp esi, edx; jg 0xf930; xor eax, eax; ret; 
0x00000000004026bf: rol dword ptr [rdx], 0x48; dec eax; ret; 
0x00000000004026df: rol dword ptr [rdx], 0x48; inc eax; ret; 
0x0000000000451e71: ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004521b4: ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x0000000000411db8: ror byte ptr [r8 - 0x77], 1; ret; 
0x000000000040543c: ror byte ptr [rax + 0x39], 1; sar byte ptr [rdi - 0x1a], 1; ret; 
0x0000000000409be2: ror byte ptr [rax + 0x3b], 1; add dword ptr [rdi], ecx; xchg edx, eax; ret 0xe281; 
0x000000000043b69a: ror byte ptr [rax + 0x63], 1; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000449e9d: ror byte ptr [rax + 0x63], 1; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000044c385: ror byte ptr [rax + 0x63], 1; test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000407b5c: ror byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8d48; 
0x000000000041f9d9: ror byte ptr [rax + 1], 0xd8; mov byte ptr [rax], 0; pop rbx; ret; 
0x0000000000408953: ror byte ptr [rax + 1], cl; ret 0x8b48; 
0x000000000044f0fc: ror byte ptr [rax - 0x2f], 1; clc; ret; 
0x000000000044f4ac: ror byte ptr [rax - 0x2f], 1; clc; ret; 
0x0000000000407a63: ror byte ptr [rax - 0x3f], 0xea; and byte ptr [rax + 1], cl; ret 0x894c; 
0x0000000000402472: ror byte ptr [rax - 0x73], 0x44; add eax, esi; cmp rdx, rax; jbe 0x246b; ret; 
0x0000000000402566: ror byte ptr [rax - 0x73], 0x44; add eax, esi; cmp rdx, rax; jbe 0x255f; sar rax, 1; ret; 
0x00000000004344ee: ror byte ptr [rax - 0x73], 0x48; add dword ptr [rax + 0x63], ecx; ret 0x2948; 
0x00000000004140a9: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x00000000004130ff: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000413291: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000041344b: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043234a: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432542: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432733: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043291b: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432afa: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432ce2: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432ec3: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043309b: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004332b3: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043348b: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000434ff4: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000435145: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043529c: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004352ed: ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000450c78: ror byte ptr [rax - 0x73], 0x64; and al, 0x18; pop r12; pop rbx; ret; 
0x000000000043c169: ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000443f93: ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450bed: ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000450e6b: ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x0000000000413f9a: ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x0000000000451343: ror byte ptr [rax - 0x73], 0x64; and al, 0x28; ret; 
0x000000000045ba3e: ror byte ptr [rax - 0x73], 0x64; and al, 0x48; ret; 
0x0000000000450bb4: ror byte ptr [rax - 0x73], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x0000000000456bd4: ror byte ptr [rax - 0x73], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x0000000000456c36: ror byte ptr [rax - 0x73], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x0000000000456cda: ror byte ptr [rax - 0x73], 0x64; and al, 8; pop r12; pop rbx; ret; 
0x000000000040452e: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000040874f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004087de: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000409293: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000409486: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000409e1e: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000409e4c: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000412f86: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004131dc: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041337d: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041354f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000413bd3: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000415a3d: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000415a7d: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000415b49: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041627d: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004162bd: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000416389: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b11b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b24b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b283: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b313: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000041b698: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004243fc: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000425c31: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004279df: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429aaa: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000429f2f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042c32b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042e78f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042ee8d: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042f1f2: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042fc9f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004315a7: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004315ca: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004315f7: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431617: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431882: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043189f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318bf: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318df: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004319e7: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a0a: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a37: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a57: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cc2: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cdf: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cff: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431d1f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432172: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043218f: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321af: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321cf: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004324dc: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004326cc: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432e6c: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043304c: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043325c: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043343c: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433d8e: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433dee: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043422e: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043424e: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043430b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043434b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043438b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004343cb: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043440b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043444b: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043a374: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000443600: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448526: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448569: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a289: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a2cc: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450ca8: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e2c: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000450e99: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000453d0e: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004582f0: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000458310: ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000454a9c: ror byte ptr [rax - 0x73], 1; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x0000000000456f09: ror byte ptr [rax - 0x73], 1; and al, 0x48; ret; 
0x0000000000430a48: ror byte ptr [rax - 0x73], 1; and al, 8; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x0000000000430ec8: ror byte ptr [rax - 0x73], 1; and al, 8; mov edx, 1; call 0x11c30; lea rsp, [rsp + 0x18]; ret; 
0x000000000040fb63: ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x0000000000433c05: ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447b99: ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x000000000044bc9a: ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x0000000000425aef: ror byte ptr [rax - 0x73], 1; or eax, 0x5fb09; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000459317: ror byte ptr [rax - 0x73], cl; add al, 0xd0; ret; 
0x000000000044a256: ror byte ptr [rax - 0x73], cl; add eax, 0x39b02; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448516: ror byte ptr [rax - 0x73], cl; add eax, 0x3b842; call qword ptr [rax + 0x20]; 
0x00000000004484f6: ror byte ptr [rax - 0x73], cl; add eax, 0x3b862; call qword ptr [rax + 0x20]; 
0x00000000004484f6: ror byte ptr [rax - 0x73], cl; add eax, 0x3b862; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000409ad5: ror byte ptr [rax - 0x73], cl; and byte ptr [rsi - 0x77], spl; ret; 
0x00000000004145ef: ror byte ptr [rax - 0x73], cl; mov esp, 0x16824; add al, ch; ret; 
0x0000000000444222: ror byte ptr [rax - 0x73], cl; xor eax, 0x1d7c6; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441a2: ror byte ptr [rax - 0x73], cl; xor eax, 0x1d826; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043bad6: ror byte ptr [rax - 0x73], cl; xor eax, 0x25a8a; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000040f045: ror byte ptr [rax - 0x75], 1; cmp ecx, dword ptr [rax - 0x77]; ret 0xd148; 
0x00000000004517dd: ror byte ptr [rax - 0x75], 1; jge 0x517ba; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451b00: ror byte ptr [rax - 0x75], 1; jge 0x51add; mov rax, qword ptr [rbp - 0x28]; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000042e0f3: ror byte ptr [rax - 0x75], 1; pop rbp; mov eax, 0xc0658b4c; mov rsp, rbp; pop rbp; ret; 
0x000000000042e0fb: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e22: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e45: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e62: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e82: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000043f7a2: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000443226: ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000045c96a: ror byte ptr [rax - 0x77], 0xfe; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000447a4f: ror byte ptr [rax - 0x77], 1; fmul dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000042fc21: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x000000000043d567: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x0000000000440a9d: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x000000000044d8ca: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x000000000044db18: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x000000000044def2: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x0000000000451e72: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004521b5: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004032af: ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x00000000004032f9: ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x0000000000417dce: ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x0000000000411db9: ror byte ptr [rax - 0x77], 1; ret; 
0x0000000000414e37: ror byte ptr [rax - 0x77], 1; ret; 
0x00000000004181eb: ror byte ptr [rax - 0x77], 1; ret; 
0x000000000041a633: ror byte ptr [rax - 0x77], 1; ret; 
0x000000000041a690: ror byte ptr [rax - 0x77], 1; ret; 
0x000000000041a789: ror byte ptr [rax - 0x77], 1; ret; 
0x000000000042b950: ror byte ptr [rax - 0x77], 1; test byte ptr [rax + rdi*4], ah; or byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000452062: ror byte ptr [rax - 0x77], 1; xchg ebp, eax; push -0x7a000001; ror byte ptr [rdi], 0x85; ret; 
0x0000000000417c1a: ror byte ptr [rax - 0x77], cl; ret; 
0x000000000040fb60: ror byte ptr [rax - 0x77], cl; ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x0000000000447b96: ror byte ptr [rax - 0x77], cl; ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x000000000044bc97: ror byte ptr [rax - 0x77], cl; ror byte ptr [rax - 0x73], 1; and al, 8; pop r12; pop rbx; ret; 
0x000000000040389c: ror byte ptr [rax - 0x7b], 1; sal byte ptr [rbx + rdx + 0x4d], cl; test eax, eax; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x0000000000410860: ror byte ptr [rax - 0x7d], 1; ret 0x4101; 
0x000000000042a3ba: ror byte ptr [rax - 0x7d], 1; ret 0x4901; 
0x000000000042a3e2: ror byte ptr [rax - 0x7d], 1; ret 0x4901; 
0x0000000000417006: ror byte ptr [rax - 0x7d], 1; ret; 
0x0000000000443ccd: ror byte ptr [rax - 0x7d], cl; ret 0x4807; 
0x0000000000405427: ror byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x00000000004045dc: ror byte ptr [rax - 9], cl; test byte ptr [rax - 0x77], -0x38; sub rax, rdx; ret; 
0x00000000004045fc: ror byte ptr [rax - 9], cl; test byte ptr [rax - 0x77], -0x38; sub rax, rdx; ret; 
0x000000000041d83a: ror byte ptr [rax], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000041d87a: ror byte ptr [rax], 0x48; lea esp, [rsp + 8]; ret; 
0x000000000041b3ca: ror byte ptr [rax], 0x48; mov dword ptr [rax], 1; call 0x1b380; lea rsp, [rsp + 8]; ret; 
0x000000000041a9c1: ror byte ptr [rax], 0x48; mov dword ptr [rax], ebx; pop rbx; ret; 
0x0000000000417e2a: ror byte ptr [rax], 0x48; mov eax, dword ptr [rax]; lea rsp, [rsp + 8]; ret; 
0x0000000000417c50: ror byte ptr [rax], 0x48; mov edx, dword ptr [rbx]; mov rax, qword ptr [rax]; add rax, rdx; pop rbx; ret; 
0x0000000000422582: ror byte ptr [rax], 0x66; cmp dword ptr [rax], 0x850f0000; ret; 
0x0000000000415360: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041dc9f: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041ddb3: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000042253f: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000042264b: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x5d410067; pop r12; pop rbx; ret; 
0x000000000041cc7f: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x6eb0067; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041bcda: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041bd2a: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x000000000041beed: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x00000000004216c8: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480064; and al, 0x10; pop rbx; ret; 
0x0000000000421479: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480065; and al, 0x10; pop rbx; ret; 
0x0000000000421980: ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480067; and al, 8; pop r12; pop rbx; ret; 
0x0000000000428472: ror byte ptr [rax], 0x66; mov dword ptr [rax], r13d; pop r13; pop r12; pop rbx; ret; 
0x000000000042a646: ror byte ptr [rax], 0x66; mov dword ptr [rax], r13d; pop r13; pop r12; pop rbx; ret; 
0x0000000000426cd3: ror byte ptr [rax], 0x8b; cmp byte ptr [rcx], dh; sar byte ptr [rsi + 0x4b2f], cl; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x0000000000426c87: ror byte ptr [rax], 0x8b; cmp byte ptr [rsi + 0x4b2f], bh; mov rdx, rbx; call 0x2f90; pop rbx; ret; 
0x0000000000436d01: ror byte ptr [rbx + rcx*4 + 0x65], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042f928: ror byte ptr [rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb52: ror byte ptr [rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d235: ror byte ptr [rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e588: ror byte ptr [rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440768: ror byte ptr [rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e1b: ror byte ptr [rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fc19: ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d55f: ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440a95: ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044d8c2: ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044db10: ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x000000000044deea: ror byte ptr [rbx + rcx*4 + 0x75], 0xc8; mov r15, qword ptr [rbp - 0x30]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412afd: ror byte ptr [rbx + rcx*4 + 0x7d], 0xc8; mov rsp, rbp; pop rbp; ret; 
0x000000000045588e: ror byte ptr [rbx + rcx*4 + 0x7d], 0xc8; mov rsp, rbp; pop rbp; ret; 
0x0000000000455fbe: ror byte ptr [rbx + rcx*4 + 0x7d], 0xc8; mov rsp, rbp; pop rbp; ret; 
0x000000000042f930: ror byte ptr [rbx + rcx*4 + 0x7d], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000042fb5a: ror byte ptr [rbx + rcx*4 + 0x7d], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043d23d: ror byte ptr [rbx + rcx*4 + 0x7d], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043e590: ror byte ptr [rbx + rcx*4 + 0x7d], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000440770: ror byte ptr [rbx + rcx*4 + 0x7d], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000441e23: ror byte ptr [rbx + rcx*4 + 0x7d], 1; fmul dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000459add: ror byte ptr [rcx + 0x648d4806], 1; and al, 8; ret; 
0x0000000000433c03: ror byte ptr [rcx + 0x648d48d0], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000404af2: ror byte ptr [rcx + rax - 0x20], 0x48; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045c0d7: ror byte ptr [rcx - 0x79], 0xe2; ret; 
0x0000000000401fa2: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x0000000000401fa2: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; ret; 
0x0000000000454b18: ror byte ptr [rdi], 0x44; ret; 
0x000000000042e8bc: ror byte ptr [rdi], 0x85; insb byte ptr [rdi], dx; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045206b: ror byte ptr [rdi], 0x85; ret; 
0x000000000043be8c: ror byte ptr [rdi], 0x8c; ret 0; 
0x0000000000454341: ror byte ptr [rdi], 0x8c; ret; 
0x000000000042e815: ror byte ptr [rdi], 0x94; ret; 
0x0000000000433c81: ror byte ptr [rdi], 0x94; ret; 
0x00000000004384ca: ror byte ptr [rdi], 0x94; ret; 
0x000000000043ba4d: ror byte ptr [rdi], 0x94; ret; 
0x0000000000432347: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043253f: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432730: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432918: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432af7: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432cdf: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432ec0: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000433098: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004332b0: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000433488: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000434ff1: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000435142: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000435299: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004352ea: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000413bd0: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004279dc: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042e78c: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042f1ef: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042fc9c: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433d8b: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433deb: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043422b: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043424b: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448523: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448566: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a286: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a2c9: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000453d0b: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004582ed: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000045830d: ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004598f4: ror byte ptr [rdi], 0x95; ret 0x8b48; 
0x0000000000459934: ror byte ptr [rdi], 0x95; ret 0x8b48; 
0x0000000000439b65: ror byte ptr [rdi], 0x95; ret 0xc208; 
0x000000000043b850: ror byte ptr [rdi], 0x95; ret; 
0x000000000045538f: ror byte ptr [rdi], 0x95; ret; 
0x0000000000415b5c: ror byte ptr [rdi], 0x95; shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041639c: ror byte ptr [rdi], 0x95; shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000454605: ror byte ptr [rdi], 0x9d; ret; 
0x000000000045524a: ror byte ptr [rdi], 0x9d; ret; 
0x00000000004552ee: ror byte ptr [rdi], 0x9d; ret; 
0x0000000000425bfa: ror byte ptr [rdi], 0x9f; ret; 
0x000000000042ee8a: ror byte ptr [rdi], 0x9f; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042dda2: ror byte ptr [rdi], 0xb7; ret 0xc189; 
0x00000000004087db: ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409e1b: ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000409e49: ror byte ptr [rdi], 1; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000408ead: ror byte ptr [rdi], 1; mov edi, 0xffff7895; inc dword ptr [rcx]; shl byte ptr [rsi - 0x77], 1; ret 0x8166; 
0x0000000000401f4c: ror byte ptr [rdx], 1; add byte ptr [rax], al; mov rax, 0xffffffffffffffff; mov rsp, rbp; pop rbp; ret; 
0x000000000042e0fa: ror byte ptr gs:[rax - 0x77], 0xec; pop rbp; ret; 
0x000000000042f927: ror byte ptr gs:[rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000042fb51: ror byte ptr gs:[rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043d234: ror byte ptr gs:[rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x000000000043e587: ror byte ptr gs:[rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000440767: ror byte ptr gs:[rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x0000000000441e1a: ror byte ptr gs:[rbx + rcx*4 + 0x6d], 0xc8; mov r14, qword ptr [rbp - 0x30]; mov r15, qword ptr [rbp - 0x28]; mov rsp, rbp; pop rbp; ret; 
0x00000000004344f8: ror dword ptr [rax + 0x63], 0xd2; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000402f9a: ror dword ptr [rax + 0x63], 1; test dword ptr [rax - 0x77], 0x10bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b1a: ror dword ptr [rax + 0x63], 1; test dword ptr [rax - 0x77], 0x1bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca7a: ror dword ptr [rax + 0x63], 1; test dword ptr [rax - 0x77], 0x9abfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004528b5: ror dword ptr [rax + 0x6b], 1; leave; sbb byte ptr [rax - 0x73], cl; xor eax, 0x25cff; lea rax, [rsi + rcx]; ret; 
0x000000000042c6db: ror dword ptr [rax - 0x27760002], 1; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000040b64b: ror dword ptr [rax - 0x77], 0xc8; mov rbx, qword ptr [rbp - 0x10]; mov r12, qword ptr [rbp - 8]; mov rsp, rbp; pop rbp; ret; 
0x0000000000447d5e: ror dword ptr [rax - 0x77], 0xc8; ret; 
0x000000000044bb43: ror dword ptr [rax - 0x77], 0xc8; ret; 
0x000000000041ab00: ror dword ptr [rax - 0x77], 0xfa; xor r8d, r8d; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000456e5a: ror dword ptr [rax - 0x77], 1; dec byte ptr [rax - 0x77]; ret 0xb841; 
0x00000000004574d7: ror dword ptr [rax - 0x77], 1; mov rsi, rdi; mov edi, 0x3b; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402fe7: ror dword ptr [rax - 0x77], 1; mov rsi, rdi; mov edi, 0x59; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000456e87: ror dword ptr [rax - 0x77], 1; movsxd rsi, edi; mov edi, 0x26; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004576b0: ror dword ptr [rax - 0x77], 1; ret 0x11bf; 
0x00000000004576e0: ror dword ptr [rax - 0x77], 1; ret 0x12bf; 
0x000000000045c910: ror dword ptr [rax - 0x77], 1; ret 0x15bf; 
0x0000000000457553: ror dword ptr [rax - 0x77], 1; ret 0x17bf; 
0x0000000000403a75: ror dword ptr [rax - 0x7b], 0xc9; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x000000000043a4bc: ror dword ptr [rax - 0x7d], 1; ret 0x4101; 
0x0000000000402376: ror dword ptr [rax - 1], 0xca; jne 0x2371; ret; 
0x00000000004037a6: ror dword ptr [rax], 0x49; cmp eax, ecx; ja 0x3780; mov rax, 0xffffffffffffffff; ret; 
0x0000000000431da1: ror dword ptr [rbp - 0x77], 0xc8; movsd xmm0, qword ptr [rax]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000431961: ror dword ptr [rbp - 0x77], 0xc8; movss xmm0, dword ptr [rax]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000417b02: ror dword ptr [rcx + 0x12e8c1c8], 1; xor eax, ecx; pop rbx; ret; 
0x0000000000457577: ror dword ptr [rcx - 0x176b70e], 1; mov edi, 7; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045c967: ror dword ptr [rcx - 0x77], 0xc0; mov rsi, rdi; mov edi, 0xca; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x000000000040464d: ror dword ptr [rcx - 0x7d], cl; ret; 
0x000000000040477e: ror dword ptr [rcx - 0x7d], cl; ret; 
0x0000000000416d49: ror dword ptr [rdx - 0x76b70001], cl; ret; 
0x000000000041158e: sahf; adc eax, 0x8b660007; add ah, byte ptr [rip + 0xffff]; ret; 
0x0000000000432ace: sahf; and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432bce: sahf; and eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045b9ee: sahf; jne 0x5b9eb; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043193e: sahf; js 0x31941; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040182e: sahf; ret 1; 
0x000000000045738e: sahf; stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004026a1: sal al, 1; cmpxchg dword ptr [rdi], esi; ret; 
0x0000000000402712: sal al, 1; cmpxchg qword ptr [rdi], rsi; ret; 
0x000000000043ced6: sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x0000000000440406: sal byte ptr [rax + rcx + 0x48], 0x8b; clc; add rax, 1; ret; 
0x0000000000447dc5: sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x000000000044bdb5: sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x000000000045cd7a: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x26bfc; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccbd: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x26cb9; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff5: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x27f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af9f: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x282d7; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b04b: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x2892b; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d4: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x28b22; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a350: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x28f26; mov edi, dword ptr [rdx]; call rax; 
0x00000000004566e6: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x2c810; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427264: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bc92; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427235: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bcc1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f4: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bf82; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242a0: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5e8d6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424267: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5ec8f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424231: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f045; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d9: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f31d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424312: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5f664; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d751: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65b25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c1: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65cb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d451: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65e25; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2d1: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x65fa5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b820: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x68156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e8: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6818e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b781: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x681f5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b050: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x68926; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b018: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6895e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afb1: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x689c5; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f92: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6a9e4; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f2b: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa4b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef3: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aa83; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ebf: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6aab7; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418070: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab06; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e1b: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab5b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418dec: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ab8a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418d4f: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6ac27; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180cf: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b527; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181de: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b798; mov edi, dword ptr [rdx]; call rax; 
0x000000000041812e: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6b848; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc1: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x6bf35; mov edi, dword ptr [rdx]; call rax; 
0x000000000041150f: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x72467; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d7: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x7249f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000411470: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x72506; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032ec: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x80a0a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032a2: sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x80a54; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd41: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf6: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abfe: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045aba8: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c154: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c4: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c034: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d54: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc4: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c34: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c5: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b9: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe9: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f5a: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e87: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e53: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db8: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d87: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418011: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c0d: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004114a8: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a6: sal byte ptr [rax + rdx + 0x48], cl; lea eax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417358: sal byte ptr [rax + rsi + 0x48], 0x83; js 0x1736f; add byte ptr [rcx + rbp + 0x48], dh; mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x00000000004277ef: sal byte ptr [rax], 1; lea rax, [rip + 0x5e0a8]; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x0000000000402463: sal byte ptr [rbp + 0xa], 0x48; cmp edx, ecx; ja 0x2450; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e3: sal byte ptr [rbp + 0xa], 0x48; cmp edx, ecx; ja 0x24d0; or rax, 0xffffffffffffffff; ret; 
0x00000000004477ad: sal byte ptr [rbp + 0xb], 0xf2; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004477f3: sal byte ptr [rbp + 0xb], 0xf2; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000447833: sal byte ptr [rbp + 0xb], 0xf2; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478aa: sal byte ptr [rbp + 0xb], 0xf2; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004478ee: sal byte ptr [rbp + 0xb], 0xf2; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000044792e: sal byte ptr [rbp + 0xb], 0xf2; movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp], xmm0; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439a48: sal byte ptr [rbp + 3], 0x88; sbb al, 0x24; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a78: sal byte ptr [rbp + 3], 0x88; sbb al, 0x24; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000444169: sal byte ptr [rbp + 3], cl; mov al, 1; ret; 
0x0000000000447d29: sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x000000000044bb02: sal byte ptr [rbp + 3], cl; xor eax, eax; ret; 
0x0000000000456f36: sal byte ptr [rbp + 4], 0x8b; and al, 0x10; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000450be5: sal byte ptr [rbp + 4], 0xb0; add ebx, ebp; add dh, byte ptr [rax]; ror byte ptr [rax - 0x73], 0x64; and al, 0x18; ret; 
0x000000000043413b: sal byte ptr [rbp + 5], 0x4c; cmp edx, eax; jne 0x34120; ret; 
0x00000000004341ad: sal byte ptr [rbp + 5], 0x4c; cmp edx, edx; jne 0x34180; ret; 
0x0000000000433f6f: sal byte ptr [rbp + 6], 0x48; sub edx, ecx; mov rax, rdx; ret; 
0x0000000000433fe0: sal byte ptr [rbp + 6], 0x48; sub edx, ecx; mov rax, rdx; ret; 
0x0000000000445949: sal byte ptr [rbp + 7], 0x48; lea edi, [rip + 0x3e52d]; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004458ec: sal byte ptr [rbp + 7], 0x48; lea edi, [rip + 0x3e58a]; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x00000000004238d7: sal byte ptr [rbp + 7], cl; lea rdx, [rip + 0x6059f]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x000000000043971f: sal byte ptr [rbp + 9], 0x48; mov eax, dword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000439762: sal byte ptr [rbp + 9], 0x48; mov eax, dword ptr [rsp]; mov qword ptr [rsp + 8], rax; fild qword ptr [rsp + 8]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450689: sal byte ptr [rbp + rax - 0x18], 0x1f; cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042c987: sal byte ptr [rbp + rax - 0x18], 0x21; xchg dh, bh; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042dc82: sal byte ptr [rbp + rax - 0x18], 0x26; jae 0x2dc87; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000457d7f: sal byte ptr [rbp + rax - 0x18], 0x29; sar bl, cl; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c877: sal byte ptr [rbp + rax - 0x18], 0x31; xchg esi, edi; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000422f68: sal byte ptr [rbp + rax - 0x18], 0x40; and bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000040e666: sal byte ptr [rbp + rax - 0x18], 0x42; imul eax, dword ptr [rax], 0x648d4800; and al, 0x70; pop rbx; ret; 
0x0000000000423658: sal byte ptr [rbp + rax - 0x18], 0x50; sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000450857: sal byte ptr [rbp + rax - 0x18], 0x51; cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000439550: sal byte ptr [rbp + rax - 0x18], 0x58; mov edx, 0x6ddffffd; call 0x5df01ea7; ret; 
0x000000000044e8a2: sal byte ptr [rbp + rax - 0x18], 0x66; push 0x41e8fffc; push -0x74b70004; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000428e41: sal byte ptr [rbp + rax - 0x18], 0x67; sar esi, 0xff; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000042c537: sal byte ptr [rbp + rax - 0x18], 0x71; mov bh, dh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457f2f: sal byte ptr [rbp + rax - 0x18], 0x79; sar bl, 1; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000423228: sal byte ptr [rbp + rax - 0x18], 0x80; sbb eax, 0x8d48ffff; and al, 0x70; pop rbx; ret; 
0x0000000000423525: sal byte ptr [rbp + rax - 0x18], 0x83; sbb bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000423425: sal byte ptr [rbp + rax - 0x18], 0x83; sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000410e1d: sal byte ptr [rbp + rax - 0x18], 0x8b; add byte ptr [r8], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000410f19: sal byte ptr [rbp + rax - 0x18], 0x8f; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000449614: sal byte ptr [rbp + rax - 0x18], 0x94; mov ecx, 0x8d48fffc; and al, 0x78; ret; 
0x000000000041110f: sal byte ptr [rbp + rax - 0x18], 0x99; add byte ptr ds:[rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x000000000044e60e: sal byte ptr [rbp + rax - 0x18], 0x9a; imul edi, esp, 0x648d48ff; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423708: sal byte ptr [rbp + rax - 0x18], 0xa0; sbb bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042d8ea: sal byte ptr [rbp + rax - 0x18], 0xbe; jbe 0x2d8ef; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x000000000043cd49: sal byte ptr [rbp + rax - 0x18], 0xbf; cmp ebp, -1; call 0x150f0; mov rax, qword ptr [rsp + 0x10]; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004505e6: sal byte ptr [rbp + rax - 0x18], 0xc2; cld; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045c3e6: sal byte ptr [rbp + rax - 0x18], 0xc2; mov edi, ebx; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004232d8: sal byte ptr [rbp + rax - 0x18], 0xd0; sbb al, 0xff; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042c6d7: sal byte ptr [rbp + rax - 0x18], 0xd1; mov dh, bh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000453d9b: sal byte ptr [rbp + rax - 0x18], 0xd; adc bh, ah; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004372cc: sal byte ptr [rbp + rax - 0x18], 0xdc; fdiv st(5), st(0); dec dword ptr [rdx - 0x76b723bb]; in al, dx; pop rbp; ret; 
0x00000000004229c6: sal byte ptr [rbp + rax - 0x18], 0xe2; and eax, 0x8d48ffff; and al, 0x68; ret; 
0x0000000000438bc5: sal byte ptr [rbp + rax - 0x18], 0xe3; ret; 
0x000000000042d99a: sal byte ptr [rbp + rax - 0x18], 0xe; jbe 0x2d99f; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000422eb8: sal byte ptr [rbp + rax - 0x18], 0xf0; and bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042cab7: sal byte ptr [rbp + rax - 0x18], 0xf1; test dh, bh; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000044b3b4: sal byte ptr [rbp + rax - 0x18], 0xf4; wait; cld; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x0000000000456699: sal byte ptr [rbp + rax - 0x18], 0xf; jmp 0xffffffff8d4e669e; and al, 0x70; pop rbx; ret; 
0x00000000004234a5: sal byte ptr [rbp + rax - 0x18], 3; sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000458da2: sal byte ptr [rbp + rax - 0x18], 6; ret 0xfffb; 
0x0000000000452af7: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x311ff; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c19c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57b5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c10c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57bea; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c07c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x57c7a; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a62d: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x596c9; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a5e2: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59714; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d9c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59f5a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d0c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x59fea; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c7c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5a07a; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273d1: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bb25; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427298: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bc5e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427405: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5be71; mov edi, dword ptr [rdx]; call rax; 
0x000000000042738d: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5bee9; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cba: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5c23c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c6e: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5c288; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a4: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f752; mov edi, dword ptr [rdx]; call rax; 
0x000000000042455c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f7aa; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f6: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x5f820; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423769: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6058d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004236b9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6063d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423609: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x606ed; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423289: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60a6d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004231d9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60b1d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423129: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60bcd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422fc9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60d2d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f19: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60ddd; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422e69: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x60e8d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422992: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61364; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422964: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61392; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422794: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61562; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422632: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x616c4; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d6: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61720; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422526: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x617d0; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422499: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6185d; mov edi, dword ptr [rdx]; call rax; 
0x000000000042243a: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x618bc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223ba: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6193c; mov edi, dword ptr [rdx]; call rax; 
0x000000000042235a: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6199c; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222da: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61a1c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61f3d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d20: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x61fd6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c15: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x620e1; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bbc: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6213a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af7: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x621ff; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a89: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6226d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a30: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x622c6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219fb: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x622fb; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219a0: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62356; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421967: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6238f; mov edi, dword ptr [rdx]; call rax; 
0x000000000042190a: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x623ec; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218c0: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62436; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421857: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6249f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421810: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x624e6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217aa: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6254c; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421755: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x625a1; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216fa: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x625fc; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216af: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62647; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421559: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6279d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214bb: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6283b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421460: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62896; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421309: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x629ed; mov edi, dword ptr [rdx]; call rax; 
0x000000000042126b: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62a8b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421200: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62af6; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211b0: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62b46; mov edi, dword ptr [rdx]; call rax; 
0x000000000042114b: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62bab; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421118: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62bde; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210ba: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c3c; mov edi, dword ptr [rdx]; call rax; 
0x000000000042105b: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c9b; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421028: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62cce; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420579: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6377d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420421: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x638d5; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420370: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63986; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420230: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63ac6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420195: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63b61; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c5: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63c31; mov edi, dword ptr [rdx]; call rax; 
0x000000000042002b: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x63ccb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f141: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64bb5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f100: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64bf6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0cf: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64c27; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f07a: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64c7c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee2f: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x64ec7; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece6: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65010; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb5: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65041; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec69: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6508d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe3: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65113; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb5: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65141; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb69: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6518d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6520d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea79: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6527d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea05: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x652f1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e98c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6536a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e4: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65412; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e691: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65665; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d861: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65695; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5f1: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65705; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e571: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65785; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4f1: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65805; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e482: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65874; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e38e: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65968; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2de: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65a18; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d821: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65a55; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b5: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65b41; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e131: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65bc5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e025: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65cd1; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec6: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65e30; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd9a: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x65f5c; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6602d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc86: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66070; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6611d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db9b: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6615b; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d974: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66382; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d653: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x666a3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d607: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x666ef; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d511: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x667e5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e3: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66813; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d363: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66993; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d317: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x669df; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d213: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66ae3; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c7: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66b2f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cf00: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66df6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf5: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66f01; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd9c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x66f5a; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd7: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6701f; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc66: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67090; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cba0: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67156; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb50: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x671a6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb00: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x671f6; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cabd: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67239; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e6: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67310; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c960: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67396; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c642: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x676b4; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c54e: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x677a8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3b1: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x677b5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c011: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67ce5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf85: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67d71; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf28: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67dce; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed4: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67e22; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be88: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67e6e; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be2d: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67ec9; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd9d: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67f59; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd11: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x67fe5; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc1: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x68035; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc6f: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x68087; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc2e: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x680c8; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa19: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6814d; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a8: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x681be; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a975: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69391; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a94b: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x693cb; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a919: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x693fd; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a8e2: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x69414; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e11: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6ad55; mov edi, dword ptr [rdx]; call rax; 
0x000000000041820a: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b3ec; mov edi, dword ptr [rdx]; call rax; 
0x000000000041809f: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b557; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180fe: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6b878; mov edi, dword ptr [rdx]; call rax; 
0x000000000041817c: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bb7a; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb8: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6be4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d69: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6bf8d; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415347: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6e9af; mov edi, dword ptr [rdx]; call rax; 
0x00000000004152a9: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6ea4d; mov edi, dword ptr [rdx]; call rax; 
0x00000000004050d8: sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x7ec4e; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452646: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045261a: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004500cb: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b7: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428459: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428422: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f7: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427355: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042714b: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427328: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000424520: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042336d: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422897: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422760: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422604: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422569: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f8: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce5: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b81: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ac0: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421676: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042152b: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421425: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212db: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fca: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204da: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202e1: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdec: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edfe: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edb2: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e962: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e915: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e81f: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e74f: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e454: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2b0: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e103: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e08a: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff7: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df38: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de98: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf8: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd6c: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc58: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db6d: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db00: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d940: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d681: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d497: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d391: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d241: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfac: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec5: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd61: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cca0: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc38: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbf0: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca51: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5cc: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c188: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418040: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fe1: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c37: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415319: sal byte ptr [rbp + rcx + 0x48], cl; lea eax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000044bae0: sal byte ptr [rbp - 0x1b], cl; and eax, 0xffff; and edx, 0xffff; sub rax, rdx; ret; 
0x00000000004341b2: sal byte ptr [rbp - 0x35], cl; ret; 
0x00000000004275d3: sal byte ptr [rbp - 0x36], 0x48; xor eax, eax; jmp 0x275e0; sbb rax, rax; or al, 1; ret; 
0x0000000000456f02: sal byte ptr [rbx + rax - 0x7d], cl; ret 0x8901; 
0x000000000041450b: sal byte ptr [rbx + rbx + 0xf], 0xb6; push rax; add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x0000000000450bd6: sal byte ptr [rbx + rdx + 0x48], 0x89; out 0x48, al; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000040389f: sal byte ptr [rbx + rdx + 0x4d], cl; test eax, eax; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x0000000000431daa: sal byte ptr [rbx], cl; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041723d: sal byte ptr [rcx + rdx + 0x48], 0x83; js 0x1724c; add byte ptr [rdx + rcx + 0x48], dh; mov edi, ebx; mov rax, qword ptr [rdx + 0x14]; call qword ptr [rax + 8]; 
0x0000000000403aa7: sal byte ptr [rcx], 0xc0; ret; 
0x000000000041aa6d: sal byte ptr [rcx], 0xc9; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x00000000004571fa: sal byte ptr [rcx], 0xc9; mov rsi, 0xffffffffffffffff; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000042e593: sal byte ptr [rcx], 0xc9; xor esi, esi; call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x000000000041ab06: sal byte ptr [rcx], 0xff; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000434c43: sal byte ptr [rcx], cl; imul al; add eax, 0x48fffd8d; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041480c: sal byte ptr [rdi + rax - 0x39], 0x40; or byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000401078: sal byte ptr [rdx + rax - 1], cl; sar byte ptr [rax + 0xe7], cl; mov edi, dword ptr [rbp - 4]; syscall; 
0x000000000041715e: sal byte ptr [rdx + rbx + 0x48], 0x83; cmp byte ptr [rax], al; je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x000000000042f658: sal byte ptr [rdx + rcx + 0x48], 0x8b; adc al, 0x24; cmp r9, qword ptr [rdx + 0x10]; jle 0x2f630; lea rsp, [rsp + 8]; ret; 
0x0000000000402c42: sal byte ptr [rdx + rcx - 0x75], 0x3d; in eax, 0x12; or byte ptr [rax], al; call rax; 
0x0000000000414e84: sal byte ptr [rdx + rcx - 0x75], 0x3d; ret; 
0x0000000000413373: sal byte ptr [rsi + rax + 0x48], 0x8b; add al, 0x24; jmp 0x1337e; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000401bfb: sal byte ptr [rsi + rcx - 0x75], 0x3c; and eax, 0x482f00; call rax; 
0x00000000004146d8: sal byte ptr [rsp + rax + 0x31], 0xc0; jmp 0x146e4; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a08: sal byte ptr [rsp + rax + 0x31], 0xc0; jmp 0x14a14; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x000000000042e355: sal byte ptr [rsp + rax + 0x48], 0x8b; clc; ret; 
0x0000000000420abe: sal byte ptr [rsp + rax + 0x48], cl; mov edx, dword ptr [rdx - 8]; mov rsi, qword ptr [rax]; call 0x20a50; lea rsp, [rsp + 8]; ret; 
0x0000000000412f7e: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x12f87; xor al, al; lea rsp, [rsp + 8]; ret; 
0x00000000004131d4: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x131dd; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000425c29: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x25c32; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429aa2: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x29aab; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450ca0: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x50ca9; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e24: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x50e2d; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e63: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x50e6c; xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450e91: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x50e9a; xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000453cc6: sal byte ptr [rsp + rax - 0x50], 1; jmp 0x53ccf; xor al, al; lea rsp, [rsp + 0x98]; ret; 
0x000000000044404a: sal dl, 0xf; adc byte ptr [rsp + 0x10], cl; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000443f31: sal dl, 0xf; adc byte ptr [rsp], cl; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000407504: sal dword ptr [rax], 0x88; or al, 0x17; shr esi, 1; cmp eax, 1; jg 0x74f8; ret; 
0x000000000043dcd9: sal dword ptr [rdx - 3], cl; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000431931: sal ebx, 0xf; adc byte ptr [rax], al; lea r8, [rip + 0x44363]; call 0x391e0; lea rsp, [rsp + 8]; ret; 
0x0000000000431d71: sal edx, 0xf; adc byte ptr [rax], al; lea r8, [rip + 0x43f23]; call 0x39180; lea rsp, [rsp + 8]; ret; 
0x0000000000447957: sal edx, 0xf; adc byte ptr [rbx], al; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x00000000004053fb: sal edx, 1; addps xmm2, xmmword ptr [rdi + rax*8]; movapd xmm0, xmm2; cmp rsi, rax; jg 0x53f0; ret; 
0x0000000000405433: sal edx, 1; addps xmm2, xmmword ptr [rdi + rdx*8]; movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x0000000000418d0a: sar ah, cl; add al, 0; call qword ptr [rax]; 
0x00000000004067aa: sar bh, 0xff; fstp xword ptr [rsp + 0x10]; fld xword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040680c: sar bh, 0xff; mov eax, r12d; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000459b0c: sar bh, 1; dec dword ptr [rax - 0x77]; ret 0xffbe; 
0x0000000000415f5d: sar bh, cl; adc eax, 0x6e0fc; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000457f34: sar bl, 1; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457cf6: sar bl, cl; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457d84: sar bl, cl; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000040107c: sar byte ptr [rax + 0xe7], cl; mov edi, dword ptr [rbp - 4]; syscall; 
0x0000000000411396: sar byte ptr [rax + rbp + 0x48], 0xc7; ret 0xffff; 
0x0000000000411406: sar byte ptr [rax + rbp + 0x48], 0xc7; ret 0xffff; 
0x0000000000403805: sar byte ptr [rbp + 8], 0x48; mov eax, 0xffffffff; ret; 
0x00000000004038a4: sar byte ptr [rbp + 8], 0x48; mov eax, 0xffffffff; ret; 
0x0000000000411306: sar byte ptr [rbp + rbx*2 + 0x48], 0xc7; ret 0xffff; 
0x0000000000431209: sar byte ptr [rbx + rbp + 0x48], 0xc7; ret 0xffff; 
0x00000000004395a8: sar byte ptr [rcx - 1], 0x31; shr al, cl; imul edi, ebx, -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045ca52: sar byte ptr [rdi + 0xca], 1; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c9cc: sar byte ptr [rdi + 0xca], 1; call 0x1f60; lea rsp, [rsp + 8]; ret; 
0x0000000000424396: sar byte ptr [rdi + 4], cl; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x000000000040543f: sar byte ptr [rdi - 0x1a], 1; ret; 
0x000000000041ba8e: sar byte ptr [rdi - 0x21], 1; ret; 
0x000000000043a993: sar byte ptr [rdi - 0x36], 1; lea rsp, [rsp + 0x18]; ret; 
0x0000000000411363: sar byte ptr [rdi - 0x56], 1; ret; 
0x0000000000433d04: sar byte ptr [rsi + 0x10], 1; and eax, 0xff; and r11d, 0xff; sub eax, r11d; ret; 
0x000000000040b414: sar byte ptr [rsi + 0x10], 1; and eax, 0xff; and r11d, 0xff; sub rax, r11; ret; 
0x00000000004151b6: sar byte ptr [rsi + 0x18], cl; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000426cd8: sar byte ptr [rsi + 0x4b2f], cl; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000040236e: sar byte ptr [rsi + 0xb], cl; mov byte ptr [rcx], r8b; inc rcx; dec rdx; jne 0x2371; ret; 
0x000000000041cb76: sar byte ptr [rsi + 0xd7b1], cl; call 0x1ca10; pop rbx; ret; 
0x000000000041a6c5: sar byte ptr [rsi + 0xe8], cl; call 0x22e0; pop rbx; ret; 
0x0000000000450b8c: sar byte ptr [rsi + 1], 0; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000434300: sar byte ptr [rsi + 7], cl; mov eax, 1; jmp 0x3430c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434340: sar byte ptr [rsi + 7], cl; mov eax, 1; jmp 0x3434c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434380: sar byte ptr [rsi + 7], cl; mov eax, 1; jmp 0x3438c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343c0: sar byte ptr [rsi + 7], cl; mov eax, 1; jmp 0x343cc; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434400: sar byte ptr [rsi + 7], cl; mov eax, 1; jmp 0x3440c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000434440: sar byte ptr [rsi + 7], cl; mov eax, 1; jmp 0x3444c; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000433d28: sar byte ptr [rsi + 7], cl; mov ecx, 1; jmp 0x33d34; xor ecx, ecx; mov eax, ecx; ret; 
0x0000000000430319: sar ch, 1; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004557ca: sar dl, cl; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004259f8: sar dword ptr [rax], cl; ret; 
0x000000000041bf3b: sar dword ptr [rbp + 6], 0; add rax, 8; mov word ptr [rax], 0; mov rax, rbx; pop rbx; ret; 
0x000000000040768b: sar dword ptr [rbp - 0x72b70001], 1; and al, 8; ret; 
0x000000000044a0ae: sar dword ptr [rcx + rcx + 0x66], 1; cmp dword ptr [rsi + rdx*2 - 2], 0xee760020; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000040cb69: sar dword ptr [rcx - 0x76b80000], cl; in al, dx; pop rbp; ret; 
0x00000000004396e7: sar dword ptr [rdx + 1], 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000408744: sar dword ptr [rdx + 2], 0x74; add al, 0x66; add eax, 0xbf0f0001; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000437307: sar dword ptr [rdx + 2], 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000437347: sar dword ptr [rdx + 4], 1; call 0x36fc0; lea rsp, [rsp + 8]; ret; 
0x0000000000402706: sar dword ptr [rsi], 0x48; mov eax, edi; ret; 
0x0000000000402695: sar dword ptr [rsi], 0x89; clc; ret; 
0x0000000000402572: sar eax, 1; ret; 
0x000000000044f0fe: sar eax, 1; ret; 
0x000000000044f4ae: sar eax, 1; ret; 
0x0000000000434fbb: sar ebp, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000445ecb: sar ebp, 1; add al, byte ptr [rax]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x0000000000450457: sar ebx, 0xff; pop r13; pop r12; pop rbx; ret; 
0x0000000000450456: sar ebx, 0xff; pop r13; pop r12; pop rbx; ret; 
0x0000000000457eac: sar ebx, 1; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040371c: sar ecx, 2; mov rax, r9; ret; 
0x000000000040379d: sar ecx, 3; mov rax, r9; ret; 
0x00000000004188f2: sar edi, 0xff; mov rsi, qword ptr [rax + 8]; mov rdi, rsp; lea rax, [rip + 0x500ad]; call qword ptr [rax]; 
0x00000000004117ba: sar edi, 0xff; pop rbx; ret; 
0x000000000045672e: sar edx, 5; shr rcx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x0000000000457141: sar edx, cl; dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x00000000004571ae: sar edx, cl; dec dword ptr [rax - 0x77]; ret 0x8d49; 
0x0000000000403711: sar esi, 0x3f; and rsi, 3; add r9, rsi; sar r9, 2; mov rax, r9; ret; 
0x0000000000403792: sar esi, 0x3f; and rsi, 7; add r9, rsi; sar r9, 3; mov rax, r9; ret; 
0x0000000000456f6b: sar esi, 0xff; dec dword ptr [rax - 0x73]; and al, 0x10; pop rbx; ret; 
0x0000000000428e46: sar esi, 0xff; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x0000000000428e45: sar esi, 0xff; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004151be: sar esi, 1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043f1df: sar esi, 1; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000442c5f: sar esi, 1; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x000000000044bf18: sar esp, 1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040371b: sar r9, 2; mov rax, r9; ret; 
0x000000000040379c: sar r9, 3; mov rax, r9; ret; 
0x0000000000402571: sar rax, 1; ret; 
0x000000000044f0fd: sar rax, 1; ret; 
0x000000000044f4ad: sar rax, 1; ret; 
0x000000000045672d: sar rdx, 5; shr rcx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x0000000000403710: sar rsi, 0x3f; and rsi, 3; add r9, rsi; sar r9, 2; mov rax, r9; ret; 
0x0000000000403791: sar rsi, 0x3f; and rsi, 7; add r9, rsi; sar r9, 3; mov rax, r9; ret; 
0x000000000043f1de: sar rsi, 1; mov rdi, rbx; call 0x3f800; pop rbx; ret; 
0x0000000000442c5e: sar rsi, 1; mov rdi, rbx; call 0x43280; pop rbx; ret; 
0x0000000000432dcf: sbb al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432e97: sbb al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433370: sbb al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000453adc: sbb al, 0x16; mov rax, rbx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x000000000040c4af: sbb al, 0x24; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000439a4c: sbb al, 0x24; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000439a7c: sbb al, 0x24; mov al, byte ptr [rsp]; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458c0b: sbb al, 0x24; mov eax, ebx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456f65: sbb al, 0x24; mov rdi, rsp; call 0x56e30; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000415d3c: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d9c: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164fc: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000041655c: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042ed7b: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431171: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a78: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431a9b: sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415d1c: sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x00000000004164dc: sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000042eddb: sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431151: sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431638: sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043165b: sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000403d92: sbb al, 0x24; pop r13; pop r12; pop rbx; ret; 
0x0000000000405425: sbb al, 0x31; ror byte ptr [rax - 0x7d], cl; ret 0x6601; 
0x0000000000414def: sbb al, 0x48; mov esi, dword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53c32]; call qword ptr [rax]; 
0x0000000000414ca0: sbb al, 0x48; mov esi, dword ptr [rax + 8]; mov rdi, qword ptr [rax]; lea rax, [rip + 0x53d71]; call qword ptr [rax]; 
0x0000000000417628: sbb al, 0x48; mov esi, dword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x0000000000449d40: sbb al, 0xa0; add eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004232dd: sbb al, 0xff; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045c0cc: sbb al, byte ptr [r8]; movsxd rdi, edi; add rax, rdi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x00000000004136bb: sbb al, byte ptr [rax]; add al, ch; sub eax, 0x4800001a; mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x0000000000433077: sbb al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433350: sbb al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433570: sbb al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004136c0: sbb al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000045c0cd: sbb al, byte ptr [rax]; movsxd rdi, edi; add rax, rdi; movsxd r8, r8d; xchg r10, rsp; ret; 
0x000000000042f2c2: sbb al, byte ptr [rcx]; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044fa18: sbb al, ch; adc dh, byte ptr [rbx + 0x1b0fffc]; lea rsp, [rsp + 8]; ret; 
0x000000000044fa5b: sbb al, ch; iretd; mov dl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044fa7b: sbb al, ch; out dx, eax; mov dl, 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004531f7: sbb bh, ah; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000452f31: sbb bh, ah; dec dword ptr [rbx - 0x2776e3a8]; pop rbx; ret; 
0x000000000042352a: sbb bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042370d: sbb bh, bh; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004557b3: sbb bh, byte ptr [rdx + rax*8 + 0x5b]; ret; 
0x000000000043b255: sbb bh, ch; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b2aa: sbb bh, ch; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404efa: sbb bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000414a7f: sbb bl, ch; or bh, byte ptr [rdi + 0xe7]; call 0x185e0; mov rax, rbx; pop rbx; ret; 
0x000000000041fcd2: sbb byte ptr [r13 + r9*4 + 0x24], cl; add cl, byte ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000436d7b: sbb byte ptr [r14 - 0x77], r12b; clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x0000000000426e04: sbb byte ptr [r8 - 0x77], r9b; in al, dx; pop rbp; ret; 
0x00000000004206d4: sbb byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000041fc77: sbb byte ptr [r9], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041da96: sbb byte ptr [rax + 0x29], cl; ret 0x8941; 
0x000000000041da95: sbb byte ptr [rax + 0x29], cl; ret 0x8941; 
0x0000000000419275: sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000419274: sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000041d9fe: sbb byte ptr [rax + 0x29], cl; ret 0x8949; 
0x000000000041d9fd: sbb byte ptr [rax + 0x29], cl; ret 0x8949; 
0x000000000041ef4a: sbb byte ptr [rax + 0x3b], cl; and byte ptr [rsi + r8 + 0x48], dil; mov edi, eax; call qword ptr [rax + 0x38]; 
0x000000000041ef49: sbb byte ptr [rax + 0x3b], cl; and byte ptr [rsi + r8 + 0x48], dil; mov edi, eax; call qword ptr [rax + 0x38]; 
0x000000000041d26c: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d3c6: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d53c: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rax + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041d6b6: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rbx + rbx + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f6b4: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f7ac: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rdx + riz + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x000000000041f128: sbb byte ptr [rax + 0x3b], cl; push rax; and byte ptr [rsi + rax + 0x48], bh; mov edi, ebx; call qword ptr [rbx + 0x38]; 
0x0000000000402d45: sbb byte ptr [rax + 0x63], cl; or byte ptr [rax + 0x39], cl; ret 0x2e7c; 
0x0000000000446d5d: sbb byte ptr [rax + 0x63], cl; ret; 
0x000000000041f046: sbb byte ptr [rax + 0x7720023c], al; rol dword ptr [rcx + 0x5d], cl; pop r12; pop rbx; ret; 
0x000000000041f045: sbb byte ptr [rax + 0x7720023c], al; rol dword ptr [rcx + 0x5d], cl; pop r12; pop rbx; ret; 
0x00000000004181a5: sbb byte ptr [rax - 0x73], cl; add eax, 0x506c3; mov qword ptr [rax], 0; mov rax, rbx; call rax; 
0x0000000000446da6: sbb byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000446e07: sbb byte ptr [rax - 0x73], cl; and al, 0x10; pop rbx; ret; 
0x0000000000443705: sbb byte ptr [rax - 0x73], cl; and al, 0x38; ret; 
0x00000000004484de: sbb byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000418877: sbb byte ptr [rax - 0x73], cl; mov esp, 0x87824; add byte ptr [rax - 0x73], cl; add eax, 0x50129; call qword ptr [rax]; 
0x00000000004528b9: sbb byte ptr [rax - 0x73], cl; xor eax, 0x25cff; lea rax, [rsi + rcx]; ret; 
0x000000000040ba5f: sbb byte ptr [rax - 0x75], cl; add al, 0x24; mov byte ptr [rax], 0; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x000000000043c890: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043cbdf: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043fdc0: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044010f: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451c65: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x0000000000451fa8: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041316b: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413304: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004134c4: sbb byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000414925: sbb byte ptr [rax - 0x75], cl; jl 0x1494e; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000041762d: sbb byte ptr [rax - 0x75], cl; jl 0x17656; adc byte ptr [rax - 0x73], cl; add eax, 0x51446; call qword ptr [rax]; 
0x000000000043cd1f: sbb byte ptr [rax - 0x75], cl; jl 0x3cd48; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ce71: sbb byte ptr [rax - 0x75], cl; jl 0x3ce9a; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044024f: sbb byte ptr [rax - 0x75], cl; jl 0x40278; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004403a1: sbb byte ptr [rax - 0x75], cl; jl 0x403ca; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044e878: sbb byte ptr [rax - 0x75], cl; jl 0x4e8a1; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045161a: sbb byte ptr [rax - 0x75], cl; jl 0x51643; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045192d: sbb byte ptr [rax - 0x75], cl; jl 0x51956; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000045258d: sbb byte ptr [rax - 0x75], cl; jl 0x525b6; adc byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c786: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043cae5: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fcb6: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000440015: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451b66: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x0000000000451ea6: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044c915: sbb byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044c914: sbb byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000426e05: sbb byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000445314: sbb byte ptr [rax - 0x77], cl; ret 0x20b9; 
0x0000000000445313: sbb byte ptr [rax - 0x77], cl; ret 0x20b9; 
0x0000000000417fc6: sbb byte ptr [rax - 0x7d], cl; jnp 0x17fd3; add byte ptr [rdi - 0x2e], dh; pop rbx; ret; 
0x000000000045c4e2: sbb byte ptr [rax - 0x7d], cl; ret; 
0x0000000000420f94: sbb byte ptr [rax - 1], al; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042d794: sbb byte ptr [rax - 2], bh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000433287: sbb byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004206d5: sbb byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000045c826: sbb byte ptr [rax], al; add byte ptr [rax], al; call 0x1e00; lea rsp, [rsp + 8]; ret; 
0x00000000004151b8: sbb byte ptr [rax], al; add byte ptr [rax], al; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000040bffa: sbb byte ptr [rax], al; add byte ptr [rsi - 0x77], ah; ret 0x2d66; 
0x0000000000413593: sbb byte ptr [rax], al; je 0x1359f; mov rax, qword ptr [rdi + 0x18]; mov rax, qword ptr [rax]; ret; 
0x000000000041751d: sbb byte ptr [rax], al; je 0x17545; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 0x18]; mov rax, qword ptr [rbx + 0x14]; call qword ptr [rax + 0x18]; 
0x000000000045229a: sbb byte ptr [rax], al; je 0x522a6; mov rdi, rax; call 0x13940; lea rsp, [rsp + 8]; ret; 
0x000000000041fcd3: sbb byte ptr [rbp + rcx*4 + 0x24], cl; add cl, byte ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000455992: sbb byte ptr [rbp + rcx*4 + 0x44], cl; and al, 0x14; lea rcx, [rsp + 0x10]; call 0x557e0; lea rsp, [rsp + 0x28]; ret; 
0x00000000004403d4: sbb byte ptr [rbp - 3], cl; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000423f69: sbb byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000042445d: sbb byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000044d189: sbb byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000450c7d: sbb byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x000000000041dac4: sbb byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000040c962: sbb byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000423e0c: sbb byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000452b29: sbb byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041da2b: sbb byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000044e8e2: sbb byte ptr [rcx], al; jne 0x4e8fb; mov rax, qword ptr [rsp + 0x20]; mov rdx, qword ptr [rsp + 0x20]; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000041fc78: sbb byte ptr [rcx], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000452ec5: sbb byte ptr [rcx], al; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x0000000000452ec4: sbb byte ptr [rcx], al; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000041ec3e: sbb byte ptr [rcx], al; pop r13; pop r12; pop rbx; ret; 
0x000000000041ed52: sbb byte ptr [rcx], al; pop r13; pop r12; pop rbx; ret; 
0x0000000000457484: sbb byte ptr [rdx - 0x72b70006], ch; and al, 8; ret; 
0x0000000000447dbf: sbb byte ptr [rdx - 0x7bf7dbbc], cl; sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x000000000044bdaf: sbb byte ptr [rdx - 0x7bf7dbbc], cl; sal byte ptr [rax + rdx + 0x48], 0x83; ret; 
0x00000000004341d7: sbb byte ptr [rip + 0xa148a00], al; mov byte ptr [rdi], dl; add rdi, 1; cmp byte ptr [rdi], 0; jne 0x341d0; ret; 
0x0000000000426dfa: sbb byte ptr [rip - 0x131], ah; or eax, 0x30; mov dword ptr [rbp + 0x18], eax; mov rsp, rbp; pop rbp; ret; 
0x0000000000426df9: sbb byte ptr [rip - 0x131], r12b; or eax, 0x30; mov dword ptr [rbp + 0x18], eax; mov rsp, rbp; pop rbp; ret; 
0x000000000042322c: sbb byte ptr [rip - 0x72b70001], 0x64; and al, 0x70; pop rbx; ret; 
0x0000000000436d7c: sbb byte ptr [rsi - 0x77], ah; clc; fld xword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x000000000040a010: sbb byte ptr [rsi - 0x77], ah; push rax; or byte ptr [rax - 0x73], cl; and al, 0x28; ret; 
0x000000000041d194: sbb byte ptr [rsi - 1], bh; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000404ef6: sbb ch, bl; and al, 0x18; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x000000000042c062: sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c062: sbb ch, byte ptr [rdi - 1]; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000045321e: sbb cl, byte ptr [rax - 0x77]; add eax, 0x2568a; pop rbx; ret; 
0x0000000000417160: sbb cl, byte ptr [rax - 0x7d]; cmp byte ptr [rax], al; je 0x1717b; mov rdi, rbx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax]; 
0x000000000043c292: sbb cl, byte ptr [rbp - 0x27760003]; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x0000000000434ab5: sbb cl, byte ptr [rdi]; xchg edx, eax; rol byte ptr [rax + rax*8 + 0x39450974], 0xc8; jg 0x34a38; ret; 
0x000000000041ff52: sbb dh, byte ptr [rbp + 5]; mov byte ptr [r12], 0x20; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004554f8: sbb dh, byte ptr [rsi + 7]; mov byte ptr [rip + 0x233ee], 4; and eax, 0xff; pop rbx; ret; 
0x00000000004436ff: sbb dl, dh; movups xmm0, xmmword ptr [rsp + 0x18]; lea rsp, [rsp + 0x38]; ret; 
0x0000000000403f82: sbb dword ptr [rax + 0x63], ecx; ret 0x8548; 
0x0000000000456e43: sbb dword ptr [rax - 0x72b70006], esi; and al, 8; ret; 
0x000000000044bf4e: sbb dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004331c0: sbb dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433550: sbb dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000436c73: sbb dword ptr [rax], eax; add byte ptr [rax], al; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000040db2e: sbb dword ptr [rax], eax; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db60: sbb dword ptr [rax], eax; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db7e: sbb dword ptr [rax], eax; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db9e: sbb dword ptr [rax], eax; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbd0: sbb dword ptr [rax], eax; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040dbee: sbb dword ptr [rax], eax; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x00000000004239d3: sbb dword ptr [rbx + 4], esp; add byte ptr [rcx + 0xb], bh; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000439ee4: sbb dword ptr [rbx + rbx*8 + 0x38450b74], eax; out 0xf, al; xchg ebp, eax; ret; 
0x0000000000420c93: sbb dword ptr [rbx - 1], eax; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423429: sbb dword ptr [rbx], -1; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000419023: sbb dword ptr [rbx], ecx; add eax, 0xcb900; add byte ptr [rax], al; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000441f63: sbb dword ptr [rbx], edx; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000450c41: sbb dword ptr [rcx + rcx*4 - 0x1e], ecx; mov rsi, rsp; mov rdi, qword ptr [rsp + 0x10]; mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000457583: sbb dword ptr [rcx - 0x72b70006], ebp; and al, 8; ret; 
0x0000000000420e93: sbb dword ptr [rcx - 1], eax; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040e943: sbb dword ptr [rdi + rax], edx; call qword ptr [rax]; 
0x000000000041d093: sbb dword ptr [rdi - 1], edi; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000423529: sbb dword ptr [rdx], -1; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004322d3: sbb dword ptr [rdx], ebp; add byte ptr [rax - 0x73], cl; and al, 0x18; ret; 
0x0000000000431a73: sbb dword ptr [rdx], edx; add ch, bl; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000431f83: sbb dword ptr [rip + 0x24e80004], edi; jno 0x31f8b; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x000000000042f1e9: sbb eax, -3; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000040339f: sbb eax, 0x48000000; lea esp, [rsp + 8]; ret; 
0x000000000043336f: sbb eax, 0x4800001c; lea esp, [rsp + 8]; ret; 
0x0000000000432f5f: sbb eax, 0x4800001e; lea esp, [rsp + 8]; ret; 
0x000000000041abd7: sbb eax, 0x480006a1; lea esp, [rsp + 8]; ret; 
0x00000000004150bf: sbb eax, 0x480006fd; mov eax, dword ptr [rax]; test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x000000000043ffcf: sbb eax, 0x48fffd51; mov eax, dword ptr [rsp + 0x28]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000424fd8: sbb eax, 0x4c9a3; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433257: sbb eax, 0x63480000; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004598ef: sbb eax, 0x84000001; ror byte ptr [rdi], 0x95; ret 0x8b48; 
0x0000000000444314: sbb eax, 0x8d480000; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x000000000044422c: sbb eax, 0x8d480000; and al, 0x10; pop rbx; ret; 
0x0000000000444272: sbb eax, 0x8d480000; and al, 8; pop r12; pop rbx; ret; 
0x00000000004442bc: sbb eax, 0x8d480000; and al, 8; pop r12; pop rbx; ret; 
0x0000000000433160: sbb eax, 0x8d480000; and al, 8; ret; 
0x000000000042322d: sbb eax, 0x8d48ffff; and al, 0x70; pop rbx; ret; 
0x0000000000459fc0: sbb eax, 0xb00440c7; xlatb; add byte ptr [rax], al; ret; 
0x0000000000433437: sbb eax, dword ptr [rax]; add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432fb0: sbb eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040bc7b: sbb eax, dword ptr [rax]; add byte ptr [rsi - 0x77], ah; ret; 
0x00000000004275dc: sbb eax, eax; or al, 1; ret; 
0x0000000000457441: sbb ebp, dword ptr [rdx - 0x72b70006]; and al, 8; ret; 
0x000000000042725b: sbb ebx, 0x8b480005; add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rdx + 0x48], 0x8d; adc eax, 0x5bc92; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a3b7: sbb ecx, dword ptr [rax + 0x63]; ror byte ptr [rax - 0x7d], 1; ret 0x4901; 
0x000000000042a3df: sbb ecx, dword ptr [rax + 0x63]; ror byte ptr [rax - 0x7d], 1; ret 0x4901; 
0x000000000041450d: sbb ecx, dword ptr [rdi]; mov dh, 0x50; add dword ptr [rax - 0x7d], ecx; ret 0x4802; 
0x0000000000411091: sbb edi, dword ptr [rdi]; add byte ptr [rax], al; lea rsp, [rsp + 0x68]; pop r12; pop rbx; ret; 
0x00000000004235ae: sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042342a: sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004234aa: sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042365d: sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042757f: sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042757e: sbb edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045345b: sbb edi, esp; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045cb41: sbb edx, dword ptr [rbx - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456193: sbb esi, ebp; sti; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043354f: sbb qword ptr [r8], r8; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000444313: sbb rax, -0x72b80000; and al, 0x10; pop r13; pop r12; pop rbx; ret; 
0x00000000004275db: sbb rax, rax; or al, 1; ret; 
0x0000000000432d9e: scasb al, byte ptr [rdi]; and dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000402751: scasb al, byte ptr [rdi]; clc; ret; 
0x0000000000404f59: scasb al, byte ptr [rdi]; push rbp; clc; mov rsp, rbp; pop rbp; ret; 
0x00000000004033ea: scasb al, byte ptr [rdi]; push rbp; cld; mov rsp, rbp; pop rbp; ret; 
0x00000000004256ae: scasb al, byte ptr [rdi]; ret 4; 
0x0000000000430460: scasd eax, dword ptr [rdi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000456eb2: scasd eax, dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004338cd: scasd eax, dword ptr [rdi]; cmp ebp, 0xdf8948ff; call 0x19220; xor ebx, ebx; pop rbx; ret; 
0x00000000004166a5: scasd eax, dword ptr [rdi]; fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004353bd: scasd eax, dword ptr [rdi]; jl 0x353bd; jmp qword ptr [rsi - 0x75]; 
0x000000000041534d: scasd eax, dword ptr [rdi]; jmp 0x3a8c5359; call rax; 
0x000000000040b96d: scasd eax, dword ptr [rdi]; jno 0xb977; add byte ptr [rsi - 0x75], ah; add ah, byte ptr [rip + 0xffff]; ret; 
0x0000000000408894: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000455601: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000455731: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000407b5f: scasd eax, dword ptr [rdi]; ret 0x8d48; 
0x000000000042500d: scasd eax, dword ptr [rdi]; ret 0xe883; 
0x0000000000417089: scasd eax, dword ptr [rdi]; ret; 
0x00000000004176c1: scasd eax, dword ptr [rdi]; ret; 
0x0000000000417741: scasd eax, dword ptr [rdi]; ret; 
0x00000000004177c1: scasd eax, dword ptr [rdi]; ret; 
0x0000000000417b26: scasd eax, dword ptr [rdi]; ret; 
0x0000000000411db7: scasd eax, dword ptr [rdi]; ror byte ptr [r8 - 0x77], 1; ret; 
0x0000000000408952: scasd eax, dword ptr [rdi]; ror byte ptr [rax + 1], cl; ret 0x8b48; 
0x000000000044013d: scasd eax, dword ptr [rdi]; std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004315c8: setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431880: setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a08: setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cc0: setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000432170: setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e43: setb al; mov rsp, rbp; pop rbp; ret; 
0x0000000000427ba9: setb al; ret; 
0x0000000000427ba8: setb al; ret; 
0x0000000000433960: setb al; ret; 
0x0000000000433980: setb al; ret; 
0x0000000000434ab6: setb al; test al, al; je 0x34ac6; cmp r8d, r9d; jg 0x34a38; ret; 
0x000000000041d592: sete ah; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f162: sete ah; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000432348: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432540: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432731: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432919: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432af8: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ce0: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ec1: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433099: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332b1: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433489: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434ff2: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435143: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043529a: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352eb: sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413bd1: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004279dd: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e78d: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042f1f0: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042fc9d: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004315a5: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004315f5: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431615: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043189d: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004318bd: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004318dd: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004319e5: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a35: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a55: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cdd: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cfd: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431d1d: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043218d: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321ad: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004321cd: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433d8c: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433dec: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043422c: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043424c: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448524: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448567: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a287: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2ca: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000453d0c: sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004582ee: sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045830e: sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e20: sete al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431e60: sete al; mov rsp, rbp; pop rbp; ret; 
0x0000000000431e80: sete al; mov rsp, rbp; pop rbp; ret; 
0x00000000004025d6: sete al; ret; 
0x00000000004025f8: sete al; ret; 
0x000000000040317c: sete al; ret; 
0x000000000040318c: sete al; ret; 
0x000000000040319c: sete al; ret; 
0x00000000004031ac: sete al; ret; 
0x00000000004031bc: sete al; ret; 
0x00000000004031cc: sete al; ret; 
0x00000000004031dc: sete al; ret; 
0x00000000004031e3: sete al; ret; 
0x0000000000413c0a: sete al; ret; 
0x0000000000414663: sete al; ret; 
0x00000000004237f4: sete al; ret; 
0x000000000042e7bc: sete al; ret; 
0x000000000045778c: sete al; ret; 
0x000000000045779c: sete al; ret; 
0x00000000004577ac: sete al; ret; 
0x00000000004577bc: sete al; ret; 
0x00000000004577cc: sete al; ret; 
0x00000000004577dc: sete al; ret; 
0x00000000004577ec: sete al; ret; 
0x00000000004577f3: sete al; ret; 
0x000000000045926a: sete al; ret; 
0x0000000000433736: sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c8: sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433856: sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043366b: sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336eb: sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043377b: sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043380b: sete dl; mov rdi, rax; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004336ae: sete dl; mov sil, byte ptr [rax]; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000041d591: sete r12b; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041f161: sete r12b; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042ee8b: setg al; lea rsp, [rsp + 8]; ret; 
0x0000000000454000: setge al; pop r13; pop r12; pop rbx; ret; 
0x0000000000415b5d: setne al; and eax, 0xff; neg eax; lea rsp, [rsp + 8]; ret; 
0x000000000041639d: setne al; and eax, 0xff; neg eax; lea rsp, [rsp + 8]; ret; 
0x0000000000403338: setne al; lea rsp, [rsp + 0x108]; ret; 
0x0000000000406858: setne al; ret; 
0x0000000000406b40: setne al; ret; 
0x0000000000406df7: setne al; ret; 
0x0000000000432363: setne al; ret; 
0x00000000004324c1: setne al; ret; 
0x0000000000432553: setne al; ret; 
0x00000000004326b1: setne al; ret; 
0x0000000000432745: setne al; ret; 
0x00000000004328a2: setne al; ret; 
0x0000000000432935: setne al; ret; 
0x0000000000432a92: setne al; ret; 
0x0000000000432b13: setne al; ret; 
0x0000000000432c81: setne al; ret; 
0x0000000000432cf3: setne al; ret; 
0x0000000000432e51: setne al; ret; 
0x0000000000432ed4: setne al; ret; 
0x000000000043302f: setne al; ret; 
0x00000000004330b4: setne al; ret; 
0x000000000043323f: setne al; ret; 
0x00000000004332c4: setne al; ret; 
0x000000000043341f: setne al; ret; 
0x00000000004334a4: setne al; ret; 
0x000000000043362f: setne al; ret; 
0x0000000000433730: setne dh; cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c2: setne dh; cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433850: setne dh; cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000041673b: setne dh; mov rdi, rax; call qword ptr [rip + 0x6d891]; lea rsp, [rsp + 8]; ret; 
0x000000000041671c: setne dh; mov rdi, rax; call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x000000000041568b: setne dh; mov rdi, rax; call qword ptr [rip + 0x6e941]; lea rsp, [rsp + 8]; ret; 
0x000000000041566c: setne dh; mov rdi, rax; call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x000000000043372f: setne sil; cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c1: setne sil; cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000043384f: setne sil; cmp edx, 1; sete dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000041673a: setne sil; mov rdi, rax; call qword ptr [rip + 0x6d891]; lea rsp, [rsp + 8]; ret; 
0x000000000041671b: setne sil; mov rdi, rax; call qword ptr [rip + 0x6d8b0]; lea rsp, [rsp + 8]; ret; 
0x000000000041568a: setne sil; mov rdi, rax; call qword ptr [rip + 0x6e941]; lea rsp, [rsp + 8]; ret; 
0x000000000041566b: setne sil; mov rdi, rax; call qword ptr [rip + 0x6e960]; lea rsp, [rsp + 8]; ret; 
0x0000000000402750: sfence; ret; 
0x00000000004073f1: shl byte ptr [rax], 0xeb; add eax, dword ptr [rax - 0x78]; clc; and eax, 0xff; ret; 
0x00000000004163d1: shl byte ptr [rip + 0xff], 0x48; lea esp, [rsp + 0x108]; ret; 
0x0000000000425bb2: shl byte ptr [rip + 0xff], 0x48; lea esp, [rsp + 8]; ret; 
0x0000000000415b5f: shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041639f: shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404a4d: shl byte ptr [rip + 0xff], 1; ret; 
0x0000000000415b3f: shl byte ptr [rsi + 0x25], 0xff; add byte ptr [rsi - 9], ah; fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000041637f: shl byte ptr [rsi + 0x25], 0xff; add byte ptr [rsi - 9], ah; fmul dword ptr [rdi]; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000408eb6: shl byte ptr [rsi - 0x77], 1; ret 0x8166; 
0x0000000000408da9: shl byte ptr [rsi - 0x77], 1; ret; 
0x00000000004078a4: shl dword ptr [rsi], cl; ret; 
0x0000000000453961: shl dword ptr [rsp + rax*2 + 1], 0xd0; mov word ptr [rsi], ax; ret; 
0x000000000045bed1: shl dword ptr [rsp + rax*2 + 1], 0xd0; mov word ptr [rsi], ax; ret; 
0x0000000000404e62: shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e72: shl eax, 0x10; shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e84: shl eax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e94: shl eax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x000000000044ba83: shl eax, 1; add rax, rbx; pop rbx; ret; 
0x000000000040b702: shl eax, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x000000000044c0ed: shl eax, 1; ret; 
0x000000000044f0b2: shl eax, 1; ret; 
0x000000000044f492: shl eax, 1; ret; 
0x0000000000459273: shl eax, 8; movsx esi, si; or eax, esi; movsx eax, ax; ret; 
0x0000000000459ad5: shl eax, 8; movzx edx, byte ptr [rdx + 3]; or eax, edx; mov dword ptr [rsi], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000459283: shl eax, 8; or eax, 0x7f; movsx eax, ax; ret; 
0x00000000004324bd: shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x00000000004326ad: shl eax, cl; and al, byte ptr [rdi]; setne al; ret; 
0x000000000043289d: shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432a8d: shl eax, cl; and ax, word ptr [rdi]; setne al; ret; 
0x0000000000432c7d: shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x0000000000432e4d: shl eax, cl; and eax, dword ptr [rdi]; setne al; ret; 
0x000000000043302a: shl eax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043323a: shl eax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043341a: shl eax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043362a: shl eax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x000000000043247d: shl eax, cl; not al; and al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x000000000043266d: shl eax, cl; not al; and al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000432a4d: shl eax, cl; not ax; and ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043285d: shl eax, cl; not ax; and ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000432c3d: shl eax, cl; not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e0d: shl eax, cl; not eax; and eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432fea: shl eax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331fa: shl eax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333da: shl eax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335ea: shl eax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000432c1d: shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432ded: shl eax, cl; or eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432650: shl eax, cl; or edx, eax; mov byte ptr [rdi], dl; movsx eax, dl; ret; 
0x0000000000432460: shl eax, cl; or edx, eax; mov byte ptr [rdi], dl; movzx eax, dl; ret; 
0x0000000000432840: shl eax, cl; or edx, eax; mov word ptr [rdi], dx; movsx eax, dx; ret; 
0x0000000000432a30: shl eax, cl; or edx, eax; mov word ptr [rdi], dx; movzx eax, dx; ret; 
0x0000000000432fca: shl eax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331da: shl eax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333ba: shl eax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335ca: shl eax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043249d: shl eax, cl; xor al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x000000000043268d: shl eax, cl; xor al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x0000000000432a6d: shl eax, cl; xor ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043287d: shl eax, cl; xor ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000432c5d: shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e2d: shl eax, cl; xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x000000000043300a: shl eax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043321a: shl eax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333fa: shl eax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043360a: shl eax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000044ba62: shl ebp, 1; lea rax, [rbx + r13]; pop r13; pop r12; pop rbx; ret; 
0x0000000000409eb9: shl ecx, 0x20; add rax, rcx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x000000000040b6ff: shl edi, 1; shl r8, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x0000000000417bc0: shl edi, 4; movsxd rdi, edi; movsxd rsi, esi; lea rax, [rdi + rsi]; ret; 
0x000000000040340b: shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040487b: shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040495b: shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e4b: shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x000000000040342b: shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x000000000040489b: shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x000000000040497b: shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e2b: shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000456dd7: shl edi, cl; and rdi, qword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x000000000044f134: shl edx, 1; call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x000000000044b938: shl edx, 1; mov rsi, rbx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x0000000000405080: shl edx, cl; or edi, edx; call 0x5090; lea rsp, [rsp + 8]; ret; 
0x0000000000406de5: shl esi, 0x17; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406e11: shl esi, 0x1f; or edx, esi; mov dword ptr [rax], edx; ret; 
0x0000000000406b1b: shl esi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b6a: shl esi, 0x3f; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x000000000042380d: shl esi, 0xa; or eax, esi; and eax, 0xffff; ret; 
0x000000000045cab6: shl esi, 0xc; or eax, esi; and ecx, 0xfff; or eax, ecx; ret; 
0x0000000000406872: shl esi, 0xf; or edx, esi; mov word ptr [rax + 8], dx; ret; 
0x0000000000427571: shl esi, 1; lea rax, [rip + 0x5daf6]; mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004078a3: shl qword ptr [rsi], cl; ret; 
0x000000000044ba61: shl r13, 1; lea rax, [rbx + r13]; pop r13; pop r12; pop rbx; ret; 
0x000000000040b701: shl r8, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x0000000000404e83: shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e93: shl rax, 0x20; shr rdi, 0x20; add rax, rdi; ret; 
0x000000000044ba82: shl rax, 1; add rax, rbx; pop rbx; ret; 
0x000000000044c0ec: shl rax, 1; ret; 
0x0000000000433029: shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433239: shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433419: shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000433629: shl rax, cl; and rax, qword ptr [rdi]; setne al; ret; 
0x0000000000432fe9: shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331f9: shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333d9: shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335e9: shl rax, cl; not rax; and rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000432fc9: shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004331d9: shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333b9: shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004335c9: shl rax, cl; or rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433009: shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433219: shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333f9: shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000433609: shl rax, cl; xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000409eb8: shl rcx, 0x20; add rax, rcx; mov qword ptr [rdx], rax; lea rsp, [rsp + 8]; ret; 
0x000000000040b6fe: shl rdi, 1; shl r8, 1; cmp edx, 0x3f; jl 0xb6f0; ret; 
0x0000000000456dd6: shl rdi, cl; and rdi, qword ptr [rsi + rdx*8]; jbe 0x56de5; mov eax, 1; ret; 
0x000000000044f133: shl rdx, 1; call 0x1fd0; mov eax, ebx; pop rbx; ret; 
0x000000000044b937: shl rdx, 1; mov rsi, rbx; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x0000000000406de4: shl rsi, 0x17; or rdx, rsi; mov dword ptr [rax], edx; ret; 
0x0000000000406b1a: shl rsi, 0x34; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000406b69: shl rsi, 0x3f; or rdx, rsi; mov qword ptr [rax], rdx; ret; 
0x0000000000427570: shl rsi, 1; lea rax, [rip + 0x5daf6]; mov rdi, qword ptr [rax]; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000043059d: shr al, 0x3d; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x00000000004306bd: shr al, 0x7d; add eax, 0x89480000; in al, dx; pop rbp; ret; 
0x0000000000430d44: shr al, 0xa6; lodsd eax, dword ptr [rsi]; std; dec dword ptr [rax - 0x7d]; ret; 
0x000000000042eba0: shr al, 0xa; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430500: shr al, 0xda; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000430ddb: shr al, 0xf; lodsd eax, dword ptr [rsi]; std; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000455eab: shr al, 1; mov edi, 0x89fffacf; ret; 
0x0000000000458ebe: shr al, 1; sub al, 0x2c; sti; jmp qword ptr [rsi + 0x41]; 
0x000000000042f0d6: shr al, cl; adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000430f96: shr al, cl; adc al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004507d6: shr al, cl; and al, 0x5b; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000447f96: shr al, cl; hlt; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004323c6: shr al, cl; hlt; movabs al, byte ptr [0x10024a48d48fffd]; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004395af: shr al, cl; imul edi, ebx, -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042ecf6: shr al, cl; je 0x2eca6; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000458b3b: shr al, cl; movabs qword ptr [0x8e8c124048bfffa], rax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000446f26: shr al, cl; movsb byte ptr [rdi], byte ptr [rsi]; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043f8ef: shr al, cl; or eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044336f: shr al, cl; or eax, dword ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000411a21: shr al, cl; pop rcx; mov cl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x000000000041faf9: shr al, cl; push rcx; fdivp st(6); jmp qword ptr [rsi + 0x41]; 
0x0000000000438ec0: shr al, cl; retf 0xffe4; dec dword ptr [rax - 0x73]; and al, 0x28; ret; 
0x0000000000450454: shr al, cl; sar ebx, 0xff; pop r13; pop r12; pop rbx; ret; 
0x0000000000434541: shr al, cl; stc; xchg ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041a3ad: shr al, cl; sub eax, 0x48fffe7f; mov eax, ebx; pop rbx; ret; 
0x00000000004118a3: shr al, cl; xlatb; mov dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000432b85: shr al, cl; xor eax, 0x48fffd99; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041d86e: shr bl, 1; or ecx, dword ptr [rax - 0x73]; add eax, 0x65688; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x000000000041d82e: shr bl, 1; or ecx, dword ptr [rax - 0x73]; add eax, 0x65a48; add rax, 8; lea rsp, [rsp + 8]; ret; 
0x00000000004435fc: shr bl, 2; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000415074: shr bl, 4; mov rax, qword ptr [r12]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004146dc: shr bl, 5; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a0c: shr bl, 5; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x000000000045835f: shr bl, 5; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x00000000004275d8: shr bl, 5; sbb rax, rax; or al, 1; ret; 
0x000000000045720a: shr byte ptr [rdx + rdi*8 + 0x648d48ff], cl; and al, 8; ret; 
0x0000000000404a88: shr di, 4; cmp rdx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x00000000004078e0: shr dword ptr [rax], 1; ret; 
0x000000000045722b: shr dword ptr [rbx - 0x72b70006], 1; and al, 8; ret; 
0x00000000004573db: shr dword ptr [rdx - 0x72b70006], 0x64; and al, 8; ret; 
0x000000000045732b: shr dword ptr [rdx - 0x72b70006], 1; and al, 8; ret; 
0x0000000000417b05: shr eax, 0x12; xor eax, ecx; pop rbx; ret; 
0x0000000000406dc7: shr eax, 0x17; and eax, eax; ret; 
0x0000000000417b29: shr eax, 0x20; pop rbx; ret; 
0x0000000000406af1: shr eax, 0x34; ret; 
0x00000000004024f3: shr eax, 1; lea rax, [rcx + rax - 8]; cmp rdx, rax; jbe 0x24eb; ret; 
0x0000000000404e04: shr eax, 4; and eax, 0xff; ret; 
0x000000000045009b: shr eax, 4; xor eax, edx; and eax, 0xf; ret; 
0x0000000000458b44: shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000458b84: shr eax, 8; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004031f7: shr eax, 8; ret; 
0x0000000000403207: shr eax, 8; ret; 
0x0000000000457807: shr eax, 8; ret; 
0x0000000000457817: shr eax, 8; ret; 
0x0000000000403408: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404878: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404958: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000404e48: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; movsx eax, ax; ret; 
0x0000000000403428: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404898: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404978: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000404e28: shr eax, 8; shl edi, 8; or eax, edi; and eax, 0xffff; ret; 
0x0000000000407925: shr eax, cl; mov dword ptr [rax], r8d; ret; 
0x0000000000456732: shr ecx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x000000000040b53e: shr ecx, cl; imul eax, dword ptr [rax], 0xc7480000; ret; 
0x0000000000404e65: shr edi, 0x10; add eax, edi; ret; 
0x0000000000404e75: shr edi, 0x10; add eax, edi; ret; 
0x00000000004237f1: shr edi, 0x10; sete al; ret; 
0x0000000000404e88: shr edi, 0x20; add rax, rdi; ret; 
0x0000000000404e98: shr edi, 0x20; add rax, rdi; ret; 
0x00000000004178eb: shr edi, 1; xor eax, edi; ret; 
0x0000000000404a89: shr edi, 4; cmp rdx, 3; jl 0x4a70; and eax, 0xffff; ret; 
0x0000000000404ac6: shr edi, 4; cmp rdx, 7; jl 0x4ab0; ret; 
0x000000000040789b: shr edi, cl; mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x000000000044f0f7: shr edx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x000000000044f4a7: shr edx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x0000000000455921: shr edx, 3; mov word ptr [rbx], dx; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000407509: shr esi, 1; cmp eax, 1; jg 0x74f8; ret; 
0x00000000004075ca: shr esi, 1; cmp eax, 1; jg 0x75b8; ret; 
0x00000000004074d1: shr esi, 3; cmp eax, 1; jg 0x74b8; ret; 
0x0000000000407594: shr esi, 3; cmp eax, 1; jg 0x7578; ret; 
0x0000000000407491: shr esi, 4; cmp eax, 1; jg 0x7478; ret; 
0x0000000000407554: shr esi, 4; cmp eax, 1; jg 0x7538; ret; 
0x0000000000407664: shr esi, 4; cmp eax, 1; jg 0x7648; ret; 
0x0000000000455eaa: shr r8b, 1; mov edi, 0x89fffacf; ret; 
0x0000000000407924: shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x0000000000417b28: shr rax, 0x20; pop rbx; ret; 
0x0000000000406af0: shr rax, 0x34; ret; 
0x0000000000456731: shr rcx, 0x3f; add rdx, rcx; mov rax, rdx; ret; 
0x00000000004237f0: shr rdi, 0x10; sete al; ret; 
0x0000000000404e87: shr rdi, 0x20; add rax, rdi; ret; 
0x0000000000404e97: shr rdi, 0x20; add rax, rdi; ret; 
0x000000000040789a: shr rdi, cl; mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x0000000000407899: shr rdi, cl; mov dword ptr [rax], edi; movsx rcx, dx; shl qword ptr [rsi], cl; ret; 
0x000000000044f0f6: shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x000000000044f4a6: shr rdx, 0x3f; add rax, rdx; sar rax, 1; ret; 
0x00000000004075c9: shr rsi, 1; cmp eax, 1; jg 0x75b8; ret; 
0x0000000000407593: shr rsi, 3; cmp eax, 1; jg 0x7578; ret; 
0x0000000000407553: shr rsi, 4; cmp eax, 1; jg 0x7538; ret; 
0x0000000000407663: shr rsi, 4; cmp eax, 1; jg 0x7648; ret; 
0x0000000000430ddd: shrd ebp, edi, cl; dec dword ptr [rax - 0x7d]; ret; 
0x000000000042db3d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000044d0bd: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x0000000000436fad: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004372ed: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043732d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043736d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438f0d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000439a9d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000044752d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000452b4d: sldt word ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000045cabe: sldt word ptr [rax]; or eax, ecx; ret; 
0x000000000045cab3: sldt word ptr [rax]; shl esi, 0xc; or eax, esi; and ecx, 0xfff; or eax, ecx; ret; 
0x000000000041a379: sldt word ptr [rax]; sub rax, 8; ret; 
0x0000000000434369: stc; add al, 0; call qword ptr [rax + 0x58]; 
0x00000000004343a9: stc; add al, 0; call qword ptr [rax + 0x60]; 
0x00000000004343e9: stc; add al, 0; call qword ptr [rax + 0x68]; 
0x0000000000434429: stc; add al, 0; call qword ptr [rax + 0x70]; 
0x000000000040371d: stc; add cl, byte ptr [rcx + rcx*4 - 0x38]; ret; 
0x0000000000434a1d: stc; add dword ptr [rbp + 3], edi; xor al, al; ret; 
0x000000000040424c: stc; add dword ptr [rsi + 5], esi; cmp cl, 6; jb 0x4259; neg rax; ret; 
0x000000000040379e: stc; add ecx, dword ptr [rcx + rcx*4 - 0x38]; ret; 
0x00000000004508f3: stc; add r8, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000456d59: stc; and rdx, qword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x000000000043b1fe: stc; fstp xword ptr [rsp]; mov rdi, rax; call 0x3b120; lea rsp, [rsp + 0x18]; ret; 
0x00000000004038bf: stc; ja 0x3890; xor eax, eax; ret; 
0x00000000004039c4: stc; ja 0x39a0; xor eax, eax; ret; 
0x000000000040260c: stc; je 0x2614; lock inc dword ptr [rcx]; jmp 0x2616; inc dword ptr [rcx]; ret; 
0x000000000040262c: stc; je 0x2635; lock inc qword ptr [rcx]; jmp 0x2638; inc qword ptr [rcx]; ret; 
0x0000000000443f62: stc; lea rax, [rdx + 1]; test eax, eax; jg 0x43f6e; add eax, 7; ret; 
0x0000000000417623: stc; mov ecx, 0x1cebffff; mov rsi, qword ptr [rsp + 0x18]; mov rdi, qword ptr [rsp + 0x10]; lea rax, [rip + 0x51446]; call qword ptr [rax]; 
0x00000000004078dc: stc; mov qword ptr [rsi], rcx; shr dword ptr [rax], 1; ret; 
0x0000000000456d16: stc; or rdx, qword ptr [rsi + rcx*8]; and edi, edi; mov qword ptr [rsi + rdi*8], rdx; xor eax, eax; ret; 
0x0000000000431dd3: stc; outsd dx, dword ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000411543: stc; outsd dx, dword ptr [rsi]; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000401553: stc; ret 1; 
0x0000000000425633: stc; ret 4; 
0x0000000000417c13: stc; rol byte ptr [rsi], 0; mov edi, dword ptr [rax]; call rdx; 
0x0000000000407923: stc; shr r8d, cl; mov dword ptr [rax], r8d; ret; 
0x0000000000444166: stc; test rdx, rdx; jne 0x4416f; mov al, 1; ret; 
0x0000000000434543: stc; xchg ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000418cc5: std; add al, 0; call qword ptr [rax]; 
0x0000000000418cb8: std; add al, 0; cmp qword ptr [rax], 0; je 0x18cca; lea rax, [rip + 0x4fd08]; call qword ptr [rax]; 
0x0000000000445ecc: std; add al, byte ptr [rax]; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x000000000043028f: std; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004532bc: std; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000414adf: std; cmp al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004243f8: std; dec dword ptr [rax + 0x63]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000423c6a: std; dec dword ptr [rax - 0x73]; adc eax, 0x5ee9d; mov dword ptr [rdx], eax; lea rsp, [rsp + 8]; ret; 
0x00000000004241ab: std; dec dword ptr [rax - 0x73]; and al, 0x28; pop r12; pop rbx; ret; 
0x000000000042461e: std; dec dword ptr [rax - 0x73]; and al, 0x30; pop rbx; ret; 
0x000000000042fc56: std; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x00000000004399dd: std; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x0000000000439a1b: std; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000042439f: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000426ce1: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000427217: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042e61e: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004310d5: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431778: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431788: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431798: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431808: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431818: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431828: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431838: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431848: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004318fb: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431918: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bb8: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bb7: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bb6: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bc8: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bc7: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bd8: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431bd7: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c48: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c47: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c58: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c57: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c56: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c68: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c67: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c78: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c88: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431c87: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d3b: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d3a: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d58: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431d57: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432068: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432067: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432088: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432087: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004320f8: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004320f7: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004320f6: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432118: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432117: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432116: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432128: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432127: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432138: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432137: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004321eb: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004321ea: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432208: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432207: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043391e: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000433946: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004344ff: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434545: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434587: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004353fa: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004353f9: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043995d: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b256: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043b2ab: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004480c9: std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043cd54: std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cea6: std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440284: std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000440283: std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403d6: std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x00000000004403d5: std; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043c8c0: std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043cc0f: std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043fdf0: std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044013f: std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000044013e: std; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000043caa1: std; dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000043ffd1: std; dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000043c747: std; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043fc77: std; dec dword ptr [rax - 0x75]; and al, 8; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043d70b: std; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043daf9: std; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000043dcdb: std; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000042ee5d: std; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000435419: std; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000435418: std; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000439b86: std; dec dword ptr [rax - 0x77]; ret; 
0x0000000000439be9: std; dec dword ptr [rax - 0x77]; ret; 
0x000000000043ba49: std; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x000000000042e788: std; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042f1eb: std; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043b84c: std; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x95; ret; 
0x000000000042ee86: std; dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x9f; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004308e8: std; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430962: std; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430d48: std; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000430ddf: std; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004338a7: std; dec dword ptr [rcx + rcx*4 - 0x20]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042dd9a: std; dec dword ptr [rcx - 0x74993bbb]; push rbp; ror byte ptr [rdi], 0xb7; ret 0xc189; 
0x000000000042dd99: std; dec dword ptr [rcx - 0x74993bbb]; push rbp; ror byte ptr [rdi], 0xb7; ret 0xc189; 
0x0000000000436f74: std; dec dword ptr [rdx - 0x76b71bbb]; in al, dx; pop rbp; ret; 
0x00000000004372d2: std; dec dword ptr [rdx - 0x76b723bb]; in al, dx; pop rbp; ret; 
0x00000000004164b7: std; fiadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000416597: std; fld dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000402849: std; fstp st(1); mov rsp, rbp; pop rbp; ret; 
0x0000000000423f60: std; inc dword ptr [rax + rcx*4 - 0x20]; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x0000000000423ef7: std; inc dword ptr [rbx + 0x634801eb]; ret; 
0x00000000004315a0: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431898: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004319e0: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cd8: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cd7: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432188: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432187: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e1b: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e1a: std; inc dword ptr [rbx - 0x6bf0f708]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004315f0: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318b8: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a30: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cf8: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cf7: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321a8: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321a7: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e5b: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e5a: std; inc dword ptr [rbx - 0x6bf0f808]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431610: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318d8: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a50: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431d18: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431d17: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321c8: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321c7: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e7b: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e7a: std; inc dword ptr [rbx - 0x6bf0f908]; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000043031a: std; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000043d201: std; jmp qword ptr [rdi + 0x43]; 
0x0000000000440731: std; jmp qword ptr [rdi + 0x43]; 
0x0000000000440730: std; jmp qword ptr [rdi + 0x43]; 
0x0000000000434cbd: std; jmp qword ptr [rdi + 0x44]; 
0x0000000000434ddd: std; jmp qword ptr [rdi + 0x44]; 
0x000000000043f2c4: std; jmp qword ptr [rdi + 0x47]; 
0x0000000000442d44: std; jmp qword ptr [rdi + 0x47]; 
0x000000000044e047: std; jmp qword ptr [rsi + 0x41]; 
0x0000000000435326: std; jmp qword ptr [rsi - 0x75]; 
0x000000000043534e: std; jmp qword ptr [rsi - 0x75]; 
0x0000000000435397: std; jmp qword ptr [rsi - 0x75]; 
0x00000000004353bf: std; jmp qword ptr [rsi - 0x75]; 
0x0000000000432727: std; jmp qword ptr [rsi - 0x77]; 
0x000000000043290f: std; jmp qword ptr [rsi - 0x77]; 
0x000000000045a09f: std; mov edx, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040194f: std; mov esi, 0x89480001; ret; 
0x0000000000444f16: std; push rdx; movups xmm0, xmmword ptr [rsp + 0x20]; lea rsp, [rsp + 0x1b0]; pop rbx; ret; 
0x00000000004017bf: std; ret; 
0x0000000000455267: std; sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000455266: std; sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000423046: sti; add eax, 0x30b70f00; mov dl, 1; call 0xd950; pop rbx; ret; 
0x0000000000425ae9: sti; add eax, 0x890e7400; ror byte ptr [rax - 0x73], 1; or eax, 0x5fb09; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000425ae8: sti; add eax, 0x890e7400; ror byte ptr [rax - 0x73], 1; or eax, 0x5fb09; mov byte ptr [rcx + rax], dil; ret; 
0x0000000000416093: sti; call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6dfce]; pop rbx; ret; 
0x0000000000415ec3: sti; call 0x15230; mov rdi, rbx; call qword ptr [rip + 0x6e1a6]; pop rbx; ret; 
0x0000000000425b6d: sti; call 0x25ac0; pop rbx; ret; 
0x0000000000423bc3: sti; call 0x2990; call qword ptr [rbx + 0x28]; 
0x0000000000423bc3: sti; call 0x2990; call qword ptr [rbx + 0x28]; pop rbx; ret; 
0x000000000043b903: sti; call 0x3b8e0; add rax, rbx; pop rbx; ret; 
0x000000000042bc03: sti; call 0xbaf0; mov rdi, rbx; call 0x2bba0; pop rbx; ret; 
0x000000000042e5f3: sti; call 0xbaf0; mov rdi, rbx; call 0xcd10; pop rbx; ret; 
0x0000000000429813: sti; call 0xe140; mov rdi, rbx; call 0x297b0; pop rbx; ret; 
0x0000000000449f47: sti; dec dword ptr [rax + 0x63]; ret; 
0x000000000044c42f: sti; dec dword ptr [rax + 0x63]; ret; 
0x0000000000455268: sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004553ad: sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000455316: sti; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004565a9: sti; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004589d0: sti; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045b640: sti; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004560e3: sti; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x0000000000456195: sti; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045669f: sti; dec dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x00000000004562f3: sti; dec dword ptr [rax - 0x73]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045337a: sti; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456a2a: sti; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458586: sti; dec dword ptr [rax - 0x77]; fmul dword ptr [rax - 0x73]; and al, 0x70; pop rbx; ret; 
0x000000000045798d: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457a1d: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457b4d: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457cf7: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457ead: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004580fd: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045818d: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045823b: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004582cd: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000458452: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000457d85: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457f35: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000457fb5: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x0000000000458a52: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000045c3ec: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000045545b: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x00000000004578fb: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000045806b: sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x0000000000448021: sti; dec dword ptr [rcx + rcx*4 - 0x20]; pop r13; pop r12; pop rbx; ret; 
0x000000000044c0cf: sti; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000450458: sti; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000454704: sti; jmp qword ptr [rsi + 0x3d]; 
0x00000000004586fa: sti; jmp qword ptr [rsi + 0x41]; 
0x0000000000458e81: sti; jmp qword ptr [rsi + 0x41]; 
0x0000000000458ec2: sti; jmp qword ptr [rsi + 0x41]; 
0x000000000044b97e: sti; jmp qword ptr [rsi + 0x42]; 
0x000000000044b97d: sti; jmp qword ptr [rsi + 0x42]; 
0x000000000044bc65: sti; jmp qword ptr [rsi + 0x45]; 
0x00000000004169f3: sti; lea rax, [rip + 0x52065]; call qword ptr [rax]; 
0x00000000004169f3: sti; lea rax, [rip + 0x52065]; call qword ptr [rax]; mov word ptr [rbx], 1; pop rbx; ret; 
0x00000000004169d3: sti; lea rax, [rip + 0x52085]; call qword ptr [rax]; 
0x00000000004169d3: sti; lea rax, [rip + 0x52085]; call qword ptr [rax]; mov word ptr [rbx], 0; pop rbx; ret; 
0x000000000041c4d3: sti; mov edi, dword ptr [rbx]; call 0x1bbb0; mov dword ptr [rbx], 0xffffffff; pop rbx; ret; 
0x0000000000416a5a: sti; mov edx, 1; call 0x72d0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000043e1d3: sti; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x00000000004418e3: sti; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x0000000000419083: sti; mov rdi, rsi; call qword ptr [rip + 0x50abb]; mov qword ptr [rbx], rax; pop rbx; ret; 
0x000000000045cb61: sti; push rdx; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040845f: sti; ret; 
0x00000000004557b2: sti; sbb bh, byte ptr [rdx + rax*8 + 0x5b]; ret; 
0x0000000000431df2: stosb byte ptr [rdi], al; add al, 0; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x000000000042ed67: stosb byte ptr [rdi], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ed66: stosb byte ptr [rdi], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043b1c4: stosb byte ptr [rdi], al; add eax, dword ptr [rax]; call 0x3b120; mov rsp, rbp; pop rbp; ret; 
0x000000000043b223: stosb byte ptr [rdi], al; add eax, dword ptr [rax]; mov rdx, qword ptr [rsp]; call 0x3b1e0; lea rsp, [rsp + 8]; ret; 
0x00000000004261f2: stosb byte ptr [rdi], al; and eax, 0x8d480003; and al, 8; ret; 
0x000000000045732c: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045734c: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045736f: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045738f: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573b2: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573dc: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457402: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457423: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457442: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457485: stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000411365: stosb byte ptr [rdi], al; ret; 
0x000000000045722c: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045724c: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045726c: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045728c: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572ac: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572ce: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004572ee: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457312: stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004582e9: stosd dword ptr [rdi], eax; cli; inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x00000000004582e8: stosd dword ptr [rdi], eax; cli; inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x0000000000458309: stosd dword ptr [rdi], eax; cli; inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x0000000000458308: stosd dword ptr [rdi], eax; cli; inc dword ptr [rbp - 0x3f6bf040]; lea rsp, [rsp + 8]; ret; 
0x00000000004089f1: stosd dword ptr [rdi], eax; in eax, 0xff; jmp qword ptr [rsi + 0x41]; 
0x0000000000427151: stosd dword ptr [rdi], eax; mov ebp, 0x388b0005; call rdx; 
0x00000000004137bc: stosd dword ptr [rdi], eax; ret; 
0x0000000000456eb1: stosd dword ptr [rdi], eax; scasd eax, dword ptr [rdi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004573b1: stosd dword ptr [rdi], eax; stosb byte ptr [rdi], al; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458ab1: stosd dword ptr [rdi], eax; xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000457311: stosq qword ptr [rdi], rax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450222: sub ah, byte ptr [rip + 0x58bfffb]; xor al, 0x83; add al, byte ptr [rax]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x00000000004330d2: sub ah, dl; add al, byte ptr [rax]; addsd xmm0, qword ptr [rax]; ret; 
0x00000000004317c6: sub al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c06: sub al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x00000000004320b6: sub al, 0x20; pop r13; pop r12; pop rbx; ret; 
0x000000000040b363: sub al, 0x24; lea rsp, [rsp + 0x10]; pop r13; pop r12; pop rbx; ret; 
0x000000000040cfe5: sub al, 0x24; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040d060: sub al, 0x24; lea rsp, [rsp + 0x110]; pop rbx; ret; 
0x000000000040ae8e: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000415d5f: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000041651f: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000042ed9e: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431194: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000043185e: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431c9e: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431eab: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431ece: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x000000000043214e: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432394: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432584: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432774: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432964: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432b4b: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432d1e: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000432efe: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004330fe: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332ee: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x00000000004334ee: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000436c7b: sub al, 0x24; lea rsp, [rsp + 0x18]; ret; 
0x0000000000404eff: sub al, 0x24; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417bad: sub al, 0x24; lea rsp, [rsp + 0x28]; ret; 
0x0000000000415d7f: sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x0000000000415dbf: sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000041653f: sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x000000000041657f: sub al, 0x24; lea rsp, [rsp + 8]; ret; 
0x00000000004525c0: sub al, 0x2b; cld; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x0000000000458ec0: sub al, 0x2c; sti; jmp qword ptr [rsi + 0x41]; 
0x00000000004317f8: sub al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x0000000000431c38: sub al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x00000000004320e8: sub al, 0x60; pop r13; pop r12; pop rbx; ret; 
0x00000000004040cb: sub al, 0x88; add eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004259f6: sub al, 0x88; sar dword ptr [rax], cl; ret; 
0x0000000000449d30: sub al, 0xa0; add eax, dword ptr [rax]; call qword ptr [rax + 0x10]; 
0x00000000004435fb: sub al, 0xc0; jmp 0x43601; xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000458ec1: sub al, 0xfb; jmp qword ptr [rsi + 0x41]; 
0x0000000000411895: sub al, 0xff; jmp qword ptr [rsi - 0x77]; 
0x0000000000411895: sub al, 0xff; jmp qword ptr [rsi - 0x77]; ret; 
0x000000000041ec38: sub al, 2; add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x000000000041ed4c: sub al, 2; add qword ptr [r12 + 0x18], 1; pop r13; pop r12; pop rbx; ret; 
0x00000000004437da: sub al, al; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x0000000000443f92: sub al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000444049: sub al, al; movsd xmm1, qword ptr [rsp + 0x10]; call 0x43660; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000443f30: sub al, al; movsd xmm1, qword ptr [rsp]; call 0x43660; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432375: sub al, al; ret; 
0x0000000000432425: sub al, al; ret; 
0x0000000000432565: sub al, al; ret; 
0x0000000000432615: sub al, al; ret; 
0x0000000000432755: sub al, al; ret; 
0x0000000000432805: sub al, al; ret; 
0x0000000000432945: sub al, al; ret; 
0x00000000004329f5: sub al, al; ret; 
0x0000000000432b25: sub al, al; ret; 
0x0000000000432be5: sub al, al; ret; 
0x0000000000432410: sub al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041b070: sub al, byte ptr [rax]; add byte ptr [rdi + 0xe8], bh; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x00000000004330cb: sub al, byte ptr [rax]; jae 0x330da; lea rax, [rip + 0x2e22a]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043319b: sub al, byte ptr [rax]; jae 0x331aa; lea rax, [rip + 0x2e16a]; addss xmm0, dword ptr [rax]; ret; 
0x00000000004334bb: sub al, byte ptr [rax]; jae 0x334ca; lea rax, [rip + 0x2de52]; addsd xmm0, qword ptr [rax]; ret; 
0x000000000043358b: sub al, byte ptr [rax]; jae 0x3359a; lea rax, [rip + 0x2dd92]; addss xmm0, dword ptr [rax]; ret; 
0x0000000000432d05: sub al, byte ptr [rax]; ret; 
0x0000000000432db5: sub al, byte ptr [rax]; ret; 
0x0000000000432ee6: sub al, byte ptr [rax]; ret; 
0x0000000000432f96: sub al, byte ptr [rax]; ret; 
0x00000000004332d6: sub al, byte ptr [rax]; ret; 
0x0000000000433386: sub al, byte ptr [rax]; ret; 
0x000000000042d7db: sub al, ch; jae 0x2d7e2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042d7bb: sub al, ch; outsd dx, dword ptr [rsi]; jae 0x2d7c2; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000443a25: sub al, dl; lea rdx, [rip + 0x1deca]; divsd xmm0, qword ptr [rdx]; movsd qword ptr [r8], xmm0; ret; 
0x0000000000432ef9: sub bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x00000000004332e9: sub bl, bl; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x000000000043f2c2: sub bl, byte ptr [rdx - 3]; jmp qword ptr [rdi + 0x47]; 
0x0000000000439457: sub bl, dh; leave; fistp qword ptr [rdi]; mov rsp, rbp; pop rbp; ret; 
0x000000000043125f: sub byte ptr [r8], r8b; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000429c9a: sub byte ptr [rax + 0x415d41d8], cl; pop rsp; pop rbx; ret; 
0x0000000000429d2a: sub byte ptr [rax + 0x415d41d8], cl; pop rsp; pop rbx; ret; 
0x0000000000429dba: sub byte ptr [rax + 0x415d41d8], cl; pop rsp; pop rbx; ret; 
0x000000000042c09a: sub byte ptr [rax + 0x415d41d8], cl; pop rsp; pop rbx; ret; 
0x000000000042c12a: sub byte ptr [rax + 0x415d41d8], cl; pop rsp; pop rbx; ret; 
0x000000000042c1ba: sub byte ptr [rax + 0x415d41d8], cl; pop rsp; pop rbx; ret; 
0x0000000000411398: sub byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000411408: sub byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000458366: sub byte ptr [rax - 0x73], cl; and al, 0x50; pop rbx; ret; 
0x000000000043b8ee: sub byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043ca71: sub byte ptr [rax - 0x75], cl; and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ffa1: sub byte ptr [rax - 0x75], cl; and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000044ea12: sub byte ptr [rax - 0x75], cl; jl 0x4ea3b; and byte ptr [rax - 0x75], cl; and al, 0x20; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043c90c: sub byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000043fe3c: sub byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; mov rdi, rax; call qword ptr [rdx + 0x68]; 
0x000000000044cd05: sub byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x000000000044cd04: sub byte ptr [rax - 0x77], cl; add al, 0x24; lea rsp, [rsp + 0x68]; ret; 
0x0000000000457dd2: sub byte ptr [rax - 0x77], cl; fimul word ptr [rax - 0x77]; out 0xe8, eax; ret 0xfb99; 
0x000000000041bcd4: sub byte ptr [rax - 0x7cb7fffa], al; ror byte ptr [rax], 0x66; mov dword ptr [rax], 0x8d480000; and al, 8; ret; 
0x0000000000431260: sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431280: sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004323f0: sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432600: sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004277fb: sub byte ptr [rax], al; pop rbx; ret; 
0x000000000041706b: sub byte ptr [rbp + rcx*4 + 0x61], cl; dec dword ptr [rbp - 0x7b]; in al, 0x7c; sub ecx, dword ptr [rax - 0x39]; ret; 
0x000000000041334f: sub byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000413519: sub byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x00000000004241b1: sub byte ptr [rcx + 0x5c], al; pop rbx; ret; 
0x0000000000428477: sub byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042a64b: sub byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000043cf80: sub byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000042f616: sub byte ptr [rcx + 0x5e], al; pop r13; pop r12; pop rbx; ret; 
0x000000000044ee9a: sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f02a: sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f34a: sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044f64a: sub byte ptr [rcx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000045cc8a: sub byte ptr [rcx], al; add byte ptr [rax], al; pop r12; pop rbx; ret; 
0x0000000000423874: sub byte ptr [rdx], al; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000441c54: sub byte ptr [rsi], dl; add byte ptr [rax], al; pop rbx; ret; 
0x000000000042c0f2: sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000042c0f2: sub ch, byte ptr [rbp - 1]; jmp qword ptr [rsi + 0x41]; cmp dword ptr [rsp], 0x940f0000; ret; 
0x000000000040b90f: sub dh, bl; leave; fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040b948: sub dh, bl; leave; fistp qword ptr [rsp + 0x10]; fild qword ptr [rsp + 0x10]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417ba6: sub dh, bl; leave; fstp xword ptr [rsp]; fld xword ptr [rsp]; lea rsp, [rsp + 0x28]; ret; 
0x0000000000417361: sub dword ptr [rax - 0x77], ecx; fisttp word ptr [rcx - 0x75]; and al, 0x14; call qword ptr [rax + 0x10]; 
0x00000000004326c7: sub dword ptr [rax], eax; add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x0000000000443e8d: sub dword ptr [rbx + 6], 0x8d480001; and al, 0x10; pop rbx; ret; 
0x0000000000410734: sub dword ptr [rcx - 0x7d], ecx; ret 0xeb03; 
0x000000000043e6d3: sub dword ptr [rcx], edx; add byte ptr [rax], al; pop rbx; ret; 
0x000000000041ad93: sub dword ptr [rdi + 0x23b90006], ebx; add byte ptr [rax], al; add bl, dh; movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x0000000000455b0b: sub dword ptr [rdx], eax; add byte ptr [rdx + 0x40], bh; call 0x1fd0; lea rsp, [rsp + 8]; ret; 
0x00000000004326c6: sub dword ptr ss:[rax], eax; add byte ptr [rdi], cl; mov edi, 0x648d48c0; and al, 8; ret; 
0x000000000041a372: sub eax, 0x18; ret; 
0x000000000044bb6c: sub eax, 0x20; jmp 0x4bb74; mov ax, bx; and eax, 0xffff; pop rbx; ret; 
0x0000000000407370: sub eax, 0x20; jmp 0x7378; mov al, dil; and eax, 0xff; ret; 
0x0000000000420fd1: sub eax, 0x388b0006; call rdx; 
0x0000000000452ec0: sub eax, 0x40c60003; sbb byte ptr [rcx], al; mov rdi, qword ptr [rip + 0x32d02]; call 0x13720; lea rsp, [rsp + 8]; ret; 
0x000000000043334f: sub eax, 0x4800001a; lea esp, [rsp + 8]; ret; 
0x00000000004136bf: sub eax, 0x4800001a; mov eax, dword ptr [rsp + 8]; lea rsp, [rsp + 0xd8]; ret; 
0x000000000043317f: sub eax, 0x4800001e; lea esp, [rsp + 8]; ret; 
0x000000000043127f: sub eax, 0x48000028; lea esp, [rsp + 8]; ret; 
0x000000000043131f: sub eax, 0x48000032; lea esp, [rsp + 8]; ret; 
0x000000000041ae57: sub eax, 0x4800069f; lea esp, [rsp + 8]; ret; 
0x000000000041abb7: sub eax, 0x480006a1; lea esp, [rsp + 8]; ret; 
0x000000000041aa47: sub eax, 0x480006a3; lea esp, [rsp + 8]; ret; 
0x0000000000416477: sub eax, 0x480006db; lea esp, [rsp + 8]; ret; 
0x0000000000416357: sub eax, 0x480006dc; lea esp, [rsp + 8]; ret; 
0x00000000004130d0: sub eax, 0x48e28948; lea esi, [rip + 0x55975]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000450b85: sub eax, 0x48e2894c; lea esi, [rip + 0x17ec0]; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041a3af: sub eax, 0x48fffe7f; mov eax, ebx; pop rbx; ret; 
0x000000000043badf: sub eax, 0x48fffffe; lea esp, [rsp + 8]; ret; 
0x0000000000452ecb: sub eax, 0x4de80003; or ah, bh; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000040f2b7: sub eax, 0x5d41ffff; pop r12; pop rbx; ret; 
0x00000000004376d0: sub eax, 0x63480875; ret; 
0x000000000045cf39: sub eax, 0x840f0001; ret; 
0x00000000004295ff: sub eax, 0x89000002; ret; 
0x00000000004322e7: sub eax, 0xff250000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000454ac8: sub eax, 1; add dword ptr [rbx], eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000042fcc4: sub eax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043426b: sub eax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043428b: sub eax, 1; lea rsp, [rsp + 8]; ret; 
0x0000000000423bf9: sub eax, 1; ret; 
0x000000000042fdf1: sub eax, 1; ret; 
0x00000000004480be: sub eax, 4; mov esi, dword ptr [rax]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf0e: sub eax, 4; mov esi, dword ptr [rax]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x00000000004480e8: sub eax, 4; ret; 
0x000000000044bef8: sub eax, 4; ret; 
0x00000000004315c2: sub eax, 6; cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x000000000043187a: sub eax, 6; cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431a02: sub eax, 6; cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431cba: sub eax, 6; cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x000000000043216a: sub eax, 6; cmp eax, 2; setb al; lea rsp, [rsp + 8]; ret; 
0x0000000000431e3d: sub eax, 6; cmp eax, 2; setb al; mov rsp, rbp; pop rbp; ret; 
0x000000000041a37d: sub eax, 8; ret; 
0x00000000004324d7: sub eax, dword ptr [rax]; add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x0000000000447c51: sub eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000044ba67: sub eax, dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x00000000004533a6: sub eax, dword ptr [rdx]; add bh, bh; adc byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000453399: sub eax, dword ptr [rdx]; add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x000000000042584e: sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x000000000042586e: sub eax, dword ptr [rdx]; add eax, 1; and eax, 0xff; ret; 
0x000000000045c030: sub eax, dword ptr [rdx]; pop r13; pop r12; pop rbx; ret; 
0x00000000004324d6: sub eax, dword ptr es:[rax]; add byte ptr [rdi], cl; mov esi, 0x648d48c0; and al, 8; ret; 
0x0000000000453398: sub eax, dword ptr fs:[rdx]; add byte ptr [rax - 0x7d], cl; cmp byte ptr [rax], al; je 0x533ab; lea rax, [rip + 0x22b57]; call qword ptr [rax]; 
0x0000000000453139: sub eax, ebp; adc dword ptr [rdi - 0x76b70004], esp; ret; 
0x000000000040b424: sub eax, ebx; ret; 
0x0000000000433d14: sub eax, ebx; ret; 
0x00000000004053d2: sub eax, ecx; lea rsp, [rsp + 0x18]; ret; 
0x00000000004054a9: sub eax, ecx; lea rsp, [rsp + 0x28]; ret; 
0x0000000000403a71: sub eax, ecx; mov rcx, r8; test rcx, rcx; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x00000000004025b9: sub eax, ecx; ret; 
0x000000000040543b: sub eax, edx; cmp rax, rdx; jg 0x5428; ret; 
0x0000000000405403: sub eax, edx; cmp rsi, rax; jg 0x53f0; ret; 
0x00000000004087da: sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e1a: sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e48: sub eax, edx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004045e4: sub eax, edx; ret; 
0x0000000000404604: sub eax, edx; ret; 
0x000000000044baef: sub eax, edx; ret; 
0x0000000000433d13: sub eax, r11d; ret; 
0x000000000042bdac: sub ecx, 1; movsxd rcx, ecx; mov edx, 1; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000043120b: sub ecx, dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000417074: sub ecx, dword ptr [rax - 0x39]; ret; 
0x000000000045b051: sub ecx, dword ptr [rcx + 0x3a8b0002]; call rax; 
0x0000000000424391: sub ecx, dword ptr [rsi + rax]; add byte ptr [rcx], dh; sar byte ptr [rdi + 4], cl; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x000000000040471c: sub ecx, eax; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040485c: sub ecx, eax; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000447d5d: sub ecx, eax; mov rax, rcx; ret; 
0x000000000044bb42: sub ecx, eax; mov rax, rcx; ret; 
0x0000000000447956: sub ecx, eax; movsd xmm0, qword ptr [rbx]; call 0x43660; movsd qword ptr [rbx], xmm0; pop rbx; ret; 
0x00000000004344f7: sub ecx, eax; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000044a07f: sub ecx, edx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000040b048: sub ecx, edx; mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x0000000000403a43: sub ecx, esi; mov rax, r9; ret; 
0x0000000000402e7b: sub edi, 0x8d48ffff; and al, 8; ret; 
0x00000000004210b1: sub edi, dword ptr [rip - 0x74b7fffa]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62c3c; mov edi, dword ptr [rdx]; call rax; 
0x000000000040f4a7: sub edi, edi; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000040f4a6: sub edi, edi; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000450b44: sub edi, esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004525c1: sub edi, esp; dec dword ptr [rax - 0x75]; and al, 0x10; lea rsp, [rsp + 0xe8]; ret; 
0x000000000040cf6d: sub edx, 1; add rdx, 1; cmp dil, byte ptr [rcx]; jne 0xcf7d; mov rax, rdx; ret; 
0x0000000000433b81: sub edx, dword ptr [rsi + rdi*8]; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000040469c: sub edx, ecx; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d4: sub edx, ecx; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040b428: sub edx, ecx; mov rax, rdx; ret; 
0x0000000000433f73: sub edx, ecx; mov rax, rdx; ret; 
0x0000000000433fe4: sub edx, ecx; mov rax, rdx; ret; 
0x000000000043b2a0: sub edx, edi; movsxd rcx, ecx; mov rdi, rax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000457d83: sub edx, edx; sti; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042a40b: sub esi, edi; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x000000000041da7d: sub esp, ebp; movsxd rax, r13d; add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000040469b: sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x00000000004047d3: sub r10, r9; mov byte ptr [rsi], r10b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000041da7c: sub r12d, r13d; movsxd rax, r13d; add qword ptr [rbx + 0x18], rax; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x0000000000403a70: sub r8, r9; mov rcx, r8; test rcx, rcx; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x000000000040471b: sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000040485b: sub r9, r8; mov byte ptr [rsi], r9b; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000403a42: sub r9, rsi; mov rax, r9; ret; 
0x000000000041a371: sub rax, 0x18; ret; 
0x000000000042fcc3: sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043426a: sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000043428a: sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000042fdf0: sub rax, 1; ret; 
0x00000000004480bd: sub rax, 4; mov esi, dword ptr [rax]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000044bf0d: sub rax, 4; mov esi, dword ptr [rax]; mov rdi, rax; call 0x190b0; lea rsp, [rsp + 8]; ret; 
0x000000000041a37c: sub rax, 8; ret; 
0x000000000040b423: sub rax, r11; ret; 
0x00000000004025b8: sub rax, rcx; ret; 
0x00000000004087d9: sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x0000000000409e19: sub rax, rdx; movsx eax, ax; lea rsp, [rsp + 8]; ret; 
0x00000000004045e3: sub rax, rdx; ret; 
0x0000000000404603: sub rax, rdx; ret; 
0x000000000044baee: sub rax, rdx; ret; 
0x0000000000447d5c: sub rcx, r8; mov rax, rcx; ret; 
0x000000000044bb41: sub rcx, r8; mov rax, rcx; ret; 
0x00000000004344f6: sub rcx, rax; movsxd rdx, edx; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x000000000044a07e: sub rcx, rdx; call 0xf770; lea rsp, [rsp + 8]; ret; 
0x000000000040b047: sub rcx, rdx; mov rax, rcx; lea rsp, [rsp + 8]; ret; 
0x000000000040cf6c: sub rdx, 1; add rdx, 1; cmp dil, byte ptr [rcx]; jne 0xcf7d; mov rax, rdx; ret; 
0x000000000040b427: sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433f72: sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433fe3: sub rdx, rcx; mov rax, rdx; ret; 
0x000000000043b29f: sub rdx, rdi; movsxd rcx, ecx; mov rdi, rax; call 0xcd40; lea rsp, [rsp + 8]; ret; 
0x0000000000443e8c: sub word ptr [rbx + 6], 1; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004316ed: subps xmm0, xmmword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004054a4: subps xmm1, xmmword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x00000000004054a3: subsd xmm1, qword ptr [rax]; movapd xmm0, xmm1; lea rsp, [rsp + 0x28]; ret; 
0x0000000000401085: syscall; 
0x0000000000401e0c: syscall; 
0x0000000000401e3f: syscall; 
0x0000000000401e72: syscall; 
0x0000000000401eb5: syscall; 
0x0000000000401ef8: syscall; 
0x0000000000401f3b: syscall; 
0x0000000000401f7f: syscall; 
0x0000000000401fa7: syscall; 
0x000000000042b0bc: syscall; 
0x000000000042b138: syscall; 
0x000000000042b86d: syscall; 
0x0000000000401085: syscall; jmp 0x107d; mov rsp, rbp; pop rbp; ret; 
0x0000000000401fa7: syscall; ret; 
0x0000000000419585: test al, 0; add byte ptr [rax], al; call 0x194c0; lea rsp, [rsp + 8]; ret; 
0x000000000041972d: test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040feae: test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000044a21e: test al, 0; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042415c: test al, 0; add byte ptr [rax], al; pop r13; pop r12; pop rbx; ret; 
0x00000000004193bb: test al, 0; add byte ptr [rax], al; ret; 
0x000000000042de54: test al, 0x48; mov esp, ebp; pop rbp; ret; 
0x000000000042e06f: test al, 0x4c; mov ebp, dword ptr [rbp - 0x50]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042e06e: test al, 0x4c; mov ebp, dword ptr [rbp - 0x50]; mov r14, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae4: test al, 0x4c; mov ebp, dword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x0000000000443ae3: test al, 0x4c; mov ebp, dword ptr [rbp - 0x50]; mov rsp, rbp; pop rbp; ret; 
0x0000000000412045: test al, 0x4c; mov esi, dword ptr [rbp - 0x50]; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x000000000042ecd0: test al, 0x4c; mov esi, dword ptr [rbp - 0x50]; mov r15, qword ptr [rbp - 0x48]; mov rsp, rbp; pop rbp; ret; 
0x0000000000435324: test al, 0x7d; std; jmp qword ptr [rsi - 0x75]; 
0x00000000004277f4: test al, 0xe0; add eax, 0x1044c600; sub byte ptr [rax], al; pop rbx; ret; 
0x000000000045752f: test al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004575a2: test al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004576bb: test al, 0xfa; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045766e: test al, 0xfa; inc dword ptr [rcx + 0x5d]; pop r12; pop rbx; ret; 
0x0000000000455bc9: test al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000455bc8: test al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000408b94: test al, 0xff; jmp qword ptr [rsi + 0x41]; 
0x000000000041a336: test al, 6; add al, ch; xor cl, byte ptr [rdx]; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000434ab9: test al, al; je 0x34ac6; cmp r8d, r9d; jg 0x34a38; ret; 
0x000000000040baa5: test al, al; je 0xbab1; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x000000000040dcc5: test al, al; je 0xdcd1; mov rdi, rbx; call 0x19140; pop rbx; ret; 
0x0000000000425cf3: test al, cl; add byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fe18], al; ret; 
0x0000000000434fef: test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435140: test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435297: test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352e8: test ax, ax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000424d5f: test bh, bh; je 0x24d68; call 0x24d10; mov al, bl; pop rbx; ret; 
0x000000000041f75b: test byte ptr [rax + 0x48000000], dh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x00000000004484d8: test byte ptr [rax + 0x50ff0003], bh; sbb byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000040b8c7: test byte ptr [rax + 0x63], -1; call 0xb800; lea rsp, [rsp + 8]; ret; 
0x0000000000417278: test byte ptr [rax + 0x8ebffff], ch; mov rdi, rbx; call 0x151d0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000405aa6: test byte ptr [rax + rax*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x3c83; 
0x0000000000405df4: test byte ptr [rax + rax*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x917d; 
0x000000000043b746: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x00000000004253a9: test byte ptr [rax + rax], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x000000000043b8e9: test byte ptr [rax + rax], al; call qword ptr [rax + 0x28]; 
0x000000000043b8e9: test byte ptr [rax + rax], al; call qword ptr [rax + 0x28]; lea rsp, [rsp + 8]; ret; 
0x000000000042a839: test byte ptr [rax + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000042415a: test byte ptr [rax + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x000000000044465c: test byte ptr [rax + rbp*8], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x1c75; 
0x000000000043b69d: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000449ea0: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x000000000044c388: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x6349; 
0x0000000000405de9: test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x6348; 
0x0000000000405e09: test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0xff2; 
0x000000000040568e: test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x0000000000405bb5: test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0x8f0f; 
0x00000000004055cf: test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x000000000040595f: test byte ptr [rax + rcx*2], ah; add al, byte ptr [rax]; add byte ptr [rcx], bh; ret 0xaf7f; 
0x00000000004453a7: test byte ptr [rax + rdi*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 3], cl; add cl, byte ptr [rax - 0x77]; ret 0x8944; 
0x0000000000445396: test byte ptr [rax + rdi*4], ah; add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x000000000042b953: test byte ptr [rax + rdi*4], ah; or byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000040555c: test byte ptr [rax + rdx*4], ah; add al, byte ptr [rax]; add byte ptr [rcx], ch; ret 0x8941; 
0x00000000004452ef: test byte ptr [rax + rsi*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x00000000004045df: test byte ptr [rax - 0x77], -0x38; sub rax, rdx; ret; 
0x00000000004045ff: test byte ptr [rax - 0x77], -0x38; sub rax, rdx; ret; 
0x000000000043250b: test byte ptr [rax - 0x77], -0x39; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x00000000004326fa: test byte ptr [rax - 0x77], -0x39; call 0x34ad0; lea rsp, [rsp + 8]; ret; 
0x0000000000432ac9: test byte ptr [rax - 0x77], -0x39; call 0x34b70; lea rsp, [rsp + 8]; ret; 
0x00000000004169ba: test byte ptr [rax - 0x77], -0x39; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d68f]; lea rsp, [rsp + 8]; ret; 
0x000000000041669a: test byte ptr [rax - 0x77], -0x39; mov edx, 0xfffffffc; call qword ptr [rip + 0x6d9af]; lea rsp, [rsp + 8]; ret; 
0x000000000041665b: test byte ptr [rax - 0x77], -0x39; mov edx, 0xfffffffe; call qword ptr [rip + 0x6d9ee]; lea rsp, [rsp + 8]; ret; 
0x00000000004155aa: test byte ptr [rax - 0x77], -0x39; mov edx, 0xfffffffe; call qword ptr [rip + 0x6ea27]; lea rsp, [rsp + 8]; ret; 
0x000000000041660b: test byte ptr [rax - 0x77], -0x39; mov edx, 0xffffffff; call qword ptr [rip + 0x6da3e]; lea rsp, [rsp + 8]; ret; 
0x000000000041555b: test byte ptr [rax - 0x77], -0x39; mov edx, 0xffffffff; call qword ptr [rip + 0x6ea76]; lea rsp, [rsp + 8]; ret; 
0x0000000000434ebb: test byte ptr [rax - 0x77], -0x39; mov edx, 2; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000434f0a: test byte ptr [rax - 0x77], -0x39; mov edx, 4; call 0x34c60; lea rsp, [rsp + 8]; ret; 
0x0000000000416679: test byte ptr [rax - 0x77], -0x39; mov edx, 4; call qword ptr [rip + 0x6d9d0]; lea rsp, [rsp + 8]; ret; 
0x0000000000434f79: test byte ptr [rax - 0x77], -0x39; mov edx, 8; call 0x34d80; lea rsp, [rsp + 8]; ret; 
0x0000000000434226: test byte ptr [rax], 0; add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x000000000045743c: test byte ptr [rax], al; add byte ptr [rax], al; call 0x1e60; lea rsp, [rsp + 8]; ret; 
0x0000000000446d28: test byte ptr [rax], al; add byte ptr [rax], al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000430618: test byte ptr [rax], al; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x000000000041f65b: test byte ptr [rbp + 0x48000000], bh; mov edi, ebx; call qword ptr [rbx + 0x40]; 
0x000000000045cf33: test byte ptr [rbp + 0x66000003], dh; sub eax, 0x840f0001; ret; 
0x000000000041f106: test byte ptr [rbx + 6], 0; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b9b8: test byte ptr [rbx - 0x76b70002], cl; ret; 
0x0000000000409170: test byte ptr [rcx + 0xffe2], 0; call 0x3460; lea rsp, [rsp + 8]; ret; 
0x000000000043abe1: test byte ptr [rcx - 0x17000000], ch; ret; 
0x0000000000436c29: test byte ptr [rcx - 0x350173f], -1; jmp qword ptr [rcx]; 
0x0000000000459278: test byte ptr [rcx], -0x10; movsx eax, ax; ret; 
0x0000000000405a72: test byte ptr [rcx], cl; ret; 
0x000000000040a03f: test byte ptr [rdi], -0x41; clc; call 0x7e00; mov rsp, rbp; pop rbp; ret; 
0x000000000043e65a: test byte ptr [rdi], -0x6b; ret; 
0x0000000000441eea: test byte ptr [rdi], -0x6b; ret; 
0x0000000000424329: test byte ptr [rip - 0x387cb800], 8; mov edx, 2; mov esi, 0xd7b2; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x0000000000431cd6: test byte ptr [rsi - 3], -1; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000432186: test byte ptr [rsi - 3], 0xff; cmp eax, 8; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045c146: test byte ptr [rsi], 0xfc; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000418733: test byte ptr [rsi], dh; add byte ptr [rax], al; mov rsi, qword ptr [rbp - 0x18]; lea rdi, [rbp - 0x190]; lea rax, [rip + 0x50266]; call qword ptr [rax]; 
0x000000000043cc0e: test ch, bh; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000042cabc: test dh, bh; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042cb44: test dh, bh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000438e18: test dh, cl; add eax, dword ptr [rax]; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000406771: test dh, dh; je 0x6779; mov rax, qword ptr [rdi]; ret; 
0x0000000000424d5e: test dil, dil; je 0x24d68; call 0x24d10; mov al, bl; pop rbx; ret; 
0x0000000000427688: test dword ptr [rax + rax - 0x49f10000], ebx; ret; 
0x000000000044b936: test dword ptr [rax - 0x2f], 0xde8948e2; call 0x1fd0; mov rax, rbx; pop rbx; ret; 
0x000000000041ac97: test dword ptr [rax - 0x72b7fffa], esp; and al, 8; ret; 
0x00000000004335aa: test dword ptr [rax - 0x75], 0x15bde830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043339a: test dword ptr [rax - 0x75], 0x177de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043354a: test dword ptr [rax - 0x75], 0x194de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004331ba: test dword ptr [rax - 0x75], 0x19ade830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043334a: test dword ptr [rax - 0x75], 0x1a2de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043356a: test dword ptr [rax - 0x75], 0x1a3de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432faa: test dword ptr [rax - 0x75], 0x1b6de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043336a: test dword ptr [rax - 0x75], 0x1c1de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043315a: test dword ptr [rax - 0x75], 0x1d3de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432f5a: test dword ptr [rax - 0x75], 0x1e1de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043317a: test dword ptr [rax - 0x75], 0x1e2de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000432f7a: test dword ptr [rax - 0x75], 0x200de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004312ba: test dword ptr [rax - 0x75], 0x278de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043129a: test dword ptr [rax - 0x75], 0x27ade830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043127a: test dword ptr [rax - 0x75], 0x282de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043125a: test dword ptr [rax - 0x75], 0x284de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004312da: test dword ptr [rax - 0x75], 0x31bde830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004312fa: test dword ptr [rax - 0x75], 0x320de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043131a: test dword ptr [rax - 0x75], 0x322de830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004149da: test dword ptr [rax - 0x75], 0x3ce80870; out 0xff, al; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043028a: test dword ptr [rax - 0x75], 0x42fde830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043045a: test dword ptr [rax - 0x75], 0xafbde830; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042fcba: test dword ptr [rax - 0x75], 0xb6dde830; add byte ptr [rax], al; sub rax, 1; lea rsp, [rsp + 8]; ret; 
0x00000000004302aa: test dword ptr [rax - 0x75], 0xffe28130; add byte ptr [rax], al; add al, ch; test dword ptr [rdx], 0x648d4800; and al, 8; ret; 
0x0000000000402f9d: test dword ptr [rax - 0x77], 0x10bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045770d: test dword ptr [rax - 0x77], 0x13bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402b1d: test dword ptr [rax - 0x77], 0x1bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e12: test dword ptr [rax - 0x77], 0x8b841c2; add byte ptr [rax], al; add byte ptr [rdi + 0xd], bh; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000040300d: test dword ptr [rax - 0x77], 0x8b841c2; add byte ptr [rax], al; add byte ptr [rdi + 0xe], bh; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000402acd: test dword ptr [rax - 0x77], 0x8bfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000045ca7d: test dword ptr [rax - 0x77], 0x9abfc2; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000402e9d: test dword ptr [rax - 0x77], 0xc0314dc2; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000045c90d: test dword ptr [rax - 0x77], 0xc28948d1; mov edi, 0x115; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x00000000004576ad: test dword ptr [rax - 0x77], 0xc28948d1; mov edi, 0x11; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000401f6e: test dword ptr [rax - 0x77], 0xca8948d6; mov r10, r8; mov r8, r9; mov r9, qword ptr [rbp + 0x10]; syscall; 
0x0000000000401f2e: test dword ptr [rax - 0x77], 0xca8948d6; mov r10, r8; mov r8, r9; syscall; 
0x0000000000401eee: test dword ptr [rax - 0x77], 0xca8948d6; mov r10, r8; syscall; 
0x0000000000401eae: test dword ptr [rax - 0x77], 0xca8948d6; syscall; 
0x000000000045c8a0: test dword ptr [rax - 0x77], 0xe8bfc2; add byte ptr [rax], al; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000042fc7a: test dword ptr [rax - 0x7d], 0x8b4801c2; xor al, ch; cdq; mov ebx, 0x8d480000; and al, 8; ret; 
0x00000000004573d6: test dword ptr [rax], eax; add byte ptr [rax], al; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x0000000000432dca: test dword ptr [rbx + 0x1cfee830], 0x8d480000; and al, 8; ret; 
0x0000000000432d7a: test dword ptr [rbx + 0x1edee830], 0x8d480000; and al, 8; ret; 
0x0000000000432bfa: test dword ptr [rbx + 0x1f6ee830], 0x8d480000; and al, 8; ret; 
0x0000000000432d9a: test dword ptr [rbx + 0x21aee830], 0x8d480000; and al, 8; ret; 
0x0000000000432baa: test dword ptr [rbx + 0x22eee830], 0x8d480000; and al, 8; ret; 
0x0000000000432bca: test dword ptr [rbx + 0x239ee830], 0x8d480000; and al, 8; ret; 
0x00000000004336aa: test dword ptr [rbx - 0x6bf0fe06], 0x308a40c2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x000000000041ab47: test dword ptr [rcx - 0x72b7fffa], esp; and al, 8; ret; 
0x0000000000457717: test dword ptr [rdi - 0x72b70006], esp; and al, 8; ret; 
0x00000000004329da: test dword ptr [rdi], 0x3de830b7; and eax, 0x8d480000; and al, 8; ret; 
0x00000000004323ea: test dword ptr [rdi], 0x6de830b6; sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004325da: test dword ptr [rdi], 0x7de830be; add byte ptr es:[rax], al; lea rsp, [rsp + 8]; ret; 
0x0000000000417d45: test dword ptr [rdi], 0x89480000; in al, dx; pop rbp; ret; 
0x000000000043243a: test dword ptr [rdi], 0x8de830b6; add byte ptr es:[rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004327ca: test dword ptr [rdi], 0x8de830bf; and al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004329ba: test dword ptr [rdi], 0x9de830b7; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043262a: test dword ptr [rdi], 0x9de830be; and al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004325fa: test dword ptr [rdi], 0xade830be; sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043281a: test dword ptr [rdi], 0xade830bf; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043240a: test dword ptr [rdi], 0xbde830b6; sub al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432a0a: test dword ptr [rdi], 0xbde830b7; and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000423a87: test dword ptr [rdx + 4], esp; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e8be: test dword ptr [rdx + rax], ebp; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004302b5: test dword ptr [rdx], 0x648d4800; and al, 8; ret; 
0x000000000041af37: test dword ptr [rsi - 0x72b7fffa], ebx; and al, 8; ret; 
0x000000000044bade: test dx, dx; jne 0x4bac8; and eax, 0xffff; and edx, 0xffff; sub rax, rdx; ret; 
0x0000000000418f99: test eax, 0x3a8b0006; call rax; 
0x0000000000406cf3: test eax, 0x41fffffe; pop rbp; pop r12; pop rbx; ret; 
0x0000000000415eb3: test eax, 0x480006e1; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000401053: test eax, 0x48000819; mov dword ptr [rax], edx; jmp 0x1000; ret; 
0x000000000041bb9e: test eax, 0x5e415f41; pop r13; pop r12; pop rbx; ret; 
0x000000000040dc16: test eax, 0x89480000; in al, dx; pop rbp; ret; 
0x000000000042c903: test eax, 0x89fffe86; fmul dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000045745f: test eax, 0x8d48fffa; and al, 8; ret; 
0x00000000004574a5: test eax, 0x8d48fffa; and al, 8; ret; 
0x00000000004574c2: test eax, 0x8d48fffa; and al, 8; ret; 
0x00000000004574e5: test eax, 0x8d48fffa; and al, 8; ret; 
0x000000000045750c: test eax, 0x8d48fffa; and al, 8; ret; 
0x000000000045755e: test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000457584: test eax, 0x8d48fffa; and al, 8; ret; 
0x000000000043abe2: test eax, 0xe9000000; ret; 
0x000000000041146f: test eax, eax; je 0x11483; lea rdx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d6: test eax, eax; je 0x114ea; lea rdx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041150e: test eax, eax; je 0x11522; lea rdx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041480b: test eax, eax; je 0x14816; mov dword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000414a30: test eax, eax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000414a5c: test eax, eax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414ab0: test eax, eax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414b08: test eax, eax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414b6d: test eax, eax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414c70: test eax, eax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414d09: test eax, eax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414d38: test eax, eax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d6c: test eax, eax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d92: test eax, eax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414dbf: test eax, eax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414e2c: test eax, eax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414e83: test eax, eax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414ec5: test eax, eax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414f30: test eax, eax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414fbc: test eax, eax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414fe9: test eax, eax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000415036: test eax, eax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x00000000004150a0: test eax, eax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x00000000004150c7: test eax, eax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415143: test eax, eax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004152a8: test eax, eax; je 0x152b9; lea rdx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415346: test eax, eax; je 0x15357; lea rdx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d68: test eax, eax; je 0x17d79; lea rdx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dc0: test eax, eax; je 0x17dd4; lea rdx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e10: test eax, eax; je 0x17e21; lea rdx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb7: test eax, eax; je 0x17ec8; lea rdx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041806f: test eax, eax; je 0x18083; lea rdx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041809e: test eax, eax; je 0x180af; lea rdx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180ce: test eax, eax; je 0x180e2; lea rdx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180fd: test eax, eax; je 0x1810e; lea rdx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041812d: test eax, eax; je 0x18141; lea rdx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041817b: test eax, eax; je 0x1818c; lea rdx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181dd: test eax, eax; je 0x181f1; lea rdx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418209: test eax, eax; je 0x1821a; lea rdx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004184f7: test eax, eax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x00000000004187bb: test eax, eax; je 0x187c4; call 0x150f0; mov rsp, rbp; pop rbp; ret; 
0x00000000004188b9: test eax, eax; je 0x188c2; call 0x150f0; lea rsp, [rsp + 0x980]; pop rbx; ret; 
0x0000000000418d4e: test eax, eax; je 0x18d62; lea rdx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418deb: test eax, eax; je 0x18dff; lea rdx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e1a: test eax, eax; je 0x18e2e; lea rdx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ebe: test eax, eax; je 0x18ed2; lea rdx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef2: test eax, eax; je 0x18f06; lea rdx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f2a: test eax, eax; je 0x18f3e; lea rdx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f91: test eax, eax; je 0x18fa5; lea rdx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041924f: test eax, eax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x000000000041929f: test eax, eax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419d07: test eax, eax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419e40: test eax, eax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x000000000041a1be: test eax, eax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x000000000041a465: test eax, eax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x000000000041a628: test eax, eax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a685: test eax, eax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a710: test eax, eax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a77e: test eax, eax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a8e1: test eax, eax; je 0x1a8f2; lea rdx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a918: test eax, eax; je 0x1a929; lea rdx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a94a: test eax, eax; je 0x1a95b; lea rdx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a974: test eax, eax; je 0x1a985; lea rdx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a7: test eax, eax; je 0x1a9b8; lea rdx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa18: test eax, eax; je 0x1aa29; lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afb0: test eax, eax; je 0x1afc4; lea rdx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b017: test eax, eax; je 0x1b02b; lea rdx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b04f: test eax, eax; je 0x1b063; lea rdx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3b0: test eax, eax; je 0x1b3c1; lea rdx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b571: test eax, eax; je 0x1b57a; call 0x14fb0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x78]; ret; 
0x000000000041b780: test eax, eax; je 0x1b794; lea rdx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e7: test eax, eax; je 0x1b7fb; lea rdx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b81f: test eax, eax; je 0x1b833; lea rdx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc2d: test eax, eax; je 0x1bc3e; lea rdx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc6e: test eax, eax; je 0x1bc7f; lea rdx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcc0: test eax, eax; je 0x1bcd1; lea rdx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd10: test eax, eax; je 0x1bd21; lea rdx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd9c: test eax, eax; je 0x1bdad; lea rdx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be2c: test eax, eax; je 0x1be3d; lea rdx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be87: test eax, eax; je 0x1be98; lea rdx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed3: test eax, eax; je 0x1bee4; lea rdx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf27: test eax, eax; je 0x1bf38; lea rdx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf84: test eax, eax; je 0x1bf95; lea rdx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c010: test eax, eax; je 0x1c021; lea rdx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000401bfa: test eax, eax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x000000000041c2fc: test eax, eax; je 0x1c305; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c54d: test eax, eax; je 0x1c55e; lea rdx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c641: test eax, eax; je 0x1c652; lea rdx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c95f: test eax, eax; je 0x1c970; lea rdx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e5: test eax, eax; je 0x1c9f6; lea rdx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cabc: test eax, eax; je 0x1cacd; lea rdx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041caff: test eax, eax; je 0x1cb10; lea rdx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb4f: test eax, eax; je 0x1cb60; lea rdx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb9f: test eax, eax; je 0x1cbb0; lea rdx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc65: test eax, eax; je 0x1cc76; lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd6: test eax, eax; je 0x1cce7; lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd9b: test eax, eax; je 0x1cdac; lea rdx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf4: test eax, eax; je 0x1ce05; lea rdx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ceff: test eax, eax; je 0x1cf10; lea rdx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c6: test eax, eax; je 0x1d1d7; lea rdx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d212: test eax, eax; je 0x1d223; lea rdx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2d0: test eax, eax; je 0x1d2e4; lea rdx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d316: test eax, eax; je 0x1d327; lea rdx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d362: test eax, eax; je 0x1d373; lea rdx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d450: test eax, eax; je 0x1d464; lea rdx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e2: test eax, eax; je 0x1d4f3; lea rdx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d510: test eax, eax; je 0x1d521; lea rdx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5c0: test eax, eax; je 0x1d5d4; lea rdx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d606: test eax, eax; je 0x1d617; lea rdx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d652: test eax, eax; je 0x1d663; lea rdx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d750: test eax, eax; je 0x1d764; lea rdx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d820: test eax, eax; je 0x1d831; lea rdx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d860: test eax, eax; je 0x1d871; lea rdx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d973: test eax, eax; je 0x1d984; lea rdx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db9a: test eax, eax; je 0x1dbab; lea rdx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd8: test eax, eax; je 0x1dbe9; lea rdx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc85: test eax, eax; je 0x1dc96; lea rdx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc8: test eax, eax; je 0x1dcd9; lea rdx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd99: test eax, eax; je 0x1ddaa; lea rdx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec5: test eax, eax; je 0x1ded6; lea rdx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e024: test eax, eax; je 0x1e035; lea rdx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e130: test eax, eax; je 0x1e141; lea rdx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b4: test eax, eax; je 0x1e1c5; lea rdx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2dd: test eax, eax; je 0x1e2ee; lea rdx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e38d: test eax, eax; je 0x1e39e; lea rdx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e481: test eax, eax; je 0x1e492; lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4f0: test eax, eax; je 0x1e501; lea rdx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e570: test eax, eax; je 0x1e581; lea rdx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5f0: test eax, eax; je 0x1e601; lea rdx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e690: test eax, eax; je 0x1e6a1; lea rdx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e3: test eax, eax; je 0x1e8f4; lea rdx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e98b: test eax, eax; je 0x1e99c; lea rdx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea04: test eax, eax; je 0x1ea15; lea rdx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea78: test eax, eax; je 0x1ea89; lea rdx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae8: test eax, eax; je 0x1eaf9; lea rdx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb68: test eax, eax; je 0x1eb79; lea rdx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb4: test eax, eax; je 0x1ebc5; lea rdx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe2: test eax, eax; je 0x1ebf3; lea rdx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec68: test eax, eax; je 0x1ec79; lea rdx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb4: test eax, eax; je 0x1ecc5; lea rdx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece5: test eax, eax; je 0x1ecf6; lea rdx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee2e: test eax, eax; je 0x1ee3f; lea rdx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f079: test eax, eax; je 0x1f08a; lea rdx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0ce: test eax, eax; je 0x1f0df; lea rdx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0ff: test eax, eax; je 0x1f110; lea rdx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f140: test eax, eax; je 0x1f151; lea rdx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042002a: test eax, eax; je 0x2003b; lea rdx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c4: test eax, eax; je 0x200d5; lea rdx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420194: test eax, eax; je 0x201a5; lea rdx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042022f: test eax, eax; je 0x20240; lea rdx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042036f: test eax, eax; je 0x20380; lea rdx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420420: test eax, eax; je 0x20431; lea rdx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420578: test eax, eax; je 0x20589; lea rdx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421027: test eax, eax; je 0x21038; lea rdx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042105a: test eax, eax; je 0x2106b; lea rdx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210b9: test eax, eax; je 0x210ca; lea rdx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421117: test eax, eax; je 0x21128; lea rdx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042114a: test eax, eax; je 0x2115b; lea rdx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211af: test eax, eax; je 0x211c0; lea rdx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211ff: test eax, eax; je 0x21210; lea rdx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042126a: test eax, eax; je 0x2127b; lea rdx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421308: test eax, eax; je 0x21319; lea rdx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042145f: test eax, eax; je 0x21470; lea rdx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214ba: test eax, eax; je 0x214cb; lea rdx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421558: test eax, eax; je 0x21569; lea rdx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216ae: test eax, eax; je 0x216bf; lea rdx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216f9: test eax, eax; je 0x2170a; lea rdx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421754: test eax, eax; je 0x21765; lea rdx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217a9: test eax, eax; je 0x217ba; lea rdx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042180f: test eax, eax; je 0x21820; lea rdx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421856: test eax, eax; je 0x21867; lea rdx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218bf: test eax, eax; je 0x218d0; lea rdx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421909: test eax, eax; je 0x2191a; lea rdx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421966: test eax, eax; je 0x21977; lea rdx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042199f: test eax, eax; je 0x219b0; lea rdx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219fa: test eax, eax; je 0x21a0b; lea rdx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a2f: test eax, eax; je 0x21a40; lea rdx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a88: test eax, eax; je 0x21a99; lea rdx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af6: test eax, eax; je 0x21b07; lea rdx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bbb: test eax, eax; je 0x21bcc; lea rdx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c14: test eax, eax; je 0x21c25; lea rdx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d1f: test eax, eax; je 0x21d30; lea rdx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db8: test eax, eax; je 0x21dc9; lea rdx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222d9: test eax, eax; je 0x222ea; lea rdx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422359: test eax, eax; je 0x2236a; lea rdx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223b9: test eax, eax; je 0x223ca; lea rdx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422439: test eax, eax; je 0x2244a; lea rdx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422498: test eax, eax; je 0x224a9; lea rdx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422525: test eax, eax; je 0x22536; lea rdx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d5: test eax, eax; je 0x225e6; lea rdx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422631: test eax, eax; je 0x22642; lea rdx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422793: test eax, eax; je 0x227a4; lea rdx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042282c: test eax, eax; je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228ea: test eax, eax; je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422963: test eax, eax; je 0x22974; lea rdx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422991: test eax, eax; je 0x229a2; lea rdx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004229c5: test eax, eax; je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422e68: test eax, eax; je 0x22e79; lea rdx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422eb7: test eax, eax; je 0x22ec0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422f18: test eax, eax; je 0x22f29; lea rdx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f67: test eax, eax; je 0x22f70; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422fc8: test eax, eax; je 0x22fd9; lea rdx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423017: test eax, eax; je 0x23020; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423128: test eax, eax; je 0x23139; lea rdx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423177: test eax, eax; je 0x23180; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004231d8: test eax, eax; je 0x231e9; lea rdx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423227: test eax, eax; je 0x23230; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423288: test eax, eax; je 0x23299; lea rdx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004232d7: test eax, eax; je 0x232e0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423424: test eax, eax; je 0x2342d; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004234a4: test eax, eax; je 0x234ad; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423524: test eax, eax; je 0x2352d; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423608: test eax, eax; je 0x23619; lea rdx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423657: test eax, eax; je 0x23660; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004236b8: test eax, eax; je 0x236c9; lea rdx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423707: test eax, eax; je 0x23710; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423768: test eax, eax; je 0x23779; lea rdx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004237b7: test eax, eax; je 0x237c0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000424230: test eax, eax; je 0x24244; lea rdx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424266: test eax, eax; je 0x2427a; lea rdx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042429f: test eax, eax; je 0x242b3; lea rdx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d8: test eax, eax; je 0x242ec; lea rdx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424311: test eax, eax; je 0x24325; lea rdx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f5: test eax, eax; je 0x24506; lea rdx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042455b: test eax, eax; je 0x2456c; lea rdx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a3: test eax, eax; je 0x245b4; lea rdx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c6d: test eax, eax; je 0x26c7e; lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb9: test eax, eax; je 0x26cca; lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427234: test eax, eax; je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427263: test eax, eax; je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427297: test eax, eax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f3: test eax, eax; je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042738c: test eax, eax; je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273d0: test eax, eax; je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427404: test eax, eax; je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c7b: test eax, eax; je 0x29c8c; lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d0b: test eax, eax; je 0x29d1c; lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d9b: test eax, eax; je 0x29dac; lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402a00: test eax, eax; je 0x2a0e; mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000402a2e: test eax, eax; je 0x2a3c; mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x000000000042a5e1: test eax, eax; je 0x2a5f2; lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a62c: test eax, eax; je 0x2a63d; lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c07b: test eax, eax; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c10b: test eax, eax; je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c19b: test eax, eax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c41: test eax, eax; je 0x2c4f; mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x0000000000402cf9: test eax, eax; je 0x2d07; mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x000000000042d8e9: test eax, eax; je 0x2d8f2; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042d999: test eax, eax; je 0x2d9a2; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042dc81: test eax, eax; je 0x2dc8a; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e354: test eax, eax; je 0x2e35c; mov rax, qword ptr [rax - 8]; ret; 
0x00000000004032a1: test eax, eax; je 0x32b5; lea rdx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032eb: test eax, eax; je 0x32ff; lea rdx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004368a1: test eax, eax; je 0x368aa; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043ced5: test eax, eax; je 0x3cee1; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000440405: test eax, eax; je 0x40411; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x000000000040428e: test eax, eax; je 0x429e; cmp rsi, rax; jg 0x429a; xor eax, eax; ret; 
0x0000000000449613: test eax, eax; je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x0000000000449922: test eax, eax; je 0x4992b; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044b3b3: test eax, eax; je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b6c2: test eax, eax; je 0x4b6cb; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044ce08: test eax, eax; je 0x4ce11; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004505e5: test eax, eax; je 0x505ee; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450688: test eax, eax; je 0x50691; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450856: test eax, eax; je 0x5085f; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450bd5: test eax, eax; je 0x50bec; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004050d7: test eax, eax; je 0x50e8; lea rdx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452af6: test eax, eax; je 0x52b07; lea rdx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045383d: test eax, eax; je 0x53846; call 0x14fb0; mov al, byte ptr [rsp + 8]; lea rsp, [rsp + 0xf8]; ret; 
0x0000000000456698: test eax, eax; je 0x566a1; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004566e5: test eax, eax; je 0x566f9; lea rdx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a34f: test eax, eax; je 0x5a363; lea rdx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d3: test eax, eax; je 0x5a3e7; lea rdx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af9e: test eax, eax; je 0x5afb2; lea rdx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff4: test eax, eax; je 0x5b008; lea rdx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b04a: test eax, eax; je 0x5b05e; lea rdx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccbc: test eax, eax; je 0x5ccd0; lea rdx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd79: test eax, eax; je 0x5cd8d; lea rdx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x000000000040e665: test eax, eax; je 0xe66e; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000443f67: test eax, eax; jg 0x43f6e; add eax, 7; ret; 
0x0000000000403804: test eax, eax; jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x00000000004038a3: test eax, eax; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x0000000000402462: test eax, eax; jne 0x2470; cmp rdx, rcx; ja 0x2450; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e2: test eax, eax; jne 0x24f0; cmp rdx, rcx; ja 0x24d0; or rax, 0xffffffffffffffff; ret; 
0x0000000000433f6e: test eax, eax; jne 0x33f78; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433fdf: test eax, eax; jne 0x33fe9; sub rdx, rcx; mov rax, rdx; ret; 
0x000000000043413a: test eax, eax; jne 0x34143; cmp rdx, r8; jne 0x34120; ret; 
0x00000000004341ac: test eax, eax; jne 0x341b5; cmp rdx, r10; jne 0x34180; ret; 
0x0000000000456f35: test eax, eax; jne 0x56f3d; mov eax, dword ptr [rsp + 0x10]; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000432346: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043253e: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043272f: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432917: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432af6: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432cde: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000432ebf: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433097: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004332af: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433487: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000434ff0: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435141: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000435298: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004352e9: test eax, eax; sete al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000413bcf: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004279db: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e78b: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042f1ee: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042fc9b: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433d8a: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000433dea: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043422a: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000043424a: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448522: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448565: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a285: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2c8: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000453d0a: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004582ec: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000045830c: test eax, eax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042ee89: test eax, eax; setg al; lea rsp, [rsp + 8]; ret; 
0x0000000000453ffe: test ebp, ebp; setge al; pop r13; pop r12; pop rbx; ret; 
0x00000000004532a0: test ebx, ebx; jne 0x53290; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004037ff: test ecx, ecx; je 0x3816; test r8, r8; jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x000000000040947f: test ecx, ecx; jg 0x9438; movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x0000000000403a77: test ecx, ecx; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x0000000000456db2: test ecx, ecx; jl 0x56dbe; cmp ecx, 0x400; jl 0x56dc4; mov eax, 0xffffffff; ret; 
0x0000000000403a84: test ecx, ecx; jle 0x3a8e; mov eax, 1; ret; 
0x000000000040732a: test ecx, ecx; jle 0x7336; mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x0000000000436b17: test ecx, esi; add eax, dword ptr [rax]; call 0x36a50; mov rsp, rbp; pop rbp; ret; 
0x0000000000411571: test edi, edi; je 0x1157a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000411ac1: test edi, edi; je 0x11ace; mov rax, qword ptr [rdi - 8]; add rax, 1; ret; 
0x0000000000411ae1: test edi, edi; je 0x11aea; mov rax, qword ptr [rdi - 8]; ret; 
0x0000000000412d30: test edi, edi; je 0x12d39; cmp byte ptr [rdi], 0x15; je 0x12d18; movsx eax, ax; ret; 
0x0000000000413009: test edi, edi; je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000413729: test edi, edi; je 0x1373b; mov rdi, rax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004137b2: test edi, edi; je 0x137bd; cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x000000000042e7b1: test edi, edi; je 0x2e7b9; mov rdi, qword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x0000000000403354: test edi, edi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x0000000000403364: test edi, edi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x000000000043b864: test edi, edi; je 0x3b86c; mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b894: test edi, edi; je 0x3b89c; mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x00000000004480e1: test edi, edi; je 0x480ec; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044bef1: test edi, edi; je 0x4befc; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044c0e4: test edi, edi; je 0x4c0ec; mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x0000000000452c87: test edi, edi; je 0x52c92; mov edi, eax; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000456af9: test edi, edi; je 0x56b01; mov rsi, qword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000040d891: test edi, edi; je 0xd89a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000433b91: test edi, edi; jge 0x33b9b; mov eax, 0xffffffff; ret; 
0x0000000000456cf0: test edi, edi; jl 0x56cfc; cmp edi, 0x400; jl 0x56d02; mov eax, 0xffffffff; ret; 
0x0000000000456d30: test edi, edi; jl 0x56d3c; cmp edi, 0x400; jl 0x56d42; mov eax, 0xffffffff; ret; 
0x0000000000433b9c: test edi, edi; jle 0x33ba6; mov eax, 1; ret; 
0x0000000000433ff8: test edi, edi; jne 0x34009; test rsi, rsi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434068: test edi, edi; jne 0x3407d; test rsi, rsi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340fd: test edi, edi; jne 0x3410e; test rsi, rsi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x000000000043415d: test edi, edi; jne 0x3416e; test rsi, rsi; je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x00000000004479b8: test edi, edi; jne 0x479c4; xor eax, eax; ret; 
0x000000000042e7ba: test edi, edi; sete al; ret; 
0x0000000000401077: test edx, edx; je 0x107d; call rdx; 
0x0000000000401077: test edx, edx; je 0x107d; call rdx; mov eax, 0xe7; mov edi, dword ptr [rbp - 4]; syscall; 
0x00000000004114a7: test edx, edx; je 0x114bb; lea rax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415318: test edx, edx; je 0x15329; lea rax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c0c: test edx, edx; je 0x17c20; lea rax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c36: test edx, edx; je 0x17c47; lea rax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fe0: test edx, edx; je 0x17ff1; lea rax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418010: test edx, edx; je 0x18024; lea rax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041803f: test edx, edx; je 0x18050; lea rax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d86: test edx, edx; je 0x18d9a; lea rax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db7: test edx, edx; je 0x18dcb; lea rax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e52: test edx, edx; je 0x18e66; lea rax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e86: test edx, edx; je 0x18e9a; lea rax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f59: test edx, edx; je 0x18f6d; lea rax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe8: test edx, edx; je 0x1affc; lea rax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b8: test edx, edx; je 0x1b7cc; lea rax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c187: test edx, edx; je 0x1c198; lea rax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5cb: test edx, edx; je 0x1c5dc; lea rax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca50: test edx, edx; je 0x1ca61; lea rax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbef: test edx, edx; je 0x1cc00; lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc37: test edx, edx; je 0x1cc48; lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc9f: test edx, edx; je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd60: test edx, edx; je 0x1cd71; lea rax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec4: test edx, edx; je 0x1ced5; lea rax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfab: test edx, edx; je 0x1cfbc; lea rax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d240: test edx, edx; je 0x1d251; lea rax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d390: test edx, edx; je 0x1d3a1; lea rax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d496: test edx, edx; je 0x1d4a7; lea rax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d680: test edx, edx; je 0x1d691; lea rax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d93f: test edx, edx; je 0x1d950; lea rax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041daff: test edx, edx; je 0x1db10; lea rax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db6c: test edx, edx; je 0x1db7d; lea rax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc57: test edx, edx; je 0x1dc68; lea rax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd6b: test edx, edx; je 0x1dd7c; lea rax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf7: test edx, edx; je 0x1de08; lea rax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de97: test edx, edx; je 0x1dea8; lea rax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df37: test edx, edx; je 0x1df48; lea rax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff6: test edx, edx; je 0x1e007; lea rax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e089: test edx, edx; je 0x1e09a; lea rax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e102: test edx, edx; je 0x1e113; lea rax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2af: test edx, edx; je 0x1e2c0; lea rax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e453: test edx, edx; je 0x1e464; lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e74e: test edx, edx; je 0x1e75f; lea rax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e81e: test edx, edx; je 0x1e82f; lea rax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e914: test edx, edx; je 0x1e925; lea rax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e961: test edx, edx; je 0x1e972; lea rax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edb1: test edx, edx; je 0x1edc2; lea rax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edfd: test edx, edx; je 0x1ee0e; lea rax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdeb: test edx, edx; je 0x1fdfc; lea rax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202e0: test edx, edx; je 0x202f1; lea rax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204d9: test edx, edx; je 0x204ea; lea rax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fc9: test edx, edx; je 0x20fda; lea rax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212da: test edx, edx; je 0x212eb; lea rax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421424: test edx, edx; je 0x21435; lea rax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042152a: test edx, edx; je 0x2153b; lea rax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421675: test edx, edx; je 0x21686; lea rax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421abf: test edx, edx; je 0x21ad0; lea rax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b80: test edx, edx; je 0x21b91; lea rax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce4: test edx, edx; je 0x21cf5; lea rax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f7: test edx, edx; je 0x22508; lea rax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422568: test edx, edx; je 0x22579; lea rax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422603: test edx, edx; je 0x22614; lea rax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042275f: test edx, edx; je 0x22770; lea rax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422896: test edx, edx; je 0x228a7; lea rax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042336c: test edx, edx; je 0x2337d; lea rax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042451f: test edx, edx; je 0x24530; lea rax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042714a: test edx, edx; je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c4: test edx, edx; je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427327: test edx, edx; je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427354: test edx, edx; je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f6: test edx, edx; je 0x28407; lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428421: test edx, edx; je 0x28432; lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428458: test edx, edx; je 0x28469; lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c33: test edx, edx; je 0x29c47; lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc3: test edx, edx; je 0x29cd7; lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d53: test edx, edx; je 0x29d67; lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b6: test edx, edx; je 0x2a5c7; lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c033: test edx, edx; je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c3: test edx, edx; je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c153: test edx, edx; je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040389e: test edx, edx; je 0x38b5; test r8, r8; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x00000000004500ca: test edx, edx; je 0x500db; lea rax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a5: test edx, edx; je 0x50b9; lea rax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452619: test edx, edx; je 0x5262a; lea rax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452645: test edx, edx; je 0x52656; lea rax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000456f01: test edx, edx; je 0x56f08; add edx, 1; mov eax, edx; lea rsp, [rsp + 0x48]; ret; 
0x000000000045aba7: test edx, edx; je 0x5abbb; lea rax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abfd: test edx, edx; je 0x5ac11; lea rax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf5: test edx, edx; je 0x5cd09; lea rax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd40: test edx, edx; je 0x5cd54; lea rax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004238d6: test edx, edx; jne 0x238e1; lea rdx, [rip + 0x6059f]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000444168: test edx, edx; jne 0x4416f; mov al, 1; ret; 
0x0000000000447d28: test edx, edx; jne 0x47d2f; xor eax, eax; ret; 
0x000000000044badf: test edx, edx; jne 0x4bac8; and eax, 0xffff; and edx, 0xffff; sub rax, rdx; ret; 
0x000000000044bb01: test edx, edx; jne 0x4bb08; xor eax, eax; ret; 
0x000000000042ca39: test esi, edi; dec dword ptr [rax + 0x648d48d8]; and al, 0x78; pop r12; pop rbx; ret; 
0x000000000041302f: test esi, esi; je 0x1303d; mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000433ffd: test esi, esi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x000000000043406d: test esi, esi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434102: test esi, esi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434162: test esi, esi; je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x000000000044b9a9: test esi, esi; je 0x4b9b1; mov rdx, qword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x000000000044fcb7: test esi, esi; je 0x4fcc4; mov rdi, r15; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x0000000000404221: test esi, esi; jg 0x4228; xor eax, eax; ret; 
0x0000000000423832: test esi, esi; jne 0x2383d; lea rsi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423886: test esi, esi; jne 0x23891; lea rsi, [rip + 0x605ef]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x000000000042ee15: test esi, esi; jne 0x2ee20; lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x000000000040314f: test esi, esi; jne 0x315e; cmp byte ptr [r9], 0x3d; jne 0x315e; lea rax, [r9 + 1]; ret; 
0x000000000043400a: test esi, esi; jne 0x3402c; mov eax, 1; ret; 
0x000000000043407e: test esi, esi; jne 0x340b5; mov eax, 1; ret; 
0x000000000043410f: test esi, esi; jne 0x34119; mov eax, 1; ret; 
0x000000000043416f: test esi, esi; jne 0x34179; mov eax, 1; ret; 
0x0000000000448046: test esi, esi; jne 0x48051; lea rsi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000450b64: test esp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000413705: test esp, esp; je 0x13712; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000041479d: test esp, esp; je 0x147aa; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9ee: test esp, esp; je 0x4f9fb; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000413f14: test esp, esp; jne 0x13ee0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f21e: test esp, esp; jne 0xf229; lea rdi, [rip + 0x74c57]; mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x0000000000413704: test r12, r12; je 0x13712; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000041479c: test r12, r12; je 0x147aa; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x000000000044f9ed: test r12, r12; je 0x4f9fb; mov rdi, rbx; mov rax, qword ptr [rbx]; call qword ptr [rax + 0x70]; 
0x0000000000413f13: test r12, r12; jne 0x13ee0; pop r13; pop r12; pop rbx; ret; 
0x000000000040f21d: test r12, r12; jne 0xf229; lea rdi, [rip + 0x74c57]; mov rdx, rsp; lea rax, [rip + 0x74b2d]; call qword ptr [rax + 8]; 
0x0000000000453ffd: test r13d, r13d; setge al; pop r13; pop r12; pop rbx; ret; 
0x000000000044fcb6: test r14, r14; je 0x4fcc4; mov rdi, r15; mov rax, qword ptr [r15]; call qword ptr [rax + 0x70]; 
0x000000000040428d: test r8, r8; je 0x429e; cmp rsi, rax; jg 0x429a; xor eax, eax; ret; 
0x0000000000403803: test r8, r8; jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x00000000004038a2: test r8, r8; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x00000000004037fe: test r9, r9; je 0x3816; test r8, r8; jge 0x3810; mov rax, 0xffffffffffffffff; ret; 
0x000000000040947e: test r9d, r9d; jg 0x9438; movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x000000000040947d: test r9w, r9w; jg 0x9438; movsx eax, r8w; lea rsp, [rsp + 8]; ret; 
0x000000000041146e: test rax, rax; je 0x11483; lea rdx, [rip + 0x72506]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004114d5: test rax, rax; je 0x114ea; lea rdx, [rip + 0x7249f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041150d: test rax, rax; je 0x11522; lea rdx, [rip + 0x72467]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041480a: test rax, rax; je 0x14816; mov dword ptr [rax + 8], 1; lea rsp, [rsp + 8]; ret; 
0x0000000000414a2f: test rax, rax; je 0x14a3e; mov edi, dword ptr [rip + 0x6f516]; call rax; 
0x0000000000414a5b: test rax, rax; je 0x14a6a; mov edi, dword ptr [rip + 0x6f4ea]; call rax; 
0x0000000000414aaf: test rax, rax; je 0x14abe; mov edi, dword ptr [rip + 0x6f496]; call rax; 
0x0000000000414b07: test rax, rax; je 0x14b16; mov edi, dword ptr [rip + 0x6f42e]; call rax; 
0x0000000000414b6c: test rax, rax; je 0x14b7e; mov edi, dword ptr [rip + 0x6f3d9]; call rax; 
0x0000000000414c6f: test rax, rax; je 0x14c7e; mov edi, dword ptr [rip + 0x6f2d6]; call rax; 
0x0000000000414d08: test rax, rax; je 0x14d17; mov edi, dword ptr [rip + 0x6f24d]; call rax; 
0x0000000000414d37: test rax, rax; je 0x14d46; mov edi, dword ptr [rip + 0x6f21e]; call rax; 
0x0000000000414d6b: test rax, rax; je 0x14d7a; mov edi, dword ptr [rip + 0x6f1ea]; call rax; 
0x0000000000414d91: test rax, rax; je 0x14da0; mov edi, dword ptr [rip + 0x6f1a4]; call rax; 
0x0000000000414dbe: test rax, rax; je 0x14dcd; mov edi, dword ptr [rip + 0x6f187]; call rax; 
0x0000000000414e2b: test rax, rax; je 0x14e3d; mov edi, dword ptr [rip + 0x6f10a]; call rax; 
0x0000000000414e82: test rax, rax; je 0x14e91; mov edi, dword ptr [rip + 0x6f0c3]; call rax; 
0x0000000000414ec4: test rax, rax; je 0x14ed3; mov edi, dword ptr [rip + 0x6f081]; call rax; 
0x0000000000414f2f: test rax, rax; je 0x14f3e; mov edi, dword ptr [rip + 0x6f016]; call rax; 
0x0000000000414fbb: test rax, rax; je 0x14fca; mov edi, dword ptr [rip + 0x6ef7a]; call rax; 
0x0000000000414fe8: test rax, rax; je 0x14ff7; mov edi, dword ptr [rip + 0x6ef5d]; call rax; 
0x0000000000415035: test rax, rax; je 0x15044; mov edi, dword ptr [rip + 0x6ef10]; call rax; 
0x000000000041509f: test rax, rax; je 0x150ae; mov edi, dword ptr [rip + 0x6eea6]; call rax; 
0x00000000004150c6: test rax, rax; je 0x150d5; mov edi, dword ptr [rip + 0x6ee6f]; call rax; 
0x0000000000415142: test rax, rax; je 0x15151; mov edi, dword ptr [rip + 0x6ee03]; call rax; 
0x00000000004152a7: test rax, rax; je 0x152b9; lea rdx, [rip + 0x6ea4d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000415345: test rax, rax; je 0x15357; lea rdx, [rip + 0x6e9af]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417d67: test rax, rax; je 0x17d79; lea rdx, [rip + 0x6bf8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417dbf: test rax, rax; je 0x17dd4; lea rdx, [rip + 0x6bf35]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417e0f: test rax, rax; je 0x17e21; lea rdx, [rip + 0x6ad55]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000417eb6: test rax, rax; je 0x17ec8; lea rdx, [rip + 0x6be4e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041806e: test rax, rax; je 0x18083; lea rdx, [rip + 0x6ab06]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041809d: test rax, rax; je 0x180af; lea rdx, [rip + 0x6b557]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180cd: test rax, rax; je 0x180e2; lea rdx, [rip + 0x6b527]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004180fc: test rax, rax; je 0x1810e; lea rdx, [rip + 0x6b878]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041812c: test rax, rax; je 0x18141; lea rdx, [rip + 0x6b848]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041817a: test rax, rax; je 0x1818c; lea rdx, [rip + 0x6bb7a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004181dc: test rax, rax; je 0x181f1; lea rdx, [rip + 0x6b798]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418208: test rax, rax; je 0x1821a; lea rdx, [rip + 0x6b3ec]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004184f6: test rax, rax; je 0x18505; mov edi, dword ptr [rip + 0x6ba3f]; call rax; 
0x00000000004187ba: test rax, rax; je 0x187c4; call 0x150f0; mov rsp, rbp; pop rbp; ret; 
0x00000000004188b8: test rax, rax; je 0x188c2; call 0x150f0; lea rsp, [rsp + 0x980]; pop rbx; ret; 
0x0000000000418d4d: test rax, rax; je 0x18d62; lea rdx, [rip + 0x6ac27]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418dea: test rax, rax; je 0x18dff; lea rdx, [rip + 0x6ab8a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418e19: test rax, rax; je 0x18e2e; lea rdx, [rip + 0x6ab5b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ebd: test rax, rax; je 0x18ed2; lea rdx, [rip + 0x6aab7]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418ef1: test rax, rax; je 0x18f06; lea rdx, [rip + 0x6aa83]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f29: test rax, rax; je 0x18f3e; lea rdx, [rip + 0x6aa4b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000418f90: test rax, rax; je 0x18fa5; lea rdx, [rip + 0x6a9e4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041924e: test rax, rax; je 0x1925d; mov edi, dword ptr [rip + 0x6b977]; call rax; 
0x000000000041929e: test rax, rax; je 0x192ad; mov edi, dword ptr [rip + 0x6b927]; call rax; 
0x0000000000419d06: test rax, rax; je 0x19d15; mov edi, dword ptr [rip + 0x6aebf]; call rax; 
0x0000000000419e3f: test rax, rax; je 0x19e51; mov edi, dword ptr [rip + 0x6ad86]; call rax; 
0x000000000041a1bd: test rax, rax; je 0x1a1cf; mov edi, dword ptr [rip + 0x6aa08]; call rax; 
0x000000000041a464: test rax, rax; je 0x1a473; mov edi, dword ptr [rip + 0x6a761]; call rax; 
0x000000000041a627: test rax, rax; je 0x1a639; mov edi, dword ptr [rip + 0x6a59e]; call rax; 
0x000000000041a684: test rax, rax; je 0x1a696; mov edi, dword ptr [rip + 0x6a541]; call rax; 
0x000000000041a70f: test rax, rax; je 0x1a721; mov edi, dword ptr [rip + 0x6a4b6]; call rax; 
0x000000000041a77d: test rax, rax; je 0x1a78f; mov edi, dword ptr [rip + 0x6a448]; call rax; 
0x000000000041a8e0: test rax, rax; je 0x1a8f2; lea rdx, [rip + 0x69414]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a917: test rax, rax; je 0x1a929; lea rdx, [rip + 0x693fd]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a949: test rax, rax; je 0x1a95b; lea rdx, [rip + 0x693cb]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a973: test rax, rax; je 0x1a985; lea rdx, [rip + 0x69391]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041a9a6: test rax, rax; je 0x1a9b8; lea rdx, [rip + 0x681be]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041aa17: test rax, rax; je 0x1aa29; lea rdx, [rip + 0x6814d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041afaf: test rax, rax; je 0x1afc4; lea rdx, [rip + 0x689c5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b016: test rax, rax; je 0x1b02b; lea rdx, [rip + 0x6895e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b04e: test rax, rax; je 0x1b063; lea rdx, [rip + 0x68926]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b3af: test rax, rax; je 0x1b3c1; lea rdx, [rip + 0x677b5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b570: test rax, rax; je 0x1b57a; call 0x14fb0; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x78]; ret; 
0x000000000041b77f: test rax, rax; je 0x1b794; lea rdx, [rip + 0x681f5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b7e6: test rax, rax; je 0x1b7fb; lea rdx, [rip + 0x6818e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041b81e: test rax, rax; je 0x1b833; lea rdx, [rip + 0x68156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc2c: test rax, rax; je 0x1bc3e; lea rdx, [rip + 0x680c8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bc6d: test rax, rax; je 0x1bc7f; lea rdx, [rip + 0x68087]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bcbf: test rax, rax; je 0x1bcd1; lea rdx, [rip + 0x68035]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd0f: test rax, rax; je 0x1bd21; lea rdx, [rip + 0x67fe5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bd9b: test rax, rax; je 0x1bdad; lea rdx, [rip + 0x67f59]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be2b: test rax, rax; je 0x1be3d; lea rdx, [rip + 0x67ec9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041be86: test rax, rax; je 0x1be98; lea rdx, [rip + 0x67e6e]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bed2: test rax, rax; je 0x1bee4; lea rdx, [rip + 0x67e22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf26: test rax, rax; je 0x1bf38; lea rdx, [rip + 0x67dce]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041bf83: test rax, rax; je 0x1bf95; lea rdx, [rip + 0x67d71]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c00f: test rax, rax; je 0x1c021; lea rdx, [rip + 0x67ce5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000401bf9: test rax, rax; je 0x1c0c; mov edi, dword ptr [0x482f00]; call rax; 
0x000000000041c2fb: test rax, rax; je 0x1c305; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000041c54c: test rax, rax; je 0x1c55e; lea rdx, [rip + 0x677a8]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c640: test rax, rax; je 0x1c652; lea rdx, [rip + 0x676b4]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c95e: test rax, rax; je 0x1c970; lea rdx, [rip + 0x67396]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041c9e4: test rax, rax; je 0x1c9f6; lea rdx, [rip + 0x67310]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cabb: test rax, rax; je 0x1cacd; lea rdx, [rip + 0x67239]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cafe: test rax, rax; je 0x1cb10; lea rdx, [rip + 0x671f6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb4e: test rax, rax; je 0x1cb60; lea rdx, [rip + 0x671a6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cb9e: test rax, rax; je 0x1cbb0; lea rdx, [rip + 0x67156]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cc64: test rax, rax; je 0x1cc76; lea rdx, [rip + 0x67090]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ccd5: test rax, rax; je 0x1cce7; lea rdx, [rip + 0x6701f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cd9a: test rax, rax; je 0x1cdac; lea rdx, [rip + 0x66f5a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cdf3: test rax, rax; je 0x1ce05; lea rdx, [rip + 0x66f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041cefe: test rax, rax; je 0x1cf10; lea rdx, [rip + 0x66df6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d1c5: test rax, rax; je 0x1d1d7; lea rdx, [rip + 0x66b2f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d211: test rax, rax; je 0x1d223; lea rdx, [rip + 0x66ae3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d2cf: test rax, rax; je 0x1d2e4; lea rdx, [rip + 0x65fa5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d315: test rax, rax; je 0x1d327; lea rdx, [rip + 0x669df]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d361: test rax, rax; je 0x1d373; lea rdx, [rip + 0x66993]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d44f: test rax, rax; je 0x1d464; lea rdx, [rip + 0x65e25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d4e1: test rax, rax; je 0x1d4f3; lea rdx, [rip + 0x66813]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d50f: test rax, rax; je 0x1d521; lea rdx, [rip + 0x667e5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d5bf: test rax, rax; je 0x1d5d4; lea rdx, [rip + 0x65cb5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d605: test rax, rax; je 0x1d617; lea rdx, [rip + 0x666ef]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d651: test rax, rax; je 0x1d663; lea rdx, [rip + 0x666a3]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d74f: test rax, rax; je 0x1d764; lea rdx, [rip + 0x65b25]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d81f: test rax, rax; je 0x1d831; lea rdx, [rip + 0x65a55]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d85f: test rax, rax; je 0x1d871; lea rdx, [rip + 0x65695]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041d972: test rax, rax; je 0x1d984; lea rdx, [rip + 0x66382]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041db99: test rax, rax; je 0x1dbab; lea rdx, [rip + 0x6615b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dbd7: test rax, rax; je 0x1dbe9; lea rdx, [rip + 0x6611d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dc84: test rax, rax; je 0x1dc96; lea rdx, [rip + 0x66070]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dcc7: test rax, rax; je 0x1dcd9; lea rdx, [rip + 0x6602d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dd98: test rax, rax; je 0x1ddaa; lea rdx, [rip + 0x65f5c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041dec4: test rax, rax; je 0x1ded6; lea rdx, [rip + 0x65e30]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e023: test rax, rax; je 0x1e035; lea rdx, [rip + 0x65cd1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e12f: test rax, rax; je 0x1e141; lea rdx, [rip + 0x65bc5]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e1b3: test rax, rax; je 0x1e1c5; lea rdx, [rip + 0x65b41]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e2dc: test rax, rax; je 0x1e2ee; lea rdx, [rip + 0x65a18]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e38c: test rax, rax; je 0x1e39e; lea rdx, [rip + 0x65968]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e480: test rax, rax; je 0x1e492; lea rdx, [rip + 0x65874]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e4ef: test rax, rax; je 0x1e501; lea rdx, [rip + 0x65805]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e56f: test rax, rax; je 0x1e581; lea rdx, [rip + 0x65785]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e5ef: test rax, rax; je 0x1e601; lea rdx, [rip + 0x65705]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e68f: test rax, rax; je 0x1e6a1; lea rdx, [rip + 0x65665]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e8e2: test rax, rax; je 0x1e8f4; lea rdx, [rip + 0x65412]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041e98a: test rax, rax; je 0x1e99c; lea rdx, [rip + 0x6536a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea03: test rax, rax; je 0x1ea15; lea rdx, [rip + 0x652f1]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ea77: test rax, rax; je 0x1ea89; lea rdx, [rip + 0x6527d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eae7: test rax, rax; je 0x1eaf9; lea rdx, [rip + 0x6520d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041eb67: test rax, rax; je 0x1eb79; lea rdx, [rip + 0x6518d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebb3: test rax, rax; je 0x1ebc5; lea rdx, [rip + 0x65141]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ebe1: test rax, rax; je 0x1ebf3; lea rdx, [rip + 0x65113]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ec67: test rax, rax; je 0x1ec79; lea rdx, [rip + 0x6508d]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ecb3: test rax, rax; je 0x1ecc5; lea rdx, [rip + 0x65041]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ece4: test rax, rax; je 0x1ecf6; lea rdx, [rip + 0x65010]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041ee2d: test rax, rax; je 0x1ee3f; lea rdx, [rip + 0x64ec7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f078: test rax, rax; je 0x1f08a; lea rdx, [rip + 0x64c7c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0cd: test rax, rax; je 0x1f0df; lea rdx, [rip + 0x64c27]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f0fe: test rax, rax; je 0x1f110; lea rdx, [rip + 0x64bf6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000041f13f: test rax, rax; je 0x1f151; lea rdx, [rip + 0x64bb5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420029: test rax, rax; je 0x2003b; lea rdx, [rip + 0x63ccb]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004200c3: test rax, rax; je 0x200d5; lea rdx, [rip + 0x63c31]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420193: test rax, rax; je 0x201a5; lea rdx, [rip + 0x63b61]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042022e: test rax, rax; je 0x20240; lea rdx, [rip + 0x63ac6]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042036e: test rax, rax; je 0x20380; lea rdx, [rip + 0x63986]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042041f: test rax, rax; je 0x20431; lea rdx, [rip + 0x638d5]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000420577: test rax, rax; je 0x20589; lea rdx, [rip + 0x6377d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421026: test rax, rax; je 0x21038; lea rdx, [rip + 0x62cce]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421059: test rax, rax; je 0x2106b; lea rdx, [rip + 0x62c9b]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004210b8: test rax, rax; je 0x210ca; lea rdx, [rip + 0x62c3c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421116: test rax, rax; je 0x21128; lea rdx, [rip + 0x62bde]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421149: test rax, rax; je 0x2115b; lea rdx, [rip + 0x62bab]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211ae: test rax, rax; je 0x211c0; lea rdx, [rip + 0x62b46]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004211fe: test rax, rax; je 0x21210; lea rdx, [rip + 0x62af6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421269: test rax, rax; je 0x2127b; lea rdx, [rip + 0x62a8b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421307: test rax, rax; je 0x21319; lea rdx, [rip + 0x629ed]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042145e: test rax, rax; je 0x21470; lea rdx, [rip + 0x62896]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004214b9: test rax, rax; je 0x214cb; lea rdx, [rip + 0x6283b]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421557: test rax, rax; je 0x21569; lea rdx, [rip + 0x6279d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216ad: test rax, rax; je 0x216bf; lea rdx, [rip + 0x62647]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004216f8: test rax, rax; je 0x2170a; lea rdx, [rip + 0x625fc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421753: test rax, rax; je 0x21765; lea rdx, [rip + 0x625a1]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004217a8: test rax, rax; je 0x217ba; lea rdx, [rip + 0x6254c]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042180e: test rax, rax; je 0x21820; lea rdx, [rip + 0x624e6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421855: test rax, rax; je 0x21867; lea rdx, [rip + 0x6249f]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004218be: test rax, rax; je 0x218d0; lea rdx, [rip + 0x62436]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421908: test rax, rax; je 0x2191a; lea rdx, [rip + 0x623ec]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421965: test rax, rax; je 0x21977; lea rdx, [rip + 0x6238f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042199e: test rax, rax; je 0x219b0; lea rdx, [rip + 0x62356]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004219f9: test rax, rax; je 0x21a0b; lea rdx, [rip + 0x622fb]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a2e: test rax, rax; je 0x21a40; lea rdx, [rip + 0x622c6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421a87: test rax, rax; je 0x21a99; lea rdx, [rip + 0x6226d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421af5: test rax, rax; je 0x21b07; lea rdx, [rip + 0x621ff]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421bba: test rax, rax; je 0x21bcc; lea rdx, [rip + 0x6213a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421c13: test rax, rax; je 0x21c25; lea rdx, [rip + 0x620e1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421d1e: test rax, rax; je 0x21d30; lea rdx, [rip + 0x61fd6]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421db7: test rax, rax; je 0x21dc9; lea rdx, [rip + 0x61f3d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004222d8: test rax, rax; je 0x222ea; lea rdx, [rip + 0x61a1c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422358: test rax, rax; je 0x2236a; lea rdx, [rip + 0x6199c]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004223b8: test rax, rax; je 0x223ca; lea rdx, [rip + 0x6193c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422438: test rax, rax; je 0x2244a; lea rdx, [rip + 0x618bc]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422497: test rax, rax; je 0x224a9; lea rdx, [rip + 0x6185d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422524: test rax, rax; je 0x22536; lea rdx, [rip + 0x617d0]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004225d4: test rax, rax; je 0x225e6; lea rdx, [rip + 0x61720]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422630: test rax, rax; je 0x22642; lea rdx, [rip + 0x616c4]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422792: test rax, rax; je 0x227a4; lea rdx, [rip + 0x61562]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042282b: test rax, rax; je 0x22835; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x00000000004228e9: test rax, rax; je 0x228f3; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422962: test rax, rax; je 0x22974; lea rdx, [rip + 0x61392]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422990: test rax, rax; je 0x229a2; lea rdx, [rip + 0x61364]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004229c4: test rax, rax; je 0x229ce; call 0x14fb0; lea rsp, [rsp + 0x68]; ret; 
0x0000000000422e67: test rax, rax; je 0x22e79; lea rdx, [rip + 0x60e8d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422eb6: test rax, rax; je 0x22ec0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422f17: test rax, rax; je 0x22f29; lea rdx, [rip + 0x60ddd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000422f66: test rax, rax; je 0x22f70; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000422fc7: test rax, rax; je 0x22fd9; lea rdx, [rip + 0x60d2d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423016: test rax, rax; je 0x23020; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423127: test rax, rax; je 0x23139; lea rdx, [rip + 0x60bcd]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423176: test rax, rax; je 0x23180; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004231d7: test rax, rax; je 0x231e9; lea rdx, [rip + 0x60b1d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423226: test rax, rax; je 0x23230; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423287: test rax, rax; je 0x23299; lea rdx, [rip + 0x60a6d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004232d6: test rax, rax; je 0x232e0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423423: test rax, rax; je 0x2342d; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004234a3: test rax, rax; je 0x234ad; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423523: test rax, rax; je 0x2352d; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423607: test rax, rax; je 0x23619; lea rdx, [rip + 0x606ed]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423656: test rax, rax; je 0x23660; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004236b7: test rax, rax; je 0x236c9; lea rdx, [rip + 0x6063d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000423706: test rax, rax; je 0x23710; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000423767: test rax, rax; je 0x23779; lea rdx, [rip + 0x6058d]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004237b6: test rax, rax; je 0x237c0; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x000000000042422f: test rax, rax; je 0x24244; lea rdx, [rip + 0x5f045]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424265: test rax, rax; je 0x2427a; lea rdx, [rip + 0x5ec8f]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042429e: test rax, rax; je 0x242b3; lea rdx, [rip + 0x5e8d6]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004242d7: test rax, rax; je 0x242ec; lea rdx, [rip + 0x5f31d]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000424310: test rax, rax; je 0x24325; lea rdx, [rip + 0x5f664]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004244f4: test rax, rax; je 0x24506; lea rdx, [rip + 0x5f820]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042455a: test rax, rax; je 0x2456c; lea rdx, [rip + 0x5f7aa]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004245a2: test rax, rax; je 0x245b4; lea rdx, [rip + 0x5f752]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426c6c: test rax, rax; je 0x26c7e; lea rdx, [rip + 0x5c288]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000426cb8: test rax, rax; je 0x26cca; lea rdx, [rip + 0x5c23c]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427233: test rax, rax; je 0x27248; lea rdx, [rip + 0x5bcc1]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427262: test rax, rax; je 0x27277; lea rdx, [rip + 0x5bc92]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427296: test rax, rax; je 0x272a8; lea rdx, [rip + 0x5bc5e]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004272f2: test rax, rax; je 0x27307; lea rdx, [rip + 0x5bf82]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042738b: test rax, rax; je 0x2739d; lea rdx, [rip + 0x5bee9]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004273cf: test rax, rax; je 0x273e1; lea rdx, [rip + 0x5bb25]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000427403: test rax, rax; je 0x27415; lea rdx, [rip + 0x5be71]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429c7a: test rax, rax; je 0x29c8c; lea rdx, [rip + 0x5a07a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d0a: test rax, rax; je 0x29d1c; lea rdx, [rip + 0x59fea]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000429d9a: test rax, rax; je 0x29dac; lea rdx, [rip + 0x59f5a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004029ff: test rax, rax; je 0x2a0e; mov edi, dword ptr [rip + 0x81526]; call rax; 
0x0000000000402a2d: test rax, rax; je 0x2a3c; mov edi, dword ptr [rip + 0x814f8]; call rax; 
0x000000000042a5e0: test rax, rax; je 0x2a5f2; lea rdx, [rip + 0x59714]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042a62b: test rax, rax; je 0x2a63d; lea rdx, [rip + 0x596c9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c07a: test rax, rax; je 0x2c08c; lea rdx, [rip + 0x57c7a]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c10a: test rax, rax; je 0x2c11c; lea rdx, [rip + 0x57bea]; mov edi, dword ptr [rdx]; call rax; 
0x000000000042c19a: test rax, rax; je 0x2c1ac; lea rdx, [rip + 0x57b5a]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000402c40: test rax, rax; je 0x2c4f; mov edi, dword ptr [rip + 0x812e5]; call rax; 
0x0000000000402cf8: test rax, rax; je 0x2d07; mov edi, dword ptr [rip + 0x8122d]; call rax; 
0x000000000042d8e8: test rax, rax; je 0x2d8f2; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042d998: test rax, rax; je 0x2d9a2; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042dc80: test rax, rax; je 0x2dc8a; call 0x14fb0; mov rsp, rbp; pop rbp; ret; 
0x000000000042e353: test rax, rax; je 0x2e35c; mov rax, qword ptr [rax - 8]; ret; 
0x00000000004032a0: test rax, rax; je 0x32b5; lea rdx, [rip + 0x80a54]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004032ea: test rax, rax; je 0x32ff; lea rdx, [rip + 0x80a0a]; mov edi, dword ptr [rdx]; call rax; 
0x00000000004368a0: test rax, rax; je 0x368aa; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000043ced4: test rax, rax; je 0x3cee1; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000440404: test rax, rax; je 0x40411; mov rax, qword ptr [rax - 8]; add rax, 1; ret; 
0x0000000000449612: test rax, rax; je 0x4961c; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x0000000000449921: test rax, rax; je 0x4992b; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044b3b2: test rax, rax; je 0x4b3bc; call 0x14fb0; lea rsp, [rsp + 0x78]; ret; 
0x000000000044b6c1: test rax, rax; je 0x4b6cb; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x000000000044ce07: test rax, rax; je 0x4ce11; call 0x14fb0; lea rsp, [rsp + 0x80]; pop rbx; ret; 
0x00000000004505e4: test rax, rax; je 0x505ee; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450687: test rax, rax; je 0x50691; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450855: test rax, rax; je 0x5085f; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000450bd4: test rax, rax; je 0x50bec; mov rsi, rsp; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004050d6: test rax, rax; je 0x50e8; lea rdx, [rip + 0x7ec4e]; mov edi, dword ptr [rdx]; call rax; 
0x0000000000452af5: test rax, rax; je 0x52b07; lea rdx, [rip + 0x311ff]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045383c: test rax, rax; je 0x53846; call 0x14fb0; mov al, byte ptr [rsp + 8]; lea rsp, [rsp + 0xf8]; ret; 
0x0000000000456697: test rax, rax; je 0x566a1; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x00000000004566e4: test rax, rax; je 0x566f9; lea rdx, [rip + 0x2c810]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a34e: test rax, rax; je 0x5a363; lea rdx, [rip + 0x28f26]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045a3d2: test rax, rax; je 0x5a3e7; lea rdx, [rip + 0x28b22]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045af9d: test rax, rax; je 0x5afb2; lea rdx, [rip + 0x282d7]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045aff3: test rax, rax; je 0x5b008; lea rdx, [rip + 0x27f01]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045b049: test rax, rax; je 0x5b05e; lea rdx, [rip + 0x2892b]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045ccbb: test rax, rax; je 0x5ccd0; lea rdx, [rip + 0x26cb9]; mov edi, dword ptr [rdx]; call rax; 
0x000000000045cd78: test rax, rax; je 0x5cd8d; lea rdx, [rip + 0x26bfc]; mov edi, dword ptr [rdx]; call rax; 
0x000000000040e664: test rax, rax; je 0xe66e; call 0x14fb0; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000433f6d: test rax, rax; jne 0x33f78; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000433fde: test rax, rax; jne 0x33fe9; sub rdx, rcx; mov rax, rdx; ret; 
0x0000000000434139: test rax, rax; jne 0x34143; cmp rdx, r8; jne 0x34120; ret; 
0x00000000004341ab: test rax, rax; jne 0x341b5; cmp rdx, r10; jne 0x34180; ret; 
0x0000000000413bce: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x00000000004279da: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042e78a: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042f1ed: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042fc9a: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448521: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x0000000000448564: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a284: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000044a2c7: test rax, rax; sete al; lea rsp, [rsp + 8]; ret; 
0x000000000042ee88: test rax, rax; setg al; lea rsp, [rsp + 8]; ret; 
0x000000000045329f: test rbx, rbx; jne 0x53290; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000403a76: test rcx, rcx; jge 0x3a83; mov rax, 0xffffffffffffffff; ret; 
0x0000000000403a83: test rcx, rcx; jle 0x3a8e; mov eax, 1; ret; 
0x0000000000407329: test rcx, rcx; jle 0x7336; mov byte ptr [rax], 1; mov byte ptr [rax + 1], sil; ret; 
0x0000000000411570: test rdi, rdi; je 0x1157a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000411ac0: test rdi, rdi; je 0x11ace; mov rax, qword ptr [rdi - 8]; add rax, 1; ret; 
0x0000000000411ae0: test rdi, rdi; je 0x11aea; mov rax, qword ptr [rdi - 8]; ret; 
0x0000000000412d2f: test rdi, rdi; je 0x12d39; cmp byte ptr [rdi], 0x15; je 0x12d18; movsx eax, ax; ret; 
0x0000000000413008: test rdi, rdi; je 0x13016; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax + 8]; 
0x0000000000413728: test rdi, rdi; je 0x1373b; mov rdi, rax; mov esi, 1; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004137b1: test rdi, rdi; je 0x137bd; cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x000000000042e7b0: test rdi, rdi; je 0x2e7b9; mov rdi, qword ptr [rdi - 8]; test rdi, rdi; sete al; ret; 
0x0000000000403353: test rdi, rdi; je 0x335c; mov rax, qword ptr [rdi + 8]; ret; 
0x0000000000403363: test rdi, rdi; je 0x336b; mov rax, qword ptr [rdi]; ret; 
0x000000000043b863: test rdi, rdi; je 0x3b86c; mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x000000000043b893: test rdi, rdi; je 0x3b89c; mov rax, qword ptr [rax - 8]; cmp rsi, rax; cmovl rax, rsi; ret; 
0x00000000004480e0: test rdi, rdi; je 0x480ec; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044bef0: test rdi, rdi; je 0x4befc; mov eax, dword ptr [rdi - 4]; sub eax, 4; ret; 
0x000000000044c0e3: test rdi, rdi; je 0x4c0ec; mov rax, qword ptr [rax - 8]; shl rax, 1; ret; 
0x0000000000456af8: test rdi, rdi; je 0x56b01; mov rsi, qword ptr [rsi - 8]; call 0x56a40; lea rsp, [rsp + 8]; ret; 
0x000000000040d890: test rdi, rdi; je 0xd89a; mov rax, qword ptr [rdi - 0x10]; ret; 
0x0000000000433b90: test rdi, rdi; jge 0x33b9b; mov eax, 0xffffffff; ret; 
0x0000000000433b9b: test rdi, rdi; jle 0x33ba6; mov eax, 1; ret; 
0x0000000000433ff7: test rdi, rdi; jne 0x34009; test rsi, rsi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434067: test rdi, rdi; jne 0x3407d; test rsi, rsi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340fc: test rdi, rdi; jne 0x3410e; test rsi, rsi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x00000000004340fb: test rdi, rdi; jne 0x3410e; test rsi, rsi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x000000000043415c: test rdi, rdi; jne 0x3416e; test rsi, rsi; je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x00000000004479b7: test rdi, rdi; jne 0x479c4; xor eax, eax; ret; 
0x000000000042e7b9: test rdi, rdi; sete al; ret; 
0x0000000000401076: test rdx, rdx; je 0x107d; call rdx; 
0x0000000000401076: test rdx, rdx; je 0x107d; call rdx; mov eax, 0xe7; mov edi, dword ptr [rbp - 4]; syscall; 
0x00000000004114a6: test rdx, rdx; je 0x114bb; lea rax, [rip + 0x724ce]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000415317: test rdx, rdx; je 0x15329; lea rax, [rip + 0x6e9dd]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c0b: test rdx, rdx; je 0x17c20; lea rax, [rip + 0x6c0f9]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417c35: test rdx, rdx; je 0x17c47; lea rax, [rip + 0x6c0df]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000417fdf: test rdx, rdx; je 0x17ff1; lea rax, [rip + 0x6af15]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041800f: test rdx, rdx; je 0x18024; lea rax, [rip + 0x6aee5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041803e: test rdx, rdx; je 0x18050; lea rax, [rip + 0x6ab36]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418d85: test rdx, rdx; je 0x18d9a; lea rax, [rip + 0x6abef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418db6: test rdx, rdx; je 0x18dcb; lea rax, [rip + 0x6abbe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e51: test rdx, rdx; je 0x18e66; lea rax, [rip + 0x6ab23]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418e85: test rdx, rdx; je 0x18e9a; lea rax, [rip + 0x6aaef]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000418f58: test rdx, rdx; je 0x18f6d; lea rax, [rip + 0x6aa1c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041afe7: test rdx, rdx; je 0x1affc; lea rax, [rip + 0x6898d]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041b7b7: test rdx, rdx; je 0x1b7cc; lea rax, [rip + 0x681bd]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c186: test rdx, rdx; je 0x1c198; lea rax, [rip + 0x67b6e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041c5ca: test rdx, rdx; je 0x1c5dc; lea rax, [rip + 0x6772a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ca4f: test rdx, rdx; je 0x1ca61; lea rax, [rip + 0x672a5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cbee: test rdx, rdx; je 0x1cc00; lea rax, [rip + 0x67106]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc36: test rdx, rdx; je 0x1cc48; lea rax, [rip + 0x670be]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cc9e: test rdx, rdx; je 0x1ccb0; lea rax, [rip + 0x67056]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cd5f: test rdx, rdx; je 0x1cd71; lea rax, [rip + 0x66f95]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cec3: test rdx, rdx; je 0x1ced5; lea rax, [rip + 0x66e31]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041cfaa: test rdx, rdx; je 0x1cfbc; lea rax, [rip + 0x66d4a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d23f: test rdx, rdx; je 0x1d251; lea rax, [rip + 0x66ab5]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d38f: test rdx, rdx; je 0x1d3a1; lea rax, [rip + 0x66965]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d495: test rdx, rdx; je 0x1d4a7; lea rax, [rip + 0x6685f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d67f: test rdx, rdx; je 0x1d691; lea rax, [rip + 0x66675]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041d93e: test rdx, rdx; je 0x1d950; lea rax, [rip + 0x663b6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dafe: test rdx, rdx; je 0x1db10; lea rax, [rip + 0x661f6]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041db6b: test rdx, rdx; je 0x1db7d; lea rax, [rip + 0x66189]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dc56: test rdx, rdx; je 0x1dc68; lea rax, [rip + 0x6609e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dd6a: test rdx, rdx; je 0x1dd7c; lea rax, [rip + 0x65f8a]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041ddf6: test rdx, rdx; je 0x1de08; lea rax, [rip + 0x65efe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041de96: test rdx, rdx; je 0x1dea8; lea rax, [rip + 0x65e5e]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041df36: test rdx, rdx; je 0x1df48; lea rax, [rip + 0x65dbe]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041dff5: test rdx, rdx; je 0x1e007; lea rax, [rip + 0x65cff]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e088: test rdx, rdx; je 0x1e09a; lea rax, [rip + 0x65c6c]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e101: test rdx, rdx; je 0x1e113; lea rax, [rip + 0x65bf3]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e2ae: test rdx, rdx; je 0x1e2c0; lea rax, [rip + 0x65a46]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e452: test rdx, rdx; je 0x1e464; lea rax, [rip + 0x658a2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e74d: test rdx, rdx; je 0x1e75f; lea rax, [rip + 0x655a7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e81d: test rdx, rdx; je 0x1e82f; lea rax, [rip + 0x654d7]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e913: test rdx, rdx; je 0x1e925; lea rax, [rip + 0x653e1]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041e960: test rdx, rdx; je 0x1e972; lea rax, [rip + 0x65394]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edb0: test rdx, rdx; je 0x1edc2; lea rax, [rip + 0x64f44]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041edfc: test rdx, rdx; je 0x1ee0e; lea rax, [rip + 0x64ef8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000041fdea: test rdx, rdx; je 0x1fdfc; lea rax, [rip + 0x63f0a]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004202df: test rdx, rdx; je 0x202f1; lea rax, [rip + 0x63a15]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004204d8: test rdx, rdx; je 0x204ea; lea rax, [rip + 0x6381c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000420fc8: test rdx, rdx; je 0x20fda; lea rax, [rip + 0x62d2c]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004212d9: test rdx, rdx; je 0x212eb; lea rax, [rip + 0x62a1b]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421423: test rdx, rdx; je 0x21435; lea rax, [rip + 0x628d1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421529: test rdx, rdx; je 0x2153b; lea rax, [rip + 0x627cb]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421674: test rdx, rdx; je 0x21686; lea rax, [rip + 0x62680]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421abe: test rdx, rdx; je 0x21ad0; lea rax, [rip + 0x62236]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421b7f: test rdx, rdx; je 0x21b91; lea rax, [rip + 0x62175]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000421ce3: test rdx, rdx; je 0x21cf5; lea rax, [rip + 0x62011]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004224f6: test rdx, rdx; je 0x22508; lea rax, [rip + 0x617fe]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422567: test rdx, rdx; je 0x22579; lea rax, [rip + 0x6178d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422602: test rdx, rdx; je 0x22614; lea rax, [rip + 0x616f2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042275e: test rdx, rdx; je 0x22770; lea rax, [rip + 0x61596]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000422895: test rdx, rdx; je 0x228a7; lea rax, [rip + 0x6145f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042336b: test rdx, rdx; je 0x2337d; lea rax, [rip + 0x60989]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042451e: test rdx, rdx; je 0x24530; lea rax, [rip + 0x5f7f6]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427149: test rdx, rdx; je 0x2715b; lea rax, [rip + 0x5bdab]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004272c3: test rdx, rdx; je 0x272d8; lea rax, [rip + 0x5bfb1]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427326: test rdx, rdx; je 0x27338; lea rax, [rip + 0x5bf4e]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000427353: test rdx, rdx; je 0x27365; lea rax, [rip + 0x5bba1]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004283f5: test rdx, rdx; je 0x28407; lea rax, [rip + 0x5b8ff]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428420: test rdx, rdx; je 0x28432; lea rax, [rip + 0x5b8d4]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000428457: test rdx, rdx; je 0x28469; lea rax, [rip + 0x5b89d]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429c32: test rdx, rdx; je 0x29c47; lea rax, [rip + 0x5a0c2]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429cc2: test rdx, rdx; je 0x29cd7; lea rax, [rip + 0x5a032]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000429d52: test rdx, rdx; je 0x29d67; lea rax, [rip + 0x59fa2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042a5b5: test rdx, rdx; je 0x2a5c7; lea rax, [rip + 0x5973f]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c032: test rdx, rdx; je 0x2c047; lea rax, [rip + 0x57cc2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c0c2: test rdx, rdx; je 0x2c0d7; lea rax, [rip + 0x57c32]; mov edi, dword ptr [rax]; call rdx; 
0x000000000042c152: test rdx, rdx; je 0x2c167; lea rax, [rip + 0x57ba2]; mov edi, dword ptr [rax]; call rdx; 
0x000000000040389d: test rdx, rdx; je 0x38b5; test r8, r8; jge 0x38af; mov rax, 0xffffffffffffffff; ret; 
0x00000000004500c9: test rdx, rdx; je 0x500db; lea rax, [rip + 0x32a9b]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004050a4: test rdx, rdx; je 0x50b9; lea rax, [rip + 0x7ec90]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452618: test rdx, rdx; je 0x5262a; lea rax, [rip + 0x3135c]; mov edi, dword ptr [rax]; call rdx; 
0x0000000000452644: test rdx, rdx; je 0x52656; lea rax, [rip + 0x30fb0]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045aba6: test rdx, rdx; je 0x5abbb; lea rax, [rip + 0x286ce]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045abfc: test rdx, rdx; je 0x5ac11; lea rax, [rip + 0x282f8]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045ccf4: test rdx, rdx; je 0x5cd09; lea rax, [rip + 0x26c80]; mov edi, dword ptr [rax]; call rdx; 
0x000000000045cd3f: test rdx, rdx; je 0x5cd54; lea rax, [rip + 0x26c35]; mov edi, dword ptr [rax]; call rdx; 
0x00000000004238d5: test rdx, rdx; jne 0x238e1; lea rdx, [rip + 0x6059f]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000444167: test rdx, rdx; jne 0x4416f; mov al, 1; ret; 
0x0000000000447d27: test rdx, rdx; jne 0x47d2f; xor eax, eax; ret; 
0x000000000044bb00: test rdx, rdx; jne 0x4bb08; xor eax, eax; ret; 
0x000000000041302e: test rsi, rsi; je 0x1303d; mov rdi, r12; mov rax, qword ptr [r12]; call qword ptr [rax + 8]; 
0x0000000000433ffc: test rsi, rsi; je 0x34058; mov rax, 0xffffffffffffffff; ret; 
0x000000000043406c: test rsi, rsi; je 0x340e1; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434101: test rsi, rsi; je 0x34143; mov rax, 0xffffffffffffffff; ret; 
0x0000000000434161: test rsi, rsi; je 0x341b5; mov rax, 0xffffffffffffffff; ret; 
0x000000000044b9a8: test rsi, rsi; je 0x4b9b1; mov rdx, qword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x000000000044b9a7: test rsi, rsi; je 0x4b9b1; mov rdx, qword ptr [rdx - 8]; call 0x4b950; lea rsp, [rsp + 8]; ret; 
0x0000000000404220: test rsi, rsi; jg 0x4228; xor eax, eax; ret; 
0x0000000000423831: test rsi, rsi; jne 0x2383d; lea rsi, [rip + 0x60643]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423885: test rsi, rsi; jne 0x23891; lea rsi, [rip + 0x605ef]; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x000000000042ee14: test rsi, rsi; jne 0x2ee20; lea rsi, [rip + 0x55060]; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000434009: test rsi, rsi; jne 0x3402c; mov eax, 1; ret; 
0x000000000043407d: test rsi, rsi; jne 0x340b5; mov eax, 1; ret; 
0x000000000043410e: test rsi, rsi; jne 0x34119; mov eax, 1; ret; 
0x000000000043416e: test rsi, rsi; jne 0x34179; mov eax, 1; ret; 
0x0000000000448045: test rsi, rsi; jne 0x48051; lea rsi, [rip + 0x3be2f]; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000406770: test sil, sil; je 0x6779; mov rax, qword ptr [rdi]; ret; 
0x00000000004183d7: vpaddd xmm7, xmm8, xmm7; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000408558: vpaddsw xmm12, xmm5, xmmword ptr [r14 - 0x7f]; ret; 
0x000000000044a219: wait; add eax, dword ptr [rax]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a218: wait; add eax, dword ptr [rax]; call qword ptr [rax + 0xa8]; lea rsp, [rsp + 8]; ret; 
0x000000000044a239: wait; add eax, dword ptr [rax]; call qword ptr [rax + 0xb0]; lea rsp, [rsp + 8]; ret; 
0x000000000044a25b: wait; add eax, dword ptr [rax]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x000000000044b3b9: wait; cld; dec dword ptr [rax - 0x73]; and al, 0x78; ret; 
0x000000000044ce51: wait; fdivp st(4); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004028c3: wait; fldcw word ptr [rbp - 0x14]; mov rsp, rbp; pop rbp; ret; 
0x00000000004033e5: wait; fldcw word ptr [rbp - 8]; ldmxcsr dword ptr [rbp - 4]; mov rsp, rbp; pop rbp; ret; 
0x0000000000431f51: wait; insd dword ptr [rdi], dx; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x0000000000443849: wait; mov eax, dword ptr [rsp + 0x10]; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 8]; lea rsp, [rsp + 0x28]; ret; 
0x000000000040290f: wait; mov rax, qword ptr [rbp - 0x10]; mov rsp, rbp; pop rbp; ret; 
0x00000000004028f3: wait; mov rax, qword ptr [rbp - 0x18]; fldcw word ptr [rbp - 0xc]; mov rsp, rbp; pop rbp; ret; 
0x00000000004015b1: wait; ret 1; 
0x0000000000401821: wait; ret; 
0x00000000004574c1: wait; test eax, 0x8d48fffa; and al, 8; ret; 
0x0000000000406874: wbinvd; mov word ptr [rax + 8], dx; ret; 
0x000000000040264b: xadd dword ptr [rdx], eax; dec eax; ret; 
0x00000000004026be: xadd dword ptr [rdx], eax; dec rax; ret; 
0x000000000040266b: xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026de: xadd dword ptr [rdx], eax; inc rax; ret; 
0x0000000000402694: xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x0000000000402705: xadd dword ptr [rsi], edi; mov rax, rdi; ret; 
0x00000000004026bd: xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026dd: xadd qword ptr [rdx], rax; inc rax; ret; 
0x0000000000402704: xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x000000000041c8b4: xchg bh, bh; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041c935: xchg bh, bh; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000432e96: xchg byte ptr [rax + rax], bl; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004310ea: xchg byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433706: xchg byte ptr [rbx], ah; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431ff6: xchg byte ptr [rbx], dl; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000458386: xchg byte ptr [rdi - 0x72b70006], ah; and al, 8; ret; 
0x00000000004316a6: xchg byte ptr [rdi], dh; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000414f96: xchg byte ptr [rdx], al; add byte ptr [rcx + rcx*4 - 0x20], cl; pop r13; pop r12; pop rbx; ret; 
0x000000000044ba26: xchg byte ptr [rip - 0x72b70004], ah; and al, 8; ret; 
0x000000000040cac6: xchg byte ptr [rip - 0x769a0000], cl; ret 0x2d66; 
0x0000000000432136: xchg byte ptr [rsi - 3], al; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000042edd6: xchg byte ptr [rsi], bh; add cl, bl; sbb al, 0x24; movss xmm0, dword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000456826: xchg byte ptr [rsp + rdi*8], ah; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043caa0: xchg ch, bh; dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000042c98c: xchg dh, bh; dec dword ptr [rax + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x000000000042c904: xchg dh, bh; dec dword ptr [rcx + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000041bc75: xchg dword ptr [rax + 0x3a8b0006], eax; call rax; 
0x0000000000449f45: xchg dword ptr [rax + 0x6348fffb], eax; ret; 
0x00000000004226b2: xchg dword ptr [rax + 2], esi; add byte ptr [rax], al; ret; 
0x000000000040df45: xchg dword ptr [rax - 1], eax; dec dword ptr [rax - 0x73]; and al, 8; pop r12; pop rbx; ret; 
0x000000000041a995: xchg dword ptr [rbx - 0x76b7fffa], esp; ret; 
0x0000000000402680: xchg dword ptr [rdi], esi; mov eax, esi; ret; 
0x00000000004026f1: xchg dword ptr [rdi], esi; mov rax, rsi; ret; 
0x000000000040ef5a: xchg ebp, eax; add byte ptr [rax], al; mov rsp, rbp; pop rbp; ret; 
0x00000000004385f1: xchg ebp, eax; add eax, dword ptr [rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000004162d7: xchg ebp, eax; fadd qword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000433731: xchg ebp, eax; mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004337c3: xchg ebp, eax; mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x0000000000433851: xchg ebp, eax; mov byte ptr [rbx - 0x6bf0fe06], 0xc2; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004437d4: xchg ebp, eax; or al, byte ptr [rax]; cvtsi2sd xmm0, rax; call 0x43660; lea rsp, [rsp + 8]; ret; 
0x0000000000443794: xchg ebp, eax; or al, byte ptr [rax]; mov dword ptr [rsp + 4], eax; mov rax, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000452065: xchg ebp, eax; push -0x7a000001; ror byte ptr [rdi], 0x85; ret; 
0x0000000000450527: xchg ebp, eax; push rdx; add eax, dword ptr [rax]; call qword ptr [rax]; 
0x00000000004598f6: xchg ebp, eax; ret 0x8b48; 
0x0000000000459936: xchg ebp, eax; ret 0x8b48; 
0x0000000000439b67: xchg ebp, eax; ret 0xc208; 
0x0000000000425697: xchg ebp, eax; ret 4; 
0x0000000000439eed: xchg ebp, eax; ret; 
0x000000000043b852: xchg ebp, eax; ret; 
0x000000000043e65c: xchg ebp, eax; ret; 
0x0000000000441eec: xchg ebp, eax; ret; 
0x0000000000455391: xchg ebp, eax; ret; 
0x000000000044bf17: xchg ebp, eax; sar esp, 1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000415b5e: xchg ebp, eax; shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041639e: xchg ebp, eax; shl byte ptr [rip + 0xff], 0xf7; fmul dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434544: xchg ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000434586: xchg ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041aaa9: xchg ebx, eax; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000458a72: xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458a92: xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458ab2: xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000458acf: xchg ebx, eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000044ce79: xchg ebx, eax; fdivp st(4); dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041b849: xchg ebx, eax; int 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041caa6: xchg ebx, eax; je 0x1caac; add byte ptr [rax], al; mov rdi, rbx; call qword ptr [rbx + 0x30]; 
0x00000000004117b9: xchg ebx, eax; sar edi, 0xff; pop rbx; ret; 
0x000000000043b2a9: xchg ebx, eax; sbb bh, ch; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000453379: xchg ebx, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000417957: xchg ecx, eax; add al, 0x89; ret 0x8d48; 
0x00000000004179bf: xchg ecx, eax; add al, 0x89; ret 0x8d48; 
0x0000000000405271: xchg ecx, eax; add eax, 0x2f0f6600; or bh, byte ptr [rdx + 2]; ja 0x5248; movsd qword ptr [rax], xmm0; ret; 
0x000000000043995b: xchg ecx, eax; and ebp, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000416743: xchg ecx, eax; fadd dword ptr [rsi]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000410766: xchg ecx, eax; lea rax, [r10 + 1]; pop rbx; ret; 
0x0000000000454703: xchg ecx, eax; sti; jmp qword ptr [rsi + 0x3d]; 
0x000000000045726b: xchg ecx, eax; stosd dword ptr [rdi], eax; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000045750b: xchg ecx, eax; test eax, 0x8d48fffa; and al, 8; ret; 
0x000000000044ee8d: xchg edi, eax; add al, byte ptr fs:[rax]; lea rax, [rip + 0x26490]; call qword ptr [rax + 0x128]; lea rsp, [rsp + 8]; ret; 
0x000000000042e5d2: xchg edi, eax; add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000458565: xchg edi, eax; cmpsb byte ptr [rsi], byte ptr [rdi]; cli; dec dword ptr [rax - 0x77]; ret; 
0x0000000000425dd5: xchg edi, eax; mov edx, 0x63480004; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000417ca5: xchg edi, eax; or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000417f45: xchg edi, eax; or dword ptr [rip + 0x4110ff00], eax; pop rbp; pop r12; pop rbx; ret; 
0x0000000000455405: xchg edi, eax; ret; 
0x000000000041c834: xchg edi, edi; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042ee22: xchg edi, edi; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000402691: xchg edi, esi; lock xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x0000000000402701: xchg edi, esi; lock xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x000000000044c5f3: xchg edx, eax; add eax, dword ptr [rax]; mov rax, qword ptr [rax]; mov qword ptr [rsp], rax; lea rsp, [rsp + 0x68]; ret; 
0x0000000000433592: xchg edx, eax; fld qword ptr [rdx]; add bl, dh; addps xmm0, xmmword ptr [rax]; ret; 
0x0000000000402649: xchg edx, eax; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x0000000000402669: xchg edx, eax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026bb: xchg edx, eax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026db: xchg edx, eax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000042726a: xchg edx, eax; mov esp, 0x3a8b0005; call rax; 
0x0000000000401bba: xchg edx, eax; mov esp, 0x89480001; ret; 
0x0000000000409be7: xchg edx, eax; ret 0xe281; 
0x0000000000434ab7: xchg edx, eax; rol byte ptr [rax + rax*8 + 0x39450974], 0xc8; jg 0x34a38; ret; 
0x00000000004315c9: xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431881: xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a09: xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cc1: xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000432171: xchg edx, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e44: xchg edx, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x000000000045c0d9: xchg edx, esp; ret; 
0x0000000000422766: xchg esi, eax; adc eax, 0x388b0006; call rdx; 
0x000000000040f126: xchg esi, eax; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000434246: xchg esi, eax; add byte ptr [rax], al; add byte ptr [rbp - 0x3f6bf040], al; lea rsp, [rsp + 8]; ret; 
0x000000000042d7fc: xchg esi, eax; add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x000000000042d81c: xchg esi, eax; add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000432e66: xchg esi, eax; and dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000045b856: xchg esi, eax; in al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000456056: xchg esi, eax; leave; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000041d429: xchg esi, eax; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004588f6: xchg esi, eax; movsd dword ptr [rdi], dword ptr [rsi]; cli; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000431786: xchg esi, eax; push rsi; std; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000433286: xchg esi, eax; sbb byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042c7f4: xchg esi, edi; dec dword ptr [rax + 0x648d48d8]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c87c: xchg esi, edi; dec dword ptr [rcx + 0x648d48d8]; and al, 0x70; pop rbx; ret; 
0x00000000004029d8: xchg esp, eax; adc dword ptr [rdx], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000447878: xchg esp, eax; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000405c0b: xchg esp, eax; add byte ptr [rcx + riz*8 - 0x17], dh; ret 0; 
0x0000000000423908: xchg esp, eax; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000405c03: xchg esp, eax; and al, 0x60; add al, byte ptr [rax]; add byte ptr [rbx + 0x7400943c], al; loope 0x5bf9; ret 0; 
0x000000000042b9b2: xchg esp, eax; and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042ba8e: xchg esp, eax; and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042bac7: xchg esp, eax; and al, 0xb8; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xc601; 
0x00000000004342c8: xchg esp, eax; cli; add al, 0; call qword ptr [rax + 0x40]; 
0x00000000004342c8: xchg esp, eax; cli; add al, 0; call qword ptr [rax + 0x40]; lea rsp, [rsp + 8]; ret; 
0x0000000000449618: xchg esp, eax; mov ecx, 0x8d48fffc; and al, 0x78; ret; 
0x0000000000436508: xchg esp, eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x0000000000436507: xchg esp, eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b8: xchg esp, eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004494b7: xchg esp, eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b258: xchg esp, eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x000000000044b257: xchg esp, eax; mov rax, qword ptr [rsp]; mov dword ptr [rax + 8], 0xffffffff; lea rsp, [rsp + 8]; ret; 
0x00000000004030d8: xchg esp, eax; or eax, 0x83480008; cmp byte ptr [rax], al; jne 0x30e5; xor eax, eax; ret; 
0x0000000000411aa8: xchg esp, eax; push 0; add byte ptr [rax - 0x77], cl; in al, dx; pop rbp; ret; 
0x0000000000433857: xchg esp, eax; ret 0x12e8; 
0x0000000000433737: xchg esp, eax; ret 0x32e8; 
0x000000000042f5e1: xchg esp, eax; ret 0x8349; 
0x000000000043366c: xchg esp, eax; ret 0x8948; 
0x00000000004336ec: xchg esp, eax; ret 0x8948; 
0x000000000043377c: xchg esp, eax; ret 0x8948; 
0x000000000043380c: xchg esp, eax; ret 0x8948; 
0x00000000004336af: xchg esp, eax; ret 0x8a40; 
0x00000000004337c9: xchg esp, eax; ret 0xa0e8; 
0x00000000004548b5: xchg esp, eax; ret 0xe281; 
0x000000000040bd67: xchg esp, eax; ret; 
0x000000000040e1f0: xchg esp, eax; ret; 
0x000000000041a868: xchg esp, eax; ret; 
0x0000000000429c6e: xchg esp, eax; ret; 
0x0000000000429cfe: xchg esp, eax; ret; 
0x0000000000429d8e: xchg esp, eax; ret; 
0x000000000042c06e: xchg esp, eax; ret; 
0x000000000042c0fe: xchg esp, eax; ret; 
0x000000000042c18e: xchg esp, eax; ret; 
0x000000000042e817: xchg esp, eax; ret; 
0x0000000000433c83: xchg esp, eax; ret; 
0x00000000004383c0: xchg esp, eax; ret; 
0x00000000004384cc: xchg esp, eax; ret; 
0x000000000043ba4f: xchg esp, eax; ret; 
0x0000000000446fbe: xchg esp, eax; ret; 
0x0000000000447276: xchg esp, eax; ret; 
0x0000000000432349: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432541: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432732: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043291a: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432af9: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432ce1: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000432ec2: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043309a: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004332b2: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043348a: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000434ff3: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000435144: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x000000000043529b: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x00000000004352ec: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 0x10; pop rbx; ret; 
0x0000000000413bd2: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004279de: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042e78e: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042f1f1: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000042fc9e: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004315a6: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004315f6: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431616: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043189e: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318be: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004318de: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004319e6: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a36: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431a56: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cde: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431cfe: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431d1e: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043218e: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321ae: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004321ce: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433d8d: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000433ded: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043422d: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000043424d: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448525: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000448568: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a288: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000044a2cb: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000453d0d: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x00000000004582ef: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x000000000045830f: xchg esp, eax; ror byte ptr [rax - 0x73], 0x64; and al, 8; ret; 
0x0000000000431e21: xchg esp, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e61: xchg esp, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x0000000000431e81: xchg esp, eax; ror byte ptr [rax - 0x77], 0xec; pop rbp; ret; 
0x00000000004026f0: xchg qword ptr [rdi], rsi; mov rax, rsi; ret; 
0x000000000045c0d8: xchg r10, rsp; ret; 
0x000000000043ca9f: xchg r13b, r15b; dec dword ptr [rax - 0x75]; and al, 0x28; lea rsp, [rsp + 0x108]; ret; 
0x000000000042e5d1: xchg r15, rax; add dword ptr [rax], eax; lea rsp, [rsp + 8]; ret; 
0x0000000000444bc6: xchg r8d, eax; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000445882: xchg r8d, eax; mov rbx, qword ptr [rbp - 0x90]; mov r12, qword ptr [rbp - 0x88]; mov rsp, rbp; pop rbp; ret; 
0x0000000000417956: xchg rcx, rax; add al, 0x89; ret 0x8d48; 
0x00000000004179be: xchg rcx, rax; add al, 0x89; ret 0x8d48; 
0x0000000000454702: xchg rcx, rax; sti; jmp qword ptr [rsi + 0x3d]; 
0x0000000000402690: xchg rdi, rsi; lock xadd dword ptr [rsi], edi; mov eax, edi; ret; 
0x0000000000402700: xchg rdi, rsi; lock xadd qword ptr [rsi], rdi; mov rax, rdi; ret; 
0x0000000000402648: xchg rdx, rax; lock xadd dword ptr [rdx], eax; dec eax; ret; 
0x0000000000402668: xchg rdx, rax; lock xadd dword ptr [rdx], eax; inc eax; ret; 
0x00000000004026ba: xchg rdx, rax; lock xadd qword ptr [rdx], rax; dec rax; ret; 
0x00000000004026da: xchg rdx, rax; lock xadd qword ptr [rdx], rax; inc rax; ret; 
0x000000000041b16c: xlatb; add al, 0; mov byte ptr [rax], 1; mov eax, 1; lea rsp, [rsp + 8]; ret; 
0x000000000041cb2c: xlatb; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x000000000041cb79: xlatb; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x000000000041cbcc: xlatb; add byte ptr [rax], al; call 0x1ca10; pop rbx; ret; 
0x0000000000424337: xlatb; add byte ptr [rax], al; call 0x20ca0; lea rsp, [rsp + 8]; ret; 
0x000000000041c9a0: xlatb; add byte ptr [rax], al; jne 0x1c9ab; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x000000000041cae3: xlatb; add byte ptr [rax], al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000045a099: xlatb; add byte ptr [rax], al; mov edi, dword ptr [rdi]; call 0x2aa0; lea rsp, [rsp + 8]; ret; 
0x0000000000420d7a: xlatb; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000426b47: xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fc5: xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fd3: xlatb; add byte ptr [rax], al; ret; 
0x0000000000459fdb: xlatb; add byte ptr [rax], al; ret; 
0x0000000000444227: xlatb; add dword ptr [rax], eax; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000405083: xlatb; call 0x5090; lea rsp, [rsp + 8]; ret; 
0x0000000000420af5: xlatb; fadd dword ptr [rbx]; add al, ch; ret 0xffbc; 
0x00000000004118a5: xlatb; mov dl, 0xff; jmp qword ptr [rsi - 0x7b]; 
0x0000000000405438: xlatb; movapd xmm0, xmm2; cmp rax, rdx; jg 0x5428; ret; 
0x00000000004018e5: xlatb; ret 1; 
0x0000000000402460: xlatb; rol byte ptr [rbp + 0x480a75c0], 0x39; retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x00000000004024e0: xlatb; rol byte ptr [rbp + 0x480a75c0], 0x39; retf 0xe577; or rax, 0xffffffffffffffff; ret; 
0x00000000004137b0: xlatb; test rdi, rdi; je 0x137bd; cmp qword ptr [rdi + 0x50], 0; jne 0x13768; ret; 
0x000000000040103f: xlatb; xor rbp, rbp; call 0x23bc0; ret; 
0x000000000041d2ab: xor ah, ah; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000429cca: xor ah, byte ptr [rax + 0x388b0005]; call rdx; 
0x0000000000447a79: xor ah, byte ptr [rax]; add rsi, 1; cmp byte ptr [rax + rsi], 0; jne 0x47a68; ret; 
0x000000000043373a: xor ah, byte ptr [rdx]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000438db8: xor al, 0x24; call 0x38d60; lea rsp, [rsp + 8]; ret; 
0x0000000000438ee8: xor al, 0x24; call 0x38e90; lea rsp, [rsp + 8]; ret; 
0x0000000000439168: xor al, 0x24; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439298: xor al, 0x24; call 0x39240; lea rsp, [rsp + 8]; ret; 
0x0000000000439358: xor al, 0x24; call 0x39310; lea rsp, [rsp + 8]; ret; 
0x0000000000416981: xor al, 0x24; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159c1: xor al, 0x24; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x0000000000439327: xor al, 0x24; mov ecx, 0x13; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000418565: xor al, 0x24; mov edi, ebx; call 0x184a0; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041697a: xor al, 0x24; mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6d67f]; lea rsp, [rsp + 8]; ret; 
0x00000000004159ba: xor al, 0x24; mov rdi, rax; mov rsi, qword ptr [rsp]; call qword ptr [rip + 0x6e63f]; lea rsp, [rsp + 8]; ret; 
0x0000000000413ccb: xor al, 0x24; mov rsi, qword ptr [rsp + 8]; mov rdi, r14; mov rax, r15; call rax; 
0x000000000041676b: xor al, 0x24; mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6d8c7]; lea rsp, [rsp + 0x108]; ret; 
0x00000000004156bb: xor al, 0x24; mov rsi, rsp; mov rdi, rax; call qword ptr [rip + 0x6e947]; lea rsp, [rsp + 0x108]; ret; 
0x0000000000406b1d: xor al, 0x48; or edx, esi; mov qword ptr [rax], rdx; ret; 
0x0000000000450228: xor al, 0x83; add al, byte ptr [rax]; mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000452824: xor al, 0xc2; mov rdi, rsp; lea rax, [rip + 0x16180]; call qword ptr [rax]; 
0x0000000000456bd1: xor al, 0xe3; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456c33: xor al, 0xe3; xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000437368: xor al, 0xe9; add eax, dword ptr [rax]; call 0x37380; lea rsp, [rsp + 8]; ret; 
0x0000000000434428: xor al, 0xf9; add al, 0; call qword ptr [rax + 0x70]; 
0x0000000000434328: xor al, 0xfa; add al, 0; call qword ptr [rax + 0x50]; 
0x0000000000451c94: xor al, 0xfc; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000040514a: xor al, 1; add bl, ch; adc dh, bh; ret; 
0x0000000000405122: xor al, 1; add bl, ch; cmp dh, bh; ret; 
0x000000000040515e: xor al, 1; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x000000000040515d: xor al, 1; add byte ptr [rax - 0x73], cl; and al, 8; pop r12; pop rbx; ret; 
0x00000000004476d8: xor al, 1; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042ee55: xor al, 2; mov rdi, rax; call 0x1fd0; mov rsp, rbp; pop rbp; ret; 
0x00000000004163d0: xor al, al; and eax, 0xff; lea rsp, [rsp + 0x108]; ret; 
0x0000000000425bb1: xor al, al; and eax, 0xff; lea rsp, [rsp + 8]; ret; 
0x0000000000425b4a: xor al, al; and eax, 0xff; ret; 
0x0000000000458fd5: xor al, al; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000458fff: xor al, al; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x00000000004130fe: xor al, al; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000450c77: xor al, al; lea rsp, [rsp + 0x18]; pop r12; pop rbx; ret; 
0x000000000043c168: xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450bec: xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000450e6a: xor al, al; lea rsp, [rsp + 0x18]; ret; 
0x0000000000413f99: xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000451342: xor al, al; lea rsp, [rsp + 0x28]; ret; 
0x0000000000453ccd: xor al, al; lea rsp, [rsp + 0x98]; ret; 
0x0000000000450bb3: xor al, al; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000412f85: xor al, al; lea rsp, [rsp + 8]; ret; 
0x00000000004131db: xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000041b11a: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000425c30: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429aa9: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000429f2e: xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000042c32a: xor al, al; lea rsp, [rsp + 8]; ret; 
0x000000000043a373: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450ca7: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e2b: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000450e98: xor al, al; lea rsp, [rsp + 8]; ret; 
0x0000000000403224: xor al, al; ret; 
0x0000000000413c0e: xor al, al; ret; 
0x0000000000419074: xor al, al; ret; 
0x000000000042510b: xor al, al; ret; 
0x000000000042beb2: xor al, al; ret; 
0x0000000000434a21: xor al, al; ret; 
0x000000000044416f: xor al, al; ret; 
0x0000000000448271: xor al, al; ret; 
0x0000000000449c05: xor al, al; ret; 
0x0000000000457834: xor al, al; ret; 
0x00000000004087b1: xor al, bh; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000042e934: xor al, byte ptr [rax + rax]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000431300: xor al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000431320: xor al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041ab0a: xor al, byte ptr [rax]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043249f: xor al, byte ptr [rdi]; mov byte ptr [rdi], al; and eax, 0xff; ret; 
0x000000000043268f: xor al, byte ptr [rdi]; mov byte ptr [rdi], al; movsx eax, al; ret; 
0x000000000042fc81: xor al, ch; cdq; mov ebx, 0x8d480000; and al, 8; ret; 
0x000000000043356d: xor al, ch; cmp eax, 0x4800001a; lea esp, [rsp + 8]; ret; 
0x000000000043315d: xor al, ch; cmp eax, 0x4800001d; lea esp, [rsp + 8]; ret; 
0x00000000004329dd: xor al, ch; cmp eax, 0x48000025; lea esp, [rsp + 8]; ret; 
0x0000000000420ac7: xor al, ch; cmp edi, -1; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000432d7c: xor al, ch; ficomp word ptr [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000042fcbd: xor al, ch; fnsave dword ptr [rsi - 0x7cb80000]; call 0x649044cb; and al, 8; ret; 
0x0000000000432fad: xor al, ch; insd dword ptr [rdi], dx; sbb eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004323ed: xor al, ch; insd dword ptr [rdi], dx; sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004325dd: xor al, ch; jge 0x32607; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043339d: xor al, ch; jge 0x333b8; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004327cd: xor al, ch; lea esp, [rax + rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004312bd: xor al, ch; lea esp, [rdi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043243d: xor al, ch; lea esp, [rsi]; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043281d: xor al, ch; lodsd eax, dword ptr [rsi]; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004331bd: xor al, ch; lodsd eax, dword ptr [rsi]; sbb dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004325fd: xor al, ch; lodsd eax, dword ptr [rsi]; sub byte ptr [rax], al; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004336b3: xor al, ch; mov bh, 0x62; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x00000000004335ad: xor al, ch; mov ebp, 0x48000015; lea esp, [rsp + 8]; ret; 
0x0000000000432a0d: xor al, ch; mov ebp, 0x48000020; lea esp, [rsp + 8]; ret; 
0x000000000043240d: xor al, ch; mov ebp, 0x4800002a; lea esp, [rsp + 8]; ret; 
0x00000000004312dd: xor al, ch; mov ebp, 0x48000031; lea esp, [rsp + 8]; ret; 
0x000000000043045d: xor al, ch; mov ebp, 0x480000af; lea esp, [rsp + 8]; ret; 
0x0000000000432f7d: xor al, ch; or eax, 0x48000020; lea esp, [rsp + 8]; ret; 
0x00000000004327ed: xor al, ch; or eax, 0x48000027; lea esp, [rsp + 8]; ret; 
0x00000000004312fd: xor al, ch; or eax, 0x48000032; lea esp, [rsp + 8]; ret; 
0x0000000000432bac: xor al, ch; out dx, al; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043262d: xor al, ch; popfq; and al, 0; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x00000000004329bd: xor al, ch; popfq; and al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432bcc: xor al, ch; sahf; and eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043336d: xor al, ch; sbb eax, 0x4800001c; lea esp, [rsp + 8]; ret; 
0x0000000000432f5d: xor al, ch; sbb eax, 0x4800001e; lea esp, [rsp + 8]; ret; 
0x000000000043354d: xor al, ch; sbb qword ptr [r8], r8; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x0000000000432d9c: xor al, ch; scasb al, byte ptr [rdi]; and dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043028d: xor al, ch; std; add byte ptr [rax], al; lea rsp, [rsp + 8]; ret; 
0x000000000043125d: xor al, ch; sub byte ptr [r8], r8b; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000043334d: xor al, ch; sub eax, 0x4800001a; lea esp, [rsp + 8]; ret; 
0x000000000043317d: xor al, ch; sub eax, 0x4800001e; lea esp, [rsp + 8]; ret; 
0x000000000043127d: xor al, ch; sub eax, 0x48000028; lea esp, [rsp + 8]; ret; 
0x000000000043131d: xor al, ch; sub eax, 0x48000032; lea esp, [rsp + 8]; ret; 
0x0000000000455bc6: xor al, ch; test al, 0xff; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000404d7d: xor al, cl; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d70; ret; 
0x0000000000417bd0: xor ax, ax; and eax, 0xffff; ret; 
0x0000000000417be0: xor ax, ax; and eax, 0xffff; ret; 
0x0000000000417bf0: xor ax, ax; and eax, 0xffff; ret; 
0x0000000000423f87: xor ax, ax; and eax, 0xffff; ret; 
0x0000000000432a6f: xor ax, word ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x000000000043287f: xor ax, word ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x0000000000451e6c: xor bh, ah; dec dword ptr [rax - 0x75]; ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x0000000000421f24: xor bh, bh; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x0000000000421fa5: xor bh, bh; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x000000000042c0ca: xor bh, byte ptr [rbp + rax]; mov edi, dword ptr [rax]; call rdx; 
0x000000000043e69f: xor bl, bl; mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000441f32: xor bl, bl; mov al, bl; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418fea: xor bl, byte ptr [rdi - 0x76b70002]; ret; 
0x000000000040293e: xor byte ptr [r8 - 0x75], r9b; add al, 0x24; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x0000000000407505: xor byte ptr [rax - 0x112ee8f4], cl; cmp eax, 1; jg 0x74f8; ret; 
0x00000000004277f0: xor byte ptr [rax - 0x73], cl; add eax, 0x5e0a8; mov byte ptr [rax + rdx + 0x28], 0; pop rbx; ret; 
0x000000000040ed6a: xor byte ptr [rax - 0x73], cl; add eax, 0x74fee; call qword ptr [rax + 8]; 
0x00000000004116e5: xor byte ptr [rax - 0x73], cl; add eax, 0xffffc403; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x00000000004116e4: xor byte ptr [rax - 0x73], cl; add eax, 0xffffc403; lea rdx, [rip + 0x7266c]; mov qword ptr [rdx + 0xc0], rax; ret; 
0x00000000004458ad: xor byte ptr [rax - 0x73], cl; js 0x458b3; and edx, 0xff; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000044591a: xor byte ptr [rax - 0x73], cl; js 0x45920; xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x000000000040293f: xor byte ptr [rax - 0x75], cl; add al, 0x24; mov qword ptr [rdi + 0x38], rax; xor eax, eax; ret; 
0x000000000043ca6c: xor byte ptr [rax - 0x75], cl; jl 0x3ca95; sub byte ptr [rax - 0x75], cl; and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x000000000043ff9c: xor byte ptr [rax - 0x75], cl; jl 0x3ffc5; sub byte ptr [rax - 0x75], cl; and al, 0x28; mov rax, qword ptr [rax]; call qword ptr [rax + 0x60]; 
0x00000000004182a5: xor byte ptr [rax - 0x77], cl; out 0x48, eax; lea eax, [rip + 0x50700]; call qword ptr [rax]; 
0x000000000041735a: xor byte ptr [rax - 0x7d], cl; js 0x1736f; add byte ptr [rcx + rbp + 0x48], dh; mov edi, ebx; mov rax, qword ptr [r12 + 0x14]; call qword ptr [rax + 0x10]; 
0x0000000000447a81: xor byte ptr [rax], al; jne 0x47a68; ret; 
0x000000000040ab42: xor byte ptr [rbx + rbp*8 + 0x48], dh; mov eax, ecx; ret; 
0x0000000000427971: xor byte ptr [rcx + 0x5d], al; pop r12; pop rbx; ret; 
0x0000000000412ccd: xor byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x0000000000413d29: xor byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041764e: xor byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x000000000041f98c: xor byte ptr [rcx + 0x5f], al; pop r14; pop r13; pop r12; pop rbx; ret; 
0x00000000004302ad: xor byte ptr [rcx + 0xffe2], al; add al, ch; test dword ptr [rdx], 0x648d4800; and al, 8; ret; 
0x000000000040e50b: xor byte ptr [rcx + 1], bh; lea rax, [rip + 0x75848]; call qword ptr [rax + 0xa0]; lea rsp, [rsp + 8]; ret; 
0x0000000000417001: xor byte ptr [rcx + rcx*4 - 0x10], cl; call rax; 
0x0000000000426e02: xor byte ptr [rcx - 0x76b7e7bb], cl; in al, dx; pop rbp; ret; 
0x00000000004099f4: xor byte ptr [rcx], al; ret 0x4166; 
0x0000000000450112: xor byte ptr [rcx], dh; ret 0xe281; 
0x000000000045c18c: xor byte ptr [rdi], al; cld; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x000000000043a818: xor byte ptr [rip + 0xff], ah; lea rsp, [rsp + 8]; ret; 
0x000000000044d093: xor ch, ch; mov al, r13b; pop r13; pop r12; pop rbx; ret; 
0x0000000000457067: xor cl, byte ptr [rax - 0x73]; je 0x57090; adc byte ptr [rax - 0x77], cl; out 0xe8, eax; mov ebx, 0x89fffabf; ret; 
0x000000000041a33a: xor cl, byte ptr [rdx]; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045905f: xor cl, cl; call 0x58c20; lea rsp, [rsp + 8]; ret; 
0x000000000041ccfe: xor dh, dh; call 0x1c270; pop rbx; ret; 
0x0000000000421b1e: xor dh, dh; call 0x1c270; pop rbx; ret; 
0x0000000000420866: xor dh, dh; call 0x20780; lea rsp, [rsp + 8]; ret; 
0x000000000045c8aa: xor dl, byte ptr [rsi - 6]; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x00000000004277bb: xor dl, dl; call 0x275f0; lea rsp, [rsp + 0x30]; pop rbx; ret; 
0x000000000042f0d5: xor dl, dl; call 0x2f0f0; lea rsp, [rsp + 8]; ret; 
0x0000000000430f95: xor dl, dl; call 0x30fb0; lea rsp, [rsp + 8]; ret; 
0x000000000042ecf5: xor dl, dl; call 0x39970; lea rsp, [rsp + 8]; ret; 
0x00000000004507d5: xor dl, dl; call 0x56300; lea rsp, [rsp + 8]; ret; 
0x0000000000457bb4: xor dl, dl; call 0xd950; lea rsp, [rsp + 0x1010]; pop rbx; ret; 
0x000000000043bad5: xor dl, dl; lea rsi, [rip + 0x25a8a]; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x0000000000434b03: xor dl, dl; xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b53: xor dl, dl; xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434ba3: xor dl, dl; xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bf3: xor dl, dl; xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434c42: xor dl, dl; xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x000000000041cc79: xor dword ptr [rax + 6], 0; add rax, 8; mov word ptr [rax], 0x67; jmp 0x1cc8e; mov rdi, rbx; call qword ptr [rbx + 0x38]; 
0x00000000004312e0: xor dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; and al, 8; ret; 
0x000000000041524b: xor dword ptr [rax], edi; add eax, 0x4810ff00; lea esp, [rsp + 8]; ret; 
0x0000000000444c6b: xor dword ptr [rax], edx; add eax, dword ptr [rax]; mov rdx, qword ptr [rax + 0x10]; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004208fd: xor dword ptr [rbx + rax], 0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042c87b: xor dword ptr [rdi - 0x27760002], eax; lea rsp, [rsp + 0x70]; pop rbx; ret; 
0x0000000000451e6b: xor dword ptr [rdx], 0x8b48fffc; ror byte ptr [r8 - 0x77], 1; in al, dx; pop rbp; ret; 
0x000000000040b99b: xor dword ptr [rsi - 1], esp; dec dword ptr [rax - 0x73]; and al, 8; ret; 
0x0000000000450b8b: xor eax, 0x17ec0; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000444225: xor eax, 0x1d7c6; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441a5: xor eax, 0x1d826; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000043e376: xor eax, 0x23245; mov rax, qword ptr [rbx]; call qword ptr [rax + 0xc8]; mov rax, rbx; pop rbx; ret; 
0x000000000043bad9: xor eax, 0x25a8a; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x000000000043baba: xor eax, 0x25aa9; call 0x3b910; lea rsp, [rsp + 8]; ret; 
0x00000000004528bc: xor eax, 0x25cff; lea rax, [rsi + rcx]; ret; 
0x0000000000445eca: xor eax, 0x2fdd1; mov rdi, rax; call 0x45c60; lea rsp, [rsp + 8]; ret; 
0x0000000000429a07: xor eax, 0x37754; call 0xe180; pop rbx; ret; 
0x000000000044804c: xor eax, 0x3be2f; call 0x47e70; lea rsp, [rsp + 8]; ret; 
0x0000000000438e77: xor eax, 0x3ce24; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000438e17: xor eax, 0x3ce84; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004322cd: xor eax, 0x439ce; call 0x38cf0; lea rsp, [rsp + 0x18]; ret; 
0x0000000000431f12: xor eax, 0x43d89; call 0x38cf0; mov rsp, rbp; pop rbp; ret; 
0x0000000000431df1: xor eax, 0x43eaa; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x0000000000431ac7: xor eax, 0x441d4; call 0x38dd0; lea rsp, [rsp + 8]; ret; 
0x00000000004319b1: xor eax, 0x442ea; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x0000000000431687: xor eax, 0x44614; call 0x38e30; lea rsp, [rsp + 8]; ret; 
0x00000000004239d2: xor eax, 0x46319; mov ecx, 0xb; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000413417: xor eax, 0x48000556; mov edi, eax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000041b5b7: xor eax, 0x48000698; lea esp, [rsp + 8]; ret; 
0x0000000000415487: xor eax, 0x480006eb; lea esp, [rsp + 8]; ret; 
0x0000000000432b87: xor eax, 0x48fffd99; lea esp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000417177: xor eax, 0x48ffffe0; lea esp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000418637: xor eax, 0x48fffffd; mov esp, ebp; pop rbp; ret; 
0x0000000000419022: xor eax, 0x50b19; mov ecx, 0xc; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000042ee1b: xor eax, 0x55060; call 0x27590; lea rsp, [rsp + 8]; ret; 
0x0000000000413416: xor eax, 0x55635; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x0000000000413266: xor eax, 0x557e5; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x00000000004130d6: xor eax, 0x55975; mov rdi, rax; mov rax, qword ptr [rax]; call qword ptr [rax]; 
0x000000000042388c: xor eax, 0x605ef; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000423838: xor eax, 0x60643; call 0x23a80; lea rsp, [rsp + 8]; ret; 
0x0000000000424390: xor eax, 0x60c2b; xor edx, edx; mov edi, 4; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x00000000004241fd: xor eax, 0x60dbe; mov edi, 4; call 0x24170; lea rsp, [rsp + 8]; ret; 
0x000000000041b702: xor eax, 0x696e9; mov ecx, 6; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000041ad92: xor eax, 0x69f29; mov ecx, 0x23; rep movsq qword ptr [rdi], qword ptr [rsi]; mov al, 1; ret; 
0x000000000041aa3e: xor eax, 0x6a3; je 0x1aa4b; call qword ptr [rip + 0x6a32d]; lea rsp, [rsp + 8]; ret; 
0x0000000000416a12: xor eax, 0x6d559; mov ecx, 0x2e; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db95: xor eax, 0x761c6; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x000000000040db25: xor eax, 0x76236; mov rdi, rax; mov ecx, 0x19; rep movsq qword ptr [rdi], qword ptr [rsi]; ret; 
0x0000000000417dc7: xor eax, 0x8b0006bf; cmp bh, bh; ror byte ptr [rax - 0x77], 1; ret 0xbeb; 
0x00000000004218b8: xor eax, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x62436; mov edi, dword ptr [rdx]; call rax; 
0x000000000042184f: xor eax, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x6249f; mov edi, dword ptr [rdx]; call rax; 
0x0000000000421808: xor eax, 0x8b480006; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x8d; adc eax, 0x624e6; mov edi, dword ptr [rdx]; call rax; 
0x0000000000451b31: xor eax, 0x8b48fffc; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000451b2c: xor eax, 0xbce8fffc; xor eax, 0x8b48fffc; fmul dword ptr [r8 - 0x77]; in al, dx; pop rbp; ret; 
0x0000000000452b47: xor eax, 0xc7890000; call 0x52b60; lea rsp, [rsp + 8]; ret; 
0x0000000000415d57: xor eax, 0xdb0006e2; cmp al, 0x24; fld xword ptr [rsp]; lea rsp, [rsp + 0x18]; ret; 
0x0000000000416557: xor eax, 0xdd0006da; sbb al, 0x24; movsd xmm0, qword ptr [rsp]; lea rsp, [rsp + 8]; ret; 
0x0000000000415a37: xor eax, 0xf0006e5; mov esi, 0x648d48c0; and al, 8; ret; 
0x0000000000432c5f: xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x0000000000432e2f: xor eax, dword ptr [rdi]; mov dword ptr [rdi], eax; ret; 
0x000000000043300d: xor eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043321d: xor eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333fd: xor eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043360d: xor eax, dword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x0000000000432a70: xor eax, dword ptr [rdi]; mov word ptr [rdi], ax; and eax, 0xffff; ret; 
0x0000000000432880: xor eax, dword ptr [rdi]; mov word ptr [rdi], ax; movsx eax, ax; ret; 
0x00000000004554fe: xor eax, dword ptr [rdx]; add byte ptr [0xff], al; pop rbx; ret; 
0x0000000000417bd1: xor eax, eax; and eax, 0xffff; ret; 
0x0000000000417be1: xor eax, eax; and eax, 0xffff; ret; 
0x0000000000417bf1: xor eax, eax; and eax, 0xffff; ret; 
0x0000000000423f88: xor eax, eax; and eax, 0xffff; ret; 
0x000000000042eb9f: xor eax, eax; call 0x2ebb0; mov rsp, rbp; pop rbp; ret; 
0x00000000004304ff: xor eax, eax; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x000000000043059c: xor eax, eax; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306bc: xor eax, eax; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x00000000004146db: xor eax, eax; jmp 0x146e4; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x0000000000414a0b: xor eax, eax; jmp 0x14a14; mov eax, 0x80004002; lea rsp, [rsp + 8]; ret; 
0x00000000004275d7: xor eax, eax; jmp 0x275e0; sbb rax, rax; or al, 1; ret; 
0x000000000045835e: xor eax, eax; jmp 0x58367; mov rax, qword ptr [rsp + 0x28]; lea rsp, [rsp + 0x50]; pop rbx; ret; 
0x0000000000413290: xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000041344a: xor eax, eax; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x000000000045ba3d: xor eax, eax; lea rsp, [rsp + 0x48]; ret; 
0x0000000000456bd3: xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456c35: xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000456cd9: xor eax, eax; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040452d: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041337c: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041354e: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b24a: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b282: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b312: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000041b697: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043430a: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043434a: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043438a: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004343ca: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043440a: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x000000000043444a: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x00000000004435ff: xor eax, eax; lea rsp, [rsp + 8]; ret; 
0x0000000000438d80: xor eax, eax; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000438df9: xor eax, eax; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e59: xor eax, eax; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f48: xor eax, eax; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004395a7: xor eax, eax; mov ecx, 0xffffffff; xor edx, edx; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439574: xor eax, eax; mov ecx, 0xffffffff; xor edx, edx; call 0x39150; lea rsp, [rsp + 8]; ret; 
0x0000000000402ea2: xor eax, eax; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000041aa9f: xor eax, eax; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aacf: xor eax, eax; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x00000000004104ee: xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x000000000041079e: xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000447acf: xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x000000000044ba0a: xor eax, eax; pop r13; pop r12; pop rbx; ret; 
0x0000000000404151: xor eax, eax; pop rbx; ret; 
0x000000000045387a: xor eax, eax; pop rbx; ret; 
0x00000000004025b0: xor eax, eax; ret; 
0x0000000000402948: xor eax, eax; ret; 
0x00000000004030e2: xor eax, eax; ret; 
0x0000000000403168: xor eax, eax; ret; 
0x00000000004038c2: xor eax, eax; ret; 
0x00000000004039c7: xor eax, eax; ret; 
0x0000000000403a98: xor eax, eax; ret; 
0x0000000000403aa8: xor eax, eax; ret; 
0x0000000000404225: xor eax, eax; ret; 
0x0000000000404297: xor eax, eax; ret; 
0x00000000004043fd: xor eax, eax; ret; 
0x000000000040730e: xor eax, eax; ret; 
0x0000000000407357: xor eax, eax; ret; 
0x000000000040cf86: xor eax, eax; ret; 
0x000000000040d89a: xor eax, eax; ret; 
0x000000000040daeb: xor eax, eax; ret; 
0x000000000040f946: xor eax, eax; ret; 
0x000000000041157a: xor eax, eax; ret; 
0x0000000000411ace: xor eax, eax; ret; 
0x000000000041356f: xor eax, eax; ret; 
0x000000000041358d: xor eax, eax; ret; 
0x000000000041359f: xor eax, eax; ret; 
0x000000000041386f: xor eax, eax; ret; 
0x0000000000423920: xor eax, eax; ret; 
0x0000000000423930: xor eax, eax; ret; 
0x0000000000423940: xor eax, eax; ret; 
0x0000000000423950: xor eax, eax; ret; 
0x0000000000423960: xor eax, eax; ret; 
0x0000000000423970: xor eax, eax; ret; 
0x0000000000423980: xor eax, eax; ret; 
0x0000000000423990: xor eax, eax; ret; 
0x00000000004239a0: xor eax, eax; ret; 
0x00000000004239b0: xor eax, eax; ret; 
0x00000000004239c0: xor eax, eax; ret; 
0x0000000000423fa5: xor eax, eax; ret; 
0x0000000000433ba6: xor eax, eax; ret; 
0x000000000043b8c0: xor eax, eax; ret; 
0x000000000043b8d0: xor eax, eax; ret; 
0x00000000004479bc: xor eax, eax; ret; 
0x0000000000447d2c: xor eax, eax; ret; 
0x00000000004480ec: xor eax, eax; ret; 
0x000000000044bb05: xor eax, eax; ret; 
0x000000000044befc: xor eax, eax; ret; 
0x000000000044ce90: xor eax, eax; ret; 
0x00000000004528cb: xor eax, eax; ret; 
0x0000000000456c5a: xor eax, eax; ret; 
0x0000000000456c7a: xor eax, eax; ret; 
0x0000000000456d21: xor eax, eax; ret; 
0x0000000000456d64: xor eax, eax; ret; 
0x0000000000456d8a: xor eax, eax; ret; 
0x0000000000456daa: xor eax, eax; ret; 
0x0000000000456de5: xor eax, eax; ret; 
0x000000000041ab05: xor eax, eax; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000401cbf: xor eax, ebp; mov edi, dword ptr [rbx - 0x76b7ffff]; ret; 
0x0000000000417b08: xor eax, ecx; pop rbx; ret; 
0x00000000004178ed: xor eax, edi; ret; 
0x000000000045009e: xor eax, edx; and eax, 0xf; ret; 
0x0000000000401d03: xor ebp, eax; mov r11d, 0x89480001; ret; 
0x0000000000401041: xor ebp, ebp; call 0x23bc0; ret; 
0x0000000000419608: xor ebp, ebp; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000042ee5c: xor ebp, edi; dec dword ptr [rax - 0x77]; in al, dx; pop rbp; ret; 
0x00000000004338d9: xor ebx, ebx; pop rbx; ret; 
0x0000000000445413: xor ecx, dword ptr [rax - 0x75]; mov esp, 0x16824; add byte ptr [rax - 0x73], cl; add eax, 0x3e93d; call qword ptr [rax + 0x50]; 
0x0000000000429936: xor ecx, dword ptr [rax - 0x77]; fisttp word ptr [rax - 0x73]; adc eax, 0x3781f; call 0xe180; pop rbx; ret; 
0x000000000045c649: xor ecx, dword ptr [rbp - 0x77]; clc; mov rdi, rsp; mov rax, qword ptr [rsp + 0x170]; call rax; 
0x000000000045c4f9: xor ecx, dword ptr [rbp - 0x77]; clc; mov rdi, rsp; mov rax, qword ptr [rsp + 0x68]; call rax; 
0x00000000004113cb: xor ecx, dword ptr [rcx + rcx*4 - 0x19]; call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000041143b: xor ecx, dword ptr [rcx + rcx*4 - 0x19]; call 0x112f0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000040df90: xor ecx, dword ptr [rcx + rcx*4 - 0x19]; call 0x1fd0; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000042d2f0: xor ecx, ecx; call 0x2d0e0; pop r13; pop r12; pop rbx; ret; 
0x000000000042e406: xor ecx, ecx; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e63e: xor ecx, ecx; call 0x2e650; mov rsp, rbp; pop rbp; ret; 
0x0000000000430615: xor ecx, ecx; call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x00000000004390cf: xor ecx, ecx; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000043f7e9: xor ecx, ecx; call 0x3f3a0; lea rsp, [rsp + 8]; ret; 
0x000000000043f7c5: xor ecx, ecx; call 0x3f600; lea rsp, [rsp + 8]; ret; 
0x0000000000443269: xor ecx, ecx; call 0x42e20; lea rsp, [rsp + 8]; ret; 
0x0000000000443245: xor ecx, ecx; call 0x43080; lea rsp, [rsp + 8]; ret; 
0x0000000000444c9a: xor ecx, ecx; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x0000000000444d2e: xor ecx, ecx; call 0x449c0; lea rsp, [rsp + 8]; ret; 
0x00000000004441ee: xor ecx, ecx; call 0x46060; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044426e: xor ecx, ecx; call 0x46060; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447100: xor ecx, ecx; call 0x46ff0; lea rsp, [rsp + 8]; ret; 
0x000000000044c6f8: xor ecx, ecx; call 0x4c710; pop r13; pop r12; pop rbx; ret; 
0x0000000000433941: xor ecx, ecx; call 0xbc20; lea rsp, [rsp + 8]; ret; 
0x0000000000433d32: xor ecx, ecx; mov eax, ecx; ret; 
0x00000000004573d3: xor ecx, ecx; mov edi, 0x85; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x000000000041aa6e: xor ecx, ecx; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x0000000000417b70: xor ecx, ecx; mov rax, rcx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004571fb: xor ecx, ecx; mov rsi, 0xffffffffffffffff; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x000000000042e375: xor ecx, ecx; xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e377: xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e3e7: xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e3e6: xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e594: xor ecx, ecx; xor esi, esi; call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x00000000004304fc: xor ecx, ecx; xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430599: xor ecx, ecx; xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306b9: xor ecx, ecx; xor r8d, r8d; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000417b01: xor ecx, edx; mov eax, ecx; shr eax, 0x12; xor eax, ecx; pop rbx; ret; 
0x0000000000434081: xor edi, dword ptr [rax + 1]; ret; 
0x0000000000418665: xor edi, edi; call 0x18370; lea rsp, [rsp + 8]; ret; 
0x0000000000418645: xor edi, edi; call 0x185e0; lea rsp, [rsp + 8]; ret; 
0x000000000041aa75: xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aaa6: xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aad6: xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041ab07: xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041ab25: xor edi, edi; call 0x1ab70; lea rsp, [rsp + 8]; ret; 
0x0000000000402b01: xor edi, edi; call 0x1ea0; lea rsp, [rsp + 8]; ret; 
0x00000000004532b8: xor edi, edi; call 0x23030; lea rsp, [rsp + 8]; ret; 
0x0000000000425820: xor edi, edi; call 0x24ee0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004254af: xor edi, edi; call 0x25410; lea rsp, [rsp + 8]; ret; 
0x0000000000425b64: xor edi, edi; call 0x25ac0; movzx edi, bl; call 0x25ac0; pop rbx; ret; 
0x0000000000418ffb: xor edi, edi; call 0x2a20; mov rax, rbx; pop rbx; ret; 
0x0000000000456f85: xor edi, edi; call 0x56f10; mov edi, eax; call 0x56f50; lea rsp, [rsp + 8]; ret; 
0x00000000004261ef: xor edi, edi; call 0x587a0; lea rsp, [rsp + 8]; ret; 
0x000000000045cad5: xor edi, edi; call 0x5caf0; lea rsp, [rsp + 8]; ret; 
0x0000000000421ea4: xor edi, edi; dec dword ptr [rax - 0x73]; and al, 0x68; pop r12; pop rbx; ret; 
0x00000000004034d5: xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000427212: xor edx, edx; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x000000000041a3ac: xor edx, edx; call 0x22e0; mov rax, rbx; pop rbx; ret; 
0x0000000000438d87: xor edx, edx; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000438e00: xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e60: xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438ebf: xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f4f: xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438d12: xor edx, edx; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x00000000004395ae: xor edx, edx; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x000000000043957b: xor edx, edx; call 0x39150; lea rsp, [rsp + 8]; ret; 
0x000000000043b113: xor edx, edx; call 0x3ab40; mov rsp, rbp; pop rbp; ret; 
0x000000000043f8ee: xor edx, edx; call 0x3f900; lea rsp, [rsp + 8]; ret; 
0x000000000044336e: xor edx, edx; call 0x43380; lea rsp, [rsp + 8]; ret; 
0x000000000044591f: xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000445953: xor edx, edx; call 0x45690; lea rsp, [rsp + 8]; ret; 
0x0000000000446f25: xor edx, edx; call 0x470d0; lea rsp, [rsp + 8]; ret; 
0x00000000004472b5: xor edx, edx; call 0x47200; lea rsp, [rsp + 8]; ret; 
0x00000000004473a5: xor edx, edx; call 0x472d0; lea rsp, [rsp + 8]; ret; 
0x00000000004146a0: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004323c5: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004325b5: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004327a5: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432995: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432b84: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432d54: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000432f35: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433135: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433325: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000433525: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000455b5a: xor edx, edx; call 0xc4c0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000447f95: xor edx, edx; call 0xc590; lea rsp, [rsp + 8]; ret; 
0x0000000000450453: xor edx, edx; call 0xc590; pop r13; pop r12; pop rbx; ret; 
0x0000000000455b82: xor edx, edx; call 0xc590; pop rbx; ret; 
0x0000000000415f5c: xor edx, edx; call qword ptr [rip + 0x6e0fc]; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004045db: xor edx, edx; div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x00000000004045fb: xor edx, edx; div rsi; mov rax, rcx; sub rax, rdx; ret; 
0x000000000044a255: xor edx, edx; lea rax, [rip + 0x39b02]; call qword ptr [rax + 0xb8]; lea rsp, [rsp + 8]; ret; 
0x0000000000448515: xor edx, edx; lea rax, [rip + 0x3b842]; call qword ptr [rax + 0x20]; 
0x00000000004484f5: xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; 
0x00000000004484f5: xor edx, edx; lea rax, [rip + 0x3b862]; call qword ptr [rax + 0x20]; lea rsp, [rsp + 8]; ret; 
0x0000000000444221: xor edx, edx; lea rsi, [rip + 0x1d7c6]; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x00000000004441a1: xor edx, edx; lea rsi, [rip + 0x1d826]; call 0x46010; lea rsp, [rsp + 0x10]; pop rbx; ret; 
0x0000000000433c02: xor edx, edx; mov eax, edx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000424395: xor edx, edx; mov edi, 4; call 0x2de0; lea rsp, [rsp + 8]; ret; 
0x00000000004151b5: xor edx, edx; mov esi, 0x18; call 0x22e0; lea rsp, [rsp + 8]; ret; 
0x0000000000426cd7: xor edx, edx; mov esi, 0x4b2f; call 0x2f90; lea rsp, [rsp + 8]; ret; 
0x000000000041cb75: xor edx, edx; mov esi, 0xd7b1; call 0x1ca10; pop rbx; ret; 
0x000000000041a6c4: xor edx, edx; mov esi, 0xe8; call 0x22e0; pop rbx; ret; 
0x000000000040fb5f: xor edx, edx; mov rax, rdx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000447b95: xor edx, edx; mov rax, rdx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x000000000044bc96: xor edx, edx; mov rax, rdx; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x00000000004509d5: xor edx, edx; xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x00000000004261eb: xor edx, edx; xor esi, esi; xor edi, edi; call 0x587a0; lea rsp, [rsp + 8]; ret; 
0x0000000000413234: xor esi, esi; call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x00000000004133e8: xor esi, esi; call 0x13020; lea rsp, [rsp + 0x20]; pop rbx; ret; 
0x0000000000413344: xor esi, esi; call 0x13020; lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x000000000041350e: xor esi, esi; call 0x13020; lea rsp, [rsp + 0x28]; pop r12; pop rbx; ret; 
0x000000000042e379: xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e3e9: xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x000000000042e596: xor esi, esi; call 0x2e5b0; lea rsp, [rsp + 8]; ret; 
0x00000000004476b5: xor esi, esi; call 0x477d0; lea rsp, [rsp + 8]; ret; 
0x00000000004476d5: xor esi, esi; call 0x47810; lea rsp, [rsp + 8]; ret; 
0x0000000000447855: xor esi, esi; call 0x478d0; lea rsp, [rsp + 8]; ret; 
0x0000000000447875: xor esi, esi; call 0x47910; lea rsp, [rsp + 8]; ret; 
0x00000000004509d7: xor esi, esi; call 0x50890; lea rsp, [rsp + 8]; ret; 
0x0000000000420a3c: xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x00000000004353f5: xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000453375: xor esi, esi; call 0xbaf0; lea rsp, [rsp + 8]; ret; 
0x0000000000435414: xor esi, esi; call 0xbaf0; mov rsp, rbp; pop rbp; ret; 
0x000000000041452c: xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x0000000000420700: xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x0000000000450532: xor esi, esi; call 0xbaf0; pop rbx; ret; 
0x0000000000434b05: xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434b55: xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434ba5: xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434bf5: xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x0000000000434c44: xor esi, esi; call 0xd950; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004208a3: xor esi, esi; call 0xe140; pop rbx; ret; 
0x0000000000426e90: xor esi, esi; mov edi, 1; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x0000000000426e8f: xor esi, esi; mov edi, 1; call 0x5b880; lea rsp, [rsp + 0x88]; ret; 
0x000000000042581e: xor esi, esi; xor edi, edi; call 0x24ee0; lea rsp, [rsp + 0x100]; pop rbx; ret; 
0x00000000004261ed: xor esi, esi; xor edi, edi; call 0x587a0; lea rsp, [rsp + 8]; ret; 
0x0000000000451fd7: xor esp, edi; dec dword ptr [rax - 0x75]; and al, 0x18; lea rsp, [rsp + 0xe8]; ret; 
0x000000000041d2aa: xor r12b, r12b; mov al, r12b; lea rsp, [rsp + 8]; pop r12; pop rbx; ret; 
0x0000000000419607: xor r13, r13; mov rax, r13; pop r13; pop r12; pop rbx; ret; 
0x000000000044d092: xor r13b, r13b; mov al, r13b; pop r13; pop r12; pop rbx; ret; 
0x000000000042eb9e: xor r8, r8; call 0x2ebb0; mov rsp, rbp; pop rbp; ret; 
0x0000000000402ea1: xor r8, r8; mov edi, 0x3d; call 0x1ee0; lea rsp, [rsp + 8]; ret; 
0x0000000000458fd4: xor r8b, r8b; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000458ffe: xor r8b, r8b; call 0x58dc0; mov rsp, rbp; pop rbp; ret; 
0x0000000000404d7c: xor r8b, r9b; mov byte ptr [rdx + rcx], r8b; cmp rax, rcx; jg 0x4d70; ret; 
0x00000000004304fe: xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x000000000043059b: xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306bb: xor r8d, r8d; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x0000000000438d7f: xor r8d, r8d; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x18]; ret; 
0x0000000000438df8: xor r8d, r8d; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438e58: xor r8d, r8d; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x0000000000438f47: xor r8d, r8d; mov ecx, 0xf; xor edx, edx; call 0x37390; lea rsp, [rsp + 0x28]; ret; 
0x00000000004395a6: xor r8d, r8d; mov ecx, 0xffffffff; xor edx, edx; call 0x39120; lea rsp, [rsp + 8]; ret; 
0x0000000000439573: xor r8d, r8d; mov ecx, 0xffffffff; xor edx, edx; call 0x39150; lea rsp, [rsp + 8]; ret; 
0x000000000041aa9e: xor r8d, r8d; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041aace: xor r8d, r8d; mov esi, 0x400000; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000041ab04: xor r8d, r8d; xor edi, edi; call 0x1ab40; lea rsp, [rsp + 8]; ret; 
0x000000000042e405: xor r9d, r9d; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x0000000000430614: xor r9d, r9d; call 0x306a0; mov rsp, rbp; pop rbp; ret; 
0x00000000004390ce: xor r9d, r9d; call 0x37390; mov rsp, rbp; pop rbp; ret; 
0x000000000042e374: xor r9d, r9d; xor ecx, ecx; xor esi, esi; call 0x2e490; lea rsp, [rsp + 8]; ret; 
0x00000000004304fb: xor r9d, r9d; xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x0000000000430598: xor r9d, r9d; xor r8d, r8d; call 0x307e0; mov rsp, rbp; pop rbp; ret; 
0x00000000004306b8: xor r9d, r9d; xor r8d, r8d; call 0x30c40; mov rsp, rbp; pop rbp; ret; 
0x000000000043300c: xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043321c: xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004333fc: xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x000000000043360c: xor rax, qword ptr [rdi]; mov qword ptr [rdi], rax; ret; 
0x00000000004275d6: xor rax, rax; jmp 0x275e0; sbb rax, rax; or al, 1; ret; 
0x0000000000401040: xor rbp, rbp; call 0x23bc0; ret; 
0x000000000041ccfd: xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000421b1d: xor sil, sil; call 0x1c270; pop rbx; ret; 
0x0000000000420865: xor sil, sil; call 0x20780; lea rsp, [rsp + 8]; ret; 

53738 gadgets found
