


Gadgets
=======


0x0000000000001173: adc al, 0x48; mov eax, dword ptr [rip + 0x3e6d]; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001d24: adc byte ptr [rax - 0x75], cl; test al, 0x48; mov edi, dword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001d23: adc byte ptr [rax - 0x75], cl; test al, 0x48; mov edi, dword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x00000000000016fe: adc byte ptr [rax], al; add byte ptr [rax + 0x10c48348], dl; pop rbp; ret; 
0x00000000000017a2: adc byte ptr [rax], al; add byte ptr [rax + 0x20c48348], dl; pop rbp; ret; 
0x0000000000002084: adc byte ptr [rax], al; add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000001132: adc eax, 0x8e058b48; add byte ptr ds:[rax], al; test rax, rax; je 0x1148; jmp rax; 
0x0000000000002089: add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000001700: add byte ptr [rax + 0x10c48348], dl; pop rbp; ret; 
0x00000000000017a4: add byte ptr [rax + 0x20c48348], dl; pop rbp; ret; 
0x0000000000002086: add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rcx; jmp rax; 
0x00000000000016fc: add byte ptr [rax - 0x6ffffff0], bh; add rsp, 0x10; pop rbp; ret; 
0x00000000000017a0: add byte ptr [rax - 0x6ffffff0], bh; add rsp, 0x20; pop rbp; ret; 
0x0000000000001d20: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x75], cl; test al, 0x48; mov edi, dword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001bf6: add byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x75], cl; jge 0x1bde; add rdi, 8; call rax; 
0x0000000000001dd9: add byte ptr [rax - 0x75], cl; call 0x4800a92a; mov eax, dword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001bf9: add byte ptr [rax - 0x75], cl; jge 0x1bde; add rdi, 8; call rax; 
0x000000000000276d: add byte ptr [rax - 0x75], cl; mov r8b, 0x48; add esp, 0x50; pop rbp; ret; 
0x0000000000001ff7: add byte ptr [rax - 0x75], cl; mov r8d, 0x50c48348; pop rbp; ret; 
0x0000000000001de0: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x75], cl; call 0x879a935; call rax; 
0x000000000000117a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx - 1], 0xe0; nop word ptr [rax + rax]; ret; 
0x0000000000001139: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 1], 0xe0; nop dword ptr [rax]; ret; 
0x000000000000100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000001143: add byte ptr [rax], 0; add byte ptr [rax], al; ret; 
0x00000000000016fa: add byte ptr [rax], al; add byte ptr [rax - 0x6ffffff0], bh; add rsp, 0x10; pop rbp; ret; 
0x000000000000179e: add byte ptr [rax], al; add byte ptr [rax - 0x6ffffff0], bh; add rsp, 0x20; pop rbp; ret; 
0x000000000000276b: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov r8b, 0x48; add esp, 0x50; pop rbp; ret; 
0x0000000000001ff5: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov r8d, 0x50c48348; pop rbp; ret; 
0x0000000000001144: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000000174b: add byte ptr [rax], al; add rsp, 0x10; pop rbp; ret; 
0x0000000000001e90: add byte ptr [rax], al; add rsp, 0x10; pop rbp; ret; 
0x00000000000023ff: add byte ptr [rax], al; add rsp, 0x10; pop rbp; ret; 
0x000000000000131c: add byte ptr [rax], al; add rsp, 0x20; pop rbp; ret; 
0x00000000000015e2: add byte ptr [rax], al; add rsp, 0x20; pop rbp; ret; 
0x0000000000001683: add byte ptr [rax], al; add rsp, 0x20; pop rbp; ret; 
0x000000000000190e: add byte ptr [rax], al; add rsp, 0x20; pop rbp; ret; 
0x00000000000027ee: add byte ptr [rax], al; add rsp, 0x20; pop rbp; ret; 
0x00000000000011b0: add byte ptr [rax], al; call 0x10e0; call 0x1120; mov byte ptr [rip + 0x3e7d], 1; pop rbp; ret; 
0x0000000000002d1e: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x00000000000016fb: add byte ptr [rax], al; mov eax, 0x90000010; add rsp, 0x10; pop rbp; ret; 
0x000000000000179f: add byte ptr [rax], al; mov eax, 0x90000010; add rsp, 0x20; pop rbp; ret; 
0x0000000000002379: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x10]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001b3b: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x14]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e2c: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x000000000000256f: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002d0d: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001c58: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x28]; add rsp, 0x30; pop rbp; ret; 
0x00000000000018a3: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001aa4: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x000000000000295d: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x4c]; add rsp, 0x50; pop rbp; ret; 
0x0000000000002aeb: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x54]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001d56: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x5c]; add rsp, 0x60; pop rbp; ret; 
0x00000000000022ea: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x64]; add rsp, 0x70; pop rbp; ret; 
0x000000000000247c: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x00000000000024d0: add byte ptr [rax], al; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x000000000000260f: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x00000000000014a3: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002bfc: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001ff6: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x000000000000276c: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x50]; add rsp, 0x50; pop rbp; ret; 
0x000000000000207a: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x60]; lea rcx, [rip + 0x107d]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000002085: add byte ptr [rax], al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000016ff: add byte ptr [rax], al; nop; add rsp, 0x10; pop rbp; ret; 
0x00000000000017a3: add byte ptr [rax], al; nop; add rsp, 0x20; pop rbp; ret; 
0x0000000000001146: add byte ptr [rax], al; ret; 
0x0000000000001186: add byte ptr [rax], al; ret; 
0x000000000000100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000000100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000001138: add byte ptr [rax], al; test rax, rax; je 0x1148; jmp rax; 
0x0000000000001179: add byte ptr [rax], al; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001185: add byte ptr [rax], r8b; ret; 
0x00000000000011c1: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000000011af: add byte ptr ds:[rax], al; call 0x10e0; call 0x1120; mov byte ptr [rip + 0x3e7d], 1; pop rbp; ret; 
0x0000000000001137: add byte ptr ds:[rax], al; test rax, rax; je 0x1148; jmp rax; 
0x0000000000001178: add byte ptr ds:[rax], al; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001176: add eax, 0x3e6d; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001135: add eax, 0x3e8e; test rax, rax; je 0x1148; jmp rax; 
0x000000000000100a: add eax, 0x3fd1; test rax, rax; je 0x1016; call rax; 
0x000000000000208c: add eax, ecx; jmp rax; 
0x0000000000001bff: add edi, 8; call rax; 
0x0000000000001703: add esp, 0x10; pop rbp; ret; 
0x000000000000174e: add esp, 0x10; pop rbp; ret; 
0x0000000000001e93: add esp, 0x10; pop rbp; ret; 
0x0000000000002402: add esp, 0x10; pop rbp; ret; 
0x0000000000002482: add esp, 0x10; pop rbp; ret; 
0x00000000000024d6: add esp, 0x10; pop rbp; ret; 
0x000000000000131f: add esp, 0x20; pop rbp; ret; 
0x00000000000015e5: add esp, 0x20; pop rbp; ret; 
0x0000000000001686: add esp, 0x20; pop rbp; ret; 
0x00000000000017a7: add esp, 0x20; pop rbp; ret; 
0x0000000000001911: add esp, 0x20; pop rbp; ret; 
0x0000000000001b41: add esp, 0x20; pop rbp; ret; 
0x0000000000001e32: add esp, 0x20; pop rbp; ret; 
0x000000000000237f: add esp, 0x20; pop rbp; ret; 
0x0000000000002575: add esp, 0x20; pop rbp; ret; 
0x0000000000002616: add esp, 0x20; pop rbp; ret; 
0x00000000000027f1: add esp, 0x20; pop rbp; ret; 
0x0000000000002d13: add esp, 0x20; pop rbp; ret; 
0x0000000000001c5e: add esp, 0x30; pop rbp; ret; 
0x00000000000014aa: add esp, 0x40; pop rbp; ret; 
0x00000000000018a9: add esp, 0x40; pop rbp; ret; 
0x0000000000001aaa: add esp, 0x40; pop rbp; ret; 
0x0000000000002c03: add esp, 0x40; pop rbp; ret; 
0x0000000000001ffd: add esp, 0x50; pop rbp; ret; 
0x0000000000002773: add esp, 0x50; pop rbp; ret; 
0x0000000000002963: add esp, 0x50; pop rbp; ret; 
0x0000000000001d5c: add esp, 0x60; pop rbp; ret; 
0x0000000000002af1: add esp, 0x60; pop rbp; ret; 
0x00000000000022f0: add esp, 0x70; pop rbp; ret; 
0x0000000000001017: add esp, 8; ret; 
0x0000000000002d29: add esp, 8; ret; 
0x000000000000208b: add rax, rcx; jmp rax; 
0x0000000000001bfe: add rdi, 8; call rax; 
0x0000000000001702: add rsp, 0x10; pop rbp; ret; 
0x000000000000174d: add rsp, 0x10; pop rbp; ret; 
0x0000000000001e92: add rsp, 0x10; pop rbp; ret; 
0x0000000000002401: add rsp, 0x10; pop rbp; ret; 
0x0000000000002481: add rsp, 0x10; pop rbp; ret; 
0x00000000000024d5: add rsp, 0x10; pop rbp; ret; 
0x000000000000131e: add rsp, 0x20; pop rbp; ret; 
0x00000000000015e4: add rsp, 0x20; pop rbp; ret; 
0x0000000000001685: add rsp, 0x20; pop rbp; ret; 
0x00000000000017a6: add rsp, 0x20; pop rbp; ret; 
0x0000000000001910: add rsp, 0x20; pop rbp; ret; 
0x0000000000001b40: add rsp, 0x20; pop rbp; ret; 
0x0000000000001e31: add rsp, 0x20; pop rbp; ret; 
0x000000000000237e: add rsp, 0x20; pop rbp; ret; 
0x0000000000002574: add rsp, 0x20; pop rbp; ret; 
0x0000000000002615: add rsp, 0x20; pop rbp; ret; 
0x00000000000027f0: add rsp, 0x20; pop rbp; ret; 
0x0000000000002d12: add rsp, 0x20; pop rbp; ret; 
0x0000000000001c5d: add rsp, 0x30; pop rbp; ret; 
0x00000000000014a9: add rsp, 0x40; pop rbp; ret; 
0x00000000000018a8: add rsp, 0x40; pop rbp; ret; 
0x0000000000001aa9: add rsp, 0x40; pop rbp; ret; 
0x0000000000002c02: add rsp, 0x40; pop rbp; ret; 
0x0000000000001ffc: add rsp, 0x50; pop rbp; ret; 
0x0000000000002772: add rsp, 0x50; pop rbp; ret; 
0x0000000000002962: add rsp, 0x50; pop rbp; ret; 
0x0000000000001d5b: add rsp, 0x60; pop rbp; ret; 
0x0000000000002af0: add rsp, 0x60; pop rbp; ret; 
0x00000000000022ef: add rsp, 0x70; pop rbp; ret; 
0x0000000000001016: add rsp, 8; ret; 
0x0000000000002d28: add rsp, 8; ret; 
0x00000000000011b2: call 0x10e0; call 0x1120; mov byte ptr [rip + 0x3e7d], 1; pop rbp; ret; 
0x00000000000011b7: call 0x1120; mov byte ptr [rip + 0x3e7d], 1; pop rbp; ret; 
0x0000000000001ddd: call 0x4800a92a; mov eax, dword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001ddc: call 0x4800a92a; mov eax, dword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001de8: call 0x879a935; call rax; 
0x0000000000001de7: call 0x879a935; call rax; 
0x00000000000028a0: call 0xffffffff89cc6e30; ret 0xf5e8; 
0x0000000000002916: call 0xffffffff89cc6ea6; ret 0x7fe8; 
0x000000000000168f: call qword ptr [rbp + 0x48]; 
0x00000000000024df: call qword ptr [rbp + 0x48]; 
0x000000000000261f: call qword ptr [rbp + 0x48]; 
0x0000000000001014: call rax; 
0x0000000000001c02: call rax; 
0x0000000000001d31: call rax; 
0x0000000000001ded: call rax; 
0x0000000000001014: call rax; add rsp, 8; ret; 
0x0000000000001314: clc; cmp rax, rcx; jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x0000000000001313: clc; cmp rax, rcx; jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x00000000000015da: clc; cmp rax, rcx; jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x00000000000015d9: clc; cmp rax, rcx; jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x000000000000167b: clc; cmp rax, rcx; jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x000000000000167a: clc; cmp rax, rcx; jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x0000000000001743: clc; cmp rax, rcx; jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x0000000000001742: clc; cmp rax, rcx; jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x0000000000001906: clc; cmp rax, rcx; jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001905: clc; cmp rax, rcx; jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e88: clc; cmp rax, rcx; jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x0000000000001e87: clc; cmp rax, rcx; jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x00000000000023f7: clc; cmp rax, rcx; jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x00000000000023f6: clc; cmp rax, rcx; jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x00000000000027e6: clc; cmp rax, rcx; jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x00000000000027e5: clc; cmp rax, rcx; jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x0000000000001130: clc; je 0x1148; mov rax, qword ptr [rip + 0x3e8e]; test rax, rax; je 0x1148; jmp rax; 
0x0000000000002d23: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000001003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x3fd1]; test rax, rax; je 0x1016; call rax; 
0x0000000000001316: cmp eax, ecx; jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x000000000000149d: cmp eax, ecx; jne 0x14af; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x00000000000015dc: cmp eax, ecx; jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x000000000000167d: cmp eax, ecx; jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x00000000000016f5: cmp eax, ecx; jne 0x1708; mov eax, 0x90000010; add rsp, 0x10; pop rbp; ret; 
0x0000000000001745: cmp eax, ecx; jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x0000000000001799: cmp eax, ecx; jne 0x17ac; mov eax, 0x90000010; add rsp, 0x20; pop rbp; ret; 
0x000000000000189d: cmp eax, ecx; jne 0x18ae; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001908: cmp eax, ecx; jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001a9e: cmp eax, ecx; jne 0x1aaf; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001b35: cmp eax, ecx; jne 0x1b46; mov eax, dword ptr [rbp - 0x14]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001c52: cmp eax, ecx; jne 0x1c63; mov eax, dword ptr [rbp - 0x28]; add rsp, 0x30; pop rbp; ret; 
0x0000000000001d50: cmp eax, ecx; jne 0x1d61; mov eax, dword ptr [rbp - 0x5c]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001e26: cmp eax, ecx; jne 0x1e37; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e8a: cmp eax, ecx; jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x0000000000001ff0: cmp eax, ecx; jne 0x2002; mov rax, qword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x00000000000022e4: cmp eax, ecx; jne 0x22f5; mov eax, dword ptr [rbp - 0x64]; add rsp, 0x70; pop rbp; ret; 
0x0000000000002373: cmp eax, ecx; jne 0x2384; mov eax, dword ptr [rbp - 0x10]; add rsp, 0x20; pop rbp; ret; 
0x00000000000023f9: cmp eax, ecx; jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x0000000000002476: cmp eax, ecx; jne 0x2487; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x00000000000024ca: cmp eax, ecx; jne 0x24db; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x0000000000002569: cmp eax, ecx; jne 0x257a; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002609: cmp eax, ecx; jne 0x261b; mov rax, qword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x00000000000027e8: cmp eax, ecx; jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x0000000000002957: cmp eax, ecx; jne 0x2968; mov eax, dword ptr [rbp - 0x4c]; add rsp, 0x50; pop rbp; ret; 
0x0000000000002ae5: cmp eax, ecx; jne 0x2af6; mov eax, dword ptr [rbp - 0x54]; add rsp, 0x60; pop rbp; ret; 
0x0000000000002bf6: cmp eax, ecx; jne 0x2c08; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002d07: cmp eax, ecx; jne 0x2d18; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x000000000000112f: cmp eax, edi; je 0x1148; mov rax, qword ptr [rip + 0x3e8e]; test rax, rax; je 0x1148; jmp rax; 
0x0000000000001315: cmp rax, rcx; jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x000000000000149c: cmp rax, rcx; jne 0x14af; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x00000000000015db: cmp rax, rcx; jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x000000000000167c: cmp rax, rcx; jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x00000000000016f4: cmp rax, rcx; jne 0x1708; mov eax, 0x90000010; add rsp, 0x10; pop rbp; ret; 
0x0000000000001744: cmp rax, rcx; jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x0000000000001798: cmp rax, rcx; jne 0x17ac; mov eax, 0x90000010; add rsp, 0x20; pop rbp; ret; 
0x000000000000189c: cmp rax, rcx; jne 0x18ae; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001907: cmp rax, rcx; jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001a9d: cmp rax, rcx; jne 0x1aaf; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001b34: cmp rax, rcx; jne 0x1b46; mov eax, dword ptr [rbp - 0x14]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001c51: cmp rax, rcx; jne 0x1c63; mov eax, dword ptr [rbp - 0x28]; add rsp, 0x30; pop rbp; ret; 
0x0000000000001d4f: cmp rax, rcx; jne 0x1d61; mov eax, dword ptr [rbp - 0x5c]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001e25: cmp rax, rcx; jne 0x1e37; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e89: cmp rax, rcx; jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x0000000000001fef: cmp rax, rcx; jne 0x2002; mov rax, qword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x00000000000022e3: cmp rax, rcx; jne 0x22f5; mov eax, dword ptr [rbp - 0x64]; add rsp, 0x70; pop rbp; ret; 
0x0000000000002372: cmp rax, rcx; jne 0x2384; mov eax, dword ptr [rbp - 0x10]; add rsp, 0x20; pop rbp; ret; 
0x00000000000023f8: cmp rax, rcx; jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x0000000000002475: cmp rax, rcx; jne 0x2487; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x00000000000024c9: cmp rax, rcx; jne 0x24db; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x0000000000002568: cmp rax, rcx; jne 0x257a; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002608: cmp rax, rcx; jne 0x261b; mov rax, qword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x00000000000027e7: cmp rax, rcx; jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x0000000000002956: cmp rax, rcx; jne 0x2968; mov eax, dword ptr [rbp - 0x4c]; add rsp, 0x50; pop rbp; ret; 
0x0000000000002ae4: cmp rax, rcx; jne 0x2af6; mov eax, dword ptr [rbp - 0x54]; add rsp, 0x60; pop rbp; ret; 
0x0000000000002bf5: cmp rax, rcx; jne 0x2c08; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002d06: cmp rax, rcx; jne 0x2d18; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x000000000000112e: cmp rax, rdi; je 0x1148; mov rax, qword ptr [rip + 0x3e8e]; test rax, rax; je 0x1148; jmp rax; 
0x0000000000001271: dec dword ptr [rax - 0x77]; ret 0x6348; 
0x00000000000012cd: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000002d20: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000001000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x3fd1]; test rax, rax; je 0x1016; call rax; 
0x0000000000001ef0: fmul dword ptr [rdi]; mov bh, 0x45; out 0x89, al; ret 0xc148; 
0x0000000000002480: hlt; add rsp, 0x10; pop rbp; ret; 
0x000000000000247f: hlt; add rsp, 0x10; pop rbp; ret; 
0x00000000000024d4: hlt; add rsp, 0x10; pop rbp; ret; 
0x00000000000024d3: hlt; add rsp, 0x10; pop rbp; ret; 
0x00000000000018b0: idiv edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000001e30: in al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000000001e2f: in al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000000002573: in al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000000002572: in al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000000002d11: in al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000000002d10: in al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000000001b3f: in al, dx; add rsp, 0x20; pop rbp; ret; 
0x0000000000001b3e: in al, dx; add rsp, 0x20; pop rbp; ret; 
0x0000000000001006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x3fd1; test rax, rax; je 0x1016; call rax; 
0x0000000000002d1c: inc dword ptr [rax]; add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000001177: insd dword ptr [rdi], dx; add byte ptr ds:[rax], al; test rax, rax; je 0x1188; jmp rax; 
0x0000000000002076: ja 0x229b; mov rax, qword ptr [rbp - 0x60]; lea rcx, [rip + 0x107d]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000001012: je 0x1016; call rax; 
0x0000000000001012: je 0x1016; call rax; add rsp, 8; ret; 
0x000000000000113d: je 0x1148; jmp rax; 
0x0000000000001131: je 0x1148; mov rax, qword ptr [rip + 0x3e8e]; test rax, rax; je 0x1148; jmp rax; 
0x000000000000117e: je 0x1188; jmp rax; 
0x0000000000001172: je 0x1188; mov rax, qword ptr [rip + 0x3e6d]; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001bfc: jge 0x1bde; add rdi, 8; call rax; 
0x0000000000002083: jge 0x2095; add byte ptr [rax], al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000001d65: jmp qword ptr [rsi + 0x2e]; 
0x00000000000014b3: jmp qword ptr [rsi + 0x66]; 
0x00000000000017b0: jmp qword ptr [rsi + 0x66]; 
0x00000000000018b2: jmp qword ptr [rsi + 0x66]; 
0x0000000000001ab3: jmp qword ptr [rsi + 0x66]; 
0x0000000000002006: jmp qword ptr [rsi + 0xf]; 
0x00000000000022f9: jmp qword ptr [rsi + 0xf]; 
0x00000000000016bd: jmp qword ptr [rsi - 0x70]; 
0x000000000000113f: jmp rax; 
0x0000000000001180: jmp rax; 
0x000000000000208e: jmp rax; 
0x0000000000001318: jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x000000000000149f: jne 0x14af; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x00000000000015de: jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x000000000000167f: jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x00000000000016f7: jne 0x1708; mov eax, 0x90000010; add rsp, 0x10; pop rbp; ret; 
0x0000000000001747: jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x000000000000179b: jne 0x17ac; mov eax, 0x90000010; add rsp, 0x20; pop rbp; ret; 
0x000000000000189f: jne 0x18ae; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x000000000000190a: jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001aa0: jne 0x1aaf; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001b37: jne 0x1b46; mov eax, dword ptr [rbp - 0x14]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001c54: jne 0x1c63; mov eax, dword ptr [rbp - 0x28]; add rsp, 0x30; pop rbp; ret; 
0x0000000000001d2f: jne 0x1d09; call rax; 
0x0000000000001d52: jne 0x1d61; mov eax, dword ptr [rbp - 0x5c]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001e28: jne 0x1e37; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e8c: jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x0000000000001ff2: jne 0x2002; mov rax, qword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x00000000000022e6: jne 0x22f5; mov eax, dword ptr [rbp - 0x64]; add rsp, 0x70; pop rbp; ret; 
0x0000000000002375: jne 0x2384; mov eax, dword ptr [rbp - 0x10]; add rsp, 0x20; pop rbp; ret; 
0x00000000000023fb: jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x0000000000002478: jne 0x2487; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x00000000000024cc: jne 0x24db; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x000000000000256b: jne 0x257a; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x000000000000260b: jne 0x261b; mov rax, qword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x00000000000027ea: jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x0000000000002959: jne 0x2968; mov eax, dword ptr [rbp - 0x4c]; add rsp, 0x50; pop rbp; ret; 
0x0000000000002ae7: jne 0x2af6; mov eax, dword ptr [rbp - 0x54]; add rsp, 0x60; pop rbp; ret; 
0x0000000000002bf8: jne 0x2c08; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002d09: jne 0x2d18; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001d2b: jns 0x1d35; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001deb: jns 0x1df5; call rax; 
0x00000000000022f2: jo 0x2351; ret; 
0x0000000000002081: lea ecx, [rip + 0x107d]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000001d2e: lea esi, [rbp - 0x28]; call rax; 
0x0000000000002080: lea rcx, [rip + 0x107d]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000001d2d: lea rsi, [rbp - 0x28]; call rax; 
0x0000000000002aef: lodsb al, byte ptr [rsi]; add rsp, 0x60; pop rbp; ret; 
0x0000000000002aee: lodsb al, byte ptr [rsi]; add rsp, 0x60; pop rbp; ret; 
0x0000000000002961: mov ah, 0x48; add esp, 0x50; pop rbp; ret; 
0x0000000000002771: mov al, 0x48; add esp, 0x50; pop rbp; ret; 
0x0000000000001ef2: mov bh, 0x45; out 0x89, al; ret 0xc148; 
0x00000000000011bc: mov byte ptr [rip + 0x3e7d], 1; pop rbp; ret; 
0x0000000000001ffb: mov eax, 0x50c48348; pop rbp; ret; 
0x00000000000016fd: mov eax, 0x90000010; add rsp, 0x10; pop rbp; ret; 
0x00000000000017a1: mov eax, 0x90000010; add rsp, 0x20; pop rbp; ret; 
0x0000000000001d22: mov eax, dword ptr [rax + 0x10]; mov rcx, qword ptr [rbp - 0x58]; mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001de2: mov eax, dword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001d1f: mov eax, dword ptr [rax]; mov rax, qword ptr [rax + 0x10]; mov rcx, qword ptr [rbp - 0x58]; mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001ddf: mov eax, dword ptr [rax]; mov rax, qword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001bf5: mov eax, dword ptr [rax]; mov rax, qword ptr [rax]; mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x0000000000001bf8: mov eax, dword ptr [rax]; mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x000000000000237b: mov eax, dword ptr [rbp - 0x10]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001b3d: mov eax, dword ptr [rbp - 0x14]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001ddb: mov eax, dword ptr [rbp - 0x18]; mov rax, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001e2e: mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002571: mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002d0f: mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002612: mov eax, dword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001bf1: mov eax, dword ptr [rbp - 0x20]; mov rax, qword ptr [rax]; mov rax, qword ptr [rax]; mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x0000000000001c5a: mov eax, dword ptr [rbp - 0x28]; add rsp, 0x30; pop rbp; ret; 
0x00000000000018a5: mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001aa6: mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x00000000000014a6: mov eax, dword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002bff: mov eax, dword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001ff9: mov eax, dword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x000000000000295f: mov eax, dword ptr [rbp - 0x4c]; add rsp, 0x50; pop rbp; ret; 
0x000000000000276f: mov eax, dword ptr [rbp - 0x50]; add rsp, 0x50; pop rbp; ret; 
0x0000000000002aed: mov eax, dword ptr [rbp - 0x54]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001d58: mov eax, dword ptr [rbp - 0x5c]; add rsp, 0x60; pop rbp; ret; 
0x000000000000207d: mov eax, dword ptr [rbp - 0x60]; lea rcx, [rip + 0x107d]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000022ec: mov eax, dword ptr [rbp - 0x64]; add rsp, 0x70; pop rbp; ret; 
0x000000000000247e: mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x00000000000024d2: mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x0000000000001175: mov eax, dword ptr [rip + 0x3e6d]; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001134: mov eax, dword ptr [rip + 0x3e8e]; test rax, rax; je 0x1148; jmp rax; 
0x0000000000001009: mov eax, dword ptr [rip + 0x3fd1]; test rax, rax; je 0x1016; call rax; 
0x0000000000001de6: mov ecx, dword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001d26: mov ecx, dword ptr [rbp - 0x58]; mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001312: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x00000000000015d8: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x0000000000001679: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x0000000000001741: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x0000000000001904: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e86: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x00000000000023f5: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x00000000000027e4: mov ecx, dword ptr [rbp - 8]; cmp rax, rcx; jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x0000000000001bfb: mov edi, dword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x0000000000001dea: mov edi, dword ptr [rcx + 8]; call rax; 
0x0000000000001d2a: mov edi, dword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000002960: mov r12b, 0x48; add esp, 0x50; pop rbp; ret; 
0x0000000000002770: mov r8b, 0x48; add esp, 0x50; pop rbp; ret; 
0x0000000000001ffa: mov r8d, 0x50c48348; pop rbp; ret; 
0x0000000000001d21: mov rax, qword ptr [rax + 0x10]; mov rcx, qword ptr [rbp - 0x58]; mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001de1: mov rax, qword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001d1e: mov rax, qword ptr [rax]; mov rax, qword ptr [rax + 0x10]; mov rcx, qword ptr [rbp - 0x58]; mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001dde: mov rax, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001bf4: mov rax, qword ptr [rax]; mov rax, qword ptr [rax]; mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x0000000000001bf7: mov rax, qword ptr [rax]; mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x0000000000001dda: mov rax, qword ptr [rbp - 0x18]; mov rax, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000002611: mov rax, qword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001bf0: mov rax, qword ptr [rbp - 0x20]; mov rax, qword ptr [rax]; mov rax, qword ptr [rax]; mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x00000000000014a5: mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002bfe: mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001ff8: mov rax, qword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x000000000000276e: mov rax, qword ptr [rbp - 0x50]; add rsp, 0x50; pop rbp; ret; 
0x000000000000207c: mov rax, qword ptr [rbp - 0x60]; lea rcx, [rip + 0x107d]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000001174: mov rax, qword ptr [rip + 0x3e6d]; test rax, rax; je 0x1188; jmp rax; 
0x0000000000001133: mov rax, qword ptr [rip + 0x3e8e]; test rax, rax; je 0x1148; jmp rax; 
0x0000000000001008: mov rax, qword ptr [rip + 0x3fd1]; test rax, rax; je 0x1016; call rax; 
0x0000000000001de5: mov rcx, qword ptr [rbp - 0x18]; mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001d25: mov rcx, qword ptr [rbp - 0x58]; mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001311: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x1324; add rsp, 0x20; pop rbp; ret; 
0x00000000000015d7: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x15ea; add rsp, 0x20; pop rbp; ret; 
0x0000000000001678: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x168b; add rsp, 0x20; pop rbp; ret; 
0x0000000000001740: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x1753; add rsp, 0x10; pop rbp; ret; 
0x0000000000001903: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x1916; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e85: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x1e98; add rsp, 0x10; pop rbp; ret; 
0x00000000000023f4: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x2407; add rsp, 0x10; pop rbp; ret; 
0x00000000000027e3: mov rcx, qword ptr [rbp - 8]; cmp rax, rcx; jne 0x27f6; add rsp, 0x20; pop rbp; ret; 
0x0000000000001bfa: mov rdi, qword ptr [rbp - 0x20]; add rdi, 8; call rax; 
0x0000000000001de9: mov rdi, qword ptr [rcx + 8]; call rax; 
0x0000000000001d29: mov rdi, qword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001d5a: movsb byte ptr [rdi], byte ptr [rsi]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001d59: movsb byte ptr [rdi], byte ptr [rsi]; add rsp, 0x60; pop rbp; ret; 
0x0000000000002087: movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000001183: nop dword ptr [rax + rax]; ret; 
0x0000000000001141: nop dword ptr [rax]; ret; 
0x00000000000011c5: nop dword ptr [rax]; ret; 
0x0000000000001182: nop word ptr [rax + rax]; ret; 
0x0000000000001701: nop; add rsp, 0x10; pop rbp; ret; 
0x00000000000017a5: nop; add rsp, 0x20; pop rbp; ret; 
0x000000000000260d: or al, byte ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x20]; add rsp, 0x20; pop rbp; ret; 
0x00000000000014a1: or al, byte ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000002bfa: or al, byte ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x38]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001ff4: or al, byte ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x48]; add rsp, 0x50; pop rbp; ret; 
0x000000000000276a: or al, byte ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x50]; add rsp, 0x50; pop rbp; ret; 
0x0000000000001d2c: or byte ptr [rax - 0x73], cl; jne 0x1d09; call rax; 
0x0000000000001007: or byte ptr [rax - 0x75], cl; add eax, 0x3fd1; test rax, rax; je 0x1016; call rax; 
0x0000000000001de4: or byte ptr [rax - 0x75], cl; call 0x879a935; call rax; 
0x0000000000001de3: or byte ptr [rax - 0x75], cl; call 0x879a935; call rax; 
0x0000000000002377: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x10]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001b39: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x14]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001e2a: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x000000000000256d: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000002d0b: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x1c]; add rsp, 0x20; pop rbp; ret; 
0x0000000000001c56: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x28]; add rsp, 0x30; pop rbp; ret; 
0x00000000000018a1: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x0000000000001aa2: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x34]; add rsp, 0x40; pop rbp; ret; 
0x000000000000295b: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x4c]; add rsp, 0x50; pop rbp; ret; 
0x0000000000002ae9: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x54]; add rsp, 0x60; pop rbp; ret; 
0x0000000000001d54: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x5c]; add rsp, 0x60; pop rbp; ret; 
0x00000000000022e8: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0x64]; add rsp, 0x70; pop rbp; ret; 
0x000000000000247a: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x00000000000024ce: or dword ptr [rax], eax; add byte ptr [rax], al; mov eax, dword ptr [rbp - 0xc]; add rsp, 0x10; pop rbp; ret; 
0x0000000000002082: or eax, 0x107d; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000016f9: or eax, dword ptr [rax]; add byte ptr [rax], al; mov eax, 0x90000010; add rsp, 0x10; pop rbp; ret; 
0x000000000000179d: or eax, dword ptr [rax]; add byte ptr [rax], al; mov eax, 0x90000010; add rsp, 0x20; pop rbp; ret; 
0x0000000000001ef4: out 0x89, al; ret 0xc148; 
0x0000000000001ef3: out 0x89, al; ret 0xc148; 
0x00000000000011c3: pop rbp; ret; 
0x0000000000001322: pop rbp; ret; 
0x00000000000014ad: pop rbp; ret; 
0x00000000000014ac: pop rbp; ret; 
0x00000000000015e8: pop rbp; ret; 
0x0000000000001689: pop rbp; ret; 
0x0000000000001706: pop rbp; ret; 
0x0000000000001751: pop rbp; ret; 
0x00000000000017aa: pop rbp; ret; 
0x00000000000018ac: pop rbp; ret; 
0x00000000000018ab: pop rbp; ret; 
0x0000000000001914: pop rbp; ret; 
0x0000000000001aad: pop rbp; ret; 
0x0000000000001aac: pop rbp; ret; 
0x0000000000001b44: pop rbp; ret; 
0x0000000000001c61: pop rbp; ret; 
0x0000000000001d5f: pop rbp; ret; 
0x0000000000001e35: pop rbp; ret; 
0x0000000000001e96: pop rbp; ret; 
0x0000000000002000: pop rbp; ret; 
0x00000000000022f3: pop rbp; ret; 
0x0000000000002382: pop rbp; ret; 
0x0000000000002405: pop rbp; ret; 
0x0000000000002485: pop rbp; ret; 
0x00000000000024d9: pop rbp; ret; 
0x0000000000002578: pop rbp; ret; 
0x0000000000002619: pop rbp; ret; 
0x0000000000002776: pop rbp; ret; 
0x00000000000027f4: pop rbp; ret; 
0x0000000000002966: pop rbp; ret; 
0x0000000000002af4: pop rbp; ret; 
0x0000000000002c06: pop rbp; ret; 
0x0000000000002c05: pop rbp; ret; 
0x0000000000002d16: pop rbp; ret; 
0x0000000000001fff: push rax; pop rbp; ret; 
0x0000000000002775: push rax; pop rbp; ret; 
0x0000000000002965: push rax; pop rbp; ret; 
0x00000000000022ee: pushfq; add rsp, 0x70; pop rbp; ret; 
0x00000000000022ed: pushfq; add rsp, 0x70; pop rbp; ret; 
0x0000000000001993: ret 0x2cbe; 
0x00000000000019b8: ret 0x2cbe; 
0x0000000000001a58: ret 0x42e8; 
0x0000000000001274: ret 0x6348; 
0x000000000000291b: ret 0x7fe8; 
0x00000000000019e7: ret 0x8901; 
0x0000000000001a2f: ret 0x8901; 
0x00000000000012d0: ret 0x8b48; 
0x0000000000001a0f: ret 0x8be8; 
0x0000000000002a09: ret 0x91e8; 
0x0000000000001ef6: ret 0xc148; 
0x0000000000002aa9: ret 0xf1e8; 
0x00000000000028a5: ret 0xf5e8; 
0x000000000000216a: ret 0xffee; 
0x000000000000128a: ret 0xffff; 
0x0000000000001b16: ret 0xffff; 
0x000000000000101a: ret; 
0x0000000000001148: ret; 
0x0000000000001188: ret; 
0x00000000000011c4: ret; 
0x00000000000011c8: ret; 
0x0000000000001323: ret; 
0x00000000000014ae: ret; 
0x00000000000015e9: ret; 
0x000000000000168a: ret; 
0x0000000000001707: ret; 
0x0000000000001752: ret; 
0x00000000000017ab: ret; 
0x00000000000018ad: ret; 
0x0000000000001915: ret; 
0x0000000000001aae: ret; 
0x0000000000001b45: ret; 
0x0000000000001c62: ret; 
0x0000000000001d60: ret; 
0x0000000000001e36: ret; 
0x0000000000001e97: ret; 
0x0000000000002001: ret; 
0x00000000000022f4: ret; 
0x0000000000002383: ret; 
0x0000000000002406: ret; 
0x0000000000002486: ret; 
0x00000000000024da: ret; 
0x0000000000002579: ret; 
0x000000000000261a: ret; 
0x0000000000002777: ret; 
0x0000000000002779: ret; 
0x00000000000027f5: ret; 
0x0000000000002967: ret; 
0x0000000000002af5: ret; 
0x0000000000002c07: ret; 
0x0000000000002d17: ret; 
0x0000000000002d2c: ret; 
0x000000000000117d: sal byte ptr [rax + rcx - 1], 0xe0; nop word ptr [rax + rax]; ret; 
0x000000000000113c: sal byte ptr [rcx + rcx - 1], 0xe0; nop dword ptr [rax]; ret; 
0x0000000000001011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000000100b: sar dword ptr [rdi], 1; add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x0000000000001170: sar esi, 1; je 0x1188; mov rax, qword ptr [rip + 0x3e6d]; test rax, rax; je 0x1188; jmp rax; 
0x000000000000116f: sar rsi, 1; je 0x1188; mov rax, qword ptr [rip + 0x3e6d]; test rax, rax; je 0x1188; jmp rax; 
0x0000000000002d25: sub esp, 8; add rsp, 8; ret; 
0x0000000000001005: sub esp, 8; mov rax, qword ptr [rip + 0x3fd1]; test rax, rax; je 0x1016; call rax; 
0x0000000000002d24: sub rsp, 8; add rsp, 8; ret; 
0x0000000000001004: sub rsp, 8; mov rax, qword ptr [rip + 0x3fd1]; test rax, rax; je 0x1016; call rax; 
0x0000000000001d28: test al, 0x48; mov edi, dword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x0000000000001d27: test al, 0x48; mov edi, dword ptr [rcx + 8]; lea rsi, [rbp - 0x28]; call rax; 
0x00000000000016f8: test dword ptr [rbx], ecx; add byte ptr [rax], al; add byte ptr [rax - 0x6ffffff0], bh; add rsp, 0x10; pop rbp; ret; 
0x000000000000179c: test dword ptr [rbx], ecx; add byte ptr [rax], al; add byte ptr [rax - 0x6ffffff0], bh; add rsp, 0x20; pop rbp; ret; 
0x0000000000001ff3: test dword ptr [rdx], ecx; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov r8d, 0x50c48348; pop rbp; ret; 
0x0000000000001010: test eax, eax; je 0x1016; call rax; 
0x0000000000001010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000000113b: test eax, eax; je 0x1148; jmp rax; 
0x000000000000117c: test eax, eax; je 0x1188; jmp rax; 
0x000000000000100f: test rax, rax; je 0x1016; call rax; 
0x000000000000100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000000113a: test rax, rax; je 0x1148; jmp rax; 
0x000000000000117b: test rax, rax; je 0x1188; jmp rax; 

551 gadgets found
