c
ni
fin
c
ni
ni
c
ni
c
ni
c
c
c
c
tel 0x404040
vm
p/x 0x7ffff7ef7300-0x7ffff7e0d000
c
c
ni
tel 0x7ffff7ef7300
ni
fin
ni
uf main
ni
ni
c
c
c
ni
c
aaaaaaaaa
ni
c
ni
ni
2ni
ni
c
c
c
c
ni
ni
c
ni
c
ni
c
c
c
c
c
c
c
c
c
ni
tel rip+0x2d5e
c
ni
c
ni
c
c
ni
cc
c
c
ni
c
ni
c
c
ni
c
ni
c
c
ni
ni
fin
tel randtbl
dq &randtbl
tel &unsafe_state
c
fin
hexdump randtbl
m
ni
si
ni
m
b* init
c
si
ni
fin
ni
hexdump randtbl
hexdm
m
ni
si
randtbl
randtbl
hexdump randtbl
p &randtbl
p &unsafe_state
disassemble main
b*0x00000000004012ca
c
p &unsafe_stte
p &unsafe_state
p &unsafe_state
m
ni
q
m
ni
disass main
q
m
ni
q
m
c
ls
disass main
q
m
ni
q
m
ni
q
m
ni
c
ls
q
m
vm 
ni
q
m
ni
q
m
ni
q
m
ni
ni
q
vm 
m
vm
tel 0x7ffff7c00000;5;13~
tel 0x7ffff7c00000
dq 0x7ffff7c00000
tel 0x7ffff7c00000
q
m
uf main
ni
q
m
q
p/d 21
px21
p/x 21
0x15+5
p/x 0x15+5
m
ni
q
m
q
m
ni
q
m
ni
vm 
ni
c
ff -p 0x94b31f6515c538125
ff 
search -p 0x94b31f6515c538125
search --trunc-out 0x94b31f6515c538125
c
arin
arint
arint 
arint &unsafe_state 
tel &unsafe_state 
arint 0x7ffff7fb7024
arint 0x7ffff7fb7024
define arint
set $addr = $arg0
end
while $addr < 0xffff  # Adjust the condition
    x/4xw $addr
    set $addr = $addr + 4
end
define
de fine arint
define arint
set $addr = $arg0
end
my_loop(0x1000, 0x1004)
python my_loop(0x1000, 0x1004)
python my_loop(0x1000, 0x1004)
python def my_loop(start, end):
    for i in range(start, end + 1):
        print(f"Address: {i:#x}, Value: {gdb.parse_and_eval(f'*(int*){i:#x}'):#x}")

python my_loop(0x1000, 0x1004)
n
arint
arint
arint 
arint
arint
arint
from
python
agent-printf 
ags
arg
args
args
args
argv
arenas
argc
args
m
arint import gdb
class ArintCommand(gdb.Command):
    def __init__(self):
        super().__init__("arint", gdb.COMMAND_USER)

    def invoke(self, arg, from_tty):
        try:
            for i in range(10):
                address = int(arg, 0)  # Convert argument to integer (base 0)
                gdb.execute("tel " + str(f"{address+i*4} 1"))
        except ValueError:
            print('Error: Invalid address format.')

ArintCommand()
arint 0x7fffffffded0
ar int
